Search.setIndex({"docnames": ["CHANGELOG", "CODE_OF_CONDUCT", "CONTRIBUTING", "README", "docs/contrib/01_pull_requests", "docs/contrib/02_continuous_integration", "docs/contrib/03_naming_conventions", "docs/contrib/04_custom_implementations", "docs/contrib/05_documenting_code", "index", "projects/AllenCahn_Bayreuth", "projects/DAE", "projects/Hamiltonian", "projects/PinTSimE", "projects/RDC", "projects/Resilience", "projects/SDC_showdown", "projects/asymp_conv", "projects/compression", "projects/doc_SDC_showdown", "projects/doc_asympconv", "projects/doc_fput", "projects/doc_fwsw_acoustic", "projects/doc_fwsw_boussinesq", "projects/doc_fwsw_theory", "projects/doc_hamiltonian_simple", "projects/doc_matrixPFASST_matrix", "projects/doc_matrixPFASST_propagator", "projects/doc_parallelSDC_nonlinear", "projects/doc_parallelSDC_preconditioner", "projects/doc_parallelSDC_preconditioner_MPI", "projects/doc_performance", "projects/doc_solar_system", "projects/fwsw", "projects/matrixPFASST", "projects/parallelSDC", "projects/parallelSDC_reloaded", "projects/performance", "projects/second_order", "pySDC/core", "pySDC/core.BaseTransfer", "pySDC/core.Collocation", "pySDC/core.Common", "pySDC/core.Controller", "pySDC/core.ConvergenceController", "pySDC/core.Errors", "pySDC/core.Hooks", "pySDC/core.Lagrange", "pySDC/core.Level", "pySDC/core.Nodes", "pySDC/core.Problem", "pySDC/core.SpaceTransfer", "pySDC/core.Step", "pySDC/core.Sweeper", "pySDC/helpers", "pySDC/helpers.NCCL_communicator", "pySDC/helpers.plot_helper", "pySDC/helpers.problem_helper", "pySDC/helpers.pysdc_helper", "pySDC/helpers.setup_helper", "pySDC/helpers.stats_helper", "pySDC/helpers.testing", "pySDC/helpers.transfer_helper", "pySDC/helpers.visualization_tools", "pySDC/implementations", "pySDC/implementations.controller_classes", "pySDC/implementations.controller_classes.controller_MPI", "pySDC/implementations.controller_classes.controller_nonMPI", "pySDC/implementations.convergence_controller_classes", "pySDC/implementations.convergence_controller_classes.adaptive_collocation", "pySDC/implementations.convergence_controller_classes.adaptivity", "pySDC/implementations.convergence_controller_classes.basic_restarting", "pySDC/implementations.convergence_controller_classes.check_convergence", "pySDC/implementations.convergence_controller_classes.check_iteration_estimator", "pySDC/implementations.convergence_controller_classes.crash", "pySDC/implementations.convergence_controller_classes.estimate_contraction_factor", "pySDC/implementations.convergence_controller_classes.estimate_embedded_error", "pySDC/implementations.convergence_controller_classes.estimate_extrapolation_error", "pySDC/implementations.convergence_controller_classes.estimate_polynomial_error", "pySDC/implementations.convergence_controller_classes.hotrod", "pySDC/implementations.convergence_controller_classes.inexactness", "pySDC/implementations.convergence_controller_classes.interpolate_between_restarts", "pySDC/implementations.convergence_controller_classes.spread_step_sizes", "pySDC/implementations.convergence_controller_classes.step_size_limiter", "pySDC/implementations.convergence_controller_classes.store_uold", "pySDC/implementations.datatype_classes", "pySDC/implementations.datatype_classes.cupy_mesh", "pySDC/implementations.datatype_classes.fenics_mesh", "pySDC/implementations.datatype_classes.mesh", "pySDC/implementations.datatype_classes.particles", "pySDC/implementations.datatype_classes.petsc_vec", "pySDC/implementations.problem_classes", "pySDC/implementations.problem_classes.AcousticAdvection_1D_FD_imex", "pySDC/implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT", "pySDC/implementations.problem_classes.AdvectionEquation_ND_FD", "pySDC/implementations.problem_classes.AllenCahn_1D_FD", "pySDC/implementations.problem_classes.AllenCahn_2D_FD", "pySDC/implementations.problem_classes.AllenCahn_2D_FD_gpu", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT_gpu", "pySDC/implementations.problem_classes.AllenCahn_MPIFFT", "pySDC/implementations.problem_classes.AllenCahn_Temp_MPIFFT", "pySDC/implementations.problem_classes.Auzinger_implicit", "pySDC/implementations.problem_classes.Battery", "pySDC/implementations.problem_classes.Boussinesq_2D_FD_imex", "pySDC/implementations.problem_classes.Brusselator", "pySDC/implementations.problem_classes.BuckConverter", "pySDC/implementations.problem_classes.DiscontinuousTestODE", "pySDC/implementations.problem_classes.FastWaveSlowWave_0D", "pySDC/implementations.problem_classes.FermiPastaUlamTsingou", "pySDC/implementations.problem_classes.FullSolarSystem", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_FD_implicit", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_PETSc", "pySDC/implementations.problem_classes.GrayScott_1D_FEniCS_implicit", "pySDC/implementations.problem_classes.GrayScott_2D_PETSc_periodic", "pySDC/implementations.problem_classes.GrayScott_MPIFFT", "pySDC/implementations.problem_classes.HarmonicOscillator", "pySDC/implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced", "pySDC/implementations.problem_classes.HeatEquation_2D_PETSc_forced", "pySDC/implementations.problem_classes.HeatEquation_ND_FD", "pySDC/implementations.problem_classes.HeatEquation_ND_FD_CuPy", "pySDC/implementations.problem_classes.HenonHeiles", "pySDC/implementations.problem_classes.LogisticEquation", "pySDC/implementations.problem_classes.Lorenz", "pySDC/implementations.problem_classes.NonlinearSchroedinger_MPIFFT", "pySDC/implementations.problem_classes.OuterSolarSystem", "pySDC/implementations.problem_classes.PenningTrap_3D", "pySDC/implementations.problem_classes.Piline", "pySDC/implementations.problem_classes.Quench", "pySDC/implementations.problem_classes.TestEquation_0D", "pySDC/implementations.problem_classes.Van_der_Pol_implicit", "pySDC/implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic", "pySDC/implementations.problem_classes.acoustic_helpers", "pySDC/implementations.problem_classes.acoustic_helpers.buildFDMatrix", "pySDC/implementations.problem_classes.acoustic_helpers.buildWave1DMatrix", "pySDC/implementations.problem_classes.acoustic_helpers.standard_integrators", "pySDC/implementations.problem_classes.boussinesq_helpers", "pySDC/implementations.problem_classes.boussinesq_helpers.build2DFDMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.buildFDMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.helper_classes", "pySDC/implementations.problem_classes.boussinesq_helpers.standard_integrators", "pySDC/implementations.problem_classes.boussinesq_helpers.unflatten", "pySDC/implementations.problem_classes.generic_ND_FD", "pySDC/implementations.problem_classes.nonlinear_ODE_1", "pySDC/implementations.problem_classes.odeScalar", "pySDC/implementations.problem_classes.odeSystem", "pySDC/implementations.problem_classes.polynomial_test_problem", "pySDC/implementations.sweeper_classes", "pySDC/implementations.sweeper_classes.Multistep", "pySDC/implementations.sweeper_classes.Runge_Kutta", "pySDC/implementations.sweeper_classes.Runge_Kutta_Nystrom", "pySDC/implementations.sweeper_classes.boris_2nd_order", "pySDC/implementations.sweeper_classes.explicit", "pySDC/implementations.sweeper_classes.generic_implicit", "pySDC/implementations.sweeper_classes.generic_implicit_MPI", "pySDC/implementations.sweeper_classes.imex_1st_order", "pySDC/implementations.sweeper_classes.imex_1st_order_MPI", "pySDC/implementations.sweeper_classes.imex_1st_order_mass", "pySDC/implementations.sweeper_classes.multi_implicit", "pySDC/implementations.sweeper_classes.verlet", "pySDC/implementations.transfer_classes", "pySDC/implementations.transfer_classes.BaseTransfer_mass", "pySDC/implementations.transfer_classes.TransferFenicsMesh", "pySDC/implementations.transfer_classes.TransferMesh", "pySDC/implementations.transfer_classes.TransferMesh_FFT", "pySDC/implementations.transfer_classes.TransferMesh_FFT2D", "pySDC/implementations.transfer_classes.TransferMesh_MPIFFT", "pySDC/implementations.transfer_classes.TransferMesh_NoCoarse", "pySDC/implementations.transfer_classes.TransferPETScDMDA", "pySDC/implementations.transfer_classes.TransferParticles_NoCoarse", "tutorial/doc_step_1_A", "tutorial/doc_step_1_B", "tutorial/doc_step_1_C", "tutorial/doc_step_1_D", "tutorial/doc_step_2_A", "tutorial/doc_step_2_B", "tutorial/doc_step_2_C", "tutorial/doc_step_3_A", "tutorial/doc_step_3_B", "tutorial/doc_step_3_C", "tutorial/doc_step_4_A", "tutorial/doc_step_4_B", "tutorial/doc_step_4_C", "tutorial/doc_step_4_D", "tutorial/doc_step_5_A", "tutorial/doc_step_5_B", "tutorial/doc_step_5_C", "tutorial/doc_step_6_A", "tutorial/doc_step_6_B", "tutorial/doc_step_6_C", "tutorial/doc_step_7_A", "tutorial/doc_step_7_B", "tutorial/doc_step_7_C", "tutorial/doc_step_8_A", "tutorial/doc_step_8_B", "tutorial/doc_step_8_C", "tutorial/step_1", "tutorial/step_2", "tutorial/step_3", "tutorial/step_4", "tutorial/step_5", "tutorial/step_6", "tutorial/step_7", "tutorial/step_8"], "filenames": ["CHANGELOG.rst", "CODE_OF_CONDUCT.rst", "CONTRIBUTING.rst", "README.rst", "docs/contrib/01_pull_requests.rst", "docs/contrib/02_continuous_integration.rst", "docs/contrib/03_naming_conventions.rst", "docs/contrib/04_custom_implementations.rst", "docs/contrib/05_documenting_code.rst", "index.rst", "projects/AllenCahn_Bayreuth.rst", "projects/DAE.rst", "projects/Hamiltonian.rst", "projects/PinTSimE.rst", "projects/RDC.rst", "projects/Resilience.rst", "projects/SDC_showdown.rst", "projects/asymp_conv.rst", "projects/compression.rst", "projects/doc_SDC_showdown.rst", "projects/doc_asympconv.rst", "projects/doc_fput.rst", "projects/doc_fwsw_acoustic.rst", "projects/doc_fwsw_boussinesq.rst", "projects/doc_fwsw_theory.rst", "projects/doc_hamiltonian_simple.rst", "projects/doc_matrixPFASST_matrix.rst", "projects/doc_matrixPFASST_propagator.rst", "projects/doc_parallelSDC_nonlinear.rst", "projects/doc_parallelSDC_preconditioner.rst", "projects/doc_parallelSDC_preconditioner_MPI.rst", "projects/doc_performance.rst", "projects/doc_solar_system.rst", "projects/fwsw.rst", "projects/matrixPFASST.rst", "projects/parallelSDC.rst", "projects/parallelSDC_reloaded.rst", "projects/performance.rst", "projects/second_order.rst", "pySDC/core.rst", "pySDC/core.BaseTransfer.rst", "pySDC/core.Collocation.rst", "pySDC/core.Common.rst", "pySDC/core.Controller.rst", "pySDC/core.ConvergenceController.rst", "pySDC/core.Errors.rst", "pySDC/core.Hooks.rst", "pySDC/core.Lagrange.rst", "pySDC/core.Level.rst", "pySDC/core.Nodes.rst", "pySDC/core.Problem.rst", "pySDC/core.SpaceTransfer.rst", "pySDC/core.Step.rst", "pySDC/core.Sweeper.rst", "pySDC/helpers.rst", "pySDC/helpers.NCCL_communicator.rst", "pySDC/helpers.plot_helper.rst", "pySDC/helpers.problem_helper.rst", "pySDC/helpers.pysdc_helper.rst", "pySDC/helpers.setup_helper.rst", "pySDC/helpers.stats_helper.rst", "pySDC/helpers.testing.rst", "pySDC/helpers.transfer_helper.rst", "pySDC/helpers.visualization_tools.rst", "pySDC/implementations.rst", "pySDC/implementations.controller_classes.rst", "pySDC/implementations.controller_classes.controller_MPI.rst", "pySDC/implementations.controller_classes.controller_nonMPI.rst", "pySDC/implementations.convergence_controller_classes.rst", "pySDC/implementations.convergence_controller_classes.adaptive_collocation.rst", "pySDC/implementations.convergence_controller_classes.adaptivity.rst", "pySDC/implementations.convergence_controller_classes.basic_restarting.rst", "pySDC/implementations.convergence_controller_classes.check_convergence.rst", "pySDC/implementations.convergence_controller_classes.check_iteration_estimator.rst", "pySDC/implementations.convergence_controller_classes.crash.rst", "pySDC/implementations.convergence_controller_classes.estimate_contraction_factor.rst", "pySDC/implementations.convergence_controller_classes.estimate_embedded_error.rst", "pySDC/implementations.convergence_controller_classes.estimate_extrapolation_error.rst", "pySDC/implementations.convergence_controller_classes.estimate_polynomial_error.rst", "pySDC/implementations.convergence_controller_classes.hotrod.rst", "pySDC/implementations.convergence_controller_classes.inexactness.rst", "pySDC/implementations.convergence_controller_classes.interpolate_between_restarts.rst", "pySDC/implementations.convergence_controller_classes.spread_step_sizes.rst", "pySDC/implementations.convergence_controller_classes.step_size_limiter.rst", "pySDC/implementations.convergence_controller_classes.store_uold.rst", "pySDC/implementations.datatype_classes.rst", "pySDC/implementations.datatype_classes.cupy_mesh.rst", "pySDC/implementations.datatype_classes.fenics_mesh.rst", "pySDC/implementations.datatype_classes.mesh.rst", "pySDC/implementations.datatype_classes.particles.rst", "pySDC/implementations.datatype_classes.petsc_vec.rst", "pySDC/implementations.problem_classes.rst", "pySDC/implementations.problem_classes.AcousticAdvection_1D_FD_imex.rst", "pySDC/implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.rst", "pySDC/implementations.problem_classes.AdvectionEquation_ND_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_1D_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FD_gpu.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT_gpu.rst", "pySDC/implementations.problem_classes.AllenCahn_MPIFFT.rst", "pySDC/implementations.problem_classes.AllenCahn_Temp_MPIFFT.rst", "pySDC/implementations.problem_classes.Auzinger_implicit.rst", "pySDC/implementations.problem_classes.Battery.rst", "pySDC/implementations.problem_classes.Boussinesq_2D_FD_imex.rst", "pySDC/implementations.problem_classes.Brusselator.rst", "pySDC/implementations.problem_classes.BuckConverter.rst", "pySDC/implementations.problem_classes.DiscontinuousTestODE.rst", "pySDC/implementations.problem_classes.FastWaveSlowWave_0D.rst", "pySDC/implementations.problem_classes.FermiPastaUlamTsingou.rst", "pySDC/implementations.problem_classes.FullSolarSystem.rst", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.rst", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_PETSc.rst", "pySDC/implementations.problem_classes.GrayScott_1D_FEniCS_implicit.rst", "pySDC/implementations.problem_classes.GrayScott_2D_PETSc_periodic.rst", "pySDC/implementations.problem_classes.GrayScott_MPIFFT.rst", "pySDC/implementations.problem_classes.HarmonicOscillator.rst", "pySDC/implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.rst", "pySDC/implementations.problem_classes.HeatEquation_2D_PETSc_forced.rst", "pySDC/implementations.problem_classes.HeatEquation_ND_FD.rst", "pySDC/implementations.problem_classes.HeatEquation_ND_FD_CuPy.rst", "pySDC/implementations.problem_classes.HenonHeiles.rst", "pySDC/implementations.problem_classes.LogisticEquation.rst", "pySDC/implementations.problem_classes.Lorenz.rst", "pySDC/implementations.problem_classes.NonlinearSchroedinger_MPIFFT.rst", "pySDC/implementations.problem_classes.OuterSolarSystem.rst", "pySDC/implementations.problem_classes.PenningTrap_3D.rst", "pySDC/implementations.problem_classes.Piline.rst", "pySDC/implementations.problem_classes.Quench.rst", "pySDC/implementations.problem_classes.TestEquation_0D.rst", "pySDC/implementations.problem_classes.Van_der_Pol_implicit.rst", "pySDC/implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.rst", "pySDC/implementations.problem_classes.acoustic_helpers.rst", "pySDC/implementations.problem_classes.acoustic_helpers.buildFDMatrix.rst", "pySDC/implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.rst", "pySDC/implementations.problem_classes.acoustic_helpers.standard_integrators.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.buildFDMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.helper_classes.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.standard_integrators.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.unflatten.rst", "pySDC/implementations.problem_classes.generic_ND_FD.rst", "pySDC/implementations.problem_classes.nonlinear_ODE_1.rst", "pySDC/implementations.problem_classes.odeScalar.rst", "pySDC/implementations.problem_classes.odeSystem.rst", "pySDC/implementations.problem_classes.polynomial_test_problem.rst", "pySDC/implementations.sweeper_classes.rst", "pySDC/implementations.sweeper_classes.Multistep.rst", "pySDC/implementations.sweeper_classes.Runge_Kutta.rst", "pySDC/implementations.sweeper_classes.Runge_Kutta_Nystrom.rst", "pySDC/implementations.sweeper_classes.boris_2nd_order.rst", "pySDC/implementations.sweeper_classes.explicit.rst", "pySDC/implementations.sweeper_classes.generic_implicit.rst", "pySDC/implementations.sweeper_classes.generic_implicit_MPI.rst", "pySDC/implementations.sweeper_classes.imex_1st_order.rst", "pySDC/implementations.sweeper_classes.imex_1st_order_MPI.rst", "pySDC/implementations.sweeper_classes.imex_1st_order_mass.rst", "pySDC/implementations.sweeper_classes.multi_implicit.rst", "pySDC/implementations.sweeper_classes.verlet.rst", "pySDC/implementations.transfer_classes.rst", "pySDC/implementations.transfer_classes.BaseTransfer_mass.rst", "pySDC/implementations.transfer_classes.TransferFenicsMesh.rst", "pySDC/implementations.transfer_classes.TransferMesh.rst", "pySDC/implementations.transfer_classes.TransferMesh_FFT.rst", "pySDC/implementations.transfer_classes.TransferMesh_FFT2D.rst", "pySDC/implementations.transfer_classes.TransferMesh_MPIFFT.rst", "pySDC/implementations.transfer_classes.TransferMesh_NoCoarse.rst", "pySDC/implementations.transfer_classes.TransferPETScDMDA.rst", "pySDC/implementations.transfer_classes.TransferParticles_NoCoarse.rst", "tutorial/doc_step_1_A.rst", "tutorial/doc_step_1_B.rst", "tutorial/doc_step_1_C.rst", "tutorial/doc_step_1_D.rst", "tutorial/doc_step_2_A.rst", "tutorial/doc_step_2_B.rst", "tutorial/doc_step_2_C.rst", "tutorial/doc_step_3_A.rst", "tutorial/doc_step_3_B.rst", "tutorial/doc_step_3_C.rst", "tutorial/doc_step_4_A.rst", "tutorial/doc_step_4_B.rst", "tutorial/doc_step_4_C.rst", "tutorial/doc_step_4_D.rst", "tutorial/doc_step_5_A.rst", "tutorial/doc_step_5_B.rst", "tutorial/doc_step_5_C.rst", "tutorial/doc_step_6_A.rst", "tutorial/doc_step_6_B.rst", "tutorial/doc_step_6_C.rst", "tutorial/doc_step_7_A.rst", "tutorial/doc_step_7_B.rst", "tutorial/doc_step_7_C.rst", "tutorial/doc_step_8_A.rst", "tutorial/doc_step_8_B.rst", "tutorial/doc_step_8_C.rst", "tutorial/step_1.rst", "tutorial/step_2.rst", "tutorial/step_3.rst", "tutorial/step_4.rst", "tutorial/step_5.rst", "tutorial/step_6.rst", "tutorial/step_7.rst", "tutorial/step_8.rst"], "titles": ["Changelog", "Contributor Covenant Code of Conduct", "How to contribute to pySDC", "Welcome to pySDC!", "Recommendations for pull requests", "Continuous Integration in pySDC", "Naming conventions in pySDC", "Custom implementation guidelines", "Documenting Code", "Welcome to pySDC!", "Allen-Cahn problems from Bayreuth", "Solving differential algebraic equations with SDC", "Second-order Problems", "Parallel-in-time simulation for multi-modal energy systems", "RDC: Rational Deferred Corrections", "Resilience in SDC", "What is the fastest SDC variant?", "Asymptotic convergence of PFASST", "Compression in pySDC", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Fast-Wave-Slow-Wave SDC", "Matrix-based versions of PFASST", "Attempts to parallelize SDC", "&lt;no title&gt;", "Performance analysis of pySDC", "Spectral Deferred Correction Methods for Second-Order Problems", "core package", "core.BaseTransfer module", "core.Collocation module", "core.Common module", "core.Controller module", "core.ConvergenceController module", "core.Errors module", "core.Hooks module", "core.Lagrange module", "core.Level module", "core.Nodes module", "core.Problem module", "core.SpaceTransfer module", "core.Step module", "core.Sweeper module", "helpers package", "helpers.NCCL_communicator module", "helpers.plot_helper module", "helpers.problem_helper module", "helpers.pysdc_helper module", "helpers.setup_helper module", "helpers.stats_helper module", "helpers.testing module", "helpers.transfer_helper module", "helpers.visualization_tools module", "implementations package", "implementations.controller_classes package", "implementations.controller_classes.controller_MPI module", "implementations.controller_classes.controller_nonMPI module", "implementations.convergence_controller_classes package", "implementations.convergence_controller_classes.adaptive_collocation module", "implementations.convergence_controller_classes.adaptivity module", "implementations.convergence_controller_classes.basic_restarting module", "implementations.convergence_controller_classes.check_convergence module", "implementations.convergence_controller_classes.check_iteration_estimator module", "implementations.convergence_controller_classes.crash module", "implementations.convergence_controller_classes.estimate_contraction_factor module", "implementations.convergence_controller_classes.estimate_embedded_error module", "implementations.convergence_controller_classes.estimate_extrapolation_error module", "implementations.convergence_controller_classes.estimate_polynomial_error module", "implementations.convergence_controller_classes.hotrod module", "implementations.convergence_controller_classes.inexactness module", "implementations.convergence_controller_classes.interpolate_between_restarts module", "implementations.convergence_controller_classes.spread_step_sizes module", "implementations.convergence_controller_classes.step_size_limiter module", "implementations.convergence_controller_classes.store_uold module", "implementations.datatype_classes package", "implementations.datatype_classes.cupy_mesh module", "implementations.datatype_classes.fenics_mesh module", "implementations.datatype_classes.mesh module", "implementations.datatype_classes.particles module", "implementations.datatype_classes.petsc_vec module", "implementations.problem_classes package", "implementations.problem_classes.AcousticAdvection_1D_FD_imex module", "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT module", "implementations.problem_classes.AdvectionEquation_ND_FD module", "implementations.problem_classes.AllenCahn_1D_FD module", "implementations.problem_classes.AllenCahn_2D_FD module", "implementations.problem_classes.AllenCahn_2D_FD_gpu module", "implementations.problem_classes.AllenCahn_2D_FFT module", "implementations.problem_classes.AllenCahn_2D_FFT_gpu module", "implementations.problem_classes.AllenCahn_MPIFFT module", "implementations.problem_classes.AllenCahn_Temp_MPIFFT module", "implementations.problem_classes.Auzinger_implicit module", "implementations.problem_classes.Battery module", "implementations.problem_classes.Boussinesq_2D_FD_imex module", "implementations.problem_classes.Brusselator module", "implementations.problem_classes.BuckConverter module", "implementations.problem_classes.DiscontinuousTestODE module", "implementations.problem_classes.FastWaveSlowWave_0D module", "implementations.problem_classes.FermiPastaUlamTsingou module", "implementations.problem_classes.FullSolarSystem module", "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit module", "implementations.problem_classes.GeneralizedFisher_1D_PETSc module", "implementations.problem_classes.GrayScott_1D_FEniCS_implicit module", "implementations.problem_classes.GrayScott_2D_PETSc_periodic module", "implementations.problem_classes.GrayScott_MPIFFT module", "implementations.problem_classes.HarmonicOscillator module", "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced module", "implementations.problem_classes.HeatEquation_2D_PETSc_forced module", "implementations.problem_classes.HeatEquation_ND_FD module", "implementations.problem_classes.HeatEquation_ND_FD_CuPy module", "implementations.problem_classes.HenonHeiles module", "implementations.problem_classes.LogisticEquation module", "implementations.problem_classes.Lorenz module", "implementations.problem_classes.NonlinearSchroedinger_MPIFFT module", "implementations.problem_classes.OuterSolarSystem module", "implementations.problem_classes.PenningTrap_3D module", "implementations.problem_classes.Piline module", "implementations.problem_classes.Quench module", "implementations.problem_classes.TestEquation_0D module", "implementations.problem_classes.Van_der_Pol_implicit module", "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic module", "implementations.problem_classes.acoustic_helpers package", "implementations.problem_classes.acoustic_helpers.buildFDMatrix module", "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix module", "implementations.problem_classes.acoustic_helpers.standard_integrators module", "implementations.problem_classes.boussinesq_helpers package", "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix module", "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix module", "implementations.problem_classes.boussinesq_helpers.buildFDMatrix module", "implementations.problem_classes.boussinesq_helpers.helper_classes module", "implementations.problem_classes.boussinesq_helpers.standard_integrators module", "implementations.problem_classes.boussinesq_helpers.unflatten module", "implementations.problem_classes.generic_ND_FD module", "implementations.problem_classes.nonlinear_ODE_1 module", "implementations.problem_classes.odeScalar module", "implementations.problem_classes.odeSystem module", "implementations.problem_classes.polynomial_test_problem module", "implementations.sweeper_classes package", "implementations.sweeper_classes.Multistep module", "implementations.sweeper_classes.Runge_Kutta module", "implementations.sweeper_classes.Runge_Kutta_Nystrom module", "implementations.sweeper_classes.boris_2nd_order module", "implementations.sweeper_classes.explicit module", "implementations.sweeper_classes.generic_implicit module", "implementations.sweeper_classes.generic_implicit_MPI module", "implementations.sweeper_classes.imex_1st_order module", "implementations.sweeper_classes.imex_1st_order_MPI module", "implementations.sweeper_classes.imex_1st_order_mass module", "implementations.sweeper_classes.multi_implicit module", "implementations.sweeper_classes.verlet module", "implementations.transfer_classes package", "implementations.transfer_classes.BaseTransfer_mass module", "implementations.transfer_classes.TransferFenicsMesh module", "implementations.transfer_classes.TransferMesh module", "implementations.transfer_classes.TransferMesh_FFT module", "implementations.transfer_classes.TransferMesh_FFT2D module", "implementations.transfer_classes.TransferMesh_MPIFFT module", "implementations.transfer_classes.TransferMesh_NoCoarse module", "implementations.transfer_classes.TransferPETScDMDA module", "implementations.transfer_classes.TransferParticles_NoCoarse module", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Step-1: A first spatial problem", "Step-2: Data structures and my first sweeper", "Step-3: Statistics and a new sweeper", "Step-4: Multilevel SDC", "Step-5: PFASST", "Step-6: Advanced PFASST controllers", "Step-7: pySDC with external libraries", "Step-8: Advanced topics"], "terms": {"back": [0, 1, 2, 4, 5, 6, 7, 8, 171, 197], "main": [0, 1, 2, 5, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 41, 66, 67, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "page": [0, 1, 2, 9, 18, 56, 112, 114, 118, 124, 151], "januari": 0, "24": [0, 12, 32, 150, 186, 187, 201], "2024": [0, 61, 177, 179, 198, 199], "version": [0, 1, 3, 4, 5, 9, 11, 14, 15, 16, 18, 19, 26, 27, 44, 50, 66, 67, 70, 71, 73, 77, 82, 113, 117, 126, 131, 147, 200], "5": [0, 9, 12, 14, 17, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 46, 92, 95, 100, 101, 103, 104, 105, 106, 107, 111, 113, 117, 121, 122, 127, 130, 131, 135, 141, 144, 145, 146, 149, 150, 174, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 202, 203, 204], "4": [0, 6, 9, 12, 14, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 41, 46, 92, 103, 104, 105, 107, 108, 113, 117, 131, 144, 150, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204], "0": [0, 1, 5, 7, 8, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 41, 44, 46, 47, 49, 50, 52, 55, 56, 57, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 141, 143, 144, 145, 146, 149, 150, 160, 164, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "contain": [0, 5, 8, 9, 10, 11, 12, 16, 18, 19, 33, 35, 37, 40, 41, 42, 43, 44, 46, 47, 48, 50, 53, 57, 60, 62, 66, 67, 71, 74, 77, 81, 82, 87, 89, 93, 95, 96, 102, 103, 104, 109, 110, 112, 114, 115, 117, 122, 124, 126, 129, 130, 143, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 162, 172, 174, 175, 182, 188, 197, 198, 199, 200, 202], "code": [0, 2, 3, 4, 6, 7, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 74, 88, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "second": [0, 5, 9, 15, 21, 25, 32, 33, 34, 40, 49, 61, 70, 77, 78, 86, 95, 96, 109, 110, 111, 113, 115, 116, 118, 121, 123, 125, 150, 151, 152, 155, 156, 159, 160, 162, 196, 199, 204], "order": [0, 3, 5, 8, 9, 10, 11, 13, 15, 16, 18, 19, 21, 25, 26, 27, 29, 30, 32, 33, 34, 35, 37, 43, 44, 47, 49, 57, 62, 69, 70, 71, 73, 75, 76, 77, 78, 79, 84, 86, 88, 89, 92, 94, 95, 96, 104, 109, 111, 113, 116, 117, 118, 119, 121, 126, 128, 131, 133, 134, 135, 137, 138, 139, 141, 143, 146, 149, 150, 151, 152, 156, 158, 159, 160, 172, 174, 177, 179, 181, 187, 191, 196, 197, 198, 199, 200, 201, 203, 204], "sdc": [0, 2, 3, 9, 12, 13, 14, 18, 19, 28, 34, 38, 52, 66, 67, 70, 72, 76, 77, 80, 82, 109, 128, 152, 156, 176, 177, 178, 179, 180, 183, 184, 187, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203], "paper": [0, 3, 8, 9, 14, 17, 38, 47, 66, 67, 109, 199], "ikrom96git": 0, "It": [0, 3, 5, 9, 10, 13, 18, 37, 41, 44, 48, 69, 70, 108, 123, 127, 150, 155, 197, 198, 200, 202, 203], "also": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 15, 16, 18, 35, 37, 43, 70, 71, 77, 82, 83, 106, 115, 126, 143, 145, 146, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204], "ha": [0, 3, 4, 9, 10, 18, 44, 61, 69, 70, 71, 74, 77, 78, 81, 82, 83, 93, 96, 103, 106, 128, 144, 155, 185, 194, 197, 198, 199, 200, 201, 202, 203, 204], "some": [0, 2, 4, 5, 6, 11, 12, 13, 15, 37, 42, 44, 55, 61, 69, 71, 74, 123, 128, 131, 172, 174, 197, 198, 199, 204], "chang": [0, 4, 5, 7, 13, 37, 67, 69, 70, 76, 77, 80, 88, 103, 106, 107, 198, 199, 201, 203], "fenic": [0, 3, 9, 87, 113, 117, 131, 163, 191], "part": [0, 3, 5, 9, 14, 16, 19, 26, 27, 29, 30, 34, 35, 37, 38, 40, 44, 86, 87, 90, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 105, 108, 113, 114, 115, 117, 124, 126, 127, 128, 131, 147, 150, 151, 162, 175, 185, 186, 187, 190, 192, 193, 194, 196], "includ": [0, 1, 34, 66, 67, 88, 95, 96, 110, 131, 150, 151, 197, 203], "correct": [0, 3, 4, 9, 10, 11, 33, 34, 40, 48, 50, 66, 67, 92, 105, 108, 109, 126, 131, 151, 156, 162, 182, 191, 200, 203], "treatment": [0, 96, 117], "boundari": [0, 26, 27, 29, 30, 34, 35, 41, 57, 62, 93, 94, 95, 96, 98, 99, 100, 101, 104, 112, 113, 114, 117, 118, 119, 124, 128, 131, 143, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 195, 196, 197, 198, 199, 200, 201, 202, 204], "condit": [0, 5, 11, 18, 26, 27, 29, 30, 34, 35, 50, 57, 69, 81, 84, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 149, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "first": [0, 3, 4, 5, 9, 12, 14, 15, 33, 38, 40, 43, 44, 47, 53, 61, 69, 71, 76, 77, 82, 86, 88, 103, 109, 113, 115, 123, 150, 152, 155, 156, 158, 159, 162, 172, 173, 174, 178, 199, 200], "step": [0, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 43, 44, 46, 48, 53, 57, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 95, 96, 98, 99, 100, 101, 106, 107, 112, 114, 115, 124, 126, 128, 145, 146, 149, 150, 151, 152, 155, 158, 160, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196], "x": [0, 3, 5, 8, 9, 11, 12, 21, 25, 28, 29, 30, 32, 35, 41, 44, 47, 57, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 126, 164, 166, 168, 171, 172, 174, 197, 203], "juli": 0, "28": [0, 123, 145, 146], "2023": [0, 38, 112, 114, 118, 143], "For": [0, 1, 3, 4, 6, 8, 9, 12, 15, 18, 26, 33, 34, 37, 38, 44, 47, 66, 67, 69, 70, 92, 95, 96, 98, 99, 100, 101, 103, 107, 111, 112, 114, 117, 124, 126, 143, 144, 145, 146, 150, 151, 152, 155, 156, 186, 192, 193, 196, 197, 199, 200, 201, 203, 204], "3": [0, 3, 6, 7, 9, 11, 12, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 41, 46, 69, 79, 89, 95, 100, 101, 102, 103, 104, 105, 109, 110, 112, 113, 114, 115, 119, 121, 123, 124, 125, 126, 145, 146, 150, 151, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204], "lot": [0, 150, 151, 199, 202], "pull": [0, 2, 5], "request": [0, 1, 2, 5, 44, 66, 71, 86, 88, 89, 90, 177, 198], "got": [0, 7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "merg": [0, 4, 43], "thank": 0, "brownbaerchen": 0, "tlunet": 0, "lisawim": 0, "all": [0, 1, 3, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 26, 27, 29, 30, 33, 34, 35, 42, 43, 44, 46, 47, 48, 53, 61, 66, 67, 69, 70, 71, 73, 74, 77, 78, 82, 88, 89, 94, 103, 110, 119, 126, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172, 174, 178, 185, 188, 190, 191, 197, 198, 199, 200, 201, 202, 203, 204], "contribut": [0, 1, 5, 6, 7, 8], "besid": 0, "usual": [0, 6, 18, 81, 145, 146, 201, 203], "bugfix": 0, "polish": 0, "pysdc": [0, 4, 7, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 48, 50, 51, 52, 53, 59, 61, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 98, 103, 123, 127, 129, 130, 146, 147, 150, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204], "now": [0, 3, 9, 10, 13, 18, 34, 35, 44, 71, 150, 175, 182, 197, 198, 199, 200, 201, 202, 204], "come": [0, 4, 5, 10, 15, 18, 28, 35, 44, 197, 202, 204], "linear": [0, 7, 11, 16, 17, 19, 28, 34, 35, 77, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 112, 113, 114, 115, 117, 118, 119, 123, 124, 127, 128, 129, 131, 143, 145, 146, 147, 173, 174, 193, 197, 203], "multistep": [0, 148], "method": [0, 3, 6, 8, 9, 11, 12, 13, 14, 15, 33, 34, 35, 41, 43, 44, 46, 47, 50, 52, 61, 67, 69, 70, 76, 77, 78, 81, 95, 96, 102, 103, 104, 105, 113, 117, 122, 123, 124, 128, 130, 131, 141, 143, 144, 145, 146, 149, 150, 151, 172, 174, 197, 203, 204], "classic": [0, 2, 3, 9, 12, 16, 19, 21, 25, 28, 32, 35, 150], "rung": [0, 70, 76, 145, 146, 150, 151], "kutta": [0, 70, 76, 145, 146, 150, 151], "dae": 0, "sweeper": [0, 3, 6, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 40, 48, 69, 74, 76, 81, 131, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204], "more": [0, 2, 3, 5, 7, 8, 9, 10, 12, 13, 16, 18, 19, 25, 32, 33, 35, 58, 70, 75, 76, 88, 126, 145, 146, 175, 179, 180, 182, 183, 184, 191, 197, 198, 199, 200, 201, 203, 204], "improv": [0, 4, 6, 8, 13, 18, 199, 200], "project": [0, 3, 4, 5, 10, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 61, 103, 113, 117, 131, 163, 204], "we": [0, 1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 17, 18, 25, 33, 34, 35, 37, 43, 44, 47, 55, 56, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 103, 105, 123, 128, 149, 150, 151, 175, 176, 177, 181, 182, 190, 191, 197, 198, 199, 200, 201, 202, 203, 204], "have": [0, 1, 4, 5, 6, 9, 12, 13, 15, 25, 27, 34, 35, 37, 44, 50, 55, 69, 70, 71, 76, 77, 78, 81, 86, 87, 88, 90, 94, 96, 145, 146, 149, 150, 151, 175, 185, 191, 197, 198, 199, 200, 201, 202, 203, 204], "board": [0, 98, 99], "brand": 0, "new": [0, 3, 4, 5, 7, 8, 9, 11, 13, 34, 35, 52, 67, 69, 75, 81, 82, 83, 104, 112, 114, 149, 150, 151, 172, 174, 178, 190, 197, 202], "switch": [0, 69, 70, 76, 103, 106, 107, 129], "estim": [0, 13, 15, 66, 70, 72, 75, 76, 78, 79, 80, 103, 107, 188, 196, 202], "test": [0, 2, 3, 4, 10, 11, 12, 13, 16, 17, 18, 19, 26, 27, 33, 34, 35, 37, 54, 72, 83, 107, 113, 117, 129, 131, 145, 146, 147, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "ground": 0, "compress": [0, 9], "libpressio": [0, 18], "march": [0, 11, 77], "2": [0, 6, 7, 9, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 41, 46, 50, 62, 69, 70, 77, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 130, 131, 143, 144, 145, 146, 150, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 49, 52, 58, 61, 66, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 81, 82, 83, 84, 88, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 162, 170, 171, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "out": [0, 3, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 66, 67, 76, 126, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "multipl": [0, 13, 18, 43, 44, 46, 52, 69, 77, 78, 88, 155, 182, 187, 191, 192, 198, 199, 200, 201, 202, 203], "direct": [0, 18, 70, 83, 94, 96, 100, 101, 104, 112, 114, 118, 119, 122, 128, 143, 170, 177, 198], "The": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 27, 33, 34, 35, 37, 40, 41, 43, 44, 47, 49, 50, 53, 56, 57, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 162, 197, 198, 200, 201, 203, 204], "problem": [0, 2, 3, 6, 9, 11, 15, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 39, 43, 45, 48, 51, 59, 69, 70, 74, 76, 77, 78, 80, 82, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 143, 144, 145, 146, 147, 152, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "class": [0, 1, 2, 4, 8, 11, 12, 14, 16, 19, 25, 26, 27, 28, 32, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 61, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 184, 185, 186, 187, 193, 196, 197, 198, 199, 200, 201, 203, 204], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 33, 34, 35, 37, 41, 44, 47, 49, 50, 52, 59, 61, 66, 69, 70, 76, 77, 78, 86, 87, 88, 89, 90, 94, 95, 98, 99, 100, 101, 103, 104, 106, 109, 111, 112, 113, 115, 119, 127, 143, 150, 151, 152, 156, 163, 164, 165, 166, 167, 168, 169, 175, 186, 188, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204], "defin": [0, 2, 3, 6, 7, 9, 34, 37, 40, 41, 50, 52, 70, 71, 72, 74, 80, 82, 83, 84, 106, 107, 108, 111, 112, 113, 116, 117, 118, 131, 143, 145, 146, 152, 156, 177, 179, 187, 198, 199, 200, 201, 203], "paramet": [0, 4, 7, 8, 10, 11, 12, 14, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 157, 158, 162, 163, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "explicitli": [0, 93, 95, 98, 99, 100, 101, 105, 117, 203], "constructor": [0, 7], "dictionari": [0, 12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 42, 44, 45, 46, 52, 60, 69, 70, 71, 72, 74, 78, 80, 82, 83, 84, 103, 155, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "param": [0, 6, 29, 30, 35, 40, 42, 43, 44, 48, 51, 52, 53, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 181, 197, 198, 200], "properti": [0, 8, 33, 42, 43, 47, 48, 50, 52, 53, 77, 86, 88, 143, 150, 155, 203], "return": [0, 7, 8, 12, 16, 19, 21, 25, 26, 27, 32, 34, 40, 41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 62, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 173, 174, 176, 178, 179, 180, 184, 188, 190, 191, 196, 197, 198, 199, 200, 202, 203, 204], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 33, 34, 35, 37, 38, 40, 44, 47, 50, 52, 60, 62, 69, 70, 71, 73, 74, 76, 77, 78, 79, 88, 92, 93, 95, 96, 101, 103, 106, 110, 113, 114, 115, 117, 123, 126, 130, 131, 147, 149, 150, 151, 155, 156, 162, 173, 176, 177, 178, 184, 191, 197, 198, 199, 200, 201, 202, 203, 204], "automat": [0, 2, 5, 7, 9, 44, 76], "store": [0, 7, 8, 15, 16, 29, 30, 35, 44, 61, 69, 73, 75, 76, 77, 78, 81, 84, 149, 150, 151, 174, 181, 197, 199, 200], "attribut": [0, 4, 7, 8, 45, 50, 51, 58, 77, 88, 93, 103, 127, 150, 164, 165, 166, 167, 168, 197, 199, 201], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 32, 34, 35, 37, 38, 40, 41, 43, 44, 46, 47, 49, 50, 52, 53, 55, 58, 59, 60, 61, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 126, 127, 128, 130, 131, 143, 144, 145, 146, 147, 150, 151, 152, 155, 156, 158, 160, 162, 171, 172, 174, 176, 178, 179, 180, 181, 183, 184, 188, 191, 194, 196, 197, 199, 200, 201, 202, 203, 204], "_makeattributeandregist": [0, 7], "allow": [0, 1, 2, 5, 6, 10, 35, 43, 44, 61, 69, 70, 71, 72, 74, 77, 78, 79, 88, 94, 119, 199, 201, 203], "readonli": [0, 7], "paramt": [0, 16, 19, 26, 27, 34], "warn": [0, 5, 37, 50, 61, 173, 191, 196, 197, 203, 204], "backward": [0, 44, 150, 165], "compat": [0, 3, 4, 9, 44, 69, 70, 73, 76, 77, 78, 79], "resili": [0, 9, 18], "quench": [0, 91], "result": [0, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 38, 44, 46, 69, 81, 88, 117, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "collabor": [0, 18], "between": [0, 6, 13, 18, 26, 27, 34, 40, 41, 44, 52, 69, 70, 71, 73, 75, 76, 77, 79, 81, 95, 96, 104, 106, 111, 118, 123, 128, 162, 163, 164, 165, 166, 167, 168, 169, 171, 183, 184, 195, 197, 198, 200, 202, 204], "eschnaubelt": 0, "dure": [0, 1, 4, 5, 15, 18, 37, 46, 48, 50, 72, 83, 88, 113, 114, 115, 198, 199, 200], "time": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 40, 43, 44, 46, 47, 48, 50, 52, 60, 66, 67, 69, 70, 71, 77, 78, 82, 83, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 162, 173, 174, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "app": 0, "hackathon": 0, "usi": 0, "lugano": 0, "mani": [0, 2, 3, 5, 9, 10, 41, 71, 75, 176, 197, 198, 200, 202, 203], "other": [0, 1, 2, 5, 6, 13, 16, 18, 27, 34, 43, 44, 48, 60, 61, 70, 71, 77, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 150, 191, 197, 199, 200, 203], "under": [0, 3, 9, 10, 18, 33, 38, 201], "hood": 0, "prepar": [0, 5, 12, 21, 25, 32, 44, 200], "6": [0, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 46, 95, 100, 101, 105, 124, 125, 150, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204], "23": 0, "1": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 41, 44, 46, 47, 49, 50, 57, 62, 77, 78, 79, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 130, 131, 143, 144, 146, 147, 149, 150, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "bring": 0, "document": [0, 2, 3, 4, 7, 33, 76], "both": [0, 6, 12, 13, 14, 18, 26, 33, 34, 38, 44, 57, 72, 92, 93, 96, 102, 103, 104, 108, 113, 115, 117, 118, 130, 131, 150, 155, 183, 188, 190, 195, 200, 202, 203, 204], "github": [0, 2, 3, 5, 9, 15, 47], "websit": [0, 5], "reviv": 0, "codecov": [0, 5], "connect": 0, "start": [0, 4, 5, 6, 15, 18, 43, 46, 50, 66, 67, 69, 98, 105, 107, 113, 117, 123, 126, 127, 130, 145, 146, 149, 156, 176, 188, 197, 198, 202], "opensff": 0, "best": [0, 1, 6, 18, 83, 198, 200], "practic": [0, 11, 76], "guid": [0, 18, 172, 174, 197], "hook": [0, 5, 11, 12, 25, 32, 39, 43, 66, 67, 76, 177, 179, 180, 184, 196, 198, 199, 200, 204], "wai": [0, 1, 9, 11, 18, 34, 69, 78, 92, 93, 95, 96, 107, 112, 114, 115, 117, 131, 150, 151, 187, 191, 198, 199, 200, 201, 203], "thei": [0, 1, 4, 5, 6, 9, 10, 13, 15, 18, 33, 44, 59, 70, 76, 81, 104, 106, 113, 114, 115, 197], "handl": [0, 13, 44, 45, 49, 82, 86, 88, 89, 90, 95, 96, 114, 124, 202], "without": [0, 1, 5, 15, 26, 27, 34, 88, 131, 199, 200, 202, 203], "break": [0, 4, 190, 197, 202], "api": [0, 4, 203], "hoorai": 0, "batteri": [0, 91], "model": [0, 11, 15, 103, 106, 109, 113, 114, 115, 123, 127, 128, 146], "quit": [0, 5, 199], "an": [0, 1, 5, 11, 13, 15, 18, 33, 34, 35, 43, 44, 50, 55, 61, 62, 69, 70, 74, 76, 77, 78, 83, 88, 93, 98, 99, 103, 105, 106, 107, 111, 112, 115, 117, 127, 131, 145, 146, 147, 150, 151, 152, 156, 176, 196, 197, 198, 200, 201, 202, 203, 204], "updat": [0, 3, 4, 5, 9, 11, 18, 43, 44, 53, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 107, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172, 174, 176, 197, 198], "adapt": [0, 1, 38, 68, 69, 77, 83, 150, 155, 202], "plai": [0, 10, 171, 197, 204], "promin": [0, 203], "role": 0, "octob": 0, "7": [0, 9, 12, 21, 26, 27, 28, 29, 34, 35, 38, 46, 105, 150, 176, 177, 178, 179, 182, 184, 185, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202, 204], "2022": 0, "visibl": [0, 1], "invis": [0, 1], "ones": [0, 16, 109, 131, 150, 173, 174, 197], "those": [0, 1, 3, 4, 5, 6, 7, 9, 26, 27, 34, 49, 61, 143, 202], "exist": [0, 4, 33, 44, 46, 58, 61, 203], "you": [0, 2, 3, 5, 7, 9, 15, 38, 44, 50, 56, 58, 59, 69, 70, 76, 81, 82, 83, 88, 143, 147, 151, 197, 198, 202, 204], "should": [0, 4, 5, 6, 7, 9, 10, 11, 18, 43, 44, 46, 47, 49, 50, 77, 78, 95, 107, 111, 112, 114, 115, 116, 122, 128, 130, 143, 201, 203, 204], "fine": [0, 14, 37, 40, 51, 52, 62, 66, 67, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 184, 197, 200], "major": 0, "converg": [0, 9, 11, 12, 13, 18, 33, 38, 43, 44, 45, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 177, 179, 191, 197, 198, 199, 202, 203], "control": [0, 9, 12, 13, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 39, 44, 45, 46, 52, 60, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 106, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204], "check": [0, 3, 5, 7, 9, 10, 12, 15, 17, 25, 27, 28, 34, 35, 44, 61, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 107, 171, 172, 176, 180, 181, 182, 183, 185, 186, 189, 198, 199, 200, 201, 202, 203, 204], "whether": [0, 41, 44, 52, 69, 70, 71, 72, 73, 77, 78, 79, 107, 130, 203, 204], "tricki": 0, "so": [0, 12, 13, 18, 35, 37, 44, 52, 70, 74, 75, 77, 92, 93, 98, 99, 100, 101, 103, 104, 105, 107, 108, 113, 115, 117, 123, 124, 126, 131, 155, 197, 198, 199, 201, 202, 204], "made": [0, 5, 11, 15], "separ": [0, 5, 8, 18, 35, 44, 197], "modul": [0, 4, 7, 9], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 27, 28, 33, 34, 35, 37, 38, 40, 43, 44, 46, 47, 48, 50, 52, 59, 61, 62, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 121, 123, 125, 126, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 152, 155, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 178, 182, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204], "make": [0, 1, 5, 6, 12, 15, 44, 46, 50, 69, 70, 76, 77, 88, 145, 146, 175, 176, 198, 199, 201], "featur": [0, 14, 202, 204], "like": [0, 1, 3, 5, 6, 7, 8, 9, 26, 27, 33, 34, 35, 37, 44, 47, 52, 61, 69, 76, 77, 81, 88, 123, 199, 201, 203, 204], "easier": [0, 51, 164, 165, 166, 167, 168, 172, 174, 197, 198], "implement": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 41, 44, 47, 49, 50, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "been": [0, 4, 5, 9, 18, 35, 37, 44, 70, 71, 77, 83, 128, 194, 200, 201, 204], "streamlin": 0, "bit": [0, 155, 197, 198, 199, 200], "them": [0, 2, 4, 5, 6, 7, 13, 15, 16, 18, 35, 43, 81, 100, 101, 155, 157, 199], "readabl": [0, 2, 4, 6], "digest": 0, "error": [0, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 44, 49, 61, 66, 69, 70, 72, 73, 74, 75, 76, 78, 79, 80, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "leverag": [0, 18], "box": [0, 35], "colloc": [0, 3, 9, 14, 18, 33, 34, 35, 39, 45, 53, 69, 70, 76, 77, 78, 81, 82, 103, 107, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173, 174, 176, 177, 179, 180, 196, 198, 200, 204], "complet": [0, 66, 201], "rewrot": 0, "node": [0, 5, 14, 18, 33, 38, 39, 40, 41, 47, 48, 53, 62, 69, 70, 76, 77, 78, 81, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 111, 113, 115, 117, 118, 122, 124, 126, 128, 130, 131, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 176, 180, 182, 191, 198, 200, 201, 203], "weight": [0, 8, 10, 18, 40, 41, 47, 57, 150, 158], "comput": [0, 3, 7, 8, 9, 10, 12, 14, 16, 18, 19, 21, 25, 28, 32, 35, 38, 40, 44, 47, 49, 50, 53, 61, 66, 69, 70, 76, 77, 83, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 171, 172, 173, 174, 176, 177, 179, 181, 183, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204], "faster": [0, 203], "reliabl": [0, 2], "shorter": [0, 6, 200], "better": [0, 3, 6, 9, 81, 150, 191, 197, 203], "But": [0, 4, 5, 6, 88], "sinc": [0, 3, 9, 11, 12, 13, 18, 33, 37, 44, 70, 76, 77, 123, 149, 191, 197, 198, 202, 203, 204], "old": [0, 9, 41, 69, 149], "do": [0, 4, 5, 6, 9, 11, 18, 26, 27, 34, 41, 44, 52, 69, 70, 76, 77, 81, 83, 88, 94, 149, 150, 172, 175, 176, 177, 181, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 203, 204], "anymor": [0, 204], "tutori": [0, 3, 4, 5, 12, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "most": [0, 3, 5, 6, 9, 11, 12, 52, 81, 197, 198, 200, 201, 203], "playground": [0, 3, 5, 18], "look": [0, 2, 5, 14, 15, 44, 123, 197, 200, 201, 204], "over": [0, 12, 13, 16, 19, 28, 29, 30, 34, 35, 40, 41, 46, 103, 113, 114, 115, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 172, 174, 180, 186, 187, 188, 197, 199, 201, 202, 204], "see": [0, 1, 3, 5, 9, 14, 15, 16, 17, 18, 19, 26, 27, 34, 37, 44, 61, 79, 113, 115, 117, 123, 124, 126, 131, 150, 155, 156, 173, 185, 186, 187, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204], "what": [0, 1, 9, 12, 15, 25, 44, 69, 76, 81, 175, 181, 197, 198, 199, 200, 202, 204], "energi": [0, 9, 12, 21, 103, 109, 127, 179, 180, 184, 199, 200], "grid": [0, 28, 29, 30, 34, 35, 57, 62, 93, 95, 96, 98, 99, 100, 101, 109, 112, 113, 114, 115, 124, 127, 128, 143, 169, 172, 174, 197, 200], "simul": [0, 9, 10, 11, 12, 15, 18, 21, 25, 32, 63, 71, 82, 103, 106, 127, 128, 176, 178, 188, 198, 199, 202], "readi": [0, 4, 57, 201, 204], "wait": [0, 5, 66, 190, 202], "idea": [0, 3, 6, 9, 34, 35, 81, 150, 151, 199, 201, 202], "effort": 0, "condens": 0, "clean": [0, 9, 48, 52], "up": [0, 3, 5, 9, 10, 12, 15, 18, 21, 25, 28, 29, 30, 32, 35, 48, 52, 66, 67, 69, 70, 78, 113, 114, 115, 128, 149, 171, 172, 174, 181, 182, 186, 187, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204], "reduc": [0, 18, 55, 69, 70, 78, 143, 170, 176, 177, 178, 180, 191, 198, 199, 200, 203], "number": [0, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 41, 44, 46, 47, 49, 55, 57, 62, 66, 67, 69, 70, 71, 72, 77, 78, 82, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 128, 130, 131, 143, 144, 145, 146, 150, 151, 152, 156, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "file": [0, 3, 5, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 56, 61, 172, 190, 197, 198, 202], "onli": [0, 4, 5, 6, 10, 12, 14, 15, 18, 27, 33, 34, 35, 41, 42, 43, 44, 45, 48, 53, 60, 70, 73, 76, 77, 78, 83, 95, 96, 106, 110, 113, 125, 126, 128, 147, 149, 150, 151, 155, 157, 171, 172, 175, 176, 177, 179, 184, 188, 190, 194, 197, 198, 199, 200, 201, 202, 203, 204], "margin": 0, "differ": [0, 1, 3, 6, 9, 10, 12, 15, 16, 17, 18, 26, 27, 28, 33, 34, 40, 43, 44, 47, 57, 61, 69, 70, 73, 75, 76, 77, 78, 79, 81, 94, 95, 96, 98, 99, 100, 101, 103, 104, 106, 107, 111, 118, 119, 123, 128, 130, 143, 149, 162, 179, 180, 183, 184, 186, 187, 188, 190, 191, 195, 197, 198, 199, 200, 201, 202, 203, 204], "significantli": [0, 18, 70, 201], "could": [0, 1, 4, 18, 69, 70, 78, 150, 151], "potenti": [0, 6, 62, 117], "your": [0, 3, 4, 5, 9, 56, 76, 197, 199], "too": [0, 10, 12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 82, 176, 179, 180, 184, 186, 187, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "reli": [0, 37, 44, 77, 200], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 34, 47, 59, 69, 78, 83, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 197], "affect": [0, 1], "toward": [0, 1, 128], "gpu": [0, 57, 99, 129], "data": [0, 3, 9, 10, 11, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 41, 44, 45, 46, 48, 50, 51, 55, 60, 61, 66, 67, 79, 86, 87, 88, 89, 90, 92, 126, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204], "type": [0, 3, 5, 7, 9, 10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 139, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 162, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204], "base": [0, 2, 3, 5, 7, 9, 10, 11, 13, 14, 16, 18, 19, 26, 27, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 61, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 140, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 184, 197, 199, 200], "cupi": [0, 57, 86, 99], "possibl": [0, 6, 40, 44, 62, 69, 70, 83, 128, 162, 197, 200], "timo2705": 0, "ci": [0, 2, 3, 4, 5, 9, 10, 12, 16, 17, 33, 37, 203], "pipelin": [0, 15, 70, 82], "overhaul": 0, "again": [0, 35, 155, 198, 199, 200, 201, 202, 203, 204], "enabl": [0, 15, 70, 200], "simultan": [0, 102, 130], "earlier": [0, 150, 151], "lint": 0, "benchmark": [0, 5, 37], "least": [0, 3, 9, 14, 199, 202], "princip": 0, "environ": [0, 1, 3, 9, 12, 15, 128, 190, 202, 203], "ubuntu": [0, 3, 9], "maco": 0, "format": [0, 5, 6, 11, 61], "black": [0, 5, 35, 196, 204], "flakeheaven": [0, 5], "cleaner": 0, "sourc": [0, 5, 13, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 200], "after": [0, 5, 6, 7, 9, 10, 11, 13, 16, 18, 44, 46, 70, 71, 76, 77, 80, 81, 106, 176, 177, 179, 184, 196, 198, 199, 200, 201, 204], "complaint": [0, 1], "here": [0, 1, 5, 8, 9, 11, 12, 13, 14, 15, 18, 33, 35, 41, 44, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 112, 113, 115, 116, 117, 121, 123, 124, 126, 130, 131, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173, 174, 176, 177, 178, 179, 180, 183, 184, 187, 190, 191, 194, 197, 198, 199, 200, 201, 202, 203, 204], "about": [0, 1, 5, 12, 44, 48, 57, 76, 77, 103, 107, 200, 201, 202], "recommend": [0, 2, 3, 5, 9, 197, 200], "run": [0, 3, 5, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 43, 46, 59, 60, 61, 63, 66, 67, 74, 77, 83, 123, 171, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204], "befor": [0, 5, 44, 46, 53, 69, 70, 71, 107, 150, 155, 175, 193, 198, 203], "submiss": 0, "decemb": 0, "13": [0, 26, 34, 187, 195, 196, 201, 204], "2021": 0, "python": [0, 2, 3, 5, 6, 8, 9, 15, 18, 38, 112, 114, 118, 190, 192, 202, 203], "9": [0, 16, 19, 26, 27, 34, 61, 150, 176, 177, 178, 179, 180, 184, 185, 187, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202, 203, 204], "cleanup": 0, "suit": [0, 197], "seem": [0, 12, 14, 150], "sort": [0, 1, 12, 16, 19, 21, 25, 26, 32, 34, 60, 172, 174, 178, 180, 181, 184, 190, 195, 197, 199, 200, 202, 204], "depend": [0, 3, 9, 10, 13, 44, 58, 70, 71, 72, 73, 75, 76, 79, 80, 83, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 143, 144, 145, 146, 147, 172, 174, 176, 177, 179, 193, 197, 198, 199, 200, 201, 203], "mamba": [0, 5], "which": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 15, 16, 18, 29, 30, 33, 34, 35, 37, 42, 43, 44, 50, 52, 60, 61, 62, 66, 69, 70, 71, 76, 77, 78, 79, 80, 82, 83, 92, 93, 94, 95, 98, 99, 103, 105, 106, 108, 109, 113, 116, 117, 118, 123, 124, 127, 128, 130, 131, 143, 145, 146, 150, 151, 152, 155, 156, 197, 198, 199, 200, 202, 203], "much": [0, 5, 70, 150, 151, 179, 180, 184, 198, 199, 200], "workflow": [0, 66, 67], "local": [0, 4, 5, 7, 18, 38, 70, 76, 77, 78, 79, 95, 96, 103, 106, 107, 112, 114, 118, 123, 127, 128, 129, 131, 143, 147, 191, 203], "act": [0, 1, 6, 55], "introduc": [0, 4, 5, 9, 18, 156, 199, 204], "marker": [0, 28, 29, 30, 35, 172, 174, 197], "soem": 0, "distribut": [0, 18, 41, 49, 59, 66, 67, 71, 81, 98, 99, 112, 114, 115, 118, 124], "platform": [0, 3, 9], "And": [0, 150], "final": [0, 2, 5, 9, 11, 18, 28, 34, 35, 40, 44, 61, 71, 77, 79, 82, 83, 160, 162, 180, 198, 199], "latex": [0, 3, 9, 56], "instal": [0, 3, 5, 9, 10, 11, 15, 18, 201, 202, 203], "longer": [0, 5, 13, 200], "need": [0, 3, 5, 9, 10, 15, 16, 18, 19, 27, 33, 34, 35, 37, 43, 44, 50, 52, 66, 69, 70, 72, 73, 74, 75, 76, 77, 78, 80, 83, 106, 109, 113, 118, 123, 131, 149, 160, 173, 174, 175, 182, 190, 191, 197, 198, 200, 202, 203, 204], "plot": [0, 3, 5, 9, 11, 12, 13, 16, 17, 18, 19, 21, 25, 28, 29, 30, 32, 35, 38, 50, 105, 172, 174, 194, 195, 197, 204], "august": [0, 3, 9], "11": [0, 26, 27, 34, 103, 143, 144, 145, 146, 150, 176, 177, 178, 179, 183, 186, 191, 192, 195, 198, 199, 200, 201, 203, 204], "signific": [0, 203, 204], "impact": [0, 1, 17, 18], "user": [0, 4, 6, 8, 40, 44, 46, 48, 51, 52, 53, 73, 162, 177, 179, 198, 199, 200, 201], "rewritten": 0, "port": [0, 9], "action": [0, 1, 3, 5, 9], "awai": [0, 79, 88], "from": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 46, 47, 48, 49, 57, 60, 61, 63, 66, 67, 69, 70, 76, 77, 78, 82, 88, 93, 103, 104, 105, 110, 117, 123, 126, 128, 129, 143, 144, 149, 150, 151, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "travi": 0, "flake8": [0, 5], "pytest": [0, 3, 5, 9], "nose": 0, "One": [0, 197, 200, 201, 204], "thing": [0, 6, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 35, 88, 103, 107, 130, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "mai": [0, 1, 2, 3, 4, 5, 6, 9, 16, 18, 46, 57, 76, 81, 150, 176, 198, 202, 204], "follow": [0, 1, 2, 5, 6, 7, 8, 10, 11, 15, 34, 38, 41, 103, 106, 109, 111, 112, 126, 143, 145, 146, 188, 198, 199, 202, 203], "petsc": [0, 3, 9, 16, 19, 112, 114, 118, 169, 190, 193, 202], "structur": [0, 2, 4, 9, 48, 50, 52, 105, 112, 114, 193, 197, 201, 203], "remov": [0, 1, 4, 5, 61, 149, 156], "unnecessari": [0, 18], "boilerpl": 0, "long": [0, 5, 6, 17, 33, 76, 77, 106, 191, 203], "releas": [0, 3, 9, 33], "mark": [0, 18], "mesh": [0, 7, 10, 57, 85, 86, 89, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 150, 151, 163, 164, 165, 166, 167, 168, 171, 172, 177, 191, 197, 198, 203], "particl": [0, 85, 109, 110, 116, 121, 125, 126, 170, 179, 184, 199], "creation": [0, 12, 21, 25, 28, 32, 35, 176, 177, 178, 179, 180, 184, 191, 198, 199, 200, 203], "arrai": [0, 7, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 41, 50, 61, 62, 88, 103, 150, 171, 172, 179, 180, 181, 184, 186, 187, 191, 192, 193, 196, 197, 199, 200, 201, 203, 204], "each": [0, 2, 5, 7, 9, 11, 13, 16, 18, 19, 26, 27, 29, 30, 33, 34, 35, 37, 38, 44, 46, 66, 67, 69, 71, 76, 77, 82, 88, 95, 96, 103, 106, 126, 130, 143, 155, 175, 178, 180, 182, 183, 185, 186, 187, 188, 196, 197, 198, 199, 200, 201, 202, 204], "oper": [0, 5, 40, 44, 52, 69, 77, 78, 88, 92, 93, 94, 95, 96, 98, 99, 100, 101, 111, 115, 118, 119, 124, 128, 143, 147, 162, 197, 198, 202], "avoid": [0, 1, 4, 5, 6, 58, 201], "directli": [0, 4, 5, 11, 34, 67, 94, 119, 122, 173, 174, 197], "subclass": 0, "numpi": [0, 6, 7, 8, 10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 47, 50, 57, 88, 129, 152, 156, 171, 172, 173, 174, 179, 180, 181, 184, 186, 187, 191, 192, 193, 196, 197, 199, 200, 201, 203, 204], "": [0, 1, 3, 5, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 42, 44, 50, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 95, 96, 102, 103, 109, 110, 112, 113, 114, 115, 117, 118, 122, 123, 125, 126, 128, 130, 131, 144, 150, 152, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204], "ndarrai": [0, 41, 50, 57, 62, 69, 78, 86, 87, 88, 101, 104, 126, 152, 156], "somewhat": [0, 5, 202], "definit": [0, 7, 155, 199], "less": [0, 10, 76, 77, 175, 182, 191, 198, 200, 201, 203], "futur": 0, "proof": 0, "If": [0, 3, 4, 5, 7, 9, 13, 38, 44, 46, 50, 56, 61, 70, 74, 76, 77, 78, 81, 88, 94, 103, 106, 107, 110, 115, 119, 122, 124, 125, 143, 149, 191, 202, 203], "sure": [0, 5, 44, 46, 50, 69, 70, 76, 88, 199], "don": [0, 3, 4, 5, 8, 9, 44, 70, 77, 83, 150, 151, 176, 198, 202], "t": [0, 3, 4, 5, 7, 8, 9, 11, 12, 21, 25, 32, 40, 44, 47, 49, 50, 55, 70, 75, 76, 77, 83, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 162, 172, 173, 174, 176, 181, 197, 198, 200, 202, 204], "upgrad": 0, "quadratur": [0, 38, 41, 47, 49, 69, 70, 76, 77, 81, 180, 199], "even": [0, 4, 5, 6, 33, 190, 199, 200, 202, 203], "No": [0, 1, 3, 9, 26, 27, 34, 92, 103, 108, 131, 197], "push": [0, 4, 5, 9], "abov": [0, 3, 4, 9, 11, 15, 18, 33, 44, 88, 103, 173, 197, 200], "routin": [0, 4, 9, 10, 12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 40, 46, 48, 52, 63, 66, 67, 72, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 162, 170, 171, 172, 173, 174, 176, 188, 191, 192, 194, 195, 197, 198, 199, 202, 203, 204], "work": [0, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 61, 70, 77, 80, 155, 176, 181, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 203, 204], "recent": [0, 18], "matplotlib": [0, 37, 50, 56, 105, 172, 174, 197], "yet": [0, 10, 14, 18, 34, 35, 46, 197, 198, 199, 200, 201, 202, 204], "were": [0, 1, 15], "would": [0, 3, 4, 9, 13, 82, 150, 151, 199], "minor": 0, "30": [0, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 143, 178, 180, 181, 183, 184, 186, 187, 188, 191, 192, 196, 199, 200, 201, 202, 203, 204], "2019": [0, 3, 9, 115, 124], "add": [0, 4, 5, 6, 7, 9, 16, 19, 35, 40, 43, 44, 46, 69, 70, 71, 75, 76, 77, 78, 81, 128, 131, 140, 149, 155, 162, 172, 174, 197, 199], "exampl": [0, 1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 35, 44, 61, 88, 93, 94, 95, 96, 98, 99, 100, 101, 103, 106, 111, 112, 115, 116, 117, 118, 124, 127, 155, 179, 197, 198, 199, 200, 201, 202, 203, 204], "nonlinear": [0, 16, 19, 70, 95, 96, 98, 99, 100, 101, 102, 103, 104, 108, 109, 111, 112, 113, 114, 117, 122, 123, 124, 126, 130, 131, 144, 145, 146, 203], "schr\u00f6dinger": [0, 124, 203], "equat": [0, 9, 13, 15, 17, 26, 27, 33, 34, 35, 77, 79, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 150, 151, 186, 187, 191, 192, 196, 199, 200, 201, 203, 204], "grai": [0, 113, 114, 115], "scott": [0, 113, 114, 115], "particular": [0, 3, 4, 5, 8, 9, 10, 16, 18, 19, 33, 48, 69, 77, 147, 150, 151, 197, 200, 202, 203], "allen": [0, 9, 37, 95, 96, 98, 99, 100, 101], "cahn": [0, 9, 37, 95, 96, 98, 99, 100, 101], "parallel": [0, 3, 4, 5, 9, 10, 12, 15, 18, 37, 66, 67, 69, 76, 78, 82, 86, 88, 100, 112, 114, 115, 118, 124, 145, 146, 155, 186, 187, 190, 192, 193, 195, 198, 201, 204], "fft": [0, 3, 9, 10, 37, 93, 98, 99, 100, 101, 105, 115, 124, 165, 166, 167], "librari": [0, 2, 5, 9, 18, 202], "mpi4pi": [0, 3, 9, 10, 15, 30, 35, 44, 55, 60, 71, 72, 74, 82, 100, 101, 105, 115, 124, 190, 192, 193, 198, 201, 202], "There": [0, 6, 13, 37, 70, 88], "8": [0, 3, 5, 6, 9, 27, 34, 56, 123, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "where": [0, 3, 7, 8, 9, 13, 14, 18, 26, 27, 33, 34, 35, 37, 44, 47, 49, 59, 77, 81, 93, 96, 98, 99, 100, 101, 103, 107, 108, 109, 110, 113, 114, 115, 117, 119, 125, 126, 128, 143, 150, 151, 155, 176, 197, 198, 199, 200, 202, 204], "show": [0, 5, 13, 14, 15, 17, 33, 37, 82, 179, 180, 184, 199, 200, 201, 202, 203], "usag": [0, 4, 11, 37, 193, 197, 203], "three": [0, 5, 29, 35, 49, 77, 123, 127, 146, 156, 199, 200, 204], "extern": [0, 1, 9, 15, 95, 126, 200], "petsc4pi": [0, 3, 9, 16, 19, 112, 114, 118], "mpi": [0, 3, 9, 10, 15, 18, 30, 37, 44, 55, 60, 69, 70, 71, 72, 73, 74, 77, 78, 82, 88, 100, 105, 115, 124, 155, 190, 192, 193, 201, 203], "performan": 0, "detail": [0, 2, 3, 5, 8, 9, 10, 13, 70, 124, 126, 199, 202, 203], "perform": [0, 3, 4, 5, 9, 18, 31, 33, 38, 48, 55, 66, 67, 69, 72, 77, 78, 147, 150, 151, 201, 202, 204], "analysi": [0, 5, 9], "score": [0, 37], "p": [0, 8, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 47, 62, 92, 104, 112, 113, 114, 115, 145, 146, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "extra": 0, "iter": [0, 11, 12, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 43, 44, 46, 50, 66, 67, 69, 70, 72, 73, 75, 76, 77, 80, 81, 84, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 140, 143, 144, 145, 146, 147, 150, 151, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203], "taken": [0, 4, 15, 37, 110, 125, 144, 145, 146, 150], "februari": 0, "14": [0, 12, 27, 32, 34, 61, 150, 151, 187, 192, 195, 201, 203, 204], "accompani": [0, 9, 199], "acm": [0, 3, 9], "tom": [0, 3, 9], "prototyp": [0, 3, 9, 18, 50, 198], "spectral": [0, 3, 9, 11, 17, 33, 35, 92, 93, 98, 99, 100, 101, 105, 108, 115, 124, 156, 192, 203], "defer": [0, 3, 9, 11, 33, 92, 108, 156], "In": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 33, 34, 35, 37, 69, 73, 76, 77, 103, 117, 123, 131, 147, 150, 151, 197, 198, 199, 200, 201, 203, 204], "drop": [0, 13, 103], "support": [0, 3, 9, 55, 150, 151, 200], "variou": [0, 9, 10, 41, 44, 59, 69, 70, 196, 204], "incomp": 0, "led": 0, "inconsist": [0, 191, 203], "had": 0, "while": [0, 2, 3, 5, 9, 12, 15, 18, 33, 35, 38, 69, 76, 77, 78, 176, 190, 198, 199, 200, 201, 202, 203], "A": [0, 1, 4, 6, 8, 9, 11, 13, 16, 18, 19, 26, 27, 34, 35, 43, 47, 48, 59, 69, 71, 77, 78, 92, 94, 95, 96, 103, 104, 106, 107, 111, 112, 113, 114, 115, 117, 118, 119, 126, 127, 128, 129, 131, 143, 145, 146, 150, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196], "pledg": 0, "migrat": 0, "decis": [0, 1], "alreadi": [0, 2, 3, 5, 9, 37, 43, 44, 46, 81, 88, 176, 198, 199, 202], "unifi": 0, "instead": [0, 11, 34, 44, 55, 56, 70, 81, 98, 99, 147, 190, 196, 198, 202, 204], "provid": [0, 1, 2, 7, 10, 13, 18, 26, 27, 34, 38, 41, 57, 61, 95, 96, 103, 107, 115, 184, 198, 199, 200, 203], "maintain": [0, 3, 6, 9, 18], "four": [0, 30, 35], "one": [0, 4, 5, 7, 12, 14, 15, 16, 18, 29, 30, 35, 37, 43, 44, 50, 57, 61, 62, 63, 66, 67, 69, 70, 71, 72, 76, 78, 88, 92, 93, 95, 103, 106, 107, 109, 111, 112, 113, 114, 117, 122, 131, 144, 145, 146, 149, 150, 155, 171, 175, 177, 179, 184, 190, 197, 198, 199, 200, 202], "emul": [0, 13, 128, 201], "controller_nonmpi": [0, 12, 16, 19, 21, 25, 26, 28, 29, 30, 32, 34, 35, 65, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "controller_mpi": [0, 65, 190, 193, 202, 203, 204], "further": [0, 6, 9, 52, 57, 83, 103, 199, 204], "confus": [0, 5, 155], "multigrid": [0, 3, 9, 34, 204], "perspect": [0, 3, 9], "algorithm": [0, 3, 9, 18, 201, 202, 203, 204], "exchang": 0, "than": [0, 5, 6, 15, 16, 18, 19, 51, 60, 70, 81, 103, 164, 165, 166, 167, 168, 171, 175, 183, 191, 197, 198, 200, 202, 203], "determin": [0, 1, 10, 38, 44, 70, 72, 77, 83, 103, 106, 150, 151], "when": [0, 1, 3, 4, 5, 6, 8, 9, 11, 13, 18, 34, 44, 45, 46, 58, 61, 69, 70, 74, 76, 77, 81, 83, 103, 107, 122, 128, 130, 145, 146, 149, 150, 151, 193, 199, 200, 203, 204], "stop": [0, 43, 70, 72, 81, 95, 111, 122, 130, 144, 145, 146, 204], "previou": [0, 5, 11, 52, 61, 69, 73, 76, 77, 126, 149], "behavior": [0, 1, 13, 109, 111, 112, 201], "restor": 0, "flag": [0, 16, 19, 41, 58, 62, 66, 67, 117, 198, 204], "front": [0, 106], "end": [0, 5, 6, 11, 13, 43, 44, 48, 53, 61, 66, 67, 69, 77, 78, 123, 126, 146, 177, 179, 188, 198, 199, 200, 202], "redund": 0, "specif": [0, 2, 4, 5, 8, 10, 38, 44, 47, 56, 57, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 88, 122], "descript": [0, 5, 9, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 43, 44, 52, 59, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "declar": 0, "within": [0, 1, 5, 6, 9, 35, 45, 70, 74, 76, 77, 196, 197, 199, 204], "precis": [0, 16, 18, 35, 202], "header": [0, 29, 30, 35, 172, 197], "__init__": [0, 6, 7, 8, 44, 129, 155], "inherti": 0, "renew": 0, "deprec": [0, 9], "requir": [0, 3, 5, 9, 12, 18, 29, 30, 35, 57, 70, 77, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 150, 151, 183, 198, 200, 203, 204], "2018": [0, 150], "integr": [0, 2, 3, 4, 6, 9, 11, 12, 14, 15, 18, 33, 37, 40, 41, 47, 53, 126, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 175, 198], "consist": [0, 2, 4, 6, 107, 125, 126, 127, 197], "initi": [0, 7, 11, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 43, 44, 46, 50, 52, 66, 67, 69, 77, 81, 83, 84, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "u": [0, 1, 3, 5, 7, 9, 11, 48, 50, 52, 70, 77, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 135, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 176, 177, 179, 197, 198, 199], "f": [0, 3, 5, 6, 7, 8, 9, 11, 12, 21, 25, 26, 27, 28, 32, 34, 35, 40, 41, 47, 48, 50, 51, 77, 88, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 135, 141, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "fix": [0, 4, 5, 13, 15, 33, 35, 101, 117, 124, 201, 204], "throughout": [0, 88, 197], "As": [0, 5, 13, 18, 55, 191, 197, 200, 201, 203], "bug": [0, 4, 44, 46, 177, 179, 198, 199], "discov": 0, "3018": 0, "ship": [0, 3, 9], "dmda": [0, 112, 114, 169], "solver": [0, 12, 16, 18, 33, 35, 79, 80, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 193, 196, 199, 200, 203, 204], "right": [0, 1, 5, 6, 7, 11, 12, 16, 18, 19, 26, 27, 28, 29, 30, 33, 34, 35, 41, 47, 48, 50, 53, 57, 62, 69, 81, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "c": [0, 3, 7, 9, 26, 27, 29, 30, 34, 35, 92, 93, 94, 103, 104, 106, 113, 117, 124, 126, 131, 187, 191, 196], "commun": [0, 1, 3, 9, 10, 18, 44, 45, 46, 55, 60, 66, 69, 71, 72, 73, 74, 76, 78, 82, 86, 88, 89, 90, 100, 101, 112, 114, 115, 118, 124, 155, 190, 193, 202, 203], "split": [0, 33, 92, 96, 98, 99, 108, 113, 150, 156, 190, 193, 202, 203], "space": [0, 1, 5, 10, 16, 18, 19, 26, 27, 34, 35, 37, 40, 51, 52, 57, 74, 93, 95, 98, 99, 100, 101, 111, 112, 113, 114, 115, 117, 124, 128, 131, 162, 172, 174, 181, 182, 183, 185, 186, 187, 188, 192, 193, 195, 196, 197, 198, 200, 201, 202, 204], "get": [0, 5, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 50, 56, 57, 58, 60, 69, 70, 71, 75, 77, 78, 82, 88, 96, 98, 105, 107, 112, 123, 127, 128, 130, 145, 146, 150, 151, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204], "mpich3": 0, "bind": [0, 203], "download": [0, 5], "pypi": [0, 3, 9], "doe": [0, 5, 6, 12, 14, 35, 46, 48, 52, 58, 59, 70, 74, 150, 151, 191, 197, 198, 199, 200, 201, 202, 203, 204], "packag": [0, 5, 9, 15, 129], "ever": 0, "annoi": 0, "incredibli": 0, "slow": [0, 9, 10, 15, 92, 108, 156], "setup": [0, 9, 10, 12, 26, 27, 28, 29, 30, 34, 35, 43, 44, 46, 62, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 109, 126, 172, 174, 175, 177, 179, 181, 185, 191, 196, 198, 199, 200, 201, 203, 204], "phase": [0, 12, 25, 66, 67, 84, 116], "copi": [0, 7, 48, 53, 149, 155, 190, 195, 202, 204], "dill": [0, 12, 21, 25, 32], "90": [0, 16, 19, 84], "certain": [0, 10, 11, 18, 33, 128, 201], "increas": [0, 8, 18, 47, 49, 94, 191, 200, 201, 203, 204], "speed": [0, 10, 18, 92, 93, 94, 104], "calcul": 0, "pen": [0, 12, 21, 25, 32, 126, 179, 184, 199, 200], "trap": [0, 12, 21, 25, 32, 126, 179, 184, 199, 200], "novemb": 0, "2017": 0, "matrix": [0, 8, 9, 11, 17, 26, 27, 29, 30, 33, 35, 40, 41, 47, 49, 50, 53, 57, 62, 69, 77, 78, 92, 94, 95, 96, 103, 104, 106, 111, 112, 113, 114, 115, 117, 118, 119, 124, 126, 127, 128, 129, 131, 143, 150, 152, 153, 154, 155, 156, 158, 159, 160, 164, 166, 168, 173, 174, 191, 197, 203], "pfasst": [0, 3, 9, 10, 12, 26, 27, 35, 63, 66, 67, 186, 187, 188, 189, 190, 192, 195, 198, 200, 203, 204], "matrixpfasst": [0, 26, 27, 34], "involv": [0, 1], "few": [0, 2, 4, 6, 9, 12, 15, 202, 203, 204], "unexpect": 0, "place": [0, 5, 44, 75, 76], "e": [0, 1, 3, 4, 5, 6, 9, 12, 35, 46, 50, 52, 58, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 170, 172, 174, 175, 179, 184, 197, 198, 199, 200, 201, 202, 203, 204], "g": [0, 3, 4, 5, 6, 9, 12, 28, 29, 30, 35, 46, 50, 51, 52, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 170, 175, 197, 198, 199, 200, 201, 202, 203, 204], "transfer": [0, 16, 19, 26, 27, 34, 35, 37, 40, 45, 51, 52, 164, 165, 166, 167, 168, 170, 181, 182, 183, 185, 186, 187, 188, 193, 195, 196, 198, 201, 202, 203, 204], "neglig": 0, "though": [0, 5, 10], "25": [0, 12, 16, 19, 21, 25, 26, 27, 28, 34, 35, 95, 96, 98, 99, 100, 101, 106, 109, 150, 179, 180, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204], "6th": 0, "workshop": 0, "avail": [0, 1, 5, 9, 14, 18, 37, 41, 44, 70, 76, 77, 149, 150], "index": [0, 5, 9, 11, 29, 30, 35, 69, 76, 77, 82, 103, 107], "http": [0, 1, 3, 5, 8, 9, 12, 21, 47, 79, 100, 101, 104, 105, 109, 110, 112, 114, 115, 116, 118, 124, 144, 150, 151], "org": [0, 1, 3, 5, 8, 9, 12, 21, 79, 102, 104, 109, 110, 112, 114, 115, 118, 123, 124, 150, 151], "simpli": [0, 5, 16, 61, 198, 199, 200, 201, 204], "pip": [0, 3, 5, 9, 10], "natur": [0, 1, 11, 123, 199], "notabl": [0, 43, 70], "meet": 0, "standard": [0, 2, 11, 14, 16, 33, 34, 35, 40, 76, 77, 126, 162, 197, 199, 200, 201, 202], "2016": [0, 3, 9, 79, 92, 108, 156], "its": [0, 3, 5, 6, 9, 12, 56, 70, 77, 107, 128, 171, 172, 197, 198, 199, 200, 201], "redesign": 0, "core": [0, 3, 4, 5, 7, 9, 12, 155, 173, 174, 175, 176, 177, 179, 182, 197, 198, 199, 200, 203], "actual": [0, 13, 14, 46, 103, 126, 128, 150, 151, 176, 191, 197, 198, 199, 201, 202, 203, 204], "necessari": [0, 5, 16, 19, 48, 61, 69, 191, 199, 203], "someth": [0, 43, 44, 50, 69, 70, 88], "well": [0, 1, 10, 12, 14, 17, 18, 34, 35, 37, 40, 43, 44, 70, 71, 72, 77, 113, 117, 123, 128, 131, 162, 172, 174, 191, 197, 198, 199, 201, 203, 204], "collect": [0, 5, 12, 21, 25, 29, 30, 32, 35, 109, 172, 174, 181, 197, 200], "either": [0, 18, 38, 70, 83, 94, 119, 150, 151, 176, 191, 197, 198, 203], "introduct": 0, "ad": [0, 4, 8, 43, 44, 58, 76, 88, 149, 155, 204], "below": [0, 8, 12, 13, 15, 17, 18, 44, 61, 70, 83, 103, 198, 199, 203, 204], "explain": [0, 9], "fashion": [0, 95, 96, 115], "simpl": [0, 6, 9, 10, 11, 13, 26, 27, 34, 35, 72, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 115, 122, 123, 124, 127, 128, 129, 130, 143, 144, 145, 146, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "spatial": [0, 9, 16, 18, 19, 26, 27, 34, 40, 52, 57, 93, 94, 95, 96, 98, 99, 100, 101, 109, 111, 112, 113, 114, 115, 117, 118, 119, 124, 128, 131, 143, 162, 164, 166, 168, 171, 172, 175, 181, 185, 186, 187, 193, 196, 198, 199, 201, 203, 204], "discret": [0, 8, 13, 18, 47, 57, 92, 93, 94, 95, 96, 103, 104, 105, 107, 111, 112, 114, 115, 118, 119, 124, 128, 143, 171, 172, 196, 197, 203, 204], "formul": [0, 11, 34, 110, 113, 117, 125, 131, 152, 153, 154, 155, 156, 158, 159, 160, 197], "move": [0, 70, 71, 199], "mlsdc": [0, 3, 9, 12, 34, 52, 66, 67, 183, 184, 191, 192, 201, 202, 203, 204], "inclus": [0, 1, 41], "two": [0, 10, 11, 12, 13, 16, 33, 34, 37, 41, 49, 52, 55, 70, 72, 76, 78, 79, 92, 95, 96, 98, 99, 102, 104, 105, 106, 108, 111, 113, 114, 115, 117, 118, 128, 131, 143, 150, 151, 159, 172, 174, 184, 197, 200, 201, 202, 204], "gener": [0, 6, 7, 9, 11, 15, 17, 23, 33, 35, 41, 49, 50, 57, 59, 61, 88, 98, 99, 111, 112, 114, 124, 143, 149, 154, 155, 191, 199, 200, 203], "input": [0, 10, 13, 50, 59, 62, 112, 114, 154, 198], "nonmpi": [0, 44], "real": [0, 11, 35, 55, 100, 101, 115, 122, 124, 165, 192, 197, 201, 203], "virtual": [0, 3, 9, 12, 67, 201], "parallelisim": 0, "simplifi": [0, 6, 8, 28], "coarsen": [0, 12, 14, 191, 200, 203, 204], "libpfasst": 0, "offer": [0, 198], "plugin": [0, 201, 204], "subpackag": 0, "fulli": [0, 3, 9, 11, 16, 19, 40, 44, 49, 70, 92, 93, 95, 96, 103, 108, 112, 114, 124, 126, 128, 197], "sphinx": [0, 5, 9], "apidoc": [0, 9], "mainli": [0, 9], "realiz": [0, 9, 26, 27, 34, 113, 114, 118, 202], "clearli": [0, 9], "stabl": [0, 150, 197], "barycentr": [0, 8, 47, 62], "interpol": [0, 8, 13, 40, 47, 62, 69, 70, 76, 78, 81, 103, 117, 181, 184, 200, 201], "equidistantspline_right": 0, "spline": 0, "multi": [0, 3, 9, 15, 16, 19, 70, 88, 95, 96, 112, 115, 159, 185, 188, 195, 197, 198, 201, 202], "aka": [0, 16], "singl": [0, 1, 5, 18, 26, 27, 34, 48, 60, 72, 126, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 180, 184, 188, 191, 192, 198, 199, 200, 202, 203, 204], "level": [0, 1, 3, 6, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 40, 44, 45, 46, 51, 52, 53, 66, 67, 69, 70, 75, 76, 77, 82, 84, 149, 150, 155, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "expect": [0, 4, 9, 13, 28, 35, 38, 77, 88, 154, 171, 172, 173, 174, 175, 178, 179, 180, 181, 183, 194, 196, 197, 198, 199, 200, 202, 203, 204], "rework": 0, "intern": [0, 13, 126, 198], "simplic": 0, "member": 1, "leader": 1, "particip": 1, "harass": 1, "free": [1, 26, 27, 34, 35, 69, 177, 179, 193, 198, 199, 203], "experi": [1, 9, 13, 15, 109, 172, 174, 197, 199], "everyon": 1, "regardless": 1, "ag": 1, "bodi": [1, 110, 125], "size": [1, 7, 8, 13, 15, 18, 40, 44, 47, 48, 52, 57, 66, 70, 71, 73, 77, 79, 81, 82, 83, 92, 104, 109, 112, 126, 143, 173, 174, 190, 196, 197, 202, 204], "disabl": [1, 9], "ethnic": 1, "sex": 1, "characterist": [1, 201], "gender": 1, "ident": [1, 50, 92, 94, 104, 114, 118, 119, 128, 143], "express": [1, 103, 106, 117, 127], "educ": [1, 3, 9], "socio": 1, "econom": 1, "statu": [1, 39, 44, 48, 52, 66, 67, 69, 70, 71, 72, 75, 76, 112, 114, 176, 198], "nation": [1, 18], "person": [1, 4], "appear": [1, 11], "race": 1, "religion": 1, "sexual": 1, "orient": [1, 2], "interact": [1, 26, 27, 34, 126, 200], "open": [1, 5, 12, 13, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "welcom": [1, 38, 177, 179, 198, 199], "divers": 1, "healthi": 1, "posit": [1, 12, 16, 19, 21, 25, 28, 32, 35, 89, 109, 110, 116, 121, 125, 126, 152, 160, 179, 184, 186, 187, 191, 192, 193, 199, 200, 201, 203], "demonstr": [1, 9, 10, 18, 193, 194, 198, 199, 200, 201, 202, 203, 204], "empathi": 1, "kind": [1, 41, 47, 88, 96, 199, 201], "peopl": 1, "Being": 1, "respect": [1, 18, 26, 27, 33, 34], "opinion": 1, "viewpoint": [1, 33], "give": [1, 3, 5, 9, 44, 62, 70, 73, 78, 83, 130, 201, 202], "gracefulli": 1, "accept": [1, 5, 11, 69, 88], "construct": [1, 57, 199], "feedback": 1, "apolog": 1, "mistak": 1, "learn": [1, 9], "focus": 1, "just": [1, 5, 9, 29, 30, 34, 35, 44, 50, 61, 71, 76, 77, 81, 88, 115, 145, 146, 147, 149, 170, 178, 191, 199, 203], "individu": [1, 16, 18, 19, 38, 43], "overal": [1, 113, 114, 115, 202], "unaccept": 1, "languag": 1, "imageri": 1, "attent": 1, "advanc": [1, 3, 9, 112, 114, 115, 118, 124, 200], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 4, 5], "polit": 1, "attack": 1, "public": [1, 4, 9, 33, 35, 37, 123], "privat": 1, "publish": 1, "inform": [1, 13, 44, 46, 57, 70, 103, 107, 112, 114, 197, 199, 204], "physic": [1, 12, 126], "email": 1, "address": 1, "explicit": [1, 3, 9, 86, 87, 90, 115, 124, 131, 147, 148, 150, 151, 156, 158, 198], "permiss": 1, "reason": [1, 44, 150, 151, 197, 200], "consid": [1, 5, 11, 13, 33, 50, 94, 119], "inappropri": 1, "profession": 1, "set": [1, 2, 3, 4, 7, 8, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 40, 42, 44, 45, 46, 47, 52, 59, 60, 69, 70, 81, 83, 94, 126, 143, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "clarifi": [1, 13], "take": [1, 3, 9, 10, 11, 18, 29, 30, 34, 35, 43, 49, 50, 71, 82, 94, 143, 172, 174, 191, 197, 200, 203, 204], "appropri": [1, 88, 104, 147, 197], "fair": 1, "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "edit": 1, "reject": 1, "commit": [1, 2, 4, 5, 15], "wiki": [1, 110, 151], "issu": [1, 3, 4, 5, 9, 150], "align": [1, 16, 19], "moder": 1, "appli": [1, 5, 11, 13, 18, 35, 40, 88, 117, 131, 146, 150, 162], "offici": 1, "repres": [1, 7, 176, 197, 198, 201], "mail": 1, "post": [1, 5, 30, 35, 46, 198], "via": [1, 3, 9, 10, 17, 26, 27, 33, 34, 35, 40, 48, 51, 52, 70, 72, 98, 99, 117, 162, 163, 164, 165, 166, 167, 168, 201], "social": 1, "media": 1, "account": [1, 4, 49, 110, 125, 200], "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 13, 103, 107], "instanc": [1, 4, 5, 6, 8, 18, 26, 27, 34, 43, 44, 46, 47, 69, 70, 77, 78, 112, 114, 143, 145, 146, 155, 171, 172, 173, 174, 175, 176, 197, 198], "abus": 1, "otherwis": [1, 5, 44, 46, 77, 82, 106, 131, 191, 197, 203], "report": [1, 5, 9, 109], "review": [1, 18, 33], "investig": [1, 11, 13, 17, 33, 92, 108, 109, 126, 128], "promptli": 1, "fairli": 1, "oblig": 1, "privaci": 1, "secur": 1, "incid": 1, "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "written": [1, 4, 5, 6, 11, 34, 38, 95, 152, 156], "clariti": 1, "around": [1, 77, 197, 198, 204], "explan": [1, 13, 15], "why": 1, "wa": [1, 3, 9, 15, 44, 70, 103, 109, 199], "apologi": 1, "through": [1, 2, 3, 4, 9, 44, 67, 83], "seri": 1, "continu": [1, 2, 3, 4, 6, 7, 9, 15, 62, 70, 72, 81, 88, 113, 114, 115, 117, 131], "unsolicit": 1, "specifi": [1, 5, 7, 11, 16, 19, 37, 52, 60, 191, 200, 201, 203], "period": [1, 26, 27, 29, 30, 34, 35, 62, 92, 93, 94, 95, 96, 98, 99, 100, 101, 105, 106, 112, 114, 115, 119, 124, 131, 143, 164, 165, 166, 167, 168, 187, 193, 196, 201, 203, 204], "channel": [1, 5], "term": [1, 10, 38, 49, 77, 96, 98, 99, 105, 109, 117, 118, 119, 126, 128, 198], "lead": [1, 44, 88, 128, 150, 151, 200, 204], "seriou": [1, 204], "sustain": 1, "pattern": 1, "aggress": [1, 14, 191, 203], "disparag": 1, "www": [1, 3, 9, 12, 21, 109, 110, 115, 144], "code_of_conduct": 1, "html": [1, 5, 110, 115, 124], "inspir": [1, 6, 8, 47, 49], "mozilla": 1, "ladder": 1, "answer": [1, 18], "common": [1, 11, 13, 39], "question": [1, 18, 204], "faq": 1, "translat": 1, "develop": [2, 3, 5, 6, 8, 9, 13, 99, 123], "approach": [2, 3, 5, 9, 34, 35, 143, 191, 201, 203], "fork": [2, 4, 5], "extend": [2, 126, 199], "skip": 2, "furthermor": 2, "branch": [2, 5, 15], "pre": [2, 4, 5, 29, 30, 35, 184, 198, 200], "To": [2, 3, 5, 9, 11, 15, 38, 61, 88, 143, 145, 146, 199, 200, 201, 202, 203], "pleas": [2, 3, 5, 9, 15, 38, 46, 50, 60, 70, 76, 83, 105, 150, 151, 155, 198, 199], "addition": [2, 95], "rule": [2, 5, 6, 47, 49, 69, 70, 76, 149, 150, 151, 160, 199], "enforc": [2, 5, 6, 44, 83], "summar": 2, "convent": [2, 5, 7], "chosen": [2, 200], "name": [2, 3, 4, 5, 7, 9, 12, 16, 19, 25, 32, 42, 44, 45, 48, 56, 58, 88, 126, 190, 197, 198, 199, 201, 202], "function": [2, 4, 5, 7, 8, 11, 12, 13, 16, 19, 21, 25, 28, 29, 30, 32, 35, 43, 44, 46, 47, 48, 50, 52, 55, 59, 60, 62, 66, 67, 70, 71, 73, 76, 77, 79, 81, 87, 88, 93, 98, 99, 100, 101, 103, 106, 107, 112, 113, 114, 115, 116, 117, 124, 126, 131, 147, 152, 155, 156, 170, 171, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "flavor": [2, 3, 9, 71, 76, 82, 184, 200, 202], "applic": [2, 4, 9, 13, 46, 60, 69, 74, 106, 197, 204], "object": [2, 6, 8, 18, 35, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 58, 59, 61, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 89, 90, 100, 101, 104, 112, 114, 115, 118, 124, 135, 140, 141, 149, 150, 162, 179, 180, 184, 198, 199, 200, 204], "program": [2, 5, 26, 27, 34, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "oop": 2, "custom": [2, 6, 8, 14, 40, 46, 48, 50, 51, 52, 53, 152, 153, 156, 158, 159, 160, 162, 165, 199], "inherit": [2, 7, 42, 93, 103, 155], "framework": [2, 203], "addit": [2, 4, 6, 37, 43, 59, 94, 199, 202], "guidelin": [2, 3, 5, 6, 9], "given": [2, 5, 7, 8, 37, 38, 41, 47, 49, 51, 52, 61, 69, 92, 93, 95, 102, 103, 108, 117, 122, 123, 126, 130, 144, 145, 146, 171, 197, 201, 202, 204], "esp": [3, 9], "multilevel": [3, 9, 52], "extens": [3, 9], "intend": [3, 9, 13], "rapid": [3, 9], "purpos": [3, 9, 43, 190, 194, 198, 200, 202, 204], "predictor": [3, 9, 46, 53, 66, 67, 150, 155, 200], "toi": [3, 9, 128], "easili": [3, 6, 9, 12, 18], "variant": [3, 9, 12, 14, 19, 191, 203], "implicit": [3, 9, 11, 16, 19, 26, 29, 30, 33, 34, 35, 86, 87, 90, 93, 95, 96, 103, 112, 114, 115, 117, 131, 147, 149, 150, 154, 155, 156, 158, 159, 186, 187, 192, 193, 196, 198, 201, 203, 204], "imex": [3, 9, 26, 33, 34, 92, 105, 131, 147, 150, 156, 158, 176, 177, 178, 179, 180, 184, 186, 192, 193, 196, 198, 199, 200, 201, 203, 204], "verlet": [3, 9, 12, 21, 25, 32, 148, 151, 152], "diagon": [3, 9, 26, 27, 34, 35, 129, 150], "topic": [3, 9, 18], "outcom": [3, 9, 18], "gitlab": [3, 9], "10": [3, 8, 9, 12, 14, 16, 19, 21, 25, 28, 29, 30, 32, 35, 38, 79, 101, 102, 104, 105, 106, 110, 112, 114, 118, 123, 128, 150, 151, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "host": [3, 4, 9], "com": [3, 9, 47, 105, 151], "often": [3, 9, 18, 70], "choic": [3, 5, 9, 150, 151, 201], "thu": [3, 9, 11, 13, 197, 200], "checkout": [3, 9], "conda": [3, 5, 9, 10], "found": [3, 9, 12, 13, 14, 29, 30, 33, 35, 44, 62, 88, 103, 107, 199, 203], "folder": [3, 5, 9, 10, 38, 203], "etc": [3, 5, 9, 37, 44, 70, 73, 77, 79, 200, 201], "env": [3, 9, 129, 190, 202], "creat": [3, 9, 10, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 35, 38, 46, 61, 103, 113, 117, 131, 143, 171, 172, 173, 174, 175, 182, 193, 194, 197, 198, 199, 200, 201, 203, 204], "yml": [3, 9], "m": [3, 5, 8, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 44, 47, 67, 71, 77, 78, 79, 82, 104, 113, 117, 126, 128, 131, 135, 173, 174, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "correspond": [3, 5, 9, 12, 18, 25, 26, 27, 33, 34, 44, 49, 52, 60, 69, 152, 153, 154, 155, 156, 157, 158, 159, 160, 200, 202, 204], "chose": [3, 9, 123], "pythonpath": [3, 9, 190, 202], "export": [3, 5, 9], "path": [3, 5, 9, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 44, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "root": [3, 5, 9, 11, 13, 55, 86, 88, 90, 107, 190, 202], "want": [3, 5, 9, 18, 44, 69, 70, 71, 74, 76, 77, 82, 88, 151, 198, 202, 204], "import": [3, 5, 6, 7, 8, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 44, 61, 77, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "statement": [3, 5, 9], "assum": [3, 9, 126, 201], "directori": [3, 5, 9, 12, 15, 16, 19, 21, 25, 28, 32, 35, 61, 190, 202], "decent": [3, 9], "compil": [3, 9], "although": [3, 6, 9, 10, 197, 198, 200], "go": [3, 5, 9, 14, 46, 66, 67, 81, 83, 176, 190, 198, 201, 202], "great": [3, 9], "let": [3, 8, 9, 47, 81, 95, 103, 108], "know": [3, 9, 48, 70, 77, 78, 81, 179, 198, 199, 201], "help": [3, 6, 8, 9, 37, 191, 199, 203], "greatli": [3, 9, 18], "appreci": [3, 9], "citat": [3, 9, 38, 150], "robert": [3, 9, 18, 38, 126], "speck": [3, 9, 38, 92, 108, 126, 156], "997": [3, 9, 172, 197], "transact": [3, 9], "mathemat": [3, 9, 145, 146], "softwar": [3, 9, 113, 117, 131], "volum": [3, 9], "45": [3, 9, 128, 192, 203], "doi": [3, 8, 9, 79, 102, 104, 123, 128, 150], "1145": [3, 9, 150], "3310410": [3, 9], "current": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 19, 21, 25, 28, 32, 35, 41, 44, 46, 48, 50, 52, 53, 62, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 155, 158, 190, 198, 202, 204], "zenodo": [3, 9], "origin": [3, 9, 14, 33, 41, 115, 123, 126], "pancetta": [3, 9], "small": [3, 9, 10, 16, 18, 19, 50, 176, 197, 198], "scientist": [3, 9], "interest": [3, 9, 18, 33, 37, 199, 201, 202, 204], "changelog": [3, 9], "evolut": [3, 9, 75], "dearli": [3, 9], "read": [3, 6, 8, 9, 11, 12, 16, 19, 21, 25, 28, 32, 35, 42, 45, 58], "our": [3, 9, 66, 67, 197, 198, 199, 201, 203], "forget": [3, 5, 9], "peek": [3, 9], "nice": [3, 9, 11, 18, 77, 197, 201], "conduct": [3, 5, 9, 128], "receiv": [3, 9, 44, 48, 66, 86, 88, 89, 90], "fund": [3, 9], "european": [3, 9], "high": [3, 9, 12, 14, 16, 19, 21, 25, 28, 32, 35, 77, 126, 146, 186, 187, 191, 192, 193, 196, 200, 201, 203, 204], "joint": [3, 9], "undertak": [3, 9], "ju": [3, 9], "grant": [3, 9], "agreement": [3, 9], "955701": [3, 9], "union": [3, 9], "horizon": [3, 9], "2020": [3, 9], "research": [3, 9], "innov": [3, 9], "programm": [3, 9], "belgium": [3, 9], "franc": [3, 9], "germani": [3, 9], "switzerland": [3, 9], "german": [3, 9], "feder": [3, 9], "ministri": [3, 9], "bmbf": [3, 9], "16hpc047": [3, 9], "helmholtz": [3, 9], "engin": [3, 9], "preparatori": [3, 9], "studi": [3, 9, 33, 35, 70, 109], "hirse_p": [3, 9], "nbsp": [3, 9], "done": [4, 5, 9, 10, 12, 13, 14, 16, 19, 21, 25, 28, 29, 30, 32, 35, 44, 70, 107, 111, 114, 115, 118, 128, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "repositori": [4, 5], "eventu": [4, 6, 9, 61], "mainten": 4, "howev": [4, 5, 6, 18, 44, 77, 94, 128, 150, 151, 200, 204], "highli": [4, 200], "trough": 4, "dedic": [4, 106], "master": [4, 5, 9, 11, 15], "contributor": 4, "propos": 4, "solv": [4, 7, 9, 16, 18, 19, 50, 69, 70, 77, 78, 82, 93, 94, 95, 96, 98, 99, 100, 101, 103, 105, 111, 112, 113, 114, 115, 117, 119, 122, 123, 124, 126, 131, 145, 146, 147, 150, 151, 173, 174, 197, 203], "accuraci": [4, 10, 13, 18, 57, 69, 76, 77, 143, 145, 146, 171, 172, 174, 175, 196, 198, 202, 204], "issue214": 4, "214": 4, "awesome_new_project": 4, "some_featur": 4, "favor": [4, 6], "short": [4, 6, 202], "lower": [4, 5, 18, 35, 70, 76, 78, 83, 150, 151, 154, 199], "case": [4, 5, 6, 11, 13, 35, 38, 73, 103, 107, 111, 112, 197, 200, 201, 202, 204], "underscor": [4, 6], "eas": [4, 6, 52], "interfac": [4, 18, 43, 50, 51, 53, 150, 151, 198], "modifi": [4, 5, 11, 35, 37, 49, 76], "default": [4, 5, 16, 19, 44, 46, 47, 50, 53, 58, 59, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 84, 113, 117, 123, 128, 131, 143, 145, 146, 149, 155, 198, 200], "valu": [4, 6, 7, 8, 10, 11, 12, 13, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 40, 41, 42, 43, 44, 46, 47, 48, 50, 52, 53, 57, 58, 59, 60, 62, 66, 67, 69, 70, 73, 75, 76, 77, 79, 81, 83, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "revis": 4, "happen": [4, 26, 27, 34, 43, 44, 69, 70, 76, 81, 204], "upstream": 4, "repo": 4, "hesit": 4, "regularli": [4, 5, 13], "conflict": 4, "On": [4, 145, 146], "my_featur": 4, "git": [4, 5], "fetch": 4, "synchron": [4, 11], "v": [4, 5, 12, 16, 19, 21, 25, 26, 27, 30, 32, 34, 35, 95, 103, 105, 106, 109, 113, 114, 115, 117, 126, 127, 131, 146, 171, 172, 176, 180, 183, 188, 189, 190, 193, 195, 197, 198, 199, 202, 203, 204], "next": [4, 5, 6, 7, 8, 11, 14, 18, 48, 52, 62, 69, 70, 76, 82, 103, 199, 200, 201, 202, 204], "v5": 4, "v6": 4, "forc": [4, 10, 12, 95, 100, 101, 109, 117, 118, 119, 179, 184, 199, 200, 203], "re": [4, 55, 61, 117, 176, 198, 200], "write": [4, 5, 12, 21, 26, 27, 28, 29, 30, 32, 34, 35, 44, 61, 81, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "script": [4, 9, 10, 11, 16, 37, 38, 61, 123, 202], "anyon": 4, "onc": [4, 5, 26, 27, 34, 44, 69, 77, 78, 190, 202], "roadmap": 4, "mileston": 4, "associ": [4, 8, 47, 48, 143], "down": [4, 13, 15, 66, 67, 106], "Such": 4, "same": [4, 6, 7, 15, 18, 27, 34, 43, 44, 50, 61, 69, 77, 82, 88, 93, 94, 96, 103, 105, 119, 128, 143, 178, 185, 197, 198, 199, 200, 201, 202], "never": [4, 69, 78], "modif": [4, 57], "own": [4, 5, 18, 199], "prefix": [4, 6], "dev": 4, "cannot": [4, 7, 11, 44, 70, 88, 147, 200], "sever": [4, 12, 35, 61, 94, 119], "solut": [4, 6, 7, 10, 11, 13, 15, 16, 18, 19, 26, 27, 28, 33, 34, 35, 48, 50, 61, 69, 70, 73, 74, 76, 77, 78, 81, 84, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 171, 172, 173, 174, 176, 177, 179, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204], "summari": [4, 5, 6, 7, 8], "panel": 5, "divid": [5, 92, 104, 108, 113, 117, 131, 202], "categori": 5, "build": [5, 27, 34, 57, 173, 174, 190, 197, 202], "artifact": 5, "section": 5, "style": [5, 8, 12, 16, 19, 21, 25, 28, 32, 35, 66, 67, 77], "syntax": [5, 6], "complianc": 5, "pep": [5, 6], "comprehens": [5, 69], "bugbear": 5, "diff": [5, 26, 34, 183, 195, 200, 204], "color": [5, 18, 28, 29, 30, 35, 172, 174, 193, 197, 203], "reformat": 5, "command": [5, 15], "line": [5, 6, 11, 18, 38, 69, 127, 143, 172, 173, 174, 190, 197, 202], "120": 5, "charact": [5, 6], "arithmet": 5, "variabl": [5, 7, 12, 25, 43, 44, 50, 52, 58, 61, 69, 70, 71, 73, 75, 76, 77, 78, 81, 84, 104, 150, 151, 190, 199, 201, 202], "empti": [5, 190, 202], "autom": [5, 113, 117, 131], "possibli": [5, 10, 15, 69, 78, 81], "bin": 5, "sh": 5, "stage": [5, 44, 53, 66, 67, 77, 149, 150, 151, 155, 158, 177, 179, 198, 199, 204], "head": 5, "grep": [5, 29, 30, 35], "py": [5, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 103, 129, 152, 153, 156, 158, 159, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "sed": 5, "rev": 5, "pars": 5, "toplevel": 5, "delet": [5, 77], "becaus": [5, 18, 77, 81, 88, 123, 131, 155, 191, 203], "fail": [5, 190, 202], "fi": 5, "chmod": 5, "execut": [5, 38, 61, 202], "Be": [5, 70, 80, 83, 150], "awar": [5, 70, 80, 83, 150, 151], "alter": 5, "editor": 5, "whenev": [5, 43, 69, 197], "r": [5, 8, 16, 19, 28, 29, 30, 35, 40, 62, 92, 95, 96, 98, 99, 100, 101, 103, 104, 106, 108, 110, 111, 112, 114, 118, 125, 126, 127, 128, 143, 162, 204], "messag": [5, 44, 66, 69, 70, 73, 77, 78, 79], "detect": [5, 18, 79], "abort": [5, 26, 27, 34, 74], "ahead": 5, "worri": [5, 202], "obtain": [5, 8, 34, 35, 47, 57, 69, 70, 76, 77, 113], "msg": [5, 44, 74], "commit_msg_fil": 5, "flakeheaven_output": 5, "interpret": 5, "trailer": 5, "echo": 5, "assign": [5, 29, 30, 35, 88, 147], "note": [5, 6, 8, 12, 14, 16, 17, 19, 26, 27, 33, 34, 38, 47, 76, 88, 131, 177, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204], "relat": [5, 33, 40, 44, 50, 51, 52, 53, 162, 199], "constantli": [5, 128], "pep8": [5, 9], "might": [5, 18, 58, 81, 83, 202], "caus": [5, 15, 150, 202], "date": 5, "forg": 5, "pass": [5, 6, 8, 16, 19, 26, 27, 29, 30, 34, 35, 40, 44, 48, 50, 52, 53, 56, 60, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 162, 185, 186, 187, 192, 193, 196, 197, 198, 200, 201, 203, 204], "timeout": 5, "toml": [5, 190, 202], "compon": [5, 10, 11, 13, 86, 87, 88, 90, 102, 115, 122, 123, 130, 144, 145, 146, 159, 204], "test_nod": 5, "test_nodesgener": 5, "legendr": [5, 6, 41, 47, 49, 173, 174, 183, 197, 199, 200], "how": [5, 8, 12, 13, 17, 18, 71, 75, 76, 77, 106, 128, 178, 197, 198, 199, 200, 201, 202, 203, 204], "compar": [5, 10, 13, 16, 19, 26, 27, 28, 33, 34, 35, 61, 69, 70, 77, 78, 79, 98, 99, 171, 172, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204], "indic": [5, 6, 9, 41, 45, 62, 66, 95, 98, 99, 100, 101, 103, 106, 107, 111, 113, 117, 122, 128, 130, 131, 144, 198], "print": [5, 6, 7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "load": [5, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 35, 44, 70, 71, 72, 75, 76, 79, 80, 83, 103, 127], "sitecustom": 5, "process_startup": 5, "durat": 5, "analyz": [5, 33, 34, 37, 197], "henc": [5, 15, 18, 44, 70, 78, 117, 128, 131], "finish": [5, 177, 179, 198, 199], "process": [5, 10, 15, 18, 26, 34, 37, 45, 46, 66, 77, 86, 88, 90, 113, 114, 115, 177, 179, 185, 186, 187, 188, 189, 190, 194, 195, 198, 199, 201, 202, 204], "combin": [5, 11, 12, 77, 190, 193, 200, 202, 203], "htmlcov": 5, "favorit": [5, 150], "browser": 5, "did": [5, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 77, 172, 173, 174, 175, 176, 177, 181, 190, 193, 197, 198, 200, 202, 203], "ignor": [5, 150, 151, 204], "rais": [5, 6, 7, 12, 16, 19, 25, 26, 27, 32, 34, 44, 61, 74, 190, 191, 202, 203], "tool": [5, 37, 198], "pyproject": [5, 190, 202], "conditionali": 5, "loop": [5, 13, 16, 19, 28, 29, 30, 35, 46, 172, 174, 180, 186, 187, 188, 197, 199, 201, 202], "pragma": 5, "cover": 5, "def": [5, 6, 7, 8, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 145, 146, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "preced": 5, "think": 5, "justifi": 5, "built": [5, 6, 61, 150, 151, 198, 204], "task": [5, 202], "doc": [5, 124], "unzip": 5, "rst": 5, "update_apidoc": 5, "b": [5, 16, 19, 26, 27, 28, 29, 30, 34, 35, 69, 77, 78, 104, 113, 114, 115, 117, 126, 131, 135, 141, 145, 146, 179, 184, 185, 186, 187, 193, 196], "Then": [5, 8, 13, 14, 15, 47, 61, 197, 199], "graph": [5, 28, 35], "imag": 5, "still": [5, 35, 44, 69, 78, 147, 150], "miss": [5, 204], "concern": 5, "mostli": [6, 45], "Of": [6, 200], "cours": [6, 44, 200], "strictli": [6, 150, 151], "alwai": [6, 15, 46, 70, 82, 106, 150, 151, 152, 160, 197, 200, 202], "guido": 6, "von": 6, "rossum": 6, "kei": [6, 12, 16, 19, 21, 25, 29, 30, 32, 35, 58, 60, 61, 66, 67, 77, 103, 143, 180, 190, 198, 199, 201, 202], "insight": 6, "state": [6, 13, 35, 100, 101, 103, 106, 107], "foolish": 6, "hobgoblin": 6, "littl": [6, 192, 197, 199, 203], "mind": [6, 50, 57, 78, 88, 147], "find": [6, 9, 13, 15, 18, 29, 30, 35, 44, 62, 172, 174, 197], "optim": [6, 11, 35, 70, 124, 172, 174, 197], "compromis": 6, "someon": [6, 9], "els": [6, 12, 16, 19, 25, 26, 27, 29, 30, 32, 34, 35, 70, 103, 105, 107, 131, 155, 184, 188, 190, 191, 192, 193, 196, 200, 202, 203, 204], "understand": [6, 8, 37], "my": [6, 9], "effect": [6, 70, 123, 128], "kilomet": 6, "aspect": [6, 18], "interdepend": 6, "attract": 6, "lowercas": 6, "variablenamelikethi": 6, "snake_cas": 6, "variable_name_like_thi": 6, "pascalcas": 6, "camelcas": 6, "uppercas": 6, "minu": 6, "try": [6, 14, 15, 69, 70, 76, 190, 197, 202], "stick": 6, "discourag": 6, "advectiondiffus": 6, "except": [6, 15, 44, 45, 49, 128, 190, 202], "suffix": [6, 201], "parametererror": [6, 39, 45], "goe": [6, 44], "argument": [6, 44, 46, 50, 60, 61, 94, 178, 199], "tleft": [6, 41, 173, 174, 197], "quadtyp": 6, "computefejerrul": [6, 39, 47], "nnode": [6, 182, 200], "nodegener": 6, "getorthogpolycoeff": 6, "self": [6, 7, 8, 44, 50, 67, 72, 77, 103, 105, 145, 146, 155], "ncoeff": 6, "abbrevi": 6, "deterior": [6, 13], "rather": [6, 8, 12, 13, 18, 33, 88, 191, 198, 202, 203], "getorthogonalpolynomialcoeffici": 6, "plural": 6, "acronym": 6, "jacobimssdc": 6, "multistepsdcjacobi": 6, "mssdcjacobi": 6, "put": [6, 172, 197, 199, 204], "exception": 6, "special": [6, 9, 11, 12, 25, 32, 34, 96, 111, 112, 117, 179, 180, 184, 199, 200, 204], "mysweep": 6, "initsweep": 6, "getattr": 6, "_initsweep_": 6, "attributeerror": 6, "notimplementederror": [6, 12, 16, 19, 25, 32, 191, 203], "_initsweep_copi": 6, "_initsweep_spread": 6, "_": [6, 8, 11, 12, 21, 25, 32, 47, 105, 115, 117, 124, 131, 177, 179, 196, 198, 199, 204], "chucknorri": 6, "_think": 6, "doubt": 6, "doubl": [6, 70], "__": [6, 177, 179, 198, 199], "left": [6, 11, 12, 14, 21, 25, 32, 33, 41, 47, 57, 62, 94, 95, 96, 98, 99, 100, 101, 111, 112, 117, 118, 119, 121, 126, 143, 156, 172, 174, 197], "__dict__": [6, 58], "node_typ": [6, 41, 49, 173, 174, 183, 197, 200], "equid": [6, 41], "chebi": [6, 41], "quad_typ": [6, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 49, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "gauss": [6, 15, 18, 35, 41, 47, 49, 70, 76, 180, 199, 201, 204], "radau": [6, 16, 19, 26, 27, 28, 29, 30, 34, 35, 41, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "lobatto": [6, 12, 21, 25, 32, 41, 49, 180, 199], "string": [6, 16, 19, 43, 44, 48, 60, 88, 143], "distinguish": 6, "select": [6, 70, 78], "probabl": [6, 126, 203], "keep": [6, 10, 43, 44, 50, 57, 78, 88, 147, 188, 202], "replac": [6, 14, 16, 19, 199, 200], "_initsweep_copy_past": 6, "_initsweep_spread_out": 6, "non": [7, 17, 35, 44, 62, 66, 70, 71, 73, 77, 82, 86, 88, 89, 90, 105, 123, 128, 145, 146, 202], "od": [7, 9, 50, 53, 102, 103, 106, 123, 127, 144, 145, 146, 149, 155, 200, 203], "form": [7, 9, 11, 94, 96, 98, 99, 100, 101, 113, 114, 115, 119, 122, 129, 145, 146, 152, 156, 191, 197, 201, 203], "frac": [7, 8, 47, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 143, 144, 145, 146], "du": [7, 16, 19, 113, 114, 115, 122, 144, 145, 146], "dt": [7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 47, 48, 52, 70, 77, 102, 103, 106, 107, 108, 116, 121, 122, 123, 126, 127, 129, 130, 135, 141, 143, 144, 145, 146, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "quad": [7, 145, 146], "u_0": [7, 11, 108, 123], "vector": [7, 8, 11, 47, 57, 62, 69, 77, 78, 109, 110, 112, 113, 114, 117, 125, 131, 164, 168, 173, 174, 197, 198], "scalar": [7, 8, 33, 47, 108, 113, 117, 131, 145, 152, 156], "hand": [7, 18, 44, 50, 53, 57, 69, 77, 81, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 173, 174, 197, 198, 200, 203], "side": [7, 18, 50, 53, 57, 69, 81, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 173, 174, 197, 198, 200, 203], "ptype": [7, 39, 48, 50, 51, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147], "templat": [7, 37], "lambda": [7, 12, 16, 19, 21, 25, 26, 27, 32, 34, 108, 122, 126, 129, 152, 156, 190, 202], "ct": 7, "complex": [7, 9, 12, 33, 55, 88, 199], "np": [7, 8, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 47, 49, 62, 69, 78, 87, 92, 93, 95, 96, 98, 100, 101, 103, 104, 106, 108, 109, 126, 127, 128, 143, 145, 146, 171, 172, 173, 174, 179, 180, 181, 184, 186, 187, 190, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204], "problemerror": [7, 39, 45], "datatype_class": [7, 10, 64, 172, 177, 179, 197, 198, 199, 203], "mycustomproblem": 7, "datatyp": [7, 10, 44, 86, 88, 167], "dtype_u": [7, 48, 50, 52, 76, 77, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 171, 172, 181, 197, 200], "dtype_f": [7, 48, 50, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 150, 151], "lam": [7, 122], "len": [7, 12, 16, 19, 21, 27, 29, 30, 32, 34, 35, 172, 174, 181, 182, 185, 190, 193, 197, 200, 201, 202, 203], "shape": [7, 40, 88], "must": [7, 8, 47, 50, 61, 88, 103, 200], "1d": [7, 16, 17, 33, 57, 62, 92, 95, 111, 128, 165, 197], "call": [7, 12, 13, 16, 19, 21, 25, 28, 29, 30, 32, 35, 43, 44, 46, 50, 52, 55, 60, 61, 70, 71, 76, 80, 81, 84, 88, 95, 96, 103, 106, 114, 115, 118, 126, 130, 131, 144, 155, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "super": [7, 44, 46, 115, 199], "init": [7, 8, 44, 50, 86, 87, 88, 89, 90, 171, 172, 181, 187, 197, 200, 201], "none": [7, 10, 12, 16, 19, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 43, 44, 46, 48, 50, 57, 58, 60, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 92, 96, 98, 99, 100, 101, 103, 104, 105, 107, 109, 112, 113, 114, 115, 118, 123, 124, 127, 128, 129, 130, 131, 143, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172, 174, 177, 179, 188, 191, 192, 196, 197, 198, 199, 202, 203, 204], "dtype": [7, 88, 179, 180, 184, 199, 200], "regist": [7, 42, 60, 178, 199], "localvar": 7, "true": [7, 12, 16, 19, 26, 27, 32, 34, 38, 44, 48, 56, 62, 77, 95, 103, 107, 111, 115, 122, 123, 124, 128, 130, 143, 144, 145, 146, 150, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "rh": [7, 10, 40, 48, 50, 53, 77, 86, 87, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 135, 141, 143, 144, 145, 146, 147, 149, 155, 162], "eval_f": [7, 50, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 171, 172, 197], "f_init": [7, 50], "list": [7, 8, 9, 10, 12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 43, 44, 47, 48, 50, 52, 56, 57, 60, 61, 62, 67, 69, 71, 77, 78, 79, 82, 88, 95, 98, 99, 100, 101, 103, 104, 107, 109, 113, 129, 131, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 172, 174, 178, 179, 180, 181, 184, 186, 187, 188, 190, 195, 197, 199, 200, 201, 202, 204], "output": [7, 12, 13, 25, 32, 37, 46, 50, 61, 69, 112, 114, 165, 179, 180, 184, 188, 190, 193, 199, 200, 202, 203], "fals": [7, 12, 16, 19, 32, 43, 44, 46, 56, 57, 62, 66, 67, 71, 76, 88, 95, 110, 122, 124, 125, 129, 143, 145, 146, 153, 154, 155, 156, 157, 158, 159, 177, 179, 184, 188, 191, 192, 193, 195, 196, 198, 199, 200, 202, 203, 204], "docstr": 8, "itself": [8, 13, 44, 77, 128, 200, 204], "describ": [8, 9, 11, 16, 17, 19, 37, 103, 110, 113, 114, 115, 125, 178, 199], "lagrangeapproxim": [8, 39, 47], "approxim": [8, 11, 18, 38, 47, 77, 78, 93, 95, 98, 99, 100, 101, 115, 122, 123, 124, 127, 128, 130, 146], "point": [8, 13, 18, 38, 41, 47, 48, 49, 56, 62, 69, 76, 77, 78, 93, 95, 96, 98, 99, 100, 101, 103, 107, 110, 112, 125, 128, 152, 153, 154, 155, 156, 157, 158, 159, 160, 171, 172, 197], "lagrang": [8, 39, 113, 117, 131, 200], "math": [8, 38, 104, 112, 117, 131], "t_j": [8, 47], "leq": [8, 47, 103, 106, 107, 119, 144], "j": [8, 47, 92, 96, 98, 99, 100, 101, 106, 108, 109, 110, 112, 113, 114, 117, 125, 131, 145, 146, 150], "n": [8, 12, 16, 19, 21, 26, 27, 28, 32, 34, 35, 47, 94, 96, 98, 99, 100, 101, 103, 104, 109, 110, 111, 113, 115, 117, 119, 124, 125, 126, 131, 133, 134, 137, 138, 139, 141, 143, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "formula": [8, 47, 176, 198], "displaystyl": [8, 47, 94, 119], "sum_": [8, 11, 47, 109, 110, 119, 125, 126], "w_j": [8, 47], "x_j": [8, 47], "f_j": [8, 47], "prod_": [8, 47, 94, 119], "k": [8, 11, 12, 21, 25, 28, 29, 30, 32, 33, 35, 38, 47, 62, 77, 93, 103, 106, 109, 113, 114, 115, 116, 117, 126, 128, 131, 152, 156, 172, 174, 180, 197, 199], "neq": [8, 47, 110, 125, 126], "x_k": [8, 47], "theori": [8, 47], "dx": [8, 28, 35, 57, 92, 95, 96, 98, 99, 100, 101, 104, 109, 111, 112, 113, 114, 117, 118, 126, 128, 131, 133, 134, 137, 138, 139, 141, 143, 171, 172, 181, 197, 200], "1137": 8, "s0036144502417715": 8, "tupl": [8, 46, 47, 60, 76, 94, 96, 98, 99, 100, 101, 104, 111, 112, 113, 114, 115, 116, 118, 119, 123, 124, 128, 131, 143, 196, 199, 204], "1darrai": [8, 47, 49, 50, 92, 93, 95, 96, 98, 99, 100, 103, 108, 109, 126, 128, 143], "scale": [8, 10, 12, 15, 16, 18, 19, 21, 25, 28, 29, 30, 32, 35, 47, 56, 95, 96, 98, 99, 100, 101, 126, 197, 203], "getinterpolationmatrix": [8, 47], "vec": [8, 16, 19, 47, 90, 92, 95, 96, 103, 104, 106, 107, 108, 112, 113, 114, 117, 118, 124, 127, 128, 129, 131, 143], "tau_m": [8, 47], "p_": [8, 47], "inter": [8, 47, 126], "pinter": [8, 47], "2darrai": [8, 47, 106, 126, 127], "row": [8, 47, 69, 71, 77, 78, 112, 156], "column": [8, 47, 77, 112, 156, 173, 174, 197], "cute": 8, "pictur": [8, 12, 18, 21, 37], "cat": 8, "coverag": 9, "flatten": [9, 50], "steep": 9, "curv": 9, "eight": 9, "briefli": [9, 204], "discuss": [9, 202], "along": [9, 13, 88, 126], "highlight": 9, "shown": [9, 12, 16], "ye": [9, 57], "jupyt": [9, 15], "notebook": [9, 15], "awesom": [9, 41], "statist": [9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 60, 63, 66, 67, 95, 145, 146, 178, 179, 180, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204], "gather": [9, 16, 46, 126, 172, 174, 180, 181, 190, 197, 199, 200, 202, 204], "medium": 9, "group": 9, "bori": [9, 12, 126, 152, 199, 200], "becom": [9, 11, 18, 69, 77, 110, 125, 202], "evolv": 9, "proper": [9, 38], "suppos": [9, 202, 204], "focuss": 9, "beyond": [9, 35, 200], "basi": [9, 12, 106], "present": [9, 43, 184, 200], "readm": 9, "intent": 9, "content": 9, "conform": 9, "attempt": 9, "fast": [9, 92, 93, 98, 99, 100, 101, 108, 115, 124, 126, 156], "wave": [9, 92, 93, 108, 111, 112, 156, 171, 172, 197], "rdc": 9, "ration": 9, "asymptot": 9, "fastest": 9, "bayreuth": 9, "modal": 9, "system": [9, 11, 15, 18, 32, 37, 77, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 150, 151, 173, 174, 197, 199, 203], "differenti": [9, 13, 15, 79, 102, 103, 106, 107, 113, 117, 122, 123, 127, 131, 143, 145, 146, 151], "algebra": 9, "helper": [9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 40, 43, 46, 66, 67, 103, 112, 114, 116, 126, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204], "tabl": [9, 38, 41, 43], "search": 9, "materi": 10, "scienc": [10, 204], "paraphas": 10, "partner": 10, "flexibl": 10, "run_simple_forcing_verif": 10, "2d": [10, 11, 16, 33, 69, 78, 94, 96, 104, 118, 119, 166, 192, 203], "against": [10, 34], "known": [10, 11, 13, 44, 98, 99, 123, 126], "circl": [10, 95, 96, 98, 99, 100, 101], "shrink": [10, 173, 174, 197], "drive": [10, 95, 100, 101, 204], "vanish": [10, 77], "numer": [10, 11, 12, 18, 33, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 131, 144, 145, 146, 147, 151], "scheme": [10, 11, 33, 34, 35, 69, 70, 77, 78, 104, 105, 149, 150, 151, 152, 201, 204], "constant": [10, 77, 96, 98, 99, 110, 116, 117, 125, 126, 152, 201, 204], "dw": [10, 95, 100, 101, 146], "radiu": [10, 17, 33, 35, 95, 96, 98, 99, 100, 101], "stai": [10, 106], "run_temp_forcing_verif": 10, "temperatur": [10, 123, 128], "run_temp_forcing_refer": 10, "These": [10, 15, 35, 37, 44, 150, 151], "serial": [10, 15, 18, 67, 76, 86, 88, 195, 201, 202, 203, 204], "mimick": 10, "larger": [10, 197, 203], "hpc": [10, 37], "machin": [10, 11, 16, 18, 202], "allencahn_monitor_and_dump": 10, "radii": 10, "dump": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 43], "o": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 172, 174, 190, 194, 195, 197, 202, 204], "allencahn_monitor": 10, "allencahn_dump": 10, "visual": [10, 16, 19, 28, 29, 30, 33, 35, 37, 63, 172, 174, 194, 197], "turn": [10, 200], "field": [10, 13, 46, 85, 89, 126, 179, 184, 199, 200], "png": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 63, 172, 174, 194, 195, 197, 204], "visualize_temp": 10, "movi": 10, "run_pysc_ac": 10, "ex": [10, 37], "jobscript": 10, "jureca": [10, 37], "allencahn_mpifft": [10, 91], "problem_class": [10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 50, 59, 64, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "allencahn_temp_mpifft": [10, 91], "thesi": 11, "suffic": [11, 70], "misc": [11, 38], "hookclass_da": 11, "linear_plot": 11, "previous": 11, "npy": 11, "axi": [11, 38, 126, 172, 174, 197], "loglog_plot": 11, "logarithm": 11, "commonli": 11, "semilogy_plot": 11, "y": [11, 38, 100, 101, 102, 105, 114, 118, 121, 172, 174, 197], "simple_da": 11, "analyt": [11, 49, 92, 122, 171, 172, 173, 174, 197], "pendulum": 11, "veri": [11, 12, 13, 14, 16, 19, 34, 50, 107, 150, 177, 179, 197, 198, 199, 201], "solvabl": 11, "synchronous_machin": 11, "attach": [11, 199], "infinit": 11, "bu": 11, "undergo": 11, "torqu": 11, "disturb": 11, "transistor_amplifi": 11, "transistor": 11, "amplifi": 11, "world": [11, 193, 203], "situat": [11, 200], "run_convergence_test": 11, "mention": [11, 15, 33], "run_iteration_test": 11, "behaviour": [11, 70, 123, 149], "residu": [11, 33, 43, 53, 63, 69, 70, 72, 77, 80, 112, 114, 117, 128, 155, 157, 158, 176, 177, 178, 179, 191, 194, 195, 198, 199, 200, 203], "fully_implicit_dae_playground": 11, "arena": 11, "synchronous_machine_playground": 11, "fully_implicit_da": 11, "represent": 11, "aris": [11, 13, 46, 95, 111, 122, 130, 143, 144], "jacobian": [11, 35, 49, 50, 112, 114, 128], "partial_": 11, "singular": [11, 144], "impli": [11, 61, 203], "deriv": [11, 14, 34, 43, 46, 49, 57, 77, 88, 92, 95, 104, 116, 128, 131, 143, 144, 145, 146, 147, 156], "denot": [11, 76, 93, 95, 98, 99, 100, 101, 103, 108, 115, 116, 117, 119, 124, 131], "isol": 11, "picard": [11, 38, 152, 153, 154, 155, 156, 158, 159, 160], "ordinari": [11, 13, 15, 79, 102, 103, 106, 107, 123, 127, 145, 146], "henceforth": 11, "cast": 11, "unknown": [11, 77, 95, 96, 98, 99, 100, 101, 104, 116], "int_0": 11, "tu": 11, "tau": [11, 40, 48, 162, 191, 203], "d": [11, 14, 28, 29, 35, 88, 92, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 121, 123, 125, 127, 129, 130, 143, 146, 190, 202], "tild": 11, "delta": [11, 29, 30, 35, 47, 95, 96, 98, 99, 100, 101, 105, 108, 111, 112, 113, 114, 115, 124, 131], "t_": [11, 106, 123, 126], "t_m": [11, 101], "int_": [11, 47, 113, 117, 131], "discretis": [11, 128, 143], "obviou": [11, 14], "mathbf": 11, "q": [11, 29, 30, 35, 53, 113, 126, 150, 151, 152, 155, 156, 158, 173, 174, 197], "l": [11, 28, 29, 30, 35, 62, 76, 93, 98, 99, 100, 101, 103, 115, 124, 150, 172, 174, 175, 176, 182, 197, 198, 200], "_l": 11, "low": 11, "euler": [11, 35, 104, 149, 150, 152, 153, 156, 158, 160, 187, 201], "_0": 11, "begin": [11, 44, 126, 146, 177, 179, 198, 199, 202], "pmatrix": [11, 146], "t_1": 11, "dot": [11, 27, 34], "t_2": 11, "clear": [11, 199], "repeatedli": 11, "recalcul": [11, 13], "reformul": [11, 117, 131], "carri": [11, 44], "u_": [11, 109], "familiar": 11, "scipi": [11, 14, 47, 50, 92, 95, 96, 98, 99, 123, 124, 127, 128, 129, 130, 146, 173, 174, 197], "3rd": 12, "harmon": [12, 25, 116], "oscil": [12, 14, 25, 116, 130], "henon": [12, 25], "heil": [12, 25, 121], "hamiltonian_output": [12, 25, 32], "monitor": [12, 13, 202], "deviat": [12, 179, 180, 181, 184, 199, 200], "exact": [12, 16, 19, 26, 27, 28, 34, 35, 50, 76, 77, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 147, 173, 174, 176, 177, 179, 181, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "hamiltonian": [12, 21, 25, 32, 109, 116, 121, 125], "100": [12, 16, 19, 25, 29, 30, 32, 35, 88, 95, 96, 102, 103, 107, 111, 113, 114, 115, 122, 123, 127, 130, 177, 179, 180, 181, 184, 198, 199, 200], "processor": [12, 18, 21, 32, 188, 191, 192, 193, 202, 203], "full": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 37, 41, 50, 110, 113, 114, 124, 128, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "simple_problem": [12, 25], "defaultdict": [12, 21, 25, 32], "plot_help": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 54], "plt_helper": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "stats_help": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 54, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204], "get_sort": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 54, 60, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204], "filter_stat": [12, 21, 25, 32, 54, 60, 178, 199], "controller_class": [12, 16, 19, 21, 25, 26, 28, 29, 30, 32, 34, 35, 64, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "harmonicoscil": [12, 25, 91], "harmonic_oscil": [12, 25, 91, 116], "henonheil": [12, 25, 91], "henon_heil": [12, 25, 91, 121], "sweeper_class": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 64, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "transfer_class": [12, 21, 25, 26, 27, 32, 34, 64, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204], "transferparticles_nocoars": [12, 21, 25, 32, 161, 184, 200], "particles_to_particl": [12, 21, 25, 32, 161, 170, 184, 200], "setup_harmon": [12, 25], "everyth": [12, 21, 25, 32, 41, 131, 175, 182, 198, 200], "dict": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 42, 43, 44, 46, 52, 59, 60, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 103, 109, 123, 126, 143, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "controller_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 43, 66, 67, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "level_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "restol": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "1e": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 61, 94, 95, 96, 102, 103, 104, 107, 111, 112, 114, 115, 118, 119, 122, 123, 124, 128, 130, 143, 145, 146, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "sweeper_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 69, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "num_nod": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 41, 49, 69, 150, 151, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "initial_guess": [12, 16, 19, 21, 25, 26, 27, 32, 34, 150, 151, 177, 179, 192, 193, 196, 198, 199, 203, 204], "zero": [12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 50, 77, 103, 106, 128, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "problem_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "amp": [12, 25, 116], "step_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "maxit": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 80, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "50": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 131, 178, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204], "hook_class": [12, 21, 25, 28, 32, 35, 177, 179, 180, 184, 196, 198, 199, 200, 204], "logger_level": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 69, 177, 178, 179, 180, 183, 184, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "fill": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 53, 126, 149, 150, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "easi": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "hierarchi": [12, 21, 25, 28, 32, 35, 66, 67, 155, 176, 177, 178, 179, 180, 182, 184, 185, 191, 198, 199, 203], "space_transfer_class": [12, 16, 19, 21, 25, 26, 27, 32, 34, 40, 52, 162, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 200, 201, 202, 203, 204], "setup_henonheil": [12, 25], "run_simul": [12, 21, 25, 32, 178, 180, 192, 196, 199, 203, 204], "prob": [12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 112, 114, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "arg": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 50, 74, 88, 94, 171, 172, 173, 174, 176, 188, 190, 191, 192, 197, 198, 202, 203], "str": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 42, 43, 44, 47, 49, 53, 56, 57, 58, 60, 61, 63, 69, 70, 73, 76, 77, 78, 79, 94, 98, 99, 100, 101, 113, 117, 119, 128, 131, 143, 149, 155, 158, 181, 190, 191, 193, 200, 202, 203], "t0": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 43, 66, 67, 113, 117, 173, 174, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "tend": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 43, 44, 66, 67, 71, 77, 82, 83, 173, 174, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "num_proc": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 66, 67, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "maxmeanit": [12, 25, 32], "elif": [12, 16, 19, 25, 26, 27, 28, 29, 30, 32, 34, 35, 191, 196, 203, 204], "instanti": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 43, 44, 50, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "finest": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 52, 66, 67, 70, 76, 77, 82, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "uinit": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "u_exact": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 144, 145, 146, 147, 172, 173, 174, 176, 177, 178, 179, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "uend": [12, 16, 19, 21, 25, 28, 29, 30, 32, 34, 35, 48, 152, 153, 154, 155, 156, 158, 159, 160, 173, 174, 176, 177, 178, 179, 180, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204], "stat": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 43, 46, 60, 63, 66, 67, 177, 178, 179, 180, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204], "u0": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 43, 52, 66, 67, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 126, 127, 128, 129, 130, 131, 135, 141, 143, 144, 145, 146, 147, 173, 174, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "filter": [12, 16, 19, 21, 25, 27, 28, 29, 30, 32, 34, 35, 60, 178, 179, 180, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 204], "iter_count": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 178, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 201, 202, 203, 204], "niter": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 50, 176, 178, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "sortbi": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 60, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204], "item": [12, 16, 19, 21, 25, 27, 28, 32, 34, 35, 60, 178, 179, 180, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 204], "2f": [12, 16, 19, 21, 25, 28, 32, 35, 176, 178, 181, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "2i": [12, 16, 19, 21, 25, 28, 32, 35, 172, 174, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 203, 204], "mean": [12, 13, 14, 15, 16, 18, 19, 21, 25, 28, 32, 35, 76, 77, 83, 88, 103, 106, 118, 128, 155, 186, 187, 191, 192, 193, 196, 201, 203, 204], "rang": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 103, 112, 128, 171, 172, 174, 181, 182, 185, 186, 187, 191, 192, 193, 196, 197, 200, 201, 203, 204], "ptp": [12, 16, 19, 21, 25, 28, 32, 35, 186, 187, 191, 192, 193, 201, 203], "max": [12, 16, 19, 21, 25, 28, 32, 35, 72, 94, 119, 172, 174, 186, 187, 191, 192, 193, 194, 197, 201, 203, 204], "min": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 172, 174, 182, 186, 187, 191, 192, 193, 194, 197, 200, 201, 203, 204], "int": [12, 16, 19, 21, 25, 28, 32, 35, 41, 44, 46, 47, 48, 49, 57, 62, 66, 70, 71, 77, 82, 86, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 128, 130, 131, 143, 144, 145, 146, 152, 155, 156, 181, 186, 187, 191, 192, 193, 200, 201, 203], "argmax": [12, 16, 19, 21, 25, 28, 32, 35, 186, 187, 191, 192, 193, 201, 203], "argmin": [12, 16, 19, 21, 25, 28, 32, 35, 186, 187, 191, 192, 193, 201, 203], "std": [12, 16, 19, 21, 25, 28, 32, 35, 186, 187, 191, 192, 193, 201, 203], "var": [12, 16, 19, 21, 25, 28, 32, 35, 186, 187, 191, 192, 193, 201, 203], "float": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 41, 43, 44, 48, 49, 50, 52, 56, 57, 61, 70, 71, 74, 77, 82, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 186, 187, 188, 191, 192, 193, 201, 202, 203], "assert": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "fname": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 63, 172, 174, 177, 179, 188, 189, 190, 193, 194, 197, 198, 199, 202, 203, 204], "dat": [12, 16, 19, 21, 25, 32], "wb": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "close": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 70, 82, 143, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "isfil": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 172, 174, 194, 195, 197, 204], "show_result": [12, 16, 19, 21, 25, 32], "cwd": [12, 16, 19, 21, 25, 28, 32, 35, 190, 202], "rb": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "extract": [12, 21, 25, 32, 60], "extract_stat": [12, 21, 25, 32], "err_hamiltonian": [12, 21, 25, 32], "append": [12, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 62, 172, 174, 197], "mpl": [12, 16, 19, 21, 25, 28, 32, 35], "setup_mpl": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 54, 56], "newfig": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 54, 56], "textwidth": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 56], "238": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "96": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "89": [12, 21, 25, 28, 29, 30, 32, 35], "rearrang": [12, 21, 25, 32], "err_ham": [12, 21, 25, 32], "ham": [12, 21, 25, 32, 109, 116, 121, 125], "plt": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 172, 174, 197], "semilogi": [12, 21, 25, 32], "lw": [12, 21, 25, 28, 29, 30, 32, 35], "label": [12, 21, 25, 28, 29, 30, 32, 35, 172, 174, 197], "7e": [12, 25], "08": [12, 16, 19, 25, 26, 27, 29, 30, 34, 35, 61, 96, 107, 110, 128, 176, 177, 178, 179, 181, 183, 191, 192, 193, 196, 198, 199, 200, 203, 204], "larg": [12, 13, 18, 21, 25, 26, 27, 32, 33, 34, 82, 194, 195, 197, 204], "xlabel": [12, 21, 25, 28, 29, 30, 32, 35, 172, 174, 197], "ylabel": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 172, 174, 197], "legend": [12, 21, 25, 28, 29, 30, 32, 35, 172, 174, 197], "loc": [12, 21, 25, 28, 29, 30, 32, 35, 172, 174, 197], "center": [12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 94, 95, 111, 119, 128, 143, 177, 179, 184, 187, 196, 198, 199, 200, 201, 204], "bbox_to_anchor": [12, 21, 25, 32], "_hamiltonian": [12, 25, 32], "savefig": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 54, 56, 172, 174, 197], "pdf": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 124, 172, 174, 197], "pgf": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "__name__": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "__main__": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "slightli": [12, 33, 123, 199, 200], "movement": 12, "planet": [12, 110, 125], "acceler": [12, 50, 69, 85, 89, 109, 110, 116, 121, 125, 126], "due": [12, 17, 18, 33, 117, 200, 202, 203], "gravit": [12, 110, 125], "outersolarsystem": [12, 32, 91], "six": [12, 125], "outer": [12, 32, 35, 125], "sun": [12, 106, 110, 125], "mass": [12, 50, 110, 113, 116, 117, 125, 126, 131, 158, 191, 203], "inner": [12, 41, 171, 172, 197], "jupit": [12, 125], "saturn": [12, 125], "uranu": [12, 125], "neptun": [12, 125], "pluto": [12, 125], "fullsolarsystem": [12, 32, 91], "earth": [12, 110], "moon": [12, 110], "15": [12, 14, 26, 27, 34, 44, 69, 172, 177, 179, 180, 182, 185, 187, 192, 195, 197, 198, 199, 200, 201, 203, 204], "per": [12, 16, 19, 29, 30, 35, 57, 89, 143], "solar_system": [12, 32], "mpl_toolkit": [12, 32], "mplot3d": [12, 32], "axes3d": [12, 32], "full_solar_system": [12, 32, 91, 110], "outer_solar_system": [12, 32, 91, 110, 125], "setup_outer_solar_system": [12, 32], "spread": [12, 26, 27, 32, 34, 44, 66, 67, 71, 81, 82, 84, 177, 179, 198, 199], "sun_onli": [12, 32, 110, 125], "setup_full_solar_system": [12, 32], "10000": [12, 21, 32, 94, 119, 143, 177, 198], "1000": [12, 21, 32, 106, 108, 128, 145, 146], "19": [12, 32, 150, 186, 192, 201, 203], "_out": [12, 32], "txt": [12, 21, 26, 27, 28, 32, 34, 35, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "w": [12, 16, 19, 21, 26, 27, 28, 32, 34, 35, 40, 49, 104, 113, 128, 131, 146, 162, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 194, 195, 197, 198, 199, 200, 201, 202, 204], "4e": [12, 16, 19, 26, 27, 28, 32, 34, 35, 173, 178, 192, 193, 196, 197, 199, 203, 204], "fig": [12, 32, 33, 38, 50, 105], "figur": [12, 14, 17, 18, 28, 29, 30, 32, 35, 50, 56, 61, 105, 172, 174, 197, 204], "ax": [12, 28, 32, 35, 38, 172, 174, 197], "add_subplot": [12, 32], "111": [12, 32], "3d": [12, 32], "npart": [12, 21, 32, 109, 126, 179, 180, 184, 199, 200], "ndim": [12, 32, 94, 115, 119, 143, 196, 204], "nstep": [12, 21, 32, 186, 187, 196, 201, 204], "po": [12, 21, 32, 89, 126, 179, 199], "idx": [12, 21, 32], "enumer": [12, 21, 32], "wrong": [12, 16, 19, 32, 66, 67, 190, 202], "dimens": [12, 32, 57, 87, 88, 89, 94, 96, 104, 115, 118, 119, 124, 128, 131, 143, 196, 200, 204], "_posit": [12, 32], "06": [12, 16, 19, 26, 27, 32, 34, 94, 119, 128, 150, 172, 176, 177, 178, 179, 180, 186, 192, 197, 198, 199, 201, 203], "74": [12, 32], "75": [12, 26, 27, 32, 34, 186, 187, 188, 189, 190, 194, 195, 196, 201, 202, 204], "56": [12, 32], "18": [12, 26, 27, 32, 34, 38, 192, 195, 203, 204], "02": [12, 26, 27, 32, 34, 93, 104, 150, 179, 192, 199, 203], "37": [12, 32], "40": [12, 32, 79, 178, 192, 195, 199, 203, 204], "54": [12, 32], "famou": 12, "fput": [12, 21, 109], "fermipastaulamtsing": [12, 21, 91], "limit": [12, 17, 35, 38, 70, 71, 74, 82, 83, 172, 174, 193, 197, 203], "until": [12, 17, 33, 69, 106, 176, 188, 198, 202], "refer": [12, 13, 14, 15, 16, 19, 40, 44, 50, 51, 61, 76, 79, 82, 92, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 124, 126, 127, 128, 131, 145, 146, 150, 162], "fermi_pasta_ulam_tsing": [12, 21, 91, 109], "hamiltonian_and_energy_output": [12, 21], "setup_fput": [12, 21], "12": [12, 21, 27, 28, 34, 35, 94, 95, 96, 102, 111, 115, 119, 122, 128, 129, 143, 145, 146, 150, 172, 174, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "2048": [12, 21, 109], "alpha": [12, 21, 49, 103, 105, 109, 126, 135, 141, 149], "energy_mod": [12, 21, 109], "reproduc": [12, 14, 15, 21, 37], "scholarpedia": [12, 21, 109], "articl": [12, 21, 109, 110], "ulam_nonlinear_lattice_oscil": [12, 21, 109], "fput_out": [12, 21], "runtim": [12, 17, 21, 33, 74, 200], "timing_run": [12, 16, 19, 21, 178, 191, 192, 193, 196, 199, 203, 204], "took": [12, 21, 176, 196, 198, 204], "4f": [12, 16, 19, 21, 191, 192, 193, 196, 203, 204], "46": [12, 21], "6e": [12, 21, 171, 173, 175, 177, 183, 184, 197, 198, 200], "fput_hamiltonian": [12, 21], "energy_step": [12, 21], "mode": [12, 21, 76, 109], "th": [12, 21, 94, 103, 109, 110, 119, 125, 126], "fput_energi": [12, 21], "16": [12, 21, 26, 27, 34, 94, 118, 119, 143, 172, 174, 179, 180, 186, 187, 192, 195, 196, 197, 199, 201, 203, 204], "fput_posit": [12, 21], "83": [12, 21], "475": [12, 21], "42": [12, 21], "47": [12, 21], "2245": [12, 21], "deal": [13, 173, 174, 190, 197, 198, 199, 200, 202], "dc": 13, "microgrid": 13, "techniqu": 13, "dynam": [13, 33, 103, 104, 107, 184, 200], "discontinu": [13, 103], "prove": [13, 18], "sign": [13, 103, 107, 131], "restart": [13, 18, 44, 46, 66, 67, 70, 71, 81, 82, 104, 178, 199], "occur": [13, 15, 18, 107], "subinterv": [13, 103], "inher": 13, "restrict": [13, 40, 48, 51, 52, 62, 162, 163, 164, 165, 166, 167, 168, 169, 170, 191, 200, 203], "regard": 13, "consumpt": 13, "household": 13, "voltag": [13, 103, 106, 127], "smaller": [13, 14, 145, 146], "target": [13, 18, 44, 52, 66, 86, 88, 89, 90], "duti": [13, 106], "cycl": [13, 106], "typic": [13, 18, 107, 201], "behav": 13, "seen": [13, 15, 106, 111, 112, 200], "capacitor": [13, 103, 106, 127], "coil": 13, "settl": 13, "background": 13, "serv": [13, 103, 127], "transmiss": [13, 127], "transport": 13, "domain": [13, 18, 33, 92, 95, 98, 99, 100, 101, 104, 105, 106, 111, 112, 128, 197], "illustr": [13, 103], "circuit": [13, 103], "guettel": 14, "klein": 14, "equidist": [14, 35, 41, 62], "barycentricinterpol": 14, "mybarycentricinterpol": 14, "blend": 14, "rest": [14, 95, 96, 198], "resolut": [14, 94, 111, 112, 113, 114, 115, 117, 118, 119, 124, 128, 131, 143, 200], "van": [14, 15, 130, 145, 146], "der": [14, 15, 130, 145, 146], "pol": [14, 15, 130], "vanderpol_refer": 14, "vari": [14, 69, 199, 202], "maximum": [14, 43, 70, 71, 72, 74, 95, 96, 102, 103, 104, 111, 112, 114, 118, 122, 123, 128, 130, 143, 144, 145, 146, 150, 151, 176, 198], "vanderpol_error_test": 14, "straightforward": [14, 198, 199, 204], "vanderpol_mlsdc_pfasst_test": 14, "20": [14, 28, 29, 30, 35, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 191, 193, 197, 198, 199, 200, 201, 203], "bitflip": 15, "factor": [15, 18, 70, 75, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147], "radiat": 15, "conveni": [15, 48, 197], "latest": [15, 100, 101, 115], "strategi": [15, 35, 200, 204], "adjust": [15, 38, 81, 83, 172, 174, 197], "product": [15, 35, 117, 131, 164, 168, 197], "hot": [15, 70, 79], "rod": [15, 70, 79], "design": 15, "pure": 15, "detector": [15, 79], "soft": [15, 18, 79], "fault": [15, 18, 79], "tri": 15, "recov": 15, "lorenz": [15, 50, 91, 146], "attractor": [15, 123], "thorough": [15, 197], "duplic": 15, "pilin": [15, 91], "electr": [15, 89, 126], "good": [15, 18, 201, 203], "sweep": [15, 18, 34, 37, 46, 48, 53, 66, 67, 70, 73, 76, 77, 79, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 177, 179, 182, 198, 199, 200, 204], "last": [15, 44, 70, 76, 77, 78, 82, 84, 150, 151, 155, 157, 200, 201], "higher": [15, 49, 50, 77, 113, 117, 131, 150, 171, 175, 183, 191, 197, 198, 200, 203], "embed": [15, 70, 72, 75, 76, 78, 80, 150], "extrapol": [15, 70, 78], "li": 15, "top": [15, 18, 50, 105, 123], "fewer": [15, 70, 200], "block": [15, 18, 26, 27, 34, 44, 46, 63, 66, 67, 70, 71, 76, 82, 86, 88, 89, 90, 191, 202, 203, 204], "seidel": [15, 18, 70, 76], "nake": 15, "ey": [15, 104, 173, 174, 197], "navig": 15, "mpirun": [15, 190, 192, 202, 203], "work_precis": 15, "fault_stat": 15, "run_vdp": 15, "run_quench": 15, "run_ac": 15, "run_schroeding": 15, "paper_plot": 15, "semi": [16, 19, 33, 76, 95, 96, 98, 99, 100, 101, 112, 114, 115, 124, 128], "inexact": [16, 18, 19, 28, 35, 68, 69], "isdc": 16, "comparison": 16, "win": 16, "sdc_showdown": [16, 19], "sdc_timing_fish": [16, 19], "pickl": [16, 19, 28, 29, 30, 35], "generalizedfisher_1d_petsc": [16, 19, 91], "petsc_fisher_multiimplicit": [16, 19, 91, 112], "petsc_fisher_fullyimplicit": [16, 19, 91, 112], "petsc_fisher_semiimplicit": [16, 19, 91, 112], "generic_implicit": [16, 19, 26, 27, 28, 29, 34, 35, 148, 155, 175, 182, 183, 187, 188, 195, 196, 198, 200, 201, 202, 204], "imex_1st_ord": [16, 19, 148, 157, 158, 176, 177, 178, 185, 186, 191, 192, 193, 196, 198, 199, 201, 203, 204], "multi_implicit": [16, 19, 148], "setup_paramet": [16, 19], "relev": [16, 19, 44, 198, 199], "nsweep": [16, 19, 26, 27, 34, 152, 156, 177, 179, 192, 193, 196, 198, 199, 203, 204], "q1": [16, 19, 159], "lu": [16, 19, 26, 27, 28, 29, 34, 35, 175, 182, 183, 186, 187, 188, 192, 193, 195, 196, 198, 200, 201, 202, 203, 204], "q2": [16, 19, 159], "qi": [16, 19, 26, 27, 28, 29, 30, 34, 35, 150, 151, 154, 156, 175, 177, 179, 182, 183, 186, 187, 188, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204], "nu": [16, 19, 26, 27, 28, 29, 30, 34, 35, 93, 96, 98, 99, 111, 112, 117, 118, 119, 131, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "nvar": [16, 19, 26, 27, 28, 29, 30, 34, 35, 92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 111, 112, 114, 115, 119, 124, 128, 143, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "2049": [16, 19], "lambda0": [16, 19, 28, 29, 30, 35, 111, 112], "interv": [16, 19, 28, 29, 30, 35, 41, 47, 48, 77, 95, 111, 112, 126, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173, 174, 176, 178, 197, 198, 199], "nlsol_tol": [16, 19, 112, 114], "nlsol_maxit": [16, 19, 112, 114], "lsol_tol": [16, 19, 112, 114], "lsol_maxit": [16, 19, 112, 114], "space_transfer_param": [16, 19, 26, 27, 34, 40, 51, 52, 162, 181, 182, 183, 185, 186, 187, 188, 193, 195, 196, 200, 201, 202, 203, 204], "finter": [16, 19, 184, 191, 200, 203], "mesh_to_mesh_petsc_dmda": [16, 19, 161, 169, 193, 203], "run_sdc_vari": [16, 19], "bool": [16, 19, 41, 43, 44, 46, 48, 57, 60, 62, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 95, 100, 101, 103, 107, 110, 111, 115, 122, 124, 125, 128, 130, 144, 145, 146, 155, 157, 188, 191, 192, 202, 203], "nor": [16, 19], "incomplet": [16, 19], "stuff": [16, 19, 44, 77], "uex": [16, 19, 26, 27, 28, 34, 35, 176, 177, 179, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 204], "err": [16, 19, 28, 35, 171, 172, 173, 174, 175, 176, 177, 179, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 201, 202, 203, 204], "ab": [16, 19, 26, 28, 34, 35, 171, 172, 174, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204], "count": [16, 17, 19, 26, 27, 29, 30, 34, 35, 43, 44, 50, 95, 103, 107, 123, 126, 130, 144, 178, 187, 188, 190, 195, 198, 199, 200, 201, 202, 204], "snes_itercount": [16, 19, 114], "ksp_itercount": [16, 19, 118], "snes_ncal": [16, 19, 114], "ksp_ncall": [16, 19, 118], "sec": [16, 19, 191, 192, 193, 203], "pde": [16, 18, 19, 115, 131, 193, 203], "2e": [16, 19, 171, 175, 177, 193, 197, 198, 203], "05": [16, 19, 27, 28, 34, 35, 61, 104, 131, 176, 177, 178, 179, 180, 181, 188, 192, 194, 198, 199, 200, 202, 203, 204], "match": [16, 19, 79, 193, 203], "toler": [16, 19, 33, 50, 61, 69, 70, 72, 73, 79, 80, 94, 95, 96, 102, 103, 104, 111, 112, 114, 118, 119, 122, 123, 128, 130, 143, 144, 145, 146, 191, 193, 199, 200, 203, 204], "pkl": [16, 19, 28, 29, 30, 35], "xcoord": [16, 19], "sorted_data": [16, 19], "revers": [16, 19, 174, 197], "tup": [16, 19, 190, 202], "height": [16, 19, 56], "bar": [16, 19], "xtick": [16, 19, 28, 35, 172, 174, 197], "rotat": [16, 19], "save": [16, 19, 28, 29, 30, 35, 38, 48, 61, 172, 174, 197], "beautifi": [16, 19, 28, 35, 172, 174, 197], "driver": [16, 19, 66, 67], "timings_sdc_variants_fish": [16, 19], "sdc_timing_grayscott": [16, 19], "grayscott_2d_petsc_period": [16, 19, 91], "petsc_grayscott_multiimplicit": [16, 19, 91, 114], "petsc_grayscott_fullyimplicit": [16, 19, 91, 114], "petsc_grayscott_semiimplicit": [16, 19, 91, 114], "dv": [16, 19, 113, 114, 115, 126, 146], "01": [16, 19, 26, 28, 29, 30, 34, 35, 104, 106, 113, 115, 131, 150, 179, 180, 192, 199, 203], "09": [16, 19, 29, 30, 35, 113, 115, 123, 124, 130, 176, 177, 178, 179, 183, 187, 196, 198, 199, 200, 201, 204], "086": [16, 19, 113, 115], "128": [16, 19, 26, 27, 34, 95, 96, 98, 99, 100, 101, 117, 128, 131, 187, 191, 192, 201, 203], "gs_refer": [16, 19], "viewer": [16, 19], "createbinari": [16, 19], "3e": [16, 19, 26, 34, 180, 199], "run_refer": [16, 19], "view": [16, 19, 76, 88], "timings_sdc_variants_grayscott": [16, 19], "heat": [17, 29, 30, 34, 35, 117, 118, 119, 128, 143, 150, 186, 191, 196, 199, 200, 201, 203, 204], "advect": [17, 18, 26, 27, 29, 30, 34, 35, 92, 93, 94, 104, 143, 187, 196, 204], "stiff": [17, 26, 27, 33, 34, 35, 50, 130, 131, 145, 146, 201], "conv_test_to0": 17, "conv_test_toinf": 17, "smoother": [17, 204], "eigenvalu": 17, "smoother_specrad_heatmap": 17, "heatmap": 17, "pfasst_conv_test": 17, "pfasst_conv_linf": 17, "diffus": [17, 26, 27, 34, 93, 98, 99, 100, 101, 105, 111, 112, 113, 114, 115, 117, 118, 119, 124, 131, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "teh": [17, 162], "aim": 18, "whatev": [18, 44, 50, 69, 70, 71, 73, 77, 79, 81, 197, 198], "clemson": 18, "univers": [18, 109], "argonn": 18, "laboratori": 18, "forschungszentrum": 18, "juelich": 18, "umbrella": 18, "jlesc": 18, "web": [18, 112, 114, 118], "ampl": 18, "opportun": 18, "sebastian": [18, 38], "goetschel": 18, "martin": 18, "weiser": 18, "hardwar": 18, "trend": 18, "memori": [18, 77], "bound": 18, "resourc": [18, 112, 114, 118], "perhap": 18, "wise": 18, "spent": 18, "access": [18, 51, 67, 88, 164, 165, 166, 167, 168, 172, 174, 176, 197, 198, 199, 201], "interconnect": 18, "slower": 18, "pint": 18, "concurr": 18, "effici": [18, 70, 81], "ideal": 18, "candid": 18, "benefit": 18, "sum": [18, 35, 55], "evalu": [18, 41, 49, 50, 53, 77, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 119, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 158, 159, 160, 200], "intermedi": [18, 77, 107], "substanti": 18, "random": [18, 98, 99], "decomposit": [18, 35], "allot": 18, "expens": [18, 200], "lossi": 18, "greater": [18, 103], "lossless": 18, "abl": 18, "afford": 18, "desir": [18, 70, 71, 76, 82], "earli": 18, "trigger": 18, "costli": [18, 200], "notic": [18, 70], "endless": 18, "progress": 18, "accordingli": [18, 81], "measur": [18, 199], "reduct": [18, 28, 35], "footprint": 18, "manag": [18, 48, 149], "underwood": 18, "sz3": 18, "compressor": 18, "docker": 18, "togeth": [18, 191, 198, 203], "immedi": [18, 76, 204], "decompress": 18, "everi": [18, 44, 69, 77, 78, 80, 81, 82], "captur": 18, "downsid": 18, "verifi": [18, 37], "stall": 18, "dash": 18, "repeat": 18, "showcas": 18, "suffer": 18, "establish": 18, "remain": [18, 197], "manner": 18, "benefici": 18, "fermi": [21, 109], "pasta": [21, 109], "ulam": [21, 109], "tsingou": [21, 109], "plotgmrescounter_boussinesq": [23, 33], "compare_to_matrixbas": [26, 34], "pathlib": [26, 27, 34, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "advectionequation_nd_fd": [26, 27, 29, 30, 34, 35, 91, 187, 196, 201, 204], "advectionnd": [26, 27, 29, 30, 34, 35, 91, 94, 187, 196, 201, 204], "heatequation_nd_fd": [26, 27, 29, 30, 34, 35, 91, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 195, 196, 197, 198, 199, 200, 201, 202, 204], "heatnd_unforc": [26, 27, 29, 30, 34, 35, 91, 119, 171, 172, 173, 174, 175, 181, 182, 183, 188, 195, 197, 198, 200, 202, 204], "testequation_0d": [26, 27, 34, 91], "testequation0d": [26, 27, 34, 91, 129, 147], "transfermesh": [26, 27, 34, 161, 181, 182, 183, 185, 186, 187, 188, 195, 196, 200, 201, 202, 204], "mesh_to_mesh": [26, 27, 34, 161, 164, 168, 181, 182, 183, 185, 186, 187, 188, 195, 196, 200, 201, 202, 204], "transfermesh_nocoars": [26, 27, 34, 161, 196, 204], "mesh_to_mesh_nocoars": [26, 27, 34], "controller_matrix_nonmpi": [26, 27, 34], "diffusion_setup": [26, 27, 34], "par": [26, 27, 34, 39, 44], "trick": [26, 34, 35, 95, 126, 186, 192, 193, 196, 201, 203, 204], "activ": [26, 34, 66, 67, 69, 71, 77, 82, 177, 179, 186, 188, 192, 193, 196, 198, 199, 201, 202, 203, 204], "coeffici": [26, 27, 34, 49, 77, 93, 103, 106, 117, 118, 119, 122, 127, 131, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "freq": [26, 27, 29, 30, 34, 35, 93, 94, 118, 119, 143, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "frequenc": [26, 27, 34, 94, 104, 106, 118, 119, 143, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "127": [26, 27, 34, 95, 111, 115], "63": [26, 29, 30, 34, 35, 188, 195, 202, 204], "degre": [26, 27, 29, 30, 34, 35, 57, 92, 111, 113, 114, 115, 117, 131, 143, 147, 171, 173, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 193, 197, 198, 199, 200, 201, 202, 203], "freedom": [26, 27, 29, 30, 34, 35, 57, 92, 111, 113, 114, 115, 117, 131, 143, 171, 173, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 193, 197, 198, 199, 200, 201, 202, 203], "bc": [26, 27, 29, 30, 34, 35, 57, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 127, 128, 129, 130, 143, 144, 145, 146, 147, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 204], "dirichlet": [26, 27, 29, 30, 34, 35, 94, 95, 104, 113, 117, 118, 119, 143, 164, 168, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 188, 195, 197, 198, 199, 200, 201, 202, 204], "rorder": [26, 27, 34, 181, 182, 183, 185, 186, 187, 188, 193, 195, 196, 200, 201, 202, 203, 204], "iorder": [26, 27, 34, 181, 182, 183, 185, 186, 187, 188, 193, 195, 196, 200, 201, 202, 203, 204], "all_to_don": [26, 34, 177, 179, 188, 198, 199, 202], "advection_setup": [26, 27, 34], "64": [26, 27, 29, 30, 34, 35, 101, 187, 191, 196, 201, 203, 204], "stencil_typ": [26, 27, 29, 30, 34, 35, 57, 94, 119, 128, 143, 177, 187, 196, 198, 201, 204], "testequation_setup": [26, 34], "1j": [26, 27, 34], "whole": [26, 27, 34, 38, 192, 198, 199, 203], "ilim_left": [26, 27, 34], "ilim_right": [26, 27, 34], "rlim_left": [26, 27, 34], "rlim_right": [26, 27, 34], "ilam": [26, 27, 34], "logspac": [26, 27, 34], "rlam": [26, 27, 34], "rl": [26, 27, 34, 106, 127], "il": [26, 27, 34], "propag": [26, 27, 33, 128], "compare_control": [26, 27, 34], "handler": [26, 27, 34], "testequ": [26, 27, 34], "valueerror": [26, 27, 34], "vali": [26, 27, 34], "nwork": [26, 27, 34], "controller_mat": [26, 34], "controller_nomat": [26, 34], "uend_mat": [26, 27, 34], "stats_mat": [26, 27, 34], "uend_nomat": [26, 34], "stats_nomat": [26, 34], "err_mat": [26, 34], "err_nomat": [26, 34], "mat": [26, 27, 34, 112, 114], "nomat": [26, 34], "convert": [26, 34, 106, 178, 180, 184, 195, 199, 200, 204], "iter_counts_mat": [26, 27, 34], "iter_counts_nomat": [26, 34], "par_list": [26, 27, 34], "1e02": [26, 27, 34], "mkdir": [26, 27, 34, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "parent": [26, 27, 34, 46, 131, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "exist_ok": [26, 27, 34, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "comparison_matrix_vs_nomat_detail": [26, 34], "0e": [26, 27, 34], "0681e": [26, 34], "07": [26, 34, 176, 177, 178, 179, 184, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 202, 203, 204], "1102e": [26, 34], "0169e": [26, 34], "04": [26, 34, 95, 96, 98, 99, 100, 101, 150, 171, 173, 175, 176, 177, 178, 179, 186, 187, 192, 193, 197, 198, 199, 201, 203], "4409e": [26, 34, 196, 204], "00": [26, 27, 28, 34, 35, 179, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204], "8573e": [26, 34], "1781e": [26, 34], "9363e": [26, 34], "4433e": [26, 34], "2887e": [26, 34], "7511e": [26, 34], "22": [26, 34, 143, 177, 179, 198, 199], "0000e": [26, 27, 34, 196, 204], "3996e": [26, 34], "17": [26, 34, 35, 187, 192, 201, 203], "7992e": [26, 34], "0019e": [26, 34], "compare_to_propag": [27, 34], "scalar_equation_setup": [27, 34], "equal": [27, 34, 77, 103, 112, 114, 118], "prescrib": [27, 33, 34, 198], "prop": [27, 34], "build_propagation_matrix": [27, 34], "err_prop_ex": [27, 34], "linalg": [27, 34, 173, 174, 179, 197, 199], "norm": [27, 33, 34, 74, 173, 174, 179, 197, 199], "err_mat_ex": [27, 34], "err_mat_prop": [27, 34], "comparison_matrix_vs_propagator_detail": [27, 34], "2542e": [27, 34], "0509e": [27, 34], "6141e": [27, 34], "03": [27, 28, 34, 35, 128, 176, 177, 178, 179, 184, 192, 198, 199, 200, 203], "7400e": [27, 34], "6858e": [27, 34], "2878e": [27, 34], "3515e": [27, 34], "8462e": [27, 34], "6312e": [27, 34], "8449e": [27, 34], "21": [27, 34, 187, 201], "4603e": [27, 34], "0384e": [27, 34], "4674e": [27, 34], "parallelsdc": [28, 29, 30, 35], "nonlinear_playground": [28, 35], "generalizedfisher_1d_fd_implicit_jac": [28, 35], "generalized_fisher_jac": [28, 35], "linearized_implicit_fixed_parallel": [28, 35], "linearized_implicit_fixed_parallel_prec": [28, 35], "linearized_implicit_parallel": [28, 35], "option": [28, 35, 47, 70, 76, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 128, 129, 130, 131, 143, 144, 145, 146, 204], "255": [28, 35, 183, 186, 200, 201], "newton_maxit": [28, 29, 30, 35, 95, 96, 102, 103, 107, 111, 115, 122, 123, 128, 130, 144, 145, 146, 196, 204], "newton_tol": [28, 29, 30, 35, 80, 95, 96, 102, 103, 107, 111, 115, 122, 123, 128, 130, 144, 145, 146, 196, 204], "fixed_time_in_jacobian": [28, 35], "sweeper_list": [28, 35], "parallelsdc_nonlinear_out": [28, 35], "686e": [28, 35], "xvalu": [28, 29, 30, 35, 93, 95, 96, 98, 99, 109, 143, 171, 172, 197], "later": [28, 29, 30, 35, 172, 197, 198, 199], "parallelsdc_results_graph": [28, 35], "plot_graph": [28, 35], "338": [28, 35], "xlim": [28, 35, 172, 174, 197], "ylim": [28, 29, 30, 35, 172, 174, 197], "markeredgecolor": [28, 29, 30, 35], "ncol": [28, 29, 30, 35, 172, 174, 197], "parallelsdc_fish": [28, 35], "newton_vs_sdc": [28, 35], "errreductionhook": [28, 35], "err_reduction_hook": [28, 35], "2047": [28, 35], "dt_list": [28, 35, 174, 197], "error_reduct": [28, 35], "error_pr": [28, 35], "error_pre_iter": [28, 35], "error_post": [28, 35], "error_post_iter": [28, 35], "rate": [28, 33, 35, 113, 114, 115], "error_reduction_data": [28, 35], "color_list": [28, 29, 30, 35], "red": [28, 35], "blue": [28, 35], "green": [28, 35], "marker_list": [28, 29, 30, 35], "label_list": [28, 35], "newton": [28, 80, 95, 96, 102, 103, 107, 110, 111, 112, 114, 115, 122, 123, 124, 125, 128, 130, 144, 145, 146], "zip": [28, 29, 30, 35, 195, 196, 204], "loglog": [28, 35, 172, 174, 197], "quadrat": [28, 35, 109], "set_xtick": [28, 35], "gca": [28, 35], "invert_xaxi": [28, 35], "1e0": [28, 35], "parallelsdc_fisher_newton": [28, 35], "preconditioner_playground": [29, 35], "namedtupl": [29, 30, 35, 46, 172, 174, 181, 197, 200], "generalizedfisher_1d_fd_implicit": [29, 30, 35, 91], "generalized_fish": [29, 30, 35, 91, 111], "van_der_pol_implicit": [29, 30, 35, 91], "vanderpol": [29, 30, 35, 91, 130], "id": [29, 30, 35, 92, 94, 104, 114, 118, 119, 128, 143, 172, 174, 181, 197, 200], "qd_type": [29, 30, 35, 53], "qd_list": [29, 30, 35], "ie": [29, 35, 177, 179, 187, 191, 198, 199, 201, 203], "iepar": [29, 30, 35], "qpar": [29, 30, 35], "min3": [29, 30, 35], "min_gt": [29, 30, 35], "setup_list": [29, 30, 35], "fisher": [29, 30, 35, 111, 112], "param_list": [29, 30, 35], "decid": [29, 30, 35, 77, 81, 103, 203], "mu": [29, 30, 35, 38, 116, 130, 152], "exit": [29, 30, 35], "parallelsdc_iterations_precond": [29, 35], "plot_iter": [29, 30, 35], "qd_type_list": [29, 30, 35], "isinst": [29, 30, 35], "precondition": [29, 30, 76, 150, 151, 155, 187, 201], "five": [29, 35], "qd": [29, 30, 35], "semilogx": [29, 30, 35], "linestyl": [29, 30, 35], "lambda_0": [29, 30, 35, 111, 112], "60": [29, 30, 35, 146, 178, 191, 192, 199, 203], "parallelsdc_preconditioner_": [29, 35], "preconditioner_playground_mpi": [30, 35], "generic_implicit_mpi": [30, 35, 148], "basetransfer_mpi": [30, 35], "base_transfer_mpi": [30, 35], "comm": [30, 35, 44, 55, 60, 66, 71, 72, 74, 82, 86, 88, 89, 90, 100, 101, 105, 112, 114, 115, 118, 124, 155, 190, 192, 193, 202, 203], "get_siz": [30, 35, 190, 193, 202, 203], "base_transfer_class": [30, 35, 52, 200], "get_rank": [30, 35, 190, 192, 193, 202, 203], "parallelsdc_iterations_precond_mpi": [30, 35], "parallelsdc_preconditioner_mpi_": [30, 35], "comm_world": [30, 35, 100, 105, 112, 114, 115, 118, 124, 190, 192, 193, 202, 203], "solar": [32, 110, 125], "explor": [33, 198, 204], "sisdc": 33, "rk": [33, 150, 151], "dirk": [33, 128, 132, 135, 136, 141], "v2": 33, "therefor": [33, 110, 125, 198, 199, 201], "omit": [33, 88, 200], "fwsw": 33, "suffici": [33, 70, 128], "reach": [33, 70, 83, 130, 176, 198, 204], "stabil": [33, 38, 98, 99, 104, 145, 146, 204], "configur": [33, 38, 58, 204], "dispers": 33, "versu": 33, "multiscal": 33, "gmre": [33, 94, 104, 124, 143, 196, 199, 204], "achiev": [33, 77, 199, 200, 202, 203], "twogrid": 34, "propagaton": 34, "composit": [34, 44, 82], "compactli": 34, "smooth": [34, 126, 179, 184, 199, 200], "coars": [34, 37, 40, 51, 52, 62, 66, 67, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 184, 191, 200, 203, 204], "allinclusive_matrix_nonmpi": 34, "concept": 34, "exploit": 34, "resembl": 34, "notat": [34, 123, 156, 202], "produc": [34, 35, 41, 49, 113, 114, 115, 194, 195, 200, 204], "anoth": [34, 96, 202, 204], "excit": 34, "goal": [35, 37], "robust": 35, "across": [35, 44, 61, 63, 66, 67, 74, 75, 77, 146, 155], "easiest": [35, 203], "far": [35, 70, 92, 93, 98, 99, 100, 101, 104, 105, 108, 113, 115, 117, 124, 131, 197, 200, 201, 202, 204], "triangular": [35, 150, 151, 154], "jacobi": [35, 70, 76, 112, 146, 204], "minimz": 35, "minim": [35, 128], "map": 35, "aforement": 35, "indi": 35, "commerci": 35, "aggreg": 35, "art": 35, "academ": 35, "subscript": 35, "plan": [35, 165], "lamdt": 35, "imaginari": 35, "surprisingli": 35, "symmetri": 35, "kroneck": [35, 197], "naiv": 35, "decoupl": [35, 197], "incl": 35, "nonetheless": 35, "jube": 37, "vampir": 37, "cube": 37, "cd": 37, "jsc": 37, "run_simple_forcing_benchmark": 37, "trace": 37, "manual": [37, 38, 44], "instrument": 37, "region": 37, "primarili": 37, "xml": 37, "jube_run_pysdc_ac_spac": 37, "jube_run_pysdc_ac_spacetim": 37, "run_pysdc_ac": 37, "tmpl": 37, "stand": 37, "alon": 37, "run_pysdc_ac_scorep": 37, "howto": 37, "bsd": 38, "licens": 38, "util": [38, 42, 44, 50, 60, 61, 71], "akramov2023spectr": 38, "titl": 38, "author": 38, "ikrom": 38, "akramov": 38, "g\u00f6tschel": 38, "michael": 38, "minion": 38, "daniel": [38, 126], "ruprecht": [38, 92, 108, 126, 156], "year": 38, "eprint": 38, "2310": 38, "08352": 38, "archiveprefix": 38, "arxiv": [38, 124], "primaryclass": 38, "na": 38, "harmonic_oscillator_run_st": 38, "kappa_max": 38, "mu_max": 38, "harmonic_oscillator_run_stab_interv": 38, "save_interval_fil": 38, "harmonic_oscillator_run_point": 38, "kappa": 38, "assist": 38, "suitabl": [38, 50, 105], "ensur": [38, 69, 202, 204], "save_points_fil": 38, "penningtrap_run_error": 38, "conv": 38, "run_local_error": 38, "015625": 38, "global": [38, 76, 112], "run_global_error": 38, "147": 38, "148": 38, "global_order_vs_approx_ord": 38, "csv": 38, "k_iter": 38, "horizont": 38, "vertic": [38, 123], "penningtrap_run_hamiltonian_error": 38, "crash": [38, 68], "penningtrap_run_work_precis": 38, "dt_cont": 38, "basetransf": [39, 203], "base_transf": [39, 40, 52, 162, 164, 165, 166, 167, 168, 200], "collbas": [39, 41, 53, 173, 174, 177, 179, 197, 198, 199], "registerparam": [39, 42, 50], "convergencecontrol": [39, 43, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "collocationerror": [39, 45], "communicationerror": [39, 45], "controllererror": [39, 45], "convergenceerror": [39, 45, 74], "dataerror": [39, 45], "readonlyerror": [39, 45], "transfererror": [39, 45], "unlockerror": [39, 45], "entri": [39, 46, 60, 77, 150, 152, 156, 172, 174, 197, 199, 200], "nodeserror": [39, 49], "nodesgener": [39, 49], "workcount": [39, 50, 95, 103, 107, 130], "spacetransf": [39, 170], "space_transf": [39, 51, 52, 163, 164, 165, 166, 167, 168, 169, 170], "fine_level": [40, 52, 162], "coarse_level": [40, 52, 162], "base_transfer_param": [40, 52, 162, 184, 191, 200, 203], "logger": [40, 44, 46, 50, 51, 52, 53, 104, 162, 193, 203], "log": [40, 44, 50, 51, 52, 53, 66, 67, 107, 136, 140, 162, 172, 174, 197, 198, 199, 204], "__par": [40, 48, 51, 52, 53, 162], "static": [40, 41, 55, 72, 126], "get_transfer_matrix_q": 40, "f_node": 40, "c_node": 40, "quickli": [40, 61, 191, 198, 203], "matric": [40, 152, 156, 173, 197], "lagrangian": 40, "nf": [40, 164, 166, 168], "nc": [40, 164, 166, 168], "prolong": [40, 51, 52, 66, 67, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 200], "prolong_f": [40, 162], "reevalu": [40, 69, 162], "fa": [40, 48, 162], "tright": [41, 173, 174, 197], "kwarg": [41, 44, 46, 50, 59, 60, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 88, 94, 119, 124, 147], "polynomi": [41, 47, 49, 77, 78, 147], "chebyshev": 41, "cann": 41, "equival": [41, 44], "equidistantinn": 41, "equidistantnoleft": 41, "collgausslegendr": 41, "collgausslobatto": 41, "collgaussradau_left": 41, "collgaussradau_right": 41, "qmat": [41, 173, 174, 197], "smat": 41, "delta_m": 41, "distanc": [41, 95, 96, 111, 118, 128], "right_is_nod": 41, "left_is_nod": 41, "_parnam": 42, "_parnamesreadonli": 42, "usempi": [43, 71, 76, 82], "abstract": [43, 44, 50, 51, 53, 70], "add_convergence_control": 43, "convergence_control": [43, 44, 196, 204], "allow_doubl": 43, "afterward": [43, 69], "add_hook": 43, "dump_setup": [43, 177, 179, 193, 198, 199, 203], "get_convergence_controllers_as_t": 43, "debug": [43, 44, 202], "track": 43, "getter": [43, 46, 48, 52, 86, 88], "return_stat": [43, 46], "setup_convergence_control": 43, "checkconverg": [43, 68, 72, 177, 179, 198, 199], "care": [43, 71, 77, 94, 150, 202], "criterion": [43, 70], "welcome_messag": [43, 177, 179, 198, 199], "plug": 44, "recv": [44, 66, 67, 89], "buffer": [44, 73, 76, 86, 88, 89], "intracomm": [44, 60, 71, 74, 82], "send": [44, 48, 55, 66, 67, 86, 88, 89, 90], "dest": [44, 86, 88, 89, 90], "rank": [44, 53, 69, 71, 74, 77, 78, 82, 86, 88, 89, 90, 113, 117, 131, 155, 190, 192, 193, 202, 203], "add_vari": 44, "allow_overwrit": 44, "frozen": 44, "destin": 44, "recurs": 44, "By": [44, 78, 82, 198, 202], "overwrit": [44, 69, 112, 114], "outsid": [44, 83], "hard": 44, "forgo": 44, "reset": [44, 46, 48, 56, 66, 67, 69, 70, 71, 73, 76, 176, 198, 199], "check_iteration_statu": [44, 72, 73], "check_paramet": [44, 69, 70, 73, 77, 78, 79], "assumpt": [44, 70, 73, 77, 79], "went": [44, 70, 73, 77, 79, 187, 201], "it_check": [44, 66, 67], "post_iteration_process": [44, 69, 70, 75, 76, 77, 78, 79, 80, 81, 84], "shortcut": [44, 62, 175, 176, 178, 198, 199], "determine_restart": [44, 70, 71, 79], "get_new_step_s": [44, 70, 83], "arbitrari": [44, 70, 87, 103], "criteria": [44, 72], "control_ord": [44, 70, 71], "integ": [44, 47, 103], "print_convergence_control": 44, "info": [44, 177, 179, 198, 199], "post_spread_process": [44, 69, 81, 84], "post_step_process": 44, "pre_iteration_process": [44, 75], "prepare_mpi_datatyp": 44, "prepare_mpi_logical_oper": 44, "logic": [44, 198], "prepare_next_block": [44, 71, 74, 77, 82], "reset_buffers_nonmpi": [44, 71, 73, 76], "imit": [44, 76], "replic": 44, "somebodi": 44, "sent": [44, 204], "reset_status_vari": [44, 69, 70, 71, 75, 76, 77, 78], "restart_block": [44, 66, 67, 70, 76], "reset_vari": 44, "suppli": [44, 46, 50, 56, 60, 69, 73, 83, 103, 105, 155], "overrid": [44, 57, 69, 70, 72, 81, 128], "scan": 44, "being": [44, 128, 131, 180, 199], "prioriti": 44, "noth": [44, 67, 149, 155], "children": 44, "overload": [44, 145, 146], "child": [44, 71, 76, 77, 82, 131], "setup_status_vari": [44, 69, 70, 71, 73, 75, 76, 77, 81], "frozenclass": [44, 48, 52, 54, 58], "status_variab": 44, "thrown": 45, "unlock": 45, "process_sweep": 46, "num_restart": 46, "alia": [46, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 150], "post_step": 46, "level_numb": 46, "filer_recomput": 46, "__num_restart": 46, "__stat": 46, "identifi": [46, 66], "add_to_stat": [46, 66, 67], "metadata": [46, 60], "keyword": [46, 50, 60], "accord": [46, 150, 176, 198], "increment_stat": 46, "increment": [46, 50, 176, 198], "meta_data": 46, "post_comm": 46, "post_iter": 46, "post_predict": 46, "post_run": [46, 177, 179, 198, 199], "post_setup": 46, "post_sweep": [46, 177, 179, 198, 199], "pre_comm": 46, "pre_iter": 46, "pre_predict": 46, "pre_run": 46, "pre_setup": 46, "pre_step": 46, "pre_sweep": 46, "reset_stat": 46, "getintegrationmatrix": 47, "numquad": 47, "legendre_numpi": 47, "tau_": 47, "pair": [47, 150, 172, 174, 197], "legendre_scipi": 47, "fejer": 47, "internali": 47, "dft": 47, "waldvogel": 47, "2006": 47, "quadpi": 47, "nschloe": 47, "nico_schl\u00f6m": 47, "level_index": [48, 176, 198], "__statu": [48, 52], "dof": [48, 174, 181, 182, 196, 197, 200, 204], "uold": [48, 84], "fold": 48, "alloc": 48, "meta": [48, 197, 199], "referenc": [48, 52], "reset_level": 48, "reset_statu": 48, "tag": [48, 66, 86, 88, 89, 90], "Its": [49, 122], "book": [49, 105, 151], "gautschi": 49, "evalorthogpoli": 49, "beta": [49, 70, 109, 123, 149], "orthogon": 49, "recurr": 49, "pi": [49, 93, 94, 98, 99, 106, 117, 118, 119, 127, 171, 172, 181, 197, 200], "oder": 49, "getnod": 49, "locat": 49, "getorthogpolycoeffici": 49, "num_coeff": 49, "gettridiagcoeffici": 49, "tridiagon": 49, "decrement": 50, "essenti": 50, "apply_mass_matrix": [50, 117, 131], "generate_scipy_reference_solut": 50, "eval_rh": 50, "u_init": [50, 96, 98, 105, 107, 116, 123, 126, 127, 128, 129, 130, 145, 146, 147, 179, 180, 184, 199, 200], "t_init": [50, 96, 98, 105, 107, 123, 127, 128, 129, 130, 145, 146, 147], "solve_ivp": 50, "dimension": [50, 62, 92, 93, 95, 96, 98, 99, 100, 101, 104, 105, 111, 112, 113, 114, 115, 117, 118, 119, 124], "reshap": 50, "bdf": 50, "jac": [50, 145], "signatur": 50, "classmethod": [50, 71, 76, 82, 129, 143, 150], "get_default_sweeper_class": [50, 143], "get_fig": [50, 105], "pyplot": [50, 105], "displai": [50, 105], "fine_prob": [51, 163, 164, 165, 166, 167, 168, 169, 170, 181, 200], "coarse_prob": [51, 163, 164, 165, 166, 167, 168, 169, 170, 181, 200], "bundl": [52, 201], "hidden": [52, 198], "setter": [52, 107], "connect_level": 52, "coupl": [52, 88, 197, 203], "init_step": 52, "prev": 52, "reset_step": 52, "corresp": 52, "wrapper": [52, 58, 66, 203], "stepper": 52, "coll": [53, 173, 174, 182, 197, 200], "compute_end_point": [53, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 198], "compute_residu": [53, 149, 155, 158, 176, 198], "belong": [53, 59, 76, 149, 155, 158, 200], "get_qdelta_explicit": 53, "get_qdelta_implicit": 53, "predict": [53, 66, 67, 81, 149, 150, 155, 176, 198, 200], "update_nod": [53, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 198], "nccl_commun": 54, "ncclcomm": [54, 55], "figsiz": [54, 56, 172, 174, 197], "figsize_by_journ": [54, 56], "problem_help": 54, "get_1d_grid": [54, 57], "get_finite_difference_matrix": [54, 57], "get_finite_difference_stencil": [54, 57], "get_step": [54, 57], "pysdc_help": 54, "setup_help": 54, "generate_descript": [54, 59], "get_list_of_typ": [54, 60, 178, 199], "sort_stat": [54, 60, 178, 199], "datacheck": [54, 61], "transfer_help": 54, "border_pad": [54, 62], "continue_periodic_arrai": [54, 62], "interpolation_matrix_1d": [54, 62], "next_neighbor": [54, 62], "next_neighbors_period": [54, 62], "restriction_matrix_1d": [54, 62], "visualization_tool": [54, 194, 195, 204], "show_residual_across_simul": [54, 63, 194, 195, 204], "wrap": 55, "nccl": 55, "allreduc": 55, "sendbuf": 55, "recvbuf": 55, "op": 55, "get_count": 55, "doesn": [55, 75, 77], "get_dtyp": 55, "get_op": 55, "mpi_op": 55, "ratio": [56, 75, 126, 128], "textwdith": 56, "width": [56, 57, 98, 99, 100, 101, 106, 112, 114], "rel": [56, 61, 70, 71, 110, 173, 174, 184, 197, 200], "journal": [56, 115, 124, 126, 145, 146], "text": [56, 69, 104], "rescal": 56, "fit": [56, 150, 151], "6180339887": 56, "filenam": [56, 63, 188, 202], "save_pdf": 56, "save_pgf": 56, "save_png": 56, "font_siz": 56, "left_boundari": 57, "right_boundari": 57, "finit": [57, 77, 94, 95, 96, 111, 113, 117, 118, 119, 128, 131, 143, 197, 203], "dim": [57, 142, 164, 166, 168], "bc_param": 57, "fd": [57, 94, 95, 96, 111, 118, 119, 128, 143, 171, 172, 196, 197, 204], "stencil": [57, 94, 112, 119, 128, 143, 197], "spars": [57, 92, 94, 104, 111, 119, 128, 129, 143, 173, 174, 197], "taylor": [57, 77], "expans": [57, 77], "offset": [57, 86, 88, 89], "element": [57, 113, 117, 128, 131, 197, 203], "freez": 58, "__isfrozen": 58, "wish": 58, "recomput": [60, 77], "raw": 60, "anyth": [60, 70], "transform": [60, 93, 98, 99, 100, 101, 104, 115, 124, 165, 200], "fri": 61, "feb": [61, 143], "41": [61, 150, 192, 203], "43": [61, 186, 187, 201], "filepath": 61, "__file__": 61, "storeandcheck": 61, "plote": 61, "writetojson": 61, "uniqu": 61, "cach": [61, 148, 149], "_dataref": 61, "json": 61, "_data": 61, "tell": [61, 71], "properli": 61, "renam": 61, "newli": 61, "independ": 61, "overwritten": [61, 75, 155, 203], "ref": [61, 103], "rtol": [61, 172, 174, 197], "atol": [61, 196, 204], "wide": 61, "absolut": [61, 70], "pad_typ": 62, "mirror": 62, "pad": 62, "emb": 62, "npdarrai": 62, "arr": 62, "nn": [62, 143], "neighbor": 62, "fine_grid": 62, "coarse_grid": 62, "equidist_nest": 62, "contruct": 62, "nest": 62, "spr": 62, "csc_matrix": [62, 92, 104, 129], "submodul": 64, "convergence_controller_class": [64, 196, 204], "mg": [66, 67], "check_iteration_estim": [66, 68, 196, 204], "catch": [66, 67], "termin": [66, 67, 72, 95, 96, 102, 104, 111, 112, 114, 118, 122, 123, 128, 130, 144], "it_coars": [66, 67], "it_down": [66, 67], "coarsest": [66, 67, 193, 203], "it_fin": [66, 67, 177, 179, 198, 199], "it_up": [66, 67], "talk": [66, 67], "realli": [66, 88, 147, 177, 179, 198, 199, 203], "me": [66, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 144, 146, 147], "recv_ful": [66, 67], "bookkeep": [66, 67], "record": [66, 67, 69, 76], "mssdc": [66, 67, 76, 195, 204], "send_ful": [66, 67], "wait_with_interrupt": 66, "interrupt": [66, 204], "local_ms_run": 67, "local_ms_act": 67, "active_slot": 67, "adaptive_colloc": 68, "adaptivecolloc": [68, 69, 76], "adaptivitybas": [68, 70], "adaptivitycolloc": [68, 70], "adaptivityextrapolationwithinq": [68, 70], "adaptivityforconvergedcollocationproblem": [68, 70], "adaptivitypolynomialerror": [68, 70], "adaptivityrk": [68, 70], "adaptivityresidu": [68, 70], "basic_restart": 68, "basicrestart": [68, 71], "basicrestartingmpi": [68, 71], "basicrestartingnonmpi": [68, 71, 177, 179, 198, 199], "check_converg": 68, "checkiterationestimatornonmpi": [68, 73, 196, 204], "crashbas": [68, 74], "stopatmaxruntim": [68, 74], "stopatnan": [68, 74], "estimate_contraction_factor": 68, "estimatecontractionfactor": [68, 75], "estimate_embedded_error": 68, "estimateembeddederror": [68, 76], "estimateembeddederrorcolloc": [68, 70, 76], "estimateembeddederrorlinearizedmpi": [68, 76], "estimateembeddederrorlinearizednonmpi": [68, 76], "estimate_extrapolation_error": 68, "estimateextrapolationerrorbas": [68, 77], "estimateextrapolationerrornonmpi": [68, 77], "estimateextrapolationerrorwithinq": [68, 77], "estimate_polynomial_error": 68, "estimatepolynomialerror": [68, 78], "hotrod": 68, "newtoninexact": [68, 80], "interpolate_between_restart": 68, "interpolatebetweenrestart": [68, 81], "spread_step_s": 68, "spreadstepsizesblockwis": [68, 82], "spreadstepsizesblockwisempi": [68, 82], "spreadstepsizesblockwisenonmpi": [68, 82, 177, 179, 198, 199], "step_size_limit": 68, "stepsizelimit": [68, 83], "stepsizeslopelimit": [68, 83], "store_uold": 68, "storeuold": [68, 84], "underli": [69, 76], "soon": [69, 81], "length": [69, 103, 105, 200], "feel": 69, "exactli": [69, 70, 201], "speedup": [69, 200], "ware": 69, "matmul": [69, 78], "entir": [69, 78, 88, 128], "axb": [69, 78], "switch_sweep": 69, "yield": [70, 201, 202], "contract": [70, 75], "boost": 70, "boolean": [70, 82, 117], "avoid_restart": 70, "unclear": 70, "get_local_error_estim": 70, "safeti": [70, 204], "compute_optimal_step_s": 70, "e_tol": 70, "e_est": 70, "preset": 70, "subtract": [70, 76, 150, 151], "get_converg": 70, "trigger_restart_upon_nonconverg": 70, "basic": [70, 71, 197, 198, 200, 201, 202, 204], "correl": 70, "emploi": 70, "simpler": [70, 200], "hit": 70, "threshold": [70, 74, 128, 204], "exce": [70, 74, 79, 128], "upper": [70, 83], "fall": [70, 74], "e_tol_low": 70, "halv": [70, 191, 200, 203], "use_restol": 70, "max_restart": [70, 71], "reutrn": 70, "anywai": [71, 191, 203], "95": [71, 177, 179, 181, 192, 198, 199, 200, 203], "lost": 71, "patienc": 71, "get_implement": [71, 76, 82], "retriev": [71, 76, 172, 174, 179, 197, 199], "cl": [71, 76, 82], "step_size_spread": 71, "communicate_converg": 72, "immit": 73, "storag": [73, 77, 103], "communicate_crash": 74, "exceed": 74, "max_runtim": 74, "nan": [74, 95, 111, 122, 130, 144, 145, 146], "thresh": 74, "reiniti": 75, "pretend": [76, 77], "accur": [76, 79, 150], "consecut": [76, 172, 174, 197, 204], "unless": [76, 153, 154, 155, 156, 158, 159], "estimate_embedded_error_seri": 76, "haven": 76, "thought": 76, "error_embedded_estimate_colloc": 76, "adaptive_coll_param": 76, "averag": 76, "get_extrapolation_coeffici": 77, "t_eval": 77, "reflect": [77, 198], "elsewher": 77, "squar": 77, "amount": 77, "overhead": 77, "enough": [77, 149, 176, 177, 198], "prefactor": 77, "accumul": 77, "plu": [77, 181, 184, 200], "lte": 77, "use_adapt": 77, "dens": 77, "cheap": 77, "coeff": [77, 143], "store_valu": 77, "moment": 77, "get_extrapolated_error": 77, "get_extrapolated_solut": 77, "shouldn": 77, "no_storag": 77, "share": [77, 150], "That": [77, 78, 83], "cancel": 77, "matter": 77, "arriv": [77, 198], "sai": [78, 106], "2m": 78, "incorpor": 79, "lightweight": 79, "silent": 79, "corrupt": 79, "guhur": 79, "et": [79, 112, 114, 118], "al": [79, 112, 114, 118], "springer": [79, 104, 105, 106, 113, 117, 131, 151], "1007": [79, 104, 105, 150, 151], "978": [79, 104, 105, 151], "319": [79, 177, 198], "43659": 79, "3_47": 79, "throw": 79, "crucial": [79, 200], "gradual": 80, "refin": [80, 113, 117, 118, 131, 191, 193, 203], "set_maxit": 80, "set_toler": 80, "lvl": 80, "tol": 80, "guess": [81, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147, 204], "choos": [81, 128, 150, 151, 201], "thibaut": 81, "magic": [81, 196, 204], "overrul": 82, "get_step_from_which_to_spread": 82, "new_step": 82, "predecessor": 82, "dt_min": 83, "dt_max": 83, "slope": 83, "u_old": 84, "cupy_mesh": [85, 99], "comp2_cupy_mesh": [85, 86], "imex_cupy_mesh": [85, 86, 99], "fenics_mesh": [85, 113, 117, 131], "rhs_fenics_mesh": [85, 87, 117, 131], "multicomponentmesh": [85, 88], "comp2_mesh": [85, 88, 95, 96, 115], "imex_mesh": [85, 88, 92, 93, 95, 96, 98, 100, 101, 103, 104, 105, 106, 108, 115, 119, 124, 127, 128, 147, 177, 198], "petsc_vec": [85, 112, 114, 118], "petsc_vec_comp2": [85, 90, 112, 114], "petsc_vec_imex": [85, 90, 112, 114, 118], "val": [86, 87, 88, 89, 90, 143], "comp1": [86, 88], "comp2": [86, 88], "stride": [86, 88, 89], "bcast": [86, 88, 90], "broadcast": [86, 88, 90], "irecv": [86, 88, 90], "isend": [86, 88, 89, 90], "forward": [86, 88, 89, 90, 149, 150, 151, 165, 204], "impl": [86, 87, 88, 90, 156, 157], "expl": [86, 87, 88, 90, 128, 156, 157], "expand": 88, "dir": 88, "__getattr__": 88, "importantli": 88, "troubl": 88, "_comm": 88, "magnet": [89, 126, 128], "elec": 89, "magn": 89, "veloc": [89, 92, 104, 109, 110, 116, 121, 125, 126, 131, 151, 152, 160], "vel": [89, 126], "acoustic_help": 91, "boussinesq_help": 91, "acousticadvection_1d_fd_imex": 91, "acoustic_1d_imex": [91, 92], "advectiondiffusionequation_1d_fft": 91, "advectiondiffusion1d_imex": [91, 93], "advectiondiffusion1d_implicit": [91, 93], "allencahn_1d_fd": 91, "allencahn_front_finel": [91, 95], "allencahn_front_fullyimplicit": [91, 95], "allencahn_front_semiimplicit": [91, 95], "allencahn_periodic_fullyimplicit": [91, 95], "allencahn_periodic_multiimplicit": [91, 95], "allencahn_periodic_semiimplicit": [91, 95], "allencahn_2d_fd": 91, "allencahn_fullyimplicit": [91, 96], "allencahn_multiimplicit": [91, 96], "allencahn_multiimplicit_v2": [91, 96], "allencahn_semiimplicit": [91, 96], "allencahn_semiimplicit_v2": [91, 96], "allencahn_2d_fd_gpu": 91, "allencahn_2d_fft": 91, "allencahn2d_imex": [91, 98, 99], "allencahn2d_imex_stab": [91, 98, 99], "allencahn_2d_fft_gpu": 91, "allencahn_imex": [91, 100], "allencahn_imex_timeforc": [91, 100], "allencahn_temp_imex": [91, 101], "auzinger_implicit": [91, 196, 204], "auzing": [91, 102, 196, 204], "battery_implicit": [91, 103], "battery_n_capacitor": [91, 103], "boussinesq_2d_fd_imex": 91, "boussinesq_2d_imex": [91, 104], "brussel": 91, "buckconvert": 91, "buck_convert": [91, 106], "discontinuoustestod": 91, "fastwaveslowwave_0d": 91, "swfw_scalar": [91, 108], "fisher_ful": [91, 112], "fisher_react": [91, 112], "grayscott_1d_fenics_implicit": 91, "fenics_grayscott": [91, 113], "gs_full": [91, 114], "gs_reaction": [91, 114], "grayscott_mpifft": 91, "grayscott_imex_diffus": [91, 115], "grayscott_imex_linear": [91, 115], "grayscott_mi_diffus": [91, 115], "grayscott_mi_linear": [91, 115], "heatequation_1d_fenics_matrix_forc": [91, 191, 203], "fenics_heat": [91, 117, 191, 203], "fenics_heat_mass": [91, 117, 191, 203], "fenics_heat_mass_timebc": [91, 117, 191, 203], "heatequation_2d_petsc_forc": [91, 193, 203], "heat2d_petsc_forc": [91, 118, 193, 203], "heatnd_forc": [91, 119, 176, 177, 178, 185, 186, 196, 198, 199, 201, 204], "heatequation_nd_fd_cupi": 91, "logisticequ": 91, "logistics_equ": [91, 122], "lorenzattractor": [91, 123], "nonlinearschroedinger_mpifft": [91, 192, 203], "nonlinearschroedinger_fully_implicit": [91, 124], "nonlinearschroedinger_imex": [91, 124, 192, 203], "penningtrap_3d": [91, 179, 180, 184, 199, 200], "penningtrap": [91, 126, 179, 180, 184, 199, 200], "quenchimex": [91, 128], "vorticityvelocity_2d_fenics_period": 91, "fenics_vortex_2d": [91, 131], "fenics_vortex_2d_mass": [91, 131], "generic_nd_fd": 91, "genericndimfindiff": [91, 94, 119, 143], "nonlinear_ode_1": 91, "odescalar": 91, "protherorobinson": [91, 145], "odesystem": 91, "chemicalreaction3var": [91, 146], "jacobiellipt": [91, 146], "kap": [91, 146], "protherorobinsonautonom": [91, 146], "polynomial_test_problem": 91, "polynomial_testequ": [91, 147], "polynomial_testequation_imex": [91, 147], "cadv": 92, "order_adv": 92, "waveno": 92, "acoust": [92, 104], "partial": [92, 93, 94, 95, 96, 98, 99, 100, 101, 104, 105, 111, 112, 113, 114, 115, 118, 119, 124, 131, 143], "c_": [92, 104, 138], "equiv": 92, "p_0": 92, "sound": 92, "siam": [92, 108, 145, 146], "sci": [92, 108, 113, 114, 115, 128], "vol": [92, 108, 126], "38": [92, 108, 111, 112, 113, 114, 115, 188, 189, 190, 194, 195, 202, 204], "solve_system": [92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147], "cdot": [92, 95, 96, 103, 104, 106, 107, 108, 112, 113, 114, 117, 118, 124, 126, 127, 128, 129, 131, 143], "abbrev": [92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147], "stepsiz": [92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 127, 128, 129, 130, 131, 143, 144, 145, 146, 147], "256": [93, 113, 114], "unforc": [93, 94, 119, 200], "treat": [93, 95, 96, 98, 99, 100, 101, 105, 112, 114, 115, 117, 128, 131, 203], "wherea": [93, 113, 114, 115], "sin": [93, 94, 98, 99, 102, 117, 118, 119, 171, 172, 181, 197, 200], "omega": [93, 113, 114, 115, 117, 131], "exp": [93, 107, 108, 111, 112, 145, 146], "fourier": [93, 98, 99, 100, 101, 115, 124], "ddx": 93, "gradient": [93, 96], "lap": [93, 98, 99], "laplacian": [93, 95, 96, 98, 99, 105, 124, 171, 172, 197], "512": [94, 119, 143], "lintol": [94, 119, 124, 128, 143, 177, 198], "linit": [94, 119, 124, 128, 143, 177, 196, 198, 204], "solver_typ": [94, 119, 143, 177, 196, 198, 204], "sigma": [94, 119, 123, 177, 198], "nd": [94, 119, 128, 143, 164, 168], "bf": [94, 96, 98, 99, 100, 101, 110, 119, 125, 146], "x_i": [94, 96, 98, 99, 100, 101, 119], "coordin": [94, 100, 101, 115, 124], "central": [94, 118, 198], "cg": [94, 113, 117, 119, 131, 143, 191, 196, 203, 204], "gaussian": [94, 119, 128], "grad": [94, 128], "csc": [94, 111, 119, 128, 143], "won": 94, "sol": [94, 119, 143], "ep": [95, 96, 98, 99, 100, 101], "stop_at_nan": [95, 107, 111, 122, 123, 130, 144, 145, 146], "stop_at_maxit": 95, "inhomogen": 95, "varepsilon": [95, 96, 98, 99, 100, 101], "2u": [95, 100, 101], "d_w": [95, 100, 101], "tanh": [95, 96, 98, 99, 100, 101], "vt": 95, "sqrt": [95, 96, 98, 99, 100, 101, 111, 112, 144], "finel": 95, "laplac": [95, 96, 100, 101, 111, 115, 118, 124], "diag": [95, 129], "uext": 95, "work_count": [95, 103, 107, 123, 126, 130], "counter": [95, 176, 198], "implicitli": [95, 96, 98, 99, 100, 101, 105, 112, 114, 115, 124, 128], "solve_system_1": [95, 96, 112, 114, 115], "solve_system_2": [95, 96, 112, 114, 115], "200": [96, 144, 145, 146, 177, 179, 198, 199], "lin_tol": 96, "lin_maxit": 96, "inexact_linear_ratio": [96, 128], "y_j": [96, 98, 99, 100, 101], "spdiag": 96, "newton_itercount": [96, 144], "lin_itercount": 96, "newton_ncal": [96, 144], "lin_ncal": 96, "conjug": 96, "ac": 96, "init_typ": [98, 99, 100, 101], "checker": [98, 99], "uniform": [98, 99], "tranform": [98, 99, 100, 101], "especi": 99, "cp": 99, "initialis": [100, 101], "ogrid": [100, 101], "k2": [100, 101, 124], "dy": [100, 101, 114, 118], "readthedoc": [100, 101, 115], "io": [100, 101, 115], "en": [100, 101, 110, 115, 116], "tm": 101, "y_1": [102, 123], "y_2": [102, 123], "2_1": [102, 119], "2_2": 102, "co": [102, 117, 118, 119, 123, 145, 146], "2140": 102, "camco": 102, "2015": [102, 113, 117, 126, 131], "ncapacitor": 103, "v_ref": 103, "drain": 103, "h": [103, 104, 107, 121, 137, 138], "v_1": 103, "v_": [103, 106, 127], "i_l": 103, "cr": 103, "r_": [103, 106, 127], "resist": [103, 106, 127], "resistor": [103, 106, 127], "capacit": [103, 106, 127], "ell": [103, 106, 127], "induct": [103, 106, 127], "inductor": [103, 106, 127], "c_n": 103, "nonhomogen": [103, 106, 127], "a_k": [103, 106], "f_k": [103, 106], "n_": [103, 126], "switch_a": 103, "switch_f": 103, "t_switch": [103, 107], "nswitch": [103, 107], "count_switch": [103, 107], "insid": [103, 128], "pintsim": 103, "switch_estim": 103, "v_k": 103, "c_k": 103, "c_1": [103, 106, 127], "v_2": 103, "v_3": 103, "c_2": [103, 106, 127], "c_3": 103, "max_": 103, "satisfi": [103, 118, 191, 203], "geq": [103, 107], "get_problem_dict": 103, "coeffic": 103, "get_switching_info": [103, 107], "switch_detect": [103, 107], "m_guess": [103, 107], "state_funct": [103, 107], "u_adv": [104, 138], "nfreq": [104, 138], "x_bound": 104, "z_bound": 104, "order_upw": 104, "gmres_maxit": 104, "500": [104, 191, 203], "gmres_restart": 104, "gmres_tol_limit": 104, "boussinesq": 104, "z": [104, 111, 112, 126], "300": 104, "order_upwind": 104, "upwind": 104, "bc_hor": [104, 137, 138], "bc_ver": [104, 137, 138], "dimems": 104, "neumann": [104, 128, 143], "xx": 104, "zz": 104, "sp": [104, 173, 174, 197], "d_upwind": 104, "gmres_logg": 104, "durran": 104, "fluid": [104, 123], "appl": 104, "32": [104, 192, 196, 203, 204], "verlag": 104, "york": 104, "2010": 104, "4419": 104, "6412": 104, "reaction": [105, 111, 112, 113, 114, 115, 146], "autonom": [105, 146], "varalpha": 105, "4u": 105, "invert": [105, 203], "link": [105, 151], "642": 105, "05221": 105, "fsw": 106, "c1": [106, 127], "001": [106, 145, 146], "rp": 106, "l1": 106, "c2": [106, 127], "buck": 106, "sw": 106, "f_": [106, 128], "roughli": 106, "percentag": 106, "bmod": 106, "i_": [106, 127], "l_1": 106, "puls": 106, "61": 106, "2012": [106, 113, 117, 131], "gyselinck": 106, "marti": 106, "sabariego": 106, "devic": 106, "steadi": [106, 123], "regim": 106, "electromot": 106, "2013": 106, "approx": 107, "6094379": 107, "t_switch_exact": 107, "theorem": 107, "lambda_": 108, "lambda_f": 108, "gg": 108, "im": 108, "nversion": 108, "vibrat": 109, "spring": [109, 116, 152], "weak": [109, 113, 117, 131, 191, 203], "fpu": 109, "cubic": 109, "u_j": 109, "2_": 109, "v_j": 109, "1955": 109, "lo": 109, "alamo": 109, "la": [109, 202], "1940": 109, "enrico": 109, "segr\u00e9": 109, "ed": 109, "chicago": 109, "press": 109, "1965": 109, "eval_hamiltonian": [109, 116, 121, 125], "eval_mode_energi": 109, "trajectori": [109, 110, 116, 121, 125, 126], "mutual": [110, 125], "influenc": [110, 125], "motion": [110, 123, 125, 126], "law": [110, 125], "m_i": [110, 125], "_i": [110, 125], "m_j": [110, 125], "_j": [110, 125], "gravitation": [110, 125], "m_1": [110, 125], "_1": [110, 125], "aanda": 110, "aa": 110, "2002": 110, "aa1405": 110, "wikipedia": [110, 151], "planetary_mass": 110, "values_from_the_de405_ephemeri": 110, "travel": [111, 112], "kolmogorov": [111, 112], "petrovskii": [111, 112], "piskunov": [111, 112], "mathbb": [111, 112, 126, 143], "lambda_1": [111, 112, 129], "feng": [111, 112], "chao": [111, 112], "soliton": [111, 112], "fractal": [111, 112], "481": [111, 112], "488": [111, 112], "2008": [111, 112], "urrent": 111, "da": [112, 114], "sne": [112, 114], "tempor": [112, 114, 124, 197], "q_": [112, 114, 126], "localx": [112, 114], "xe": 112, "mx": 112, "col": 112, "formfunct": [112, 114], "formjacobian": [112, 114], "same_nonzero_pattern": [112, 114], "sigma_1": 112, "ksp": [112, 114, 118], "satish": [112, 114, 118], "balai": [112, 114, 118], "lisandro": [112, 114, 115, 118, 124], "dalcin": [112, 114, 115, 118, 124], "rodrigo": [112, 114, 118], "paz": [112, 114, 118], "pablo": [112, 114, 118], "kler": [112, 114, 118], "alejandro": [112, 114, 118], "cosimo": [112, 114, 118], "water": [112, 114, 118], "2011": [112, 114, 118], "get_sys_mat": 112, "assembl": [112, 126, 172, 174, 180, 197, 199], "c_nvar": [113, 117, 131, 191, 203], "famili": [113, 117, 131, 191, 203], "substanc": [113, 114, 115], "decai": [113, 114, 115], "feed": [113, 114, 115], "d_u": [113, 114, 115], "d_v": [113, 114, 115], "multipli": 113, "u_t": [113, 117], "v_t": 113, "trail": [113, 117, 131], "galerkin": [113, 117, 131], "synonym": [113, 117, 131], "trial": [113, 117, 131], "functionspac": [113, 117, 131], "w1": 113, "w2": 113, "f1": 113, "tensor": [113, 117, 131], "f2": 113, "autocatalyt": [113, 114, 115], "isotherm": [113, 114, 115], "stir": [113, 114, 115], "tank": [113, 114, 115], "reactor": [113, 114, 115], "isola": [113, 114, 115], "multist": [113, 114, 115], "chem": [113, 114, 115], "eng": [113, 114, 115], "1983": [113, 114, 115], "alna": [113, 117, 131], "blechta": [113, 117, 131], "hake": [113, 117, 131], "johansson": [113, 117, 131], "kehlet": [113, 117, 131], "logg": [113, 117, 131], "richardson": [113, 117, 131], "ring": [113, 117, 131], "rogn": [113, 117, 131], "archiv": [113, 117, 131], "mardal": [113, 117, 131], "dolfin": [113, 117, 131], "t_0": 113, "amat": 114, "pfft": [115, 124], "ku": 115, "kv": 115, "mikael": [115, 124], "mortensen": [115, 124], "david": [115, 124], "key": [115, 124], "multidimension": [115, 124], "chebfun": 115, "grayscott": 115, "kx": 116, "damp": 116, "amplitud": [116, 126], "beltoforion": 116, "de": [116, 151], "nabla": [117, 131], "dirichletbc": 117, "bc_hom": 117, "homogen": 117, "fix_bc_for_residu": 117, "fix_residu": 117, "cnvar": [118, 193, 203], "sol_tol": [118, 193, 203], "sol_maxit": 118, "2_n": 119, "x_1": 119, "x_n": 119, "k_i": 119, "h\u00e9non": 121, "logist": 122, "rho": [123, 131], "6666666666666665": 123, "99": [123, 124, 128, 181, 187, 192, 193, 194, 200, 201, 203, 204], "exhibit": 123, "chaotic": 123, "butterfli": 123, "convect": 123, "layer": 123, "bottom": 123, "surfac": 123, "kept": 123, "proport": 123, "third": [123, 149, 200], "distort": 123, "profil": 123, "1175": 123, "1520": 123, "0469": 123, "1963": 123, "020": 123, "0130": 123, "dnf": 123, "y_3": 123, "reynold": 123, "supercrit": 123, "provok": 123, "instabl": 123, "nfev": 123, "newton_krylov": 124, "krylov": 124, "283185307179586": 124, "parallelis": 124, "nlin": 124, "0702010": 124, "000295912208286": 125, "omega_b": [126, 179, 180, 184, 199, 200], "omega_": [126, 179, 180, 184, 199, 200], "sig": [126, 179, 180, 184, 199, 200], "hat": 126, "e_": 126, "charg": 126, "x_": 126, "ext": 126, "epsilon": [126, 145, 146], "coulomb": 126, "die": 126, "glimmentladung": 126, "bei": 126, "niedrigem": 126, "druck": 126, "zwischen": 126, "koaxialen": 126, "zylindern": 126, "einem": 126, "axialen": 126, "magnetfeld": 126, "physica": 126, "1936": 126, "mathia": 126, "winkel": 126, "boris_solv": 126, "old_field": 126, "new_field": 126, "old_part": 126, "build_f": 126, "pepc": 126, "fast_interact": 126, "efield": 126, "get_interact": 126, "rpi": 127, "lpi": 127, "l_": 127, "cv": 128, "u_thresh": 128, "u_max": 128, "q_max": 128, "leak_rang": 128, "55": 128, "leak_typ": 128, "leak_transit": 128, "direct_solv": 128, "min_lintol": 128, "reference_sol_typ": 128, "cool": 128, "superconduct": 128, "leak": 128, "runawai": 128, "huge": 128, "destroi": 128, "cern": 128, "past": 128, "warrant": 128, "total": [128, 179, 184, 199, 200], "insul": 128, "volumetr": 128, "capac": 128, "thermal": 128, "power": 128, "densiti": 128, "exponenti": 128, "xv": 128, "thin": 128, "shell": 128, "schnaubelt": 128, "wozniak": 128, "sch\u00f6p": 128, "supercond": 128, "technol": 128, "36": 128, "044004": 128, "1088": 128, "1361": 128, "6668": 128, "acbeea": 128, "eval_f_non_linear": 128, "get_non_linear_jacobian": 128, "usegpu": 129, "lambda_n": 129, "sequenc": [129, 130], "array_lik": [129, 130], "setup_gpu": 129, "xp": 129, "home": 129, "runner": 129, "micromamba": 129, "lib": 129, "python3": 129, "site": 129, "xsp": 129, "crash_at_maxit": 130, "vortic": 131, "w_t": 131, "invers": [131, 191, 203], "mvec": 131, "imex_1st_order_mass": [131, 148, 191, 203], "__eval_": 131, "buildfdmatrix": [132, 136], "getbcleft": [132, 133, 136, 139], "getbcright": [132, 133, 136, 139], "gethorizontaldx": [132, 133], "getmatrix": [132, 133, 136, 139], "buildwave1dmatrix": 132, "getwave1dadvectionmatrix": [132, 134], "getwave1dmatrix": [132, 134], "getwavebcleft": [132, 134], "getwavebcright": [132, 134], "standard_integr": [132, 136], "bdf2": [132, 135, 136, 141], "rk_imex": [132, 135, 136, 141], "trapezoid": [132, 135, 136, 141, 149, 152, 160], "bc_left": [133, 134, 139], "bc_right": [133, 134, 139], "firsttimestep": [135, 141], "timestep": [135, 141], "um1": [135, 141], "f_solv": [135, 141], "m_fast": 135, "m_slow": 135, "f_fast": [135, 141], "f_fast_solv": [135, 141], "f_slow": [135, 141], "build2dfdmatrix": 136, "get2dmatrix": [136, 137], "get2dmesh": [136, 137], "get2dupwindmatrix": [136, 137], "getbchorizont": [136, 137], "getbcvert": [136, 137], "buildboussinesq2dmatrix": 136, "getboussinesq2dmatrix": [136, 138], "getboussinesq2dupwindmatrix": [136, 138], "getboussinesqbchorizont": [136, 138], "getboussinesqbcvert": [136, 138], "getupwindmatrix": [136, 139], "helper_class": 136, "callback": [136, 140], "splitexplicit": [136, 141], "unflatten": 136, "x_b": 137, "z_b": 137, "dz": [137, 141], "getcount": 140, "getresidu": 140, "pparam": 141, "numsmalltimestep": 141, "rk3lin": 141, "fslow": 141, "dtau": 141, "verletlin": 141, "f_fastmom": 141, "f_fastther": 141, "uin": 142, "nx": 142, "nz": 142, "sat": 143, "39": 143, "bcparam": 143, "mol": 143, "shift": 143, "neumann_bc_ord": 143, "5e": [144, 145, 146, 179, 188, 191, 195, 199, 202, 203, 204], "osti": 144, "gov": [144, 150], "servlet": 144, "purl": 144, "6111421": 144, "houwen": [145, 146], "sommeij": [145, 146], "1991": [145, 146], "scientif": [145, 146], "1028": [145, 146], "prothero": [145, 146], "robinson": [145, 146], "dg": [145, 146], "myprotherorobinson": [145, 146], "wether": [145, 146], "residuum": [145, 146], "wheter": [145, 146], "1974": [145, 146], "pp": [145, 146], "145": [145, 146], "162": [145, 146], "f_lin": [145, 146], "f_nonlin": [145, 146], "jac_lin": 145, "jac_nonlin": 145, "chemic": 146, "013": 146, "1000u_3": 146, "2500u_3": 146, "1000u_1": 146, "2500u_2": 146, "990731920827": 146, "009264413846": 146, "366532612659e": 146, "ellipt": 146, "eqnarrai": 146, "vw": 146, "uw": 146, "51uv": 146, "veen": 146, "1995": 146, "nonstiff": 146, "309": 146, "329": [146, 177, 198], "2t": 146, "dg2": 146, "dginv": 146, "dginv_lin": 146, "dginv_nonlin": 146, "seed": 147, "26266": 147, "dummi": [147, 170], "indent": 147, "half": [147, 152, 160, 181, 200], "adamsbashforthexplicit1step": [148, 149], "adamsmoultonimplicit1step": [148, 149], "adamsmoultonimplicit2step": [148, 149], "backwardeul": [148, 149, 150], "runge_kutta": 148, "ark54": [148, 150], "ark548l2sa": [148, 150], "ark548l2saerk": [148, 150], "ark548l2saerk2": [148, 150], "ark548l2saesdirk": [148, 150], "ark548l2saesdirk2": [148, 150], "butchertableau": [148, 150, 151], "butchertableauembed": [148, 150], "cash_karp": [148, 150], "cranknicholson": [148, 150], "dirk43": [148, 150], "esdirk43": [148, 150], "esdirk53": [148, 150], "explicitmidpointmethod": [148, 150], "forwardeul": [148, 150], "heun_eul": [148, 150], "implicitmidpointmethod": [148, 150], "rk4": [148, 150], "rungekutta": [148, 150, 151], "rungekuttaimex": [148, 150], "runge_kutta_nystrom": 148, "rkn": [148, 151], "rungekuttanystrom": [148, 151], "velocity_verlet": [148, 151], "boris_2nd_ord": [148, 179, 180, 184, 199, 200], "sweepermpi": [148, 155, 157], "imex_1st_order_mpi": 148, "dress": 149, "08333333333333333": 149, "6666666666666666": 149, "4166666666666667": 149, "generate_starting_valu": 149, "almost": 149, "impress": 149, "belov": 149, "koelner": 149, "dom": 149, "num_step": 149, "oldest": 149, "bespok": 149, "provision": 149, "ark5": 150, "8l": 150, "sa": 150, "erk": 150, "esdirk": 150, "1016": 150, "s0168": 150, "9274": 150, "00138": 150, "butchertableauclass": 150, "butchertableauclass_explicit": 150, "get_update_ord": 150, "205": 150, "1025": 150, "04757042": 150, "07389944": 150, "08074895": 150, "29921812": 150, "46382067": 150, "04803878": 150, "14689238": 150, "11740333": 150, "22170197": 150, "00759375": 150, "1784573": 150, "01974675": 150, "22154535": 150, "03612492": 150, "54553377": 150, "09554859": 150, "3386928": 150, "14043176": 150, "07058771": 150, "76287525": 150, "matrix_explicit": 150, "17753521": 150, "08239438": 150, "12262308": 150, "07552741": 150, "29017765": 150, "24492577": 150, "61510341": 150, "40294452": 150, "35401238": 150, "4857009": 150, "031256": 150, "46413844": 150, "23046868": 150, "84460712": 150, "125": [150, 188, 193, 195, 196, 202, 203, 204], "674808": 150, "38943865": 150, "69220068": 150, "09466623": 150, "21115733": 150, "48853707": 150, "25992958": 150, "19815049": 150, "92": 150, "09957696": 150, "40716288": 150, "16014818": 150, "1442366": 150, "77956562": 150, "21723324": 150, "apnum": 150, "007": 150, "kennedi": 150, "carpent": 150, "newer": 150, "appar": 150, "22222222": 150, "26824595": 150, "05794559": 150, "0089384": 150, "04330529": 150, "03401389": 150, "25515937": 150, "13179599": 150, "03237673": 150, "12385474": 150, "14270778": 150, "30932282": 150, "68291993": 150, "05882276": 150, "04130861": 150, "89718343": 150, "17366254": 150, "25479166": 150, "24190177": 150, "30740486": 150, "19998305": 150, "44444444": 150, "11111111": 150, "64760301": 150, "09182987": 150, "03544857": 150, "012009": 150, "34252355": 150, "26767786": 150, "11056894": 150, "85638959": 150, "00977228": 150, "21070865": 150, "07592412": 150, "20765519": 150, "23548432": 150, "46686371": 150, "29035988": 150, "37840597": 150, "56345584": 150, "28832383": 150, "32884988": 150, "61439672": 150, "3174778": 150, "71215206": 150, "11498708": 150, "09139032": 150, "04049657": 150, "75871412": 150, "11526943": 150, "35675713": 150, "72": 150, "955": 150, "06272422": 150, "25523316": 150, "23902755": 150, "39907952": 150, "14315725": 150, "18709281": 150, "oppos": 150, "claim": 150, "stiffli": 150, "singli": 150, "gamma": 150, "2222222222222222": 150, "among": 150, "connoisseur": 150, "fifth": 150, "79505": 150, "79507": 150, "075": 150, "225": 150, "2037037": 150, "59259259": 150, "2962963": 150, "0294958": 150, "34179688": 150, "04159433": 150, "40034541": 150, "06176758": 150, "875": 150, "0978836": 150, "40257649": 150, "21043771": 150, "2891022": 150, "10217737": 150, "3839079": 150, "24459274": 150, "01932199": 150, "bf01934920": 150, "83333333": 150, "57692308": 150, "98148148": 150, "81481481": 150, "65958848": 150, "27699588": 150, "04925926": 150, "25641026": 150, "16666667": 150, "40666667": 150, "04619048": 150, "64285714": 150, "42666667": 150, "56333333": 150, "esdirk4": 150, "6l": 150, "ntr": 150, "nasa": 150, "20160005923": 150, "0517767": 150, "07655461": 150, "52810922": 150, "72740635": 150, "58499506": 150, "65981763": 150, "01558764": 150, "38765767": 150, "50177262": 150, "10825502": 150, "14644661": 150, "625": 150, "s2": 150, "4142135623730951": 150, "09651334": 150, "52281995": 150, "52056786": 150, "08255805": 150, "23219692": 150, "esdirk5": 150, "27805384": 150, "31357496": 150, "43697244": 150, "09456105": 150, "13349473": 150, "05000194": 150, "22208425": 150, "09710432": 150, "03123381": 150, "06990092": 150, "89887281": 150, "61640883": 150, "12228335": 150, "5666084": 150, "69330188": 150, "55610768": 150, "02860124": 150, "44739556": 150, "70955276": 150, "11977427": 150, "38199341": 150, "99233927": 150, "24727121": 150, "Not": [150, 200], "fourth": 150, "everybodi": 150, "darl": 150, "33333333": 150, "success": [150, 151, 201], "realis": [150, 151], "q_delta": [150, 151], "butcher": [150, 151], "tableau": [150, 151], "wast": [150, 151], "flop": [150, 151], "tableaux": [150, 151], "substitut": [150, 151], "cheaper": [150, 151], "fundament": [150, 151], "collocation_class": [150, 151, 197], "get_butcher_tableau": 150, "get_q_matrix": 150, "get_full_f": [150, 151], "get_butcher_tableau_explicit": 150, "nystrom": 151, "540": 151, "78862": 151, "284": 151, "chapter": 151, "ii": 151, "attribu": 151, "butcher_tableau": 151, "funtion": 151, "algorithmu": 151, "sq": 152, "st": 152, "sx": 152, "get_scalar_problems_manysweep_mat": [152, 156], "friction": 152, "get_scalar_problems_picardsweep_mat": 152, "get_scalar_problems_sweeper_mat": [152, 156], "narrai": 152, "get_sweeper_mat": [152, 156], "qq": [152, 160], "qx": [152, 160], "qt": [152, 160], "qe": [153, 156, 177, 179, 198, 199], "do_full_upd": [153, 154, 155, 156, 158, 159], "administ": 155, "last_onli": [155, 157], "lambda_fast": 156, "lambda_slow": 156, "basetransfer_mass": 161, "base_transfer_mass": [161, 162], "transferfenicsmesh": [161, 191, 203], "mesh_to_mesh_fen": [161, 163, 191, 203], "transfermesh_fft": 161, "mesh_to_mesh_fft": [161, 165], "transfermesh_fft2d": 161, "mesh_to_mesh_fft2d": [161, 166], "transfermesh_mpifft": [161, 192, 203], "fft_to_fft": [161, 167, 192, 203], "transferpetscdmda": [161, 193, 203], "custon": [164, 166, 167, 168, 170], "rspace": [164, 166, 168], "pspace": [164, 166, 168], "irfft_object_fin": 165, "rfft_object_coars": 165, "pmesh": 167, "step_1": [171, 172, 173, 174, 175, 181, 197, 198, 200], "a_spatial_problem_setup": [171, 175, 197, 198], "1023": [171, 173, 175, 176, 177, 178, 183, 197, 198, 199, 200], "run_accuracy_check": [171, 172, 174, 175, 197, 198], "step_1_a_out": [171, 197], "sine": [171, 172, 197], "u_lap": [171, 172, 197], "981783e": [171, 175, 197, 198], "b_spatial_accuracy_check": [172, 181, 197, 200], "agg": [172, 174, 197], "pylab": [172, 174, 197], "nvars_list": [172, 174, 181, 197, 200], "get_accuracy_ord": [172, 174, 181, 197, 200], "step_1_b_out": [172, 197], "3f": [172, 174, 197], "plot_accuraci": [172, 174, 197], "step_1_accuracy_test_spac": [172, 197], "isclos": [172, 174, 196, 197, 204], "id_prev": [172, 174, 197], "prev_error": [172, 174, 197], "this_error": [172, 174, 197], "this_nvar": [172, 197], "old_nvar": [172, 197], "tmp": [172, 174, 197], "fontsiz": [172, 174, 197], "labels": [172, 174, 197], "titles": [172, 174, 197], "ytick": [172, 174, 197], "linewidth": [172, 174, 197], "rcparam": [172, 174, 197], "base_error": [172, 174, 197], "2nd": [172, 197], "order_guide_spac": [172, 174, 197], "min_err": [172, 174, 197], "1e99": [172, 174, 197], "max_err": [172, 174, 197], "0e00": [172, 174, 197], "err_list": [172, 174, 197], "markers": [172, 174, 197], "numpoint": [172, 174, 197], "bbox_inch": [172, 174, 197], "tight": [172, 174, 197], "888": [172, 197], "949": [172, 197], "976": [172, 197], "988": [172, 197], "994": [172, 197], "999": [172, 197], "982": [172, 197], "c_collocation_problem_setup": [173, 197], "solve_collocation_problem": [173, 197], "step_1_c_out": [173, 197], "kron": [173, 174, 197], "u0_col": [173, 174, 197], "u_col": [173, 174, 197], "spsolv": [173, 174, 197], "inf": [173, 174, 179, 197, 199], "803471e": [173, 197], "d_collocation_accuracy_check": [174, 197], "16383": [174, 197], "step_1_d_out": [174, 197], "step_1_accuracy_test_col": [174, 197], "this_dt": [174, 197], "old_dt": [174, 197], "spacn": [174, 197], "5th": [174, 197], "791": [174, 197], "364": [174, 177, 197, 198], "671": [174, 197], "step_2": [175, 176, 177, 198], "a_step_data_structur": [175, 198], "step_2_a_out": [175, 198], "b_my_first_sweep": [176, 198], "run_imex_sdc": [176, 198], "8e": [176, 179, 180, 183, 184, 188, 190, 195, 198, 199, 200, 202, 204], "step_2_b_out": [176, 198], "endpoint": [176, 198], "11190756e": [176, 177, 198], "68442667e": [176, 177, 198], "80377591e": [176, 177, 198], "21707909e": [176, 177, 198], "38272147e": [176, 177, 198], "36445413e": [176, 177, 198], "68953216e": [176, 177, 198], "52601840e": [176, 177, 198], "07249025e": [176, 177, 198], "27343378e": [176, 177, 198], "18931339e": [176, 177, 198], "48499772e": [176, 177, 198], "c_using_pysdcs_frontend": [177, 198], "log_to_fil": [177, 179, 198, 199], "step_2_c_out": [177, 198], "53": [177, 179, 198, 199], "311": [177, 198], "146": [177, 179, 198, 199], "astonish": [177, 179, 198, 199], "87": [177, 179, 198, 199], "_____": [177, 179, 198, 199], "____": [177, 179, 198, 199], "___": [177, 179, 198, 199], "160": [177, 179, 198, 199], "overview": [177, 179, 198, 199], "227": [177, 179, 198, 199], "default_hook": [177, 179, 198, 199], "defaulthook": [177, 198], "mssdc_jac": [177, 179, 195, 198, 199, 204], "predict_typ": [177, 179, 186, 187, 188, 192, 198, 199, 201, 202, 203], "use_iteration_estim": [177, 179, 198, 199], "dt_initi": [177, 179, 198, 199], "residual_typ": [177, 179, 198, 199], "full_ab": [177, 179, 198, 199], "ee": [177, 179, 198, 199], "do_coll_upd": [177, 179, 198, 199], "skip_residual_comput": [177, 179, 198, 199], "230": [177, 179, 198, 199], "232": [177, 179, 198, 199], "315": [177, 198], "170": [177, 179, 198, 199], "100000": [177, 198], "322": [177, 198], "325": [177, 198], "332": [177, 198], "336": [177, 198], "339": [177, 198], "342": [177, 198], "346": [177, 198], "349": [177, 198], "352": [177, 198], "357": [177, 198], "200000": [177, 198], "69984764e": [177, 198], "360": [177, 198], "05518433e": [177, 198], "40642621e": [177, 198], "367": [177, 198], "85982063e": [177, 198], "370": [177, 198], "79216702e": [177, 198], "374": [177, 198], "12278839e": [177, 198], "378": [177, 198], "85495353e": [177, 198], "381": [177, 198], "78947003e": [177, 198], "384": [177, 198], "68230621e": [177, 198], "388": [177, 198], "26313315e": [177, 198], "391": [177, 198], "82951499e": [177, 198], "394": [177, 198], "99691114e": [177, 198], "395": [177, 198], "340": [177, 179, 198, 199], "166689e": [177, 198], "step_3": [178, 179, 180, 184, 199, 200], "a_getting_statist": [178, 199], "step_3_a_out": [178, 199], "residual_post_iter": [178, 199], "verbos": [178, 180, 199], "timing_setup": [178, 199], "timing_comm": [178, 199], "residual_post_sweep": [178, 199], "timing_sweep": [178, 199], "timing_iter": [178, 199], "timing_step": [178, 199], "residual_post_step": [178, 199], "_recomput": [178, 199], "1119e": [178, 199], "6844e": [178, 199], "8038e": [178, 199], "2171e": [178, 199], "3827e": [178, 199], "3645e": [178, 199], "6895e": [178, 199], "5260e": [178, 199], "0725e": [178, 199], "2734e": [178, 199], "1893e": [178, 199], "4850e": [178, 199], "70": [178, 192, 199, 203], "80": [178, 199], "b_adding_statist": [179, 199], "hookclass_particl": [179, 180, 184, 199, 200], "particle_hook": [179, 180, 184, 199, 200], "run_penning_trap_simul": [179, 184, 199, 200], "etot": [179, 180, 184, 199, 200], "base_energi": [179, 180, 184, 199, 200], "step_3_b_out": [179, 199], "10f": [179, 184, 199, 200], "729": [179, 199], "0625": [179, 187, 199, 201], "735": [179, 199], "000000": [179, 199], "53203678e": [179, 199], "741": [179, 199], "09852117e": [179, 199], "746": [179, 199], "50301513e": [179, 199], "752": [179, 199], "67724741e": [179, 199], "757": [179, 199], "95583202e": [179, 199], "763": [179, 199], "11405073e": [179, 199], "768": [179, 199], "26902403e": [179, 199], "774": [179, 199], "16534547e": [179, 199], "779": [179, 199], "66968022e": [179, 199], "785": [179, 199], "09408171e": [179, 199], "790": [179, 199], "17123386e": [179, 199], "792": [179, 199], "8799": [179, 199], "5000000000": [179, 199], "00000000e": [179, 184, 199, 200], "8785": [179, 199], "0038936088": [179, 199], "44961064e": [179, 199], "c_study_colloc": [180, 199], "stats_dict": [180, 199], "ediff": [180, 199], "step_3_c_out": [180, 199], "cclass": [180, 199], "final_energi": [180, 199], "ediff_expect": [180, 199], "qtype": [180, 199], "44960920e": [180, 199], "33862938e": [180, 199], "32710645e": [180, 199], "step_4": [181, 182, 183, 184, 200], "a_spatial_transfer_oper": [181, 200], "nvars_fin": [181, 200], "nvars_fine_list": [181, 200], "4i": [181, 182, 200], "pfine": [181, 200], "pcoars": [181, 200], "xvalues_fin": [181, 200], "uexact_fin": [181, 200], "xvalues_coars": [181, 200], "uexact_coars": [181, 200], "uinter": [181, 200], "step_4_a_out": [181, 200], "91": [181, 200], "35": [181, 200], "98": [181, 200], "62": [181, 188, 189, 190, 194, 195, 196, 200, 202, 204], "b_multilevel_hierarchi": [182, 200], "31": [182, 185, 188, 195, 200, 201, 202, 204], "step_4_b_out": [182, 200], "c_sdc_vs_mlsdc": [183, 200], "sweeper_params_sdc": [183, 200], "sweeper_params_mlsdc": [183, 200], "problem_params_sdc": [183, 200], "problem_params_mlsdc": [183, 200], "511": [183, 186, 200, 201], "description_sdc": [183, 200], "description_mlsdc": [183, 200], "controller_sdc": [183, 200], "controller_mlsdc": [183, 200], "uend_sdc": [183, 200], "stats_sdc": [183, 184, 200], "uend_mlsdc": [183, 200], "stats_mlsdc": [183, 184, 200], "niter_sdc": [183, 200], "niter_mlsdc": [183, 200], "err_sdc": [183, 200], "err_mlsdc": [183, 200], "step_4_c_out": [183, 200], "96232037e": [183, 200], "95409337e": [183, 200], "22700796e": [183, 200], "d_mlsdc_with_particl": [184, 200], "penningtrap_3d_coars": [184, 200], "penningtrap_coars": [184, 200], "time_sdc": [184, 200], "time_mlsdc": [184, 200], "stats_mlsdc_fint": [184, 200], "time_mlsdc_fint": [184, 200], "step_4_d_out": [184, 200], "8f": [184, 200], "energy_sdc": [184, 200], "energy_mlsdc": [184, 200], "energy_mlsdc_fint": [184, 200], "transfer_param": [184, 200], "start_tim": [184, 200], "perf_count": [184, 200], "end_tim": [184, 200], "61366831": [184, 200], "05772918": [184, 200], "66854506": [184, 200], "407936": [184, 200], "7556966486": [184, 200], "406977": [184, 200], "9425667246": [184, 200], "35039652e": [184, 200], "9425660003": [184, 200], "9428639794": [184, 200], "35039579e": [184, 200], "step_5": [185, 186, 187, 201], "a_multistep_multilevel_hierarchi": [185, 201], "step_5_a_out": [185, 201], "b_my_first_pfasst_run": [186, 201], "pfasst_burnin": [186, 187, 188, 201, 202], "num_proc_list": [186, 187, 188, 189, 201, 202], "log2": [186, 187, 201], "step_5_b_out": [186, 201], "3505e": [186, 201], "94": [186, 187, 201], "88": [186, 188, 189, 190, 194, 195, 201, 202, 204], "33": [186, 201], "c_advection_and_pfasst": [187, 201], "qi_list": [187, 201], "niters_min_al": [187, 201], "niters_max_al": [187, 201], "step_5_c_out": [187, 201], "1365e": [187, 201], "82": [187, 201], "93": [187, 201], "59": [187, 201], "44": [187, 201], "29": [187, 201], "27": [187, 201], "48": [187, 201], "step_6": [188, 189, 190, 194, 202, 204], "a_run_non_mpi_control": [188, 189, 190, 194, 202, 204], "multi_level": [188, 189, 202], "set_parameters_ml": [188, 190, 194, 202, 204], "set_parameters_sl": [188, 202], "1i": [188, 190, 194, 202, 204], "weird": [188, 190, 202], "errtol": [188, 196, 202, 204], "ask": [188, 202, 204], "step_6_a_sl_out": [188, 202], "step_6_a_ml_out": [188, 202], "87627033e": [188, 202], "87300679e": [188, 190, 202], "87272106e": [188, 190, 202], "87294206e": [188, 190, 202], "87290945e": [188, 189, 190, 202], "b_odd_temporal_distribut": [189, 202], "main_a": [189, 202], "odd": [189, 190], "step_6_b_out": [189, 190, 202], "87358935e": [189, 190, 202], "87358097e": [189, 190, 202], "87271747e": [189, 190, 202], "c_mpi_parallel": [190, 202], "playground_parallel": [190, 202], "subprocess": [190, 202], "del": [190, 202], "importerror": [190, 202], "my_env": [190, 202], "coverage_process_start": [190, 202], "num_procs_list": [190, 202], "step_6_c1_out": [190, 202], "cmd": [190, 202], "popen": [190, 202], "stdout": [190, 202], "pipe": [190, 202], "stderr": [190, 202], "readlin": [190, 202], "returncod": [190, 202], "step_6_c2_out": [190, 202], "sy": [190, 193, 202, 203], "iter_counts_list": [190, 202], "argv": [190, 193, 202, 203], "iter_counts_gath": [190, 202], "sublist": [190, 202], "step_7": [191, 192, 193, 203], "a_pysdc_with_fen": [191, 203], "ml": [191, 192, 196, 203, 204], "ugli": [191, 203], "problemclass": [191, 203], "run_vari": [191, 203], "mass_inv": [191, 203], "mass_timebc": [191, 203], "step_7_a_out": [191, 203], "14e": [191, 203], "25e": [191, 203], "NOT": [191, 203], "permut": [191, 203], "run_pfasst_vari": [191, 203], "1387407230222816e": [191, 203], "6578": [191, 203], "1387594756569534e": [191, 203], "2242": [191, 203], "2473562155116167e": [191, 203], "2327": [191, 203], "138768636885694e": [191, 203], "2372": [191, 203], "1387216566052821e": [191, 203], "8867": [191, 203], "2473561574763597e": [191, 203], "8760": [191, 203], "1150087179536389e": [191, 203], "26": [191, 203], "6669": [191, 203], "b_pysdc_with_mpi4pyfft": [192, 203], "nl": [192, 203], "fine_onli": [192, 203], "step_7_b_out": [192, 203], "133e": [192, 203], "maxmean": [192, 203], "1321e": [192, 203], "3202": [192, 203], "1749e": [192, 203], "0468": [192, 203], "1316e": [192, 203], "3232": [192, 203], "1744e": [192, 203], "2076": [192, 203], "65": [192, 193, 203], "1306e": [192, 203], "8178": [192, 203], "1688e": [192, 203], "6196": [192, 203], "c_pysdc_with_petsc": [193, 203], "world_rank": [193, 203], "world_siz": [193, 203], "space_comm": [193, 203], "space_rank": [193, 203], "time_comm": [193, 203], "time_rank": [193, 203], "step_7_c_out": [193, 203], "9225": [193, 203], "9479e": [193, 203], "8271": [193, 203], "7517": [193, 203], "7526": [193, 203], "step_8": [194, 195, 196, 204], "a_visualize_residu": [194, 204], "min_it": [194, 204], "max_it": [194, 204], "step_8_a_out": [194, 204], "step_8_residu": [194, 204], "1555e": [194, 204], "b_multistep_sdc": [195, 204], "description_pfasst": [195, 204], "description_mssdc": [195, 204], "controller_params_jac": [195, 204], "controller_params_g": [195, 204], "controller_mssdc_jac": [195, 204], "controller_mssdc_g": [195, 204], "controller_pfasst": [195, 204], "uend_pfasst": [195, 204], "stats_pfasst": [195, 204], "uend_mssdc_jac": [195, 204], "stats_mssdc_jac": [195, 204], "uend_mssdc_g": [195, 204], "stats_mssdc_g": [195, 204], "err_mssdc_jac": [195, 204], "err_mssdc_g": [195, 204], "err_pfasst": [195, 204], "diff_jac": [195, 204], "diff_g": [195, 204], "diff_jac_g": [195, 204], "step_8_b_out": [195, 204], "iter_counts_pfasst": [195, 204], "iter_counts_mssdc_jac": [195, 204], "iter_counts_mssdc_g": [195, 204], "item_pfasst": [195, 204], "item_mssdc_jac": [195, 204], "item_mssdc_g": [195, 204], "parmssdc": [195, 204], "sermssdc": [195, 204], "step_8_residuals_mssdc_jac": [195, 204], "step_8_residuals_mssdc_g": [195, 204], "87344391e": [195, 204], "87650037e": [195, 204], "87540078e": [195, 204], "05646515e": [195, 204], "95687314e": [195, 204], "09959201e": [195, 204], "c_iteration_estim": [196, 204], "mesh_to_mesh_nc": [196, 204], "hookclass_error_output": [196, 204], "error_output": [196, 204], "setup_diffus": [196, 204], "setup_advect": [196, 204], "setup_auzing": [196, 204], "ndim_list": [196, 204], "nsteps_list": [196, 204], "nproc": [196, 204], "step_8_c_out": [196, 204], "mean_number_of_iter": [196, 204], "pde_error": [196, 204], "pde_error_after_step": [196, 204], "coll_error": [196, 204], "coll_error_after_step": [196, 204], "pde_err": [196, 204], "coll_err": [196, 204], "1250": [196, 204], "7804e": [196, 204], "4661e": [196, 204], "2500": [196, 204], "9619e": [196, 204], "8075e": [196, 204], "3750": [196, 204], "2300e": [196, 204], "0376e": [196, 204], "5000": [196, 204], "8684e": [196, 204], "6490e": [196, 204], "6250": [196, 204], "7128e": [196, 204], "8078e": [196, 204], "7500": [196, 204], "6619e": [196, 204], "5365e": [196, 204], "8750": [196, 204], "6530e": [196, 204], "0645e": [196, 204], "0000": [196, 204], "6478e": [196, 204], "2759e": [196, 204], "3284328230001847": [196, 204], "8191e": [196, 204], "3584e": [196, 204], "7174e": [196, 204], "0504e": [196, 204], "2849e": [196, 204], "9697e": [196, 204], "7307e": [196, 204], "6494e": [196, 204], "0813e": [196, 204], "0748e": [196, 204], "3516e": [196, 204], "7096e": [196, 204], "5501e": [196, 204], "9957e": [196, 204], "6813e": [196, 204], "6975e": [196, 204], "7390119500000765": [196, 204], "6459e": [196, 204], "5511e": [196, 204], "2907e": [196, 204], "0930e": [196, 204], "3307e": [196, 204], "4571e": [196, 204], "8225e": [196, 204], "1875e": [196, 204], "5517e": [196, 204], "9147e": [196, 204], "19609563199992408": [196, 204], "7050e": [196, 204], "1841e": [196, 204], "4360e": [196, 204], "1141e": [196, 204], "1852e": [196, 204], "4836e": [196, 204], "1886e": [196, 204], "8580e": [196, 204], "2256e": [196, 204], "1830e": [196, 204], "5987e": [196, 204], "9666e": [196, 204], "1819e": [196, 204], "5787733570000455": [196, 204], "6598e": [196, 204], "0010e": [196, 204], "4700e": [196, 204], "5583e": [196, 204], "1829e": [196, 204], "6153e": [196, 204], "8266e": [196, 204], "8338e": [196, 204], "138366410999879": [196, 204], "2389e": [196, 204], "4469e": [196, 204], "1763e": [196, 204], "7832e": [196, 204], "3399e": [196, 204], "8017e": [196, 204], "1486e": [196, 204], "3802e": [196, 204], "1661369100002048": [196, 204], "heatequation_1d_fd": 197, "encapsul": 197, "quick": 197, "peak": 197, "reveal": 197, "sometim": 197, "he": 197, "happili": [197, 198], "subroutin": 197, "gaussradau_right": 197, "fun": 197, "beat": 197, "thoroughli": 197, "dig": 198, "deeper": 198, "ran": 198, "normal": [198, 202], "steer": 198, "life": 198, "heatequation_1d_fd_forc": 198, "rhs_imex_mesh": 198, "shed": 198, "light": 198, "deepli": 198, "tediou": [198, 201], "wors": 198, "behold": 198, "proce": 198, "friendliest": 198, "suppress": 198, "controller_paramet": 198, "capabl": [198, 202], "contrast": [198, 199, 201], "focu": 199, "stamp": 199, "admittedli": 199, "complic": [199, 201], "electromagnet": 199, "ineffici": 199, "interestingli": 199, "symmetr": 199, "conserv": 199, "thumb": 199, "altern": [199, 204], "fly": 199, "knowledg": 200, "longest": 200, "pretti": [200, 204], "off": 200, "fact": [200, 203], "finer": 200, "msdc": 200, "sensit": 200, "interplai": 200, "trivial": 200, "_nonmpi": 201, "principl": 201, "quantiti": 201, "parabol": 201, "heavili": 201, "saw": 201, "consider": 201, "At": 201, "sweeper_help": 201, "get_qd": 201, "mpi_parallel": 202, "accident": 202, "exercis": 202, "counterpart": 202, "snippet": 202, "set_paramet": 202, "headach": 202, "nosetest": 202, "methodologi": 203, "valuabl": 203, "latter": 203, "With": 203, "unfavor": 203, "testb": 203, "petsc_dmda_grid": 203, "mere": 204, "pick": 204, "dead": 204, "prevent": 204, "safe": 204, "lipschitz": 204, "procedur": 204, "met": 204, "shall": 204}, "objects": {"": [[39, 0, 0, "-", "core"], [54, 0, 0, "-", "helpers"], [64, 0, 0, "-", "implementations"]], "core": [[40, 0, 0, "-", "BaseTransfer"], [41, 0, 0, "-", "Collocation"], [42, 0, 0, "-", "Common"], [43, 0, 0, "-", "Controller"], [44, 0, 0, "-", "ConvergenceController"], [45, 0, 0, "-", "Errors"], [46, 0, 0, "-", "Hooks"], [47, 0, 0, "-", "Lagrange"], [48, 0, 0, "-", "Level"], [49, 0, 0, "-", "Nodes"], [50, 0, 0, "-", "Problem"], [51, 0, 0, "-", "SpaceTransfer"], [52, 0, 0, "-", "Step"], [53, 0, 0, "-", "Sweeper"]], "core.BaseTransfer": [[40, 1, 1, "", "base_transfer"]], "core.BaseTransfer.base_transfer": [[40, 2, 1, "", "coarse"], [40, 2, 1, "", "fine"], [40, 3, 1, "", "get_transfer_matrix_Q"], [40, 2, 1, "", "logger"], [40, 2, 1, "", "params"], [40, 3, 1, "", "prolong"], [40, 3, 1, "", "prolong_f"], [40, 3, 1, "", "restrict"]], "core.Collocation": [[41, 1, 1, "", "CollBase"]], "core.Collocation.CollBase": [[41, 2, 1, "", "Qmat"], [41, 2, 1, "", "Smat"], [41, 2, 1, "", "delta_m"], [41, 3, 1, "", "evaluate"], [41, 2, 1, "", "left_is_node"], [41, 2, 1, "", "nodes"], [41, 2, 1, "", "num_nodes"], [41, 2, 1, "", "right_is_node"], [41, 2, 1, "", "tleft"], [41, 2, 1, "", "tright"], [41, 2, 1, "", "weights"]], "core.Common": [[42, 1, 1, "", "RegisterParams"]], "core.Common.RegisterParams": [[42, 2, 1, "", "_parNames"], [42, 2, 1, "", "_parNamesReadOnly"], [42, 4, 1, "id0", "params"]], "core.Controller": [[43, 1, 1, "", "controller"]], "core.Controller.controller": [[43, 3, 1, "", "add_convergence_controller"], [43, 3, 1, "", "add_hook"], [43, 3, 1, "", "dump_setup"], [43, 3, 1, "", "get_convergence_controllers_as_table"], [43, 4, 1, "", "hooks"], [43, 3, 1, "", "return_stats"], [43, 3, 1, "", "run"], [43, 3, 1, "", "setup_convergence_controllers"], [43, 3, 1, "", "welcome_message"]], "core.ConvergenceController": [[44, 1, 1, "", "ConvergenceController"], [44, 1, 1, "", "Pars"], [44, 1, 1, "", "Status"]], "core.ConvergenceController.ConvergenceController": [[44, 3, 1, "", "Recv"], [44, 3, 1, "", "Send"], [44, 3, 1, "", "add_variable"], [44, 3, 1, "", "check_iteration_status"], [44, 3, 1, "", "check_parameters"], [44, 3, 1, "", "convergence_control"], [44, 3, 1, "", "debug"], [44, 3, 1, "", "dependencies"], [44, 3, 1, "", "determine_restart"], [44, 3, 1, "", "get_new_step_size"], [44, 3, 1, "", "log"], [44, 3, 1, "", "post_iteration_processing"], [44, 3, 1, "", "post_spread_processing"], [44, 3, 1, "", "post_step_processing"], [44, 3, 1, "", "pre_iteration_processing"], [44, 3, 1, "", "prepare_MPI_datatypes"], [44, 3, 1, "", "prepare_MPI_logical_operations"], [44, 3, 1, "", "prepare_next_block"], [44, 3, 1, "", "recv"], [44, 3, 1, "", "reset_buffers_nonMPI"], [44, 3, 1, "", "reset_status_variables"], [44, 3, 1, "", "reset_variable"], [44, 3, 1, "", "send"], [44, 3, 1, "", "setup"], [44, 3, 1, "", "setup_status_variables"]], "core.Errors": [[45, 5, 1, "", "CollocationError"], [45, 5, 1, "", "CommunicationError"], [45, 5, 1, "", "ControllerError"], [45, 5, 1, "", "ConvergenceError"], [45, 5, 1, "", "DataError"], [45, 5, 1, "", "ParameterError"], [45, 5, 1, "", "ProblemError"], [45, 5, 1, "", "ReadOnlyError"], [45, 5, 1, "", "TransferError"], [45, 5, 1, "", "UnlockError"]], "core.Hooks": [[46, 1, 1, "", "Entry"], [46, 1, 1, "", "hooks"]], "core.Hooks.Entry": [[46, 2, 1, "", "iter"], [46, 2, 1, "", "level"], [46, 2, 1, "", "num_restarts"], [46, 2, 1, "", "process"], [46, 2, 1, "", "process_sweeper"], [46, 2, 1, "", "sweep"], [46, 2, 1, "", "time"], [46, 2, 1, "", "type"]], "core.Hooks.hooks": [[46, 2, 1, "", "__num_restarts"], [46, 2, 1, "", "__stats"], [46, 3, 1, "", "add_to_stats"], [46, 2, 1, "id0", "entry"], [46, 3, 1, "", "increment_stats"], [46, 2, 1, "", "logger"], [46, 2, 1, "", "meta_data"], [46, 3, 1, "", "post_comm"], [46, 3, 1, "", "post_iteration"], [46, 3, 1, "", "post_predict"], [46, 3, 1, "", "post_run"], [46, 3, 1, "", "post_setup"], [46, 3, 1, "", "post_step"], [46, 3, 1, "", "post_sweep"], [46, 3, 1, "", "pre_comm"], [46, 3, 1, "", "pre_iteration"], [46, 3, 1, "", "pre_predict"], [46, 3, 1, "", "pre_run"], [46, 3, 1, "", "pre_setup"], [46, 3, 1, "", "pre_step"], [46, 3, 1, "", "pre_sweep"], [46, 3, 1, "", "reset_stats"], [46, 3, 1, "", "return_stats"]], "core.Lagrange": [[47, 1, 1, "", "LagrangeApproximation"], [47, 6, 1, "", "computeFejerRule"]], "core.Lagrange.LagrangeApproximation": [[47, 3, 1, "", "getIntegrationMatrix"], [47, 3, 1, "", "getInterpolationMatrix"], [47, 4, 1, "", "n"], [47, 2, 1, "", "points"], [47, 2, 1, "", "weights"]], "core.Level": [[48, 1, 1, "", "level"]], "core.Level.level": [[48, 4, 1, "", "dt"], [48, 2, 1, "", "f"], [48, 2, 1, "", "fold"], [48, 2, 1, "", "level_index"], [48, 2, 1, "", "params"], [48, 4, 1, "", "prob"], [48, 3, 1, "", "reset_level"], [48, 2, 1, "", "status"], [48, 4, 1, "", "sweep"], [48, 4, 1, "", "tag"], [48, 2, 1, "", "tau"], [48, 4, 1, "", "time"], [48, 2, 1, "", "u"], [48, 2, 1, "", "uend"], [48, 2, 1, "", "uold"]], "core.Nodes": [[49, 5, 1, "", "NodesError"], [49, 1, 1, "", "NodesGenerator"]], "core.Nodes.NodesGenerator": [[49, 3, 1, "", "evalOrthogPoly"], [49, 3, 1, "", "getNodes"], [49, 3, 1, "", "getOrthogPolyCoefficients"], [49, 3, 1, "", "getTridiagCoefficients"], [49, 2, 1, "", "node_type"], [49, 2, 1, "", "quad_type"]], "core.Problem": [[50, 1, 1, "", "WorkCounter"], [50, 1, 1, "", "ptype"]], "core.Problem.WorkCounter": [[50, 3, 1, "", "decrement"]], "core.Problem.ptype": [[50, 3, 1, "", "apply_mass_matrix"], [50, 2, 1, "", "dtype_f"], [50, 2, 1, "", "dtype_u"], [50, 3, 1, "", "eval_f"], [50, 4, 1, "", "f_init"], [50, 3, 1, "", "generate_scipy_reference_solution"], [50, 3, 1, "", "get_default_sweeper_class"], [50, 3, 1, "", "get_fig"], [50, 2, 1, "id0", "logger"], [50, 3, 1, "", "plot"], [50, 4, 1, "", "u_init"]], "core.SpaceTransfer": [[51, 1, 1, "", "space_transfer"]], "core.SpaceTransfer.space_transfer": [[51, 2, 1, "", "coarse_prob"], [51, 2, 1, "", "fine_prob"], [51, 2, 1, "", "logger"], [51, 2, 1, "", "params"], [51, 3, 1, "", "prolong"], [51, 3, 1, "", "restrict"]], "core.Step": [[52, 1, 1, "", "step"]], "core.Step.step": [[52, 3, 1, "", "connect_levels"], [52, 4, 1, "", "dt"], [52, 3, 1, "", "init_step"], [52, 2, 1, "", "levels"], [52, 2, 1, "", "logger"], [52, 4, 1, "", "next"], [52, 2, 1, "", "params"], [52, 4, 1, "", "prev"], [52, 3, 1, "", "reset_step"], [52, 2, 1, "", "status"], [52, 4, 1, "", "time"], [52, 3, 1, "", "transfer"]], "core.Sweeper": [[53, 1, 1, "", "sweeper"]], "core.Sweeper.sweeper": [[53, 2, 1, "", "coll"], [53, 3, 1, "", "compute_end_point"], [53, 3, 1, "", "compute_residual"], [53, 3, 1, "", "get_Qdelta_explicit"], [53, 3, 1, "", "get_Qdelta_implicit"], [53, 3, 1, "", "integrate"], [53, 4, 1, "", "level"], [53, 2, 1, "", "logger"], [53, 2, 1, "", "params"], [53, 3, 1, "", "predict"], [53, 4, 1, "", "rank"], [53, 3, 1, "", "update_nodes"]], "helpers": [[55, 0, 0, "-", "NCCL_communicator"], [56, 0, 0, "-", "plot_helper"], [57, 0, 0, "-", "problem_helper"], [58, 0, 0, "-", "pysdc_helper"], [59, 0, 0, "-", "setup_helper"], [60, 0, 0, "-", "stats_helper"], [61, 0, 0, "-", "testing"], [62, 0, 0, "-", "transfer_helper"], [63, 0, 0, "-", "visualization_tools"]], "helpers.NCCL_communicator": [[55, 1, 1, "", "NCCLComm"]], "helpers.NCCL_communicator.NCCLComm": [[55, 3, 1, "", "Allreduce"], [55, 3, 1, "", "Reduce"], [55, 3, 1, "", "get_count"], [55, 3, 1, "", "get_dtype"], [55, 3, 1, "", "get_op"]], "helpers.plot_helper": [[56, 6, 1, "", "figsize"], [56, 6, 1, "", "figsize_by_journal"], [56, 6, 1, "", "newfig"], [56, 6, 1, "", "savefig"], [56, 6, 1, "", "setup_mpl"]], "helpers.problem_helper": [[57, 6, 1, "", "get_1d_grid"], [57, 6, 1, "", "get_finite_difference_matrix"], [57, 6, 1, "", "get_finite_difference_stencil"], [57, 6, 1, "", "get_steps"]], "helpers.pysdc_helper": [[58, 1, 1, "", "FrozenClass"]], "helpers.pysdc_helper.FrozenClass": [[58, 2, 1, "", "__isfrozen"], [58, 3, 1, "", "get"]], "helpers.setup_helper": [[59, 6, 1, "", "generate_description"]], "helpers.stats_helper": [[60, 6, 1, "", "filter_stats"], [60, 6, 1, "", "get_list_of_types"], [60, 6, 1, "", "get_sorted"], [60, 6, 1, "", "sort_stats"]], "helpers.testing": [[61, 1, 1, "", "DataChecker"]], "helpers.testing.DataChecker": [[61, 3, 1, "", "storeAndCheck"], [61, 3, 1, "", "writeToJSON"]], "helpers.transfer_helper": [[62, 6, 1, "", "border_padding"], [62, 6, 1, "", "continue_periodic_array"], [62, 6, 1, "", "interpolation_matrix_1d"], [62, 6, 1, "", "next_neighbors"], [62, 6, 1, "", "next_neighbors_periodic"], [62, 6, 1, "", "restriction_matrix_1d"]], "helpers.visualization_tools": [[63, 6, 1, "", "show_residual_across_simulation"]], "implementations": [[65, 0, 0, "-", "controller_classes"], [68, 0, 0, "-", "convergence_controller_classes"], [85, 0, 0, "-", "datatype_classes"], [91, 0, 0, "-", "problem_classes"], [148, 0, 0, "-", "sweeper_classes"], [161, 0, 0, "-", "transfer_classes"]], "implementations.controller_classes": [[66, 0, 0, "-", "controller_MPI"], [67, 0, 0, "-", "controller_nonMPI"]], "implementations.controller_classes.controller_MPI": [[66, 1, 1, "", "controller_MPI"]], "implementations.controller_classes.controller_MPI.controller_MPI": [[66, 3, 1, "", "check_iteration_estimate"], [66, 3, 1, "", "default"], [66, 3, 1, "", "it_check"], [66, 3, 1, "", "it_coarse"], [66, 3, 1, "", "it_down"], [66, 3, 1, "", "it_fine"], [66, 3, 1, "", "it_up"], [66, 3, 1, "", "pfasst"], [66, 3, 1, "", "predict"], [66, 3, 1, "", "recv"], [66, 3, 1, "", "recv_full"], [66, 3, 1, "", "restart_block"], [66, 3, 1, "", "run"], [66, 3, 1, "", "send_full"], [66, 3, 1, "", "spread"], [66, 3, 1, "", "wait_with_interrupt"]], "implementations.controller_classes.controller_nonMPI": [[67, 1, 1, "", "controller_nonMPI"]], "implementations.controller_classes.controller_nonMPI.controller_nonMPI": [[67, 3, 1, "", "default"], [67, 3, 1, "", "it_check"], [67, 3, 1, "", "it_coarse"], [67, 3, 1, "", "it_down"], [67, 3, 1, "", "it_fine"], [67, 3, 1, "", "it_up"], [67, 3, 1, "", "pfasst"], [67, 3, 1, "", "predict"], [67, 3, 1, "", "recv_full"], [67, 3, 1, "", "restart_block"], [67, 3, 1, "", "run"], [67, 3, 1, "", "send_full"], [67, 3, 1, "", "spread"]], "implementations.convergence_controller_classes": [[69, 0, 0, "-", "adaptive_collocation"], [70, 0, 0, "-", "adaptivity"], [71, 0, 0, "-", "basic_restarting"], [72, 0, 0, "-", "check_convergence"], [73, 0, 0, "-", "check_iteration_estimator"], [74, 0, 0, "-", "crash"], [75, 0, 0, "-", "estimate_contraction_factor"], [76, 0, 0, "-", "estimate_embedded_error"], [77, 0, 0, "-", "estimate_extrapolation_error"], [78, 0, 0, "-", "estimate_polynomial_error"], [79, 0, 0, "-", "hotrod"], [80, 0, 0, "-", "inexactness"], [81, 0, 0, "-", "interpolate_between_restarts"], [82, 0, 0, "-", "spread_step_sizes"], [83, 0, 0, "-", "step_size_limiter"], [84, 0, 0, "-", "store_uold"]], "implementations.convergence_controller_classes.adaptive_collocation": [[69, 1, 1, "", "AdaptiveCollocation"]], "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation": [[69, 3, 1, "", "check_parameters"], [69, 3, 1, "", "matmul"], [69, 3, 1, "", "post_iteration_processing"], [69, 3, 1, "", "post_spread_processing"], [69, 3, 1, "", "reset_status_variables"], [69, 3, 1, "", "setup"], [69, 3, 1, "", "setup_status_variables"], [69, 3, 1, "", "switch_sweeper"]], "implementations.convergence_controller_classes.adaptivity": [[70, 1, 1, "", "Adaptivity"], [70, 1, 1, "", "AdaptivityBase"], [70, 1, 1, "", "AdaptivityCollocation"], [70, 1, 1, "", "AdaptivityExtrapolationWithinQ"], [70, 1, 1, "", "AdaptivityForConvergedCollocationProblems"], [70, 1, 1, "", "AdaptivityPolynomialError"], [70, 1, 1, "", "AdaptivityRK"], [70, 1, 1, "", "AdaptivityResidual"]], "implementations.convergence_controller_classes.adaptivity.Adaptivity": [[70, 3, 1, "", "check_parameters"], [70, 3, 1, "", "dependencies"], [70, 3, 1, "", "get_local_error_estimate"], [70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityBase": [[70, 3, 1, "", "compute_optimal_step_size"], [70, 3, 1, "", "dependencies"], [70, 3, 1, "", "determine_restart"], [70, 3, 1, "", "get_local_error_estimate"], [70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation": [[70, 3, 1, "", "check_parameters"], [70, 3, 1, "", "dependencies"], [70, 3, 1, "", "determine_restart"], [70, 3, 1, "", "get_convergence"], [70, 3, 1, "", "get_local_error_estimate"], [70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "post_iteration_processing"], [70, 3, 1, "", "reset_status_variables"], [70, 3, 1, "", "setup"], [70, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ": [[70, 3, 1, "", "dependencies"], [70, 3, 1, "", "get_convergence"], [70, 3, 1, "", "get_local_error_estimate"], [70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems": [[70, 3, 1, "", "dependencies"], [70, 3, 1, "", "determine_restart"], [70, 3, 1, "", "get_convergence"], [70, 3, 1, "", "setup"], [70, 3, 1, "", "trigger_restart_upon_nonconvergence"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError": [[70, 3, 1, "", "dependencies"], [70, 3, 1, "", "get_convergence"], [70, 3, 1, "", "get_local_error_estimate"], [70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityRK": [[70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual": [[70, 3, 1, "", "check_parameters"], [70, 3, 1, "", "get_local_error_estimate"], [70, 3, 1, "", "get_new_step_size"], [70, 3, 1, "", "setup"], [70, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.basic_restarting": [[71, 1, 1, "", "BasicRestarting"], [71, 1, 1, "", "BasicRestartingMPI"], [71, 1, 1, "", "BasicRestartingNonMPI"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestarting": [[71, 3, 1, "", "dependencies"], [71, 3, 1, "", "determine_restart"], [71, 3, 1, "", "get_implementation"], [71, 3, 1, "", "reset_status_variables"], [71, 3, 1, "", "setup"], [71, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI": [[71, 3, 1, "", "determine_restart"], [71, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI": [[71, 3, 1, "", "determine_restart"], [71, 3, 1, "", "prepare_next_block"], [71, 3, 1, "", "reset_buffers_nonMPI"]], "implementations.convergence_controller_classes.check_convergence": [[72, 1, 1, "", "CheckConvergence"]], "implementations.convergence_controller_classes.check_convergence.CheckConvergence": [[72, 3, 1, "", "check_convergence"], [72, 3, 1, "", "check_iteration_status"], [72, 3, 1, "", "communicate_convergence"], [72, 3, 1, "", "dependencies"], [72, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.check_iteration_estimator": [[73, 1, 1, "", "CheckIterationEstimatorNonMPI"]], "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI": [[73, 3, 1, "", "check_iteration_status"], [73, 3, 1, "", "check_parameters"], [73, 3, 1, "", "dependencies"], [73, 3, 1, "", "reset_buffers_nonMPI"], [73, 3, 1, "", "setup"], [73, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.crash": [[74, 1, 1, "", "CrashBase"], [74, 1, 1, "", "StopAtMaxRuntime"], [74, 1, 1, "", "StopAtNan"]], "implementations.convergence_controller_classes.crash.CrashBase": [[74, 3, 1, "", "communicate_crash"]], "implementations.convergence_controller_classes.crash.StopAtMaxRuntime": [[74, 3, 1, "", "prepare_next_block"], [74, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.crash.StopAtNan": [[74, 3, 1, "", "prepare_next_block"], [74, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_contraction_factor": [[75, 1, 1, "", "EstimateContractionFactor"]], "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor": [[75, 3, 1, "", "dependencies"], [75, 3, 1, "", "post_iteration_processing"], [75, 3, 1, "", "pre_iteration_processing"], [75, 3, 1, "", "reset_status_variables"], [75, 3, 1, "", "setup"], [75, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error": [[76, 1, 1, "", "EstimateEmbeddedError"], [76, 1, 1, "", "EstimateEmbeddedErrorCollocation"], [76, 1, 1, "", "EstimateEmbeddedErrorLinearizedMPI"], [76, 1, 1, "", "EstimateEmbeddedErrorLinearizedNonMPI"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError": [[76, 3, 1, "", "dependencies"], [76, 3, 1, "", "estimate_embedded_error_serial"], [76, 3, 1, "", "get_implementation"], [76, 3, 1, "", "post_iteration_processing"], [76, 3, 1, "", "reset_status_variables"], [76, 3, 1, "", "setup"], [76, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation": [[76, 3, 1, "", "dependencies"], [76, 3, 1, "", "post_iteration_processing"], [76, 3, 1, "", "reset_status_variables"], [76, 3, 1, "", "setup"], [76, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI": [[76, 3, 1, "", "post_iteration_processing"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI": [[76, 3, 1, "", "post_iteration_processing"], [76, 3, 1, "", "reset_buffers_nonMPI"], [76, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_extrapolation_error": [[77, 1, 1, "", "EstimateExtrapolationErrorBase"], [77, 1, 1, "", "EstimateExtrapolationErrorNonMPI"], [77, 1, 1, "", "EstimateExtrapolationErrorWithinQ"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase": [[77, 3, 1, "", "check_parameters"], [77, 3, 1, "", "get_extrapolation_coefficients"], [77, 3, 1, "", "reset_status_variables"], [77, 3, 1, "", "setup"], [77, 3, 1, "", "setup_status_variables"], [77, 3, 1, "", "store_values"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI": [[77, 3, 1, "", "get_extrapolated_error"], [77, 3, 1, "", "get_extrapolated_solution"], [77, 3, 1, "", "post_iteration_processing"], [77, 3, 1, "", "prepare_next_block"], [77, 3, 1, "", "setup"], [77, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ": [[77, 3, 1, "", "post_iteration_processing"], [77, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_polynomial_error": [[78, 1, 1, "", "EstimatePolynomialError"]], "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError": [[78, 3, 1, "", "check_parameters"], [78, 3, 1, "", "matmul"], [78, 3, 1, "", "post_iteration_processing"], [78, 3, 1, "", "reset_status_variables"], [78, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.hotrod": [[79, 1, 1, "", "HotRod"]], "implementations.convergence_controller_classes.hotrod.HotRod": [[79, 3, 1, "", "check_parameters"], [79, 3, 1, "", "dependencies"], [79, 3, 1, "", "determine_restart"], [79, 3, 1, "", "post_iteration_processing"], [79, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.inexactness": [[80, 1, 1, "", "NewtonInexactness"]], "implementations.convergence_controller_classes.inexactness.NewtonInexactness": [[80, 3, 1, "", "dependencies"], [80, 3, 1, "", "post_iteration_processing"], [80, 3, 1, "", "set_maxiter"], [80, 3, 1, "", "set_tolerance"], [80, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.interpolate_between_restarts": [[81, 1, 1, "", "InterpolateBetweenRestarts"]], "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts": [[81, 3, 1, "", "post_iteration_processing"], [81, 3, 1, "", "post_spread_processing"], [81, 3, 1, "", "setup"], [81, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.spread_step_sizes": [[82, 1, 1, "", "SpreadStepSizesBlockwise"], [82, 1, 1, "", "SpreadStepSizesBlockwiseMPI"], [82, 1, 1, "", "SpreadStepSizesBlockwiseNonMPI"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise": [[82, 3, 1, "", "get_implementation"], [82, 3, 1, "", "get_step_from_which_to_spread"], [82, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI": [[82, 3, 1, "", "get_step_from_which_to_spread"], [82, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI": [[82, 3, 1, "", "get_step_from_which_to_spread"], [82, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.step_size_limiter": [[83, 1, 1, "", "StepSizeLimiter"], [83, 1, 1, "", "StepSizeSlopeLimiter"]], "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter": [[83, 3, 1, "", "dependencies"], [83, 3, 1, "", "get_new_step_size"], [83, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter": [[83, 3, 1, "", "get_new_step_size"], [83, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.store_uold": [[84, 1, 1, "", "StoreUOld"]], "implementations.convergence_controller_classes.store_uold.StoreUOld": [[84, 3, 1, "", "post_iteration_processing"], [84, 3, 1, "", "post_spread_processing"], [84, 3, 1, "", "setup"]], "implementations.datatype_classes": [[86, 0, 0, "-", "cupy_mesh"], [87, 0, 0, "-", "fenics_mesh"], [88, 0, 0, "-", "mesh"], [89, 0, 0, "-", "particles"], [90, 0, 0, "-", "petsc_vec"]], "implementations.datatype_classes.cupy_mesh": [[86, 1, 1, "", "comp2_cupy_mesh"], [86, 1, 1, "", "cupy_mesh"], [86, 1, 1, "", "imex_cupy_mesh"]], "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh": [[86, 2, 1, "", "comp1"], [86, 2, 1, "", "comp2"]], "implementations.datatype_classes.cupy_mesh.cupy_mesh": [[86, 3, 1, "", "bcast"], [86, 4, 1, "", "comm"], [86, 3, 1, "", "irecv"], [86, 3, 1, "", "isend"]], "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh": [[86, 2, 1, "", "expl"], [86, 2, 1, "", "impl"]], "implementations.datatype_classes.fenics_mesh": [[87, 1, 1, "", "fenics_mesh"], [87, 1, 1, "", "rhs_fenics_mesh"]], "implementations.datatype_classes.fenics_mesh.fenics_mesh": [[87, 2, 1, "", "values"]], "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh": [[87, 2, 1, "", "expl"], [87, 2, 1, "", "impl"]], "implementations.datatype_classes.mesh": [[88, 1, 1, "", "MultiComponentMesh"], [88, 1, 1, "", "comp2_mesh"], [88, 1, 1, "", "imex_mesh"], [88, 1, 1, "", "mesh"]], "implementations.datatype_classes.mesh.MultiComponentMesh": [[88, 2, 1, "", "components"]], "implementations.datatype_classes.mesh.comp2_mesh": [[88, 2, 1, "", "components"]], "implementations.datatype_classes.mesh.imex_mesh": [[88, 2, 1, "", "components"]], "implementations.datatype_classes.mesh.mesh": [[88, 2, 1, "", "_comm"], [88, 3, 1, "", "bcast"], [88, 4, 1, "", "comm"], [88, 3, 1, "", "irecv"], [88, 3, 1, "", "isend"]], "implementations.datatype_classes.particles": [[89, 1, 1, "", "acceleration"], [89, 1, 1, "", "fields"], [89, 1, 1, "", "particles"]], "implementations.datatype_classes.particles.fields": [[89, 2, 1, "", "elec"], [89, 1, 1, "", "electric"], [89, 2, 1, "", "magn"], [89, 1, 1, "", "magnetic"]], "implementations.datatype_classes.particles.particles": [[89, 3, 1, "", "isend"], [89, 2, 1, "", "pos"], [89, 1, 1, "", "position"], [89, 3, 1, "", "recv"], [89, 3, 1, "", "send"], [89, 2, 1, "", "vel"], [89, 1, 1, "", "velocity"]], "implementations.datatype_classes.petsc_vec": [[90, 1, 1, "", "petsc_vec"], [90, 1, 1, "", "petsc_vec_comp2"], [90, 1, 1, "", "petsc_vec_imex"]], "implementations.datatype_classes.petsc_vec.petsc_vec": [[90, 3, 1, "", "bcast"], [90, 3, 1, "", "irecv"], [90, 3, 1, "", "isend"]], "implementations.datatype_classes.petsc_vec.petsc_vec_comp2": [[90, 2, 1, "", "expl"], [90, 2, 1, "", "impl"]], "implementations.datatype_classes.petsc_vec.petsc_vec_imex": [[90, 2, 1, "", "expl"], [90, 2, 1, "", "impl"]], "implementations.problem_classes": [[92, 0, 0, "-", "AcousticAdvection_1D_FD_imex"], [93, 0, 0, "-", "AdvectionDiffusionEquation_1D_FFT"], [94, 0, 0, "-", "AdvectionEquation_ND_FD"], [95, 0, 0, "-", "AllenCahn_1D_FD"], [96, 0, 0, "-", "AllenCahn_2D_FD"], [98, 0, 0, "-", "AllenCahn_2D_FFT"], [99, 0, 0, "-", "AllenCahn_2D_FFT_gpu"], [100, 0, 0, "-", "AllenCahn_MPIFFT"], [101, 0, 0, "-", "AllenCahn_Temp_MPIFFT"], [102, 0, 0, "-", "Auzinger_implicit"], [103, 0, 0, "-", "Battery"], [104, 0, 0, "-", "Boussinesq_2D_FD_imex"], [105, 0, 0, "-", "Brusselator"], [106, 0, 0, "-", "BuckConverter"], [107, 0, 0, "-", "DiscontinuousTestODE"], [108, 0, 0, "-", "FastWaveSlowWave_0D"], [109, 0, 0, "-", "FermiPastaUlamTsingou"], [110, 0, 0, "-", "FullSolarSystem"], [111, 0, 0, "-", "GeneralizedFisher_1D_FD_implicit"], [112, 0, 0, "-", "GeneralizedFisher_1D_PETSc"], [113, 0, 0, "-", "GrayScott_1D_FEniCS_implicit"], [114, 0, 0, "-", "GrayScott_2D_PETSc_periodic"], [115, 0, 0, "-", "GrayScott_MPIFFT"], [116, 0, 0, "-", "HarmonicOscillator"], [117, 0, 0, "-", "HeatEquation_1D_FEniCS_matrix_forced"], [118, 0, 0, "-", "HeatEquation_2D_PETSc_forced"], [119, 0, 0, "-", "HeatEquation_ND_FD"], [121, 0, 0, "-", "HenonHeiles"], [122, 0, 0, "-", "LogisticEquation"], [123, 0, 0, "-", "Lorenz"], [124, 0, 0, "-", "NonlinearSchroedinger_MPIFFT"], [125, 0, 0, "-", "OuterSolarSystem"], [126, 0, 0, "-", "PenningTrap_3D"], [127, 0, 0, "-", "Piline"], [128, 0, 0, "-", "Quench"], [129, 0, 0, "-", "TestEquation_0D"], [130, 0, 0, "-", "Van_der_Pol_implicit"], [131, 0, 0, "-", "VorticityVelocity_2D_FEniCS_periodic"], [132, 0, 0, "-", "acoustic_helpers"], [136, 0, 0, "-", "boussinesq_helpers"], [143, 0, 0, "-", "generic_ND_FD"], [144, 0, 0, "-", "nonlinear_ODE_1"], [145, 0, 0, "-", "odeScalar"], [146, 0, 0, "-", "odeSystem"], [147, 0, 0, "-", "polynomial_test_problem"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex": [[92, 1, 1, "", "acoustic_1d_imex"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex": [[92, 2, 1, "", "A"], [92, 2, 1, "", "Dx"], [92, 2, 1, "", "Id"], [92, 2, 1, "", "dtype_f"], [92, 2, 1, "", "dtype_u"], [92, 2, 1, "", "dx"], [92, 3, 1, "", "eval_f"], [92, 2, 1, "", "mesh"], [92, 3, 1, "", "solve_system"], [92, 3, 1, "", "u_exact"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT": [[93, 1, 1, "", "advectiondiffusion1d_imex"], [93, 1, 1, "", "advectiondiffusion1d_implicit"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex": [[93, 2, 1, "", "ddx"], [93, 2, 1, "", "dtype_f"], [93, 2, 1, "", "dtype_u"], [93, 3, 1, "", "eval_f"], [93, 2, 1, "", "lap"], [93, 3, 1, "", "solve_system"], [93, 3, 1, "", "u_exact"], [93, 2, 1, "", "xvalues"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit": [[93, 2, 1, "", "dtype_f"], [93, 2, 1, "", "dtype_u"], [93, 3, 1, "", "eval_f"], [93, 3, 1, "", "solve_system"]], "implementations.problem_classes.AdvectionEquation_ND_FD": [[94, 1, 1, "", "advectionNd"]], "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd": [[94, 2, 1, "", "A"], [94, 2, 1, "", "Id"], [94, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_1D_FD": [[95, 1, 1, "", "allencahn_front_finel"], [95, 1, 1, "", "allencahn_front_fullyimplicit"], [95, 1, 1, "", "allencahn_front_semiimplicit"], [95, 1, 1, "", "allencahn_periodic_fullyimplicit"], [95, 1, 1, "", "allencahn_periodic_multiimplicit"], [95, 1, 1, "", "allencahn_periodic_semiimplicit"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel": [[95, 3, 1, "", "eval_f"], [95, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit": [[95, 2, 1, "", "A"], [95, 2, 1, "", "dtype_f"], [95, 2, 1, "", "dtype_u"], [95, 2, 1, "", "dx"], [95, 3, 1, "", "eval_f"], [95, 3, 1, "", "solve_system"], [95, 3, 1, "", "u_exact"], [95, 2, 1, "", "uext"], [95, 2, 1, "", "work_counters"], [95, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit": [[95, 2, 1, "", "dtype_f"], [95, 3, 1, "", "eval_f"], [95, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit": [[95, 2, 1, "", "A"], [95, 2, 1, "", "dtype_f"], [95, 2, 1, "", "dtype_u"], [95, 2, 1, "", "dx"], [95, 3, 1, "", "eval_f"], [95, 3, 1, "", "solve_system"], [95, 3, 1, "", "u_exact"], [95, 2, 1, "", "work_counters"], [95, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit": [[95, 2, 1, "", "dtype_f"], [95, 3, 1, "", "eval_f"], [95, 3, 1, "", "solve_system_1"], [95, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit": [[95, 2, 1, "", "dtype_f"], [95, 3, 1, "", "eval_f"], [95, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_2D_FD": [[96, 1, 1, "", "allencahn_fullyimplicit"], [96, 1, 1, "", "allencahn_multiimplicit"], [96, 1, 1, "", "allencahn_multiimplicit_v2"], [96, 1, 1, "", "allencahn_semiimplicit"], [96, 1, 1, "", "allencahn_semiimplicit_v2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit": [[96, 2, 1, "", "A"], [96, 2, 1, "", "dtype_f"], [96, 2, 1, "", "dtype_u"], [96, 2, 1, "", "dx"], [96, 3, 1, "", "eval_f"], [96, 2, 1, "", "lin_itercount"], [96, 2, 1, "", "lin_ncalls"], [96, 2, 1, "", "newton_itercount"], [96, 2, 1, "", "newton_ncalls"], [96, 3, 1, "", "solve_system"], [96, 3, 1, "", "u_exact"], [96, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system_1"], [96, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system_1"], [96, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"], [96, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_2D_FFT": [[98, 1, 1, "", "allencahn2d_imex"], [98, 1, 1, "", "allencahn2d_imex_stab"]], "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex": [[98, 2, 1, "", "dtype_f"], [98, 2, 1, "", "dtype_u"], [98, 2, 1, "", "dx"], [98, 3, 1, "", "eval_f"], [98, 2, 1, "", "lap"], [98, 3, 1, "", "solve_system"], [98, 3, 1, "", "u_exact"], [98, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab": [[98, 2, 1, "", "dx"], [98, 3, 1, "", "eval_f"], [98, 2, 1, "", "lap"], [98, 3, 1, "", "solve_system"], [98, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu": [[99, 1, 1, "", "allencahn2d_imex"], [99, 1, 1, "", "allencahn2d_imex_stab"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex": [[99, 2, 1, "", "dtype_f"], [99, 2, 1, "", "dtype_u"], [99, 2, 1, "", "dx"], [99, 3, 1, "", "eval_f"], [99, 2, 1, "", "lap"], [99, 3, 1, "", "solve_system"], [99, 3, 1, "", "u_exact"], [99, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab": [[99, 2, 1, "", "dx"], [99, 3, 1, "", "eval_f"], [99, 2, 1, "", "lap"], [99, 3, 1, "", "solve_system"], [99, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_MPIFFT": [[100, 1, 1, "", "allencahn_imex"], [100, 1, 1, "", "allencahn_imex_timeforcing"]], "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex": [[100, 2, 1, "", "K2"], [100, 2, 1, "", "X"], [100, 2, 1, "", "dtype_f"], [100, 2, 1, "", "dtype_u"], [100, 2, 1, "", "dx"], [100, 2, 1, "", "dy"], [100, 3, 1, "", "eval_f"], [100, 2, 1, "", "fft"], [100, 3, 1, "", "solve_system"], [100, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing": [[100, 3, 1, "", "eval_f"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT": [[101, 1, 1, "", "allencahn_temp_imex"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex": [[101, 2, 1, "", "D"], [101, 2, 1, "", "K2"], [101, 2, 1, "", "L"], [101, 2, 1, "", "TM"], [101, 2, 1, "", "X"], [101, 2, 1, "", "comm"], [101, 2, 1, "", "dtype_f"], [101, 2, 1, "", "dtype_u"], [101, 2, 1, "", "dw"], [101, 2, 1, "", "dx"], [101, 2, 1, "", "dy"], [101, 2, 1, "", "eps"], [101, 3, 1, "", "eval_f"], [101, 2, 1, "", "fft"], [101, 2, 1, "", "init_type"], [101, 2, 1, "", "nvars"], [101, 2, 1, "", "radius"], [101, 3, 1, "", "solve_system"], [101, 2, 1, "", "spectral"], [101, 3, 1, "", "u_exact"]], "implementations.problem_classes.Auzinger_implicit": [[102, 1, 1, "", "auzinger"]], "implementations.problem_classes.Auzinger_implicit.auzinger": [[102, 2, 1, "", "dtype_f"], [102, 2, 1, "", "dtype_u"], [102, 3, 1, "", "eval_f"], [102, 2, 1, "", "newton_maxiter"], [102, 2, 1, "", "newton_tol"], [102, 3, 1, "", "solve_system"], [102, 3, 1, "", "u_exact"]], "implementations.problem_classes.Battery": [[103, 1, 1, "", "battery"], [103, 1, 1, "", "battery_implicit"], [103, 1, 1, "", "battery_n_capacitors"]], "implementations.problem_classes.Battery.battery": [[103, 2, 1, "", "dtype_f"], [103, 3, 1, "", "eval_f"], [103, 3, 1, "", "solve_system"], [103, 3, 1, "", "u_exact"]], "implementations.problem_classes.Battery.battery_implicit": [[103, 2, 1, "", "dtype_f"], [103, 3, 1, "", "eval_f"], [103, 3, 1, "", "solve_system"], [103, 2, 1, "", "work_counters"]], "implementations.problem_classes.Battery.battery_n_capacitors": [[103, 2, 1, "", "A"], [103, 3, 1, "", "count_switches"], [103, 2, 1, "", "dtype_f"], [103, 2, 1, "", "dtype_u"], [103, 3, 1, "", "eval_f"], [103, 3, 1, "", "get_problem_dict"], [103, 3, 1, "", "get_switching_info"], [103, 2, 1, "", "nswitches"], [103, 3, 1, "", "solve_system"], [103, 2, 1, "", "switch_A"], [103, 2, 1, "", "switch_f"], [103, 2, 1, "", "t_switch"], [103, 3, 1, "", "u_exact"]], "implementations.problem_classes.Boussinesq_2D_FD_imex": [[104, 1, 1, "", "boussinesq_2d_imex"]], "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex": [[104, 2, 1, "", "D_upwind"], [104, 2, 1, "", "Id"], [104, 2, 1, "", "M"], [104, 2, 1, "", "N"], [104, 2, 1, "", "bc_hor"], [104, 2, 1, "", "bc_ver"], [104, 2, 1, "", "dtype_f"], [104, 2, 1, "", "dtype_u"], [104, 3, 1, "", "eval_f"], [104, 2, 1, "", "gmres_logger"], [104, 2, 1, "", "h"], [104, 3, 1, "", "solve_system"], [104, 3, 1, "", "u_exact"], [104, 2, 1, "", "xx"], [104, 2, 1, "", "zz"]], "implementations.problem_classes.Brusselator": [[105, 1, 1, "", "Brusselator"]], "implementations.problem_classes.Brusselator.Brusselator": [[105, 2, 1, "", "dtype_f"], [105, 2, 1, "", "dtype_u"], [105, 3, 1, "", "eval_f"], [105, 3, 1, "", "get_fig"], [105, 3, 1, "", "plot"], [105, 3, 1, "", "solve_system"], [105, 3, 1, "", "u_exact"]], "implementations.problem_classes.BuckConverter": [[106, 1, 1, "", "buck_converter"]], "implementations.problem_classes.BuckConverter.buck_converter": [[106, 2, 1, "", "A"], [106, 2, 1, "", "dtype_f"], [106, 2, 1, "", "dtype_u"], [106, 3, 1, "", "eval_f"], [106, 3, 1, "", "solve_system"], [106, 3, 1, "", "u_exact"]], "implementations.problem_classes.DiscontinuousTestODE": [[107, 1, 1, "", "DiscontinuousTestODE"]], "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE": [[107, 3, 1, "", "count_switches"], [107, 2, 1, "", "dtype_f"], [107, 2, 1, "", "dtype_u"], [107, 3, 1, "", "eval_f"], [107, 3, 1, "", "get_switching_info"], [107, 2, 1, "", "nswitches"], [107, 3, 1, "", "solve_system"], [107, 2, 1, "", "t_switch"], [107, 2, 1, "", "t_switch_exact"], [107, 3, 1, "", "u_exact"], [107, 2, 1, "", "work_counters"]], "implementations.problem_classes.FastWaveSlowWave_0D": [[108, 1, 1, "", "swfw_scalar"]], "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar": [[108, 2, 1, "", "dtype_f"], [108, 2, 1, "", "dtype_u"], [108, 3, 1, "", "eval_f"], [108, 3, 1, "", "solve_system"], [108, 3, 1, "", "u_exact"]], "implementations.problem_classes.FermiPastaUlamTsingou": [[109, 1, 1, "", "fermi_pasta_ulam_tsingou"]], "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou": [[109, 2, 1, "", "dtype_f"], [109, 2, 1, "", "dtype_u"], [109, 2, 1, "", "dx"], [109, 3, 1, "", "eval_f"], [109, 3, 1, "", "eval_hamiltonian"], [109, 3, 1, "", "eval_mode_energy"], [109, 2, 1, "", "ones"], [109, 3, 1, "", "u_exact"], [109, 2, 1, "", "xvalues"]], "implementations.problem_classes.FullSolarSystem": [[110, 1, 1, "", "full_solar_system"]], "implementations.problem_classes.FullSolarSystem.full_solar_system": [[110, 2, 1, "", "G"], [110, 2, 1, "", "dtype_f"], [110, 2, 1, "", "dtype_u"], [110, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit": [[111, 1, 1, "", "generalized_fisher"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher": [[111, 2, 1, "", "A"], [111, 2, 1, "", "dtype_f"], [111, 2, 1, "", "dtype_u"], [111, 2, 1, "", "dx"], [111, 3, 1, "", "eval_f"], [111, 3, 1, "", "solve_system"], [111, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc": [[112, 1, 1, "", "Fisher_full"], [112, 1, 1, "", "Fisher_reaction"], [112, 1, 1, "", "petsc_fisher_fullyimplicit"], [112, 1, 1, "", "petsc_fisher_multiimplicit"], [112, 1, 1, "", "petsc_fisher_semiimplicit"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full": [[112, 2, 1, "", "col"], [112, 3, 1, "", "formFunction"], [112, 3, 1, "", "formJacobian"], [112, 2, 1, "", "localX"], [112, 2, 1, "", "mx"], [112, 2, 1, "", "row"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction": [[112, 3, 1, "", "formFunction"], [112, 3, 1, "", "formJacobian"], [112, 2, 1, "", "localX"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit": [[112, 2, 1, "", "dtype_f"], [112, 3, 1, "", "eval_f"], [112, 3, 1, "", "solve_system"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit": [[112, 2, 1, "", "A"], [112, 2, 1, "", "F"], [112, 2, 1, "", "J"], [112, 2, 1, "", "dtype_f"], [112, 2, 1, "", "dtype_u"], [112, 2, 1, "", "dx"], [112, 3, 1, "", "eval_f"], [112, 3, 1, "", "get_sys_mat"], [112, 2, 1, "", "ksp"], [112, 2, 1, "", "localX"], [112, 2, 1, "", "snes"], [112, 3, 1, "", "solve_system_1"], [112, 3, 1, "", "solve_system_2"], [112, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit": [[112, 2, 1, "", "dtype_f"], [112, 3, 1, "", "eval_f"], [112, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit": [[113, 1, 1, "", "fenics_grayscott"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott": [[113, 2, 1, "", "F"], [113, 2, 1, "", "F1"], [113, 2, 1, "", "F2"], [113, 2, 1, "", "M"], [113, 2, 1, "", "V"], [113, 2, 1, "", "dtype_f"], [113, 2, 1, "", "dtype_u"], [113, 3, 1, "", "eval_f"], [113, 3, 1, "", "solve_system"], [113, 3, 1, "", "u_exact"], [113, 2, 1, "", "w"], [113, 2, 1, "", "w1"], [113, 2, 1, "", "w2"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic": [[114, 1, 1, "", "GS_full"], [114, 1, 1, "", "GS_reaction"], [114, 1, 1, "", "petsc_grayscott_fullyimplicit"], [114, 1, 1, "", "petsc_grayscott_multiimplicit"], [114, 1, 1, "", "petsc_grayscott_semiimplicit"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full": [[114, 3, 1, "", "formFunction"], [114, 3, 1, "", "formJacobian"], [114, 2, 1, "", "localX"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction": [[114, 3, 1, "", "formFunction"], [114, 3, 1, "", "formJacobian"], [114, 2, 1, "", "localX"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit": [[114, 2, 1, "", "dtype_f"], [114, 3, 1, "", "eval_f"], [114, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit": [[114, 2, 1, "", "AMat"], [114, 2, 1, "", "Id"], [114, 2, 1, "", "dtype_f"], [114, 2, 1, "", "dtype_u"], [114, 2, 1, "", "dx"], [114, 2, 1, "", "dy"], [114, 3, 1, "", "eval_f"], [114, 2, 1, "", "ksp"], [114, 2, 1, "", "localX"], [114, 2, 1, "", "snes"], [114, 2, 1, "", "snes_itercount"], [114, 2, 1, "", "snes_ncalls"], [114, 3, 1, "", "solve_system_1"], [114, 3, 1, "", "solve_system_2"], [114, 3, 1, "", "u_exact"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit": [[114, 2, 1, "", "dtype_f"], [114, 3, 1, "", "eval_f"], [114, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_MPIFFT": [[115, 1, 1, "", "grayscott_imex_diffusion"], [115, 1, 1, "", "grayscott_imex_linear"], [115, 1, 1, "", "grayscott_mi_diffusion"], [115, 1, 1, "", "grayscott_mi_linear"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion": [[115, 2, 1, "", "Ku"], [115, 2, 1, "", "Kv"], [115, 2, 1, "", "X"], [115, 2, 1, "", "dtype_f"], [115, 2, 1, "", "dtype_u"], [115, 3, 1, "", "eval_f"], [115, 2, 1, "", "fft"], [115, 2, 1, "", "ndim"], [115, 3, 1, "", "solve_system"], [115, 3, 1, "", "u_exact"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear": [[115, 3, 1, "", "eval_f"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion": [[115, 2, 1, "", "Ku"], [115, 2, 1, "", "Kv"], [115, 2, 1, "", "X"], [115, 2, 1, "", "dtype_f"], [115, 3, 1, "", "eval_f"], [115, 2, 1, "", "fft"], [115, 2, 1, "", "ndim"], [115, 3, 1, "", "solve_system_1"], [115, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear": [[115, 2, 1, "", "dtype_f"], [115, 3, 1, "", "eval_f"], [115, 3, 1, "", "solve_system_1"], [115, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.HarmonicOscillator": [[116, 1, 1, "", "harmonic_oscillator"]], "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator": [[116, 2, 1, "", "dtype_f"], [116, 2, 1, "", "dtype_u"], [116, 3, 1, "", "eval_f"], [116, 3, 1, "", "eval_hamiltonian"], [116, 3, 1, "", "u_exact"], [116, 3, 1, "", "u_init"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced": [[117, 1, 1, "", "fenics_heat"], [117, 1, 1, "", "fenics_heat_mass"], [117, 1, 1, "", "fenics_heat_mass_timebc"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat": [[117, 2, 1, "", "K"], [117, 2, 1, "", "M"], [117, 2, 1, "", "V"], [117, 3, 1, "", "apply_mass_matrix"], [117, 2, 1, "", "bc"], [117, 2, 1, "", "dtype_f"], [117, 2, 1, "", "dtype_u"], [117, 3, 1, "", "eval_f"], [117, 2, 1, "", "g"], [117, 3, 1, "", "solve_system"], [117, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass": [[117, 2, 1, "", "K"], [117, 2, 1, "", "M"], [117, 2, 1, "", "V"], [117, 2, 1, "", "bc"], [117, 2, 1, "", "bc_hom"], [117, 3, 1, "", "eval_f"], [117, 2, 1, "", "fix_bc_for_residual"], [117, 3, 1, "", "fix_residual"], [117, 2, 1, "", "g"], [117, 3, 1, "", "solve_system"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc": [[117, 2, 1, "", "K"], [117, 2, 1, "", "M"], [117, 2, 1, "", "V"], [117, 2, 1, "", "bc"], [117, 2, 1, "", "bc_hom"], [117, 2, 1, "", "fix_bc_for_residual"], [117, 2, 1, "", "g"], [117, 3, 1, "", "solve_system"], [117, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced": [[118, 1, 1, "", "heat2d_petsc_forced"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced": [[118, 2, 1, "", "A"], [118, 2, 1, "", "Id"], [118, 2, 1, "", "dtype_f"], [118, 2, 1, "", "dtype_u"], [118, 2, 1, "", "dx"], [118, 2, 1, "", "dy"], [118, 3, 1, "", "eval_f"], [118, 2, 1, "", "ksp"], [118, 2, 1, "", "ksp_itercount"], [118, 2, 1, "", "ksp_ncalls"], [118, 3, 1, "", "solve_system"], [118, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_ND_FD": [[119, 1, 1, "", "heatNd_forced"], [119, 1, 1, "", "heatNd_unforced"]], "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced": [[119, 2, 1, "", "dtype_f"], [119, 3, 1, "", "eval_f"], [119, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced": [[119, 2, 1, "", "A"], [119, 2, 1, "", "Id"], [119, 3, 1, "", "u_exact"]], "implementations.problem_classes.HenonHeiles": [[121, 1, 1, "", "henon_heiles"]], "implementations.problem_classes.HenonHeiles.henon_heiles": [[121, 2, 1, "", "dtype_f"], [121, 2, 1, "", "dtype_u"], [121, 3, 1, "", "eval_f"], [121, 3, 1, "", "eval_hamiltonian"], [121, 3, 1, "", "u_exact"]], "implementations.problem_classes.LogisticEquation": [[122, 1, 1, "", "logistics_equation"]], "implementations.problem_classes.LogisticEquation.logistics_equation": [[122, 2, 1, "", "dtype_f"], [122, 2, 1, "", "dtype_u"], [122, 3, 1, "", "eval_f"], [122, 3, 1, "", "solve_system"], [122, 3, 1, "", "u_exact"]], "implementations.problem_classes.Lorenz": [[123, 1, 1, "", "LorenzAttractor"]], "implementations.problem_classes.Lorenz.LorenzAttractor": [[123, 2, 1, "", "dtype_f"], [123, 2, 1, "", "dtype_u"], [123, 3, 1, "", "eval_f"], [123, 3, 1, "", "solve_system"], [123, 3, 1, "", "u_exact"], [123, 2, 1, "", "work_counter"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT": [[124, 1, 1, "", "nonlinearschroedinger_fully_implicit"], [124, 1, 1, "", "nonlinearschroedinger_imex"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit": [[124, 2, 1, "", "dtype_f"], [124, 2, 1, "", "dtype_u"], [124, 3, 1, "", "eval_f"], [124, 3, 1, "", "solve_system"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex": [[124, 2, 1, "", "K2"], [124, 2, 1, "", "X"], [124, 2, 1, "", "dtype_f"], [124, 2, 1, "", "dtype_u"], [124, 3, 1, "", "eval_f"], [124, 2, 1, "", "fft"], [124, 3, 1, "", "solve_system"], [124, 3, 1, "", "u_exact"]], "implementations.problem_classes.OuterSolarSystem": [[125, 1, 1, "", "outer_solar_system"]], "implementations.problem_classes.OuterSolarSystem.outer_solar_system": [[125, 2, 1, "id0", "G"], [125, 2, 1, "", "dtype_f"], [125, 2, 1, "", "dtype_u"], [125, 3, 1, "", "eval_f"], [125, 3, 1, "", "eval_hamiltonian"], [125, 3, 1, "", "u_exact"]], "implementations.problem_classes.PenningTrap_3D": [[126, 1, 1, "", "penningtrap"]], "implementations.problem_classes.PenningTrap_3D.penningtrap": [[126, 3, 1, "", "boris_solver"], [126, 3, 1, "", "build_f"], [126, 2, 1, "", "dtype_f"], [126, 2, 1, "", "dtype_u"], [126, 3, 1, "", "eval_f"], [126, 3, 1, "", "fast_interactions"], [126, 3, 1, "", "get_interactions"], [126, 3, 1, "", "u_exact"], [126, 3, 1, "", "u_init"], [126, 2, 1, "", "work_counter"]], "implementations.problem_classes.Piline": [[127, 1, 1, "", "piline"]], "implementations.problem_classes.Piline.piline": [[127, 2, 1, "", "dtype_f"], [127, 2, 1, "", "dtype_u"], [127, 3, 1, "", "eval_f"], [127, 3, 1, "", "solve_system"], [127, 3, 1, "", "u_exact"]], "implementations.problem_classes.Quench": [[128, 1, 1, "", "Quench"], [128, 1, 1, "", "QuenchIMEX"]], "implementations.problem_classes.Quench.Quench": [[128, 2, 1, "", "A"], [128, 2, 1, "", "Id"], [128, 2, 1, "", "dtype_f"], [128, 2, 1, "", "dtype_u"], [128, 2, 1, "", "dx"], [128, 3, 1, "", "eval_f"], [128, 3, 1, "", "eval_f_non_linear"], [128, 3, 1, "", "get_non_linear_Jacobian"], [128, 2, 1, "", "leak"], [128, 3, 1, "", "solve_system"], [128, 3, 1, "", "u_exact"], [128, 2, 1, "", "xv"]], "implementations.problem_classes.Quench.QuenchIMEX": [[128, 2, 1, "", "dtype_f"], [128, 3, 1, "", "eval_f"], [128, 3, 1, "", "solve_system"], [128, 3, 1, "", "u_exact"]], "implementations.problem_classes.TestEquation_0D": [[129, 1, 1, "", "testequation0d"]], "implementations.problem_classes.TestEquation_0D.testequation0d": [[129, 2, 1, "", "A"], [129, 2, 1, "", "dtype_f"], [129, 2, 1, "", "dtype_u"], [129, 3, 1, "", "eval_f"], [129, 3, 1, "", "setup_GPU"], [129, 3, 1, "", "solve_system"], [129, 3, 1, "", "u_exact"], [129, 2, 1, "", "xp"], [129, 2, 1, "", "xsp"]], "implementations.problem_classes.Van_der_Pol_implicit": [[130, 1, 1, "", "vanderpol"]], "implementations.problem_classes.Van_der_Pol_implicit.vanderpol": [[130, 2, 1, "", "dtype_f"], [130, 2, 1, "", "dtype_u"], [130, 3, 1, "", "eval_f"], [130, 3, 1, "", "solve_system"], [130, 3, 1, "", "u_exact"], [130, 2, 1, "", "work_counters"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic": [[131, 1, 1, "", "fenics_vortex_2d"], [131, 1, 1, "", "fenics_vortex_2d_mass"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d": [[131, 2, 1, "", "K"], [131, 2, 1, "", "M"], [131, 2, 1, "", "V"], [131, 3, 1, "", "apply_mass_matrix"], [131, 2, 1, "", "dtype_f"], [131, 2, 1, "", "dtype_u"], [131, 3, 1, "", "eval_f"], [131, 3, 1, "", "solve_system"], [131, 3, 1, "", "u_exact"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass": [[131, 2, 1, "", "K"], [131, 2, 1, "", "M"], [131, 2, 1, "", "V"], [131, 3, 1, "", "eval_f"], [131, 3, 1, "", "solve_system"]], "implementations.problem_classes.acoustic_helpers": [[133, 0, 0, "-", "buildFDMatrix"], [134, 0, 0, "-", "buildWave1DMatrix"], [135, 0, 0, "-", "standard_integrators"]], "implementations.problem_classes.acoustic_helpers.buildFDMatrix": [[133, 6, 1, "", "getBCLeft"], [133, 6, 1, "", "getBCRight"], [133, 6, 1, "", "getHorizontalDx"], [133, 6, 1, "", "getMatrix"]], "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix": [[134, 6, 1, "", "getWave1DAdvectionMatrix"], [134, 6, 1, "", "getWave1DMatrix"], [134, 6, 1, "", "getWaveBCLeft"], [134, 6, 1, "", "getWaveBCRight"]], "implementations.problem_classes.acoustic_helpers.standard_integrators": [[135, 1, 1, "", "bdf2"], [135, 1, 1, "", "dirk"], [135, 1, 1, "", "rk_imex"], [135, 1, 1, "", "trapezoidal"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2": [[135, 3, 1, "", "firsttimestep"], [135, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk": [[135, 3, 1, "", "f"], [135, 3, 1, "", "f_solve"], [135, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex": [[135, 3, 1, "", "f_fast"], [135, 3, 1, "", "f_fast_solve"], [135, 3, 1, "", "f_slow"], [135, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal": [[135, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers": [[137, 0, 0, "-", "build2DFDMatrix"], [138, 0, 0, "-", "buildBoussinesq2DMatrix"], [139, 0, 0, "-", "buildFDMatrix"], [140, 0, 0, "-", "helper_classes"], [141, 0, 0, "-", "standard_integrators"], [142, 0, 0, "-", "unflatten"]], "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix": [[137, 6, 1, "", "get2DMatrix"], [137, 6, 1, "", "get2DMesh"], [137, 6, 1, "", "get2DUpwindMatrix"], [137, 6, 1, "", "getBCHorizontal"], [137, 6, 1, "", "getBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix": [[138, 6, 1, "", "getBoussinesq2DMatrix"], [138, 6, 1, "", "getBoussinesq2DUpwindMatrix"], [138, 6, 1, "", "getBoussinesqBCHorizontal"], [138, 6, 1, "", "getBoussinesqBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildFDMatrix": [[139, 6, 1, "", "getBCLeft"], [139, 6, 1, "", "getBCRight"], [139, 6, 1, "", "getMatrix"], [139, 6, 1, "", "getUpwindMatrix"]], "implementations.problem_classes.boussinesq_helpers.helper_classes": [[140, 1, 1, "", "Callback"], [140, 1, 1, "", "logging"]], "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback": [[140, 3, 1, "", "getcounter"], [140, 3, 1, "", "getresidual"]], "implementations.problem_classes.boussinesq_helpers.helper_classes.logging": [[140, 3, 1, "", "add"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators": [[141, 1, 1, "", "SplitExplicit"], [141, 1, 1, "", "bdf2"], [141, 1, 1, "", "dirk"], [141, 1, 1, "", "rk_imex"], [141, 1, 1, "", "trapezoidal"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit": [[141, 3, 1, "", "NumSmallTimeSteps"], [141, 3, 1, "", "RK3Lin"], [141, 3, 1, "", "VerletLin"], [141, 3, 1, "", "f_fast"], [141, 3, 1, "", "f_fastMom"], [141, 3, 1, "", "f_fastTher"], [141, 3, 1, "", "f_slow"], [141, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2": [[141, 3, 1, "", "f"], [141, 3, 1, "", "f_solve"], [141, 3, 1, "", "firsttimestep"], [141, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk": [[141, 3, 1, "", "f"], [141, 3, 1, "", "f_solve"], [141, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex": [[141, 3, 1, "", "f_fast"], [141, 3, 1, "", "f_fast_solve"], [141, 3, 1, "", "f_slow"], [141, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal": [[141, 3, 1, "", "f"], [141, 3, 1, "", "f_solve"], [141, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.unflatten": [[142, 6, 1, "", "unflatten"]], "implementations.problem_classes.generic_ND_FD": [[143, 1, 1, "", "GenericNDimFinDiff"]], "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff": [[143, 2, 1, "", "A"], [143, 2, 1, "", "Id"], [143, 2, 1, "", "dtype_f"], [143, 2, 1, "", "dtype_u"], [143, 4, 1, "", "dx"], [143, 3, 1, "", "eval_f"], [143, 3, 1, "", "get_default_sweeper_class"], [143, 4, 1, "", "grids"], [143, 4, 1, "", "ndim"], [143, 3, 1, "", "solve_system"], [143, 2, 1, "", "xvalues"]], "implementations.problem_classes.nonlinear_ODE_1": [[144, 1, 1, "", "nonlinear_ODE_1"]], "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1": [[144, 2, 1, "", "dtype_f"], [144, 2, 1, "", "dtype_u"], [144, 3, 1, "", "eval_f"], [144, 2, 1, "", "newton_itercount"], [144, 2, 1, "", "newton_ncalls"], [144, 3, 1, "", "solve_system"], [144, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeScalar": [[145, 1, 1, "", "ProtheroRobinson"]], "implementations.problem_classes.odeScalar.ProtheroRobinson": [[145, 3, 1, "", "dg"], [145, 2, 1, "", "dtype_f"], [145, 2, 1, "", "dtype_u"], [145, 3, 1, "", "eval_f"], [145, 3, 1, "", "f"], [145, 3, 1, "", "f_LIN"], [145, 3, 1, "", "f_NONLIN"], [145, 3, 1, "", "g"], [145, 3, 1, "", "jac"], [145, 3, 1, "", "jac_LIN"], [145, 3, 1, "", "jac_NONLIN"], [145, 3, 1, "", "solve_system"], [145, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem": [[146, 1, 1, "", "ChemicalReaction3Var"], [146, 1, 1, "", "JacobiElliptic"], [146, 1, 1, "", "Kaps"], [146, 1, 1, "", "ProtheroRobinsonAutonomous"]], "implementations.problem_classes.odeSystem.ChemicalReaction3Var": [[146, 2, 1, "", "dtype_f"], [146, 2, 1, "", "dtype_u"], [146, 3, 1, "", "eval_f"], [146, 3, 1, "", "solve_system"], [146, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem.JacobiElliptic": [[146, 2, 1, "", "dtype_f"], [146, 2, 1, "", "dtype_u"], [146, 3, 1, "", "eval_f"], [146, 3, 1, "", "solve_system"], [146, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem.Kaps": [[146, 2, 1, "", "dtype_f"], [146, 2, 1, "", "dtype_u"], [146, 3, 1, "", "eval_f"], [146, 3, 1, "", "solve_system"], [146, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous": [[146, 3, 1, "", "dg"], [146, 3, 1, "", "dg2"], [146, 3, 1, "", "dgInv"], [146, 3, 1, "", "dgInv_LIN"], [146, 3, 1, "", "dgInv_NONLIN"], [146, 2, 1, "", "dtype_f"], [146, 2, 1, "", "dtype_u"], [146, 3, 1, "", "eval_f"], [146, 3, 1, "", "f"], [146, 3, 1, "", "f_LIN"], [146, 3, 1, "", "f_NONLIN"], [146, 3, 1, "", "g"], [146, 3, 1, "", "solve_system"], [146, 3, 1, "", "u_exact"]], "implementations.problem_classes.polynomial_test_problem": [[147, 1, 1, "", "polynomial_testequation"], [147, 1, 1, "", "polynomial_testequation_IMEX"]], "implementations.problem_classes.polynomial_test_problem.polynomial_testequation": [[147, 2, 1, "", "dtype_f"], [147, 2, 1, "", "dtype_u"], [147, 3, 1, "", "eval_f"], [147, 3, 1, "", "solve_system"], [147, 3, 1, "", "u_exact"]], "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX": [[147, 2, 1, "", "dtype_f"], [147, 3, 1, "", "eval_f"]], "implementations.sweeper_classes": [[149, 0, 0, "-", "Multistep"], [150, 0, 0, "-", "Runge_Kutta"], [151, 0, 0, "-", "Runge_Kutta_Nystrom"], [152, 0, 0, "-", "boris_2nd_order"], [153, 0, 0, "-", "explicit"], [154, 0, 0, "-", "generic_implicit"], [155, 0, 0, "-", "generic_implicit_MPI"], [156, 0, 0, "-", "imex_1st_order"], [157, 0, 0, "-", "imex_1st_order_MPI"], [158, 0, 0, "-", "imex_1st_order_mass"], [159, 0, 0, "-", "multi_implicit"], [160, 0, 0, "-", "verlet"]], "implementations.sweeper_classes.Multistep": [[149, 1, 1, "", "AdamsBashforthExplicit1Step"], [149, 1, 1, "", "AdamsMoultonImplicit1Step"], [149, 1, 1, "", "AdamsMoultonImplicit2Step"], [149, 1, 1, "", "BackwardEuler"], [149, 1, 1, "", "Cache"], [149, 1, 1, "", "MultiStep"]], "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step": [[149, 2, 1, "", "alpha"], [149, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step": [[149, 2, 1, "", "alpha"], [149, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step": [[149, 2, 1, "", "alpha"], [149, 2, 1, "", "beta"], [149, 3, 1, "", "generate_starting_values"]], "implementations.sweeper_classes.Multistep.BackwardEuler": [[149, 2, 1, "", "alpha"], [149, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.Cache": [[149, 3, 1, "", "update"]], "implementations.sweeper_classes.Multistep.MultiStep": [[149, 2, 1, "", "alpha"], [149, 2, 1, "", "beta"], [149, 3, 1, "", "compute_end_point"], [149, 3, 1, "", "compute_residual"], [149, 3, 1, "", "generate_starting_values"], [149, 3, 1, "", "predict"], [149, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.Runge_Kutta": [[150, 1, 1, "", "ARK54"], [150, 1, 1, "", "ARK548L2SA"], [150, 1, 1, "", "ARK548L2SAERK"], [150, 1, 1, "", "ARK548L2SAERK2"], [150, 1, 1, "", "ARK548L2SAESDIRK"], [150, 1, 1, "", "ARK548L2SAESDIRK2"], [150, 1, 1, "", "BackwardEuler"], [150, 1, 1, "", "ButcherTableau"], [150, 1, 1, "", "ButcherTableauEmbedded"], [150, 1, 1, "", "Cash_Karp"], [150, 1, 1, "", "CrankNicholson"], [150, 1, 1, "", "DIRK43"], [150, 1, 1, "", "ESDIRK43"], [150, 1, 1, "", "ESDIRK53"], [150, 1, 1, "", "ExplicitMidpointMethod"], [150, 1, 1, "", "ForwardEuler"], [150, 1, 1, "", "Heun_Euler"], [150, 1, 1, "", "ImplicitMidpointMethod"], [150, 1, 1, "", "RK4"], [150, 1, 1, "", "RungeKutta"], [150, 1, 1, "", "RungeKuttaIMEX"]], "implementations.sweeper_classes.Runge_Kutta.ARK54": [[150, 2, 1, "", "ButcherTableauClass"], [150, 2, 1, "", "ButcherTableauClass_explicit"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "matrix_explicit"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA": [[150, 2, 1, "", "ButcherTableauClass"], [150, 2, 1, "", "ButcherTableauClass_explicit"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "matrix_explicit"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2": [[150, 2, 1, "", "matrix"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK": [[150, 2, 1, "", "matrix"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2": [[150, 2, 1, "", "ButcherTableauClass"], [150, 2, 1, "", "gamma"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "i"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.BackwardEuler": [[150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.Cash_Karp": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.CrankNicholson": [[150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.DIRK43": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ESDIRK43": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "s2"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ESDIRK53": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod": [[150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ForwardEuler": [[150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.Heun_Euler": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "get_update_order"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod": [[150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RK4": [[150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RungeKutta": [[150, 2, 1, "", "ButcherTableauClass"], [150, 3, 1, "", "compute_end_point"], [150, 3, 1, "", "get_Butcher_tableau"], [150, 3, 1, "", "get_Q_matrix"], [150, 3, 1, "", "get_full_f"], [150, 3, 1, "", "get_update_order"], [150, 3, 1, "", "integrate"], [150, 4, 1, "", "level"], [150, 2, 1, "", "matrix"], [150, 2, 1, "", "nodes"], [150, 3, 1, "", "predict"], [150, 3, 1, "", "update_nodes"], [150, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX": [[150, 2, 1, "", "ButcherTableauClass_explicit"], [150, 3, 1, "", "get_Butcher_tableau_explicit"], [150, 3, 1, "", "integrate"], [150, 2, 1, "", "matrix_explicit"], [150, 3, 1, "", "predict"], [150, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom": [[151, 1, 1, "", "RKN"], [151, 1, 1, "", "RungeKuttaNystrom"], [151, 1, 1, "", "Velocity_Verlet"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom": [[151, 3, 1, "", "compute_end_point"], [151, 3, 1, "", "get_full_f"], [151, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.boris_2nd_order": [[152, 1, 1, "", "boris_2nd_order"]], "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order": [[152, 2, 1, "", "S"], [152, 2, 1, "", "SQ"], [152, 2, 1, "", "ST"], [152, 2, 1, "", "Sx"], [152, 3, 1, "", "compute_end_point"], [152, 3, 1, "", "get_scalar_problems_manysweep_mats"], [152, 3, 1, "", "get_scalar_problems_picardsweep_mats"], [152, 3, 1, "", "get_scalar_problems_sweeper_mats"], [152, 3, 1, "", "get_sweeper_mats"], [152, 3, 1, "", "integrate"], [152, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.explicit": [[153, 1, 1, "", "explicit"]], "implementations.sweeper_classes.explicit.explicit": [[153, 2, 1, "", "QE"], [153, 3, 1, "", "compute_end_point"], [153, 3, 1, "", "integrate"], [153, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.generic_implicit": [[154, 1, 1, "", "generic_implicit"]], "implementations.sweeper_classes.generic_implicit.generic_implicit": [[154, 2, 1, "", "QI"], [154, 3, 1, "", "compute_end_point"], [154, 3, 1, "", "integrate"], [154, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.generic_implicit_MPI": [[155, 1, 1, "", "SweeperMPI"], [155, 1, 1, "", "generic_implicit_MPI"]], "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI": [[155, 4, 1, "", "comm"], [155, 3, 1, "", "compute_end_point"], [155, 3, 1, "", "compute_residual"], [155, 3, 1, "", "predict"], [155, 4, 1, "", "rank"]], "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI": [[155, 3, 1, "", "compute_end_point"], [155, 3, 1, "", "integrate"], [155, 2, 1, "", "rank"], [155, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order": [[156, 1, 1, "", "imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order.imex_1st_order": [[156, 2, 1, "", "QE"], [156, 2, 1, "", "QI"], [156, 3, 1, "", "compute_end_point"], [156, 3, 1, "", "get_scalar_problems_manysweep_mat"], [156, 3, 1, "", "get_scalar_problems_sweeper_mats"], [156, 3, 1, "", "get_sweeper_mats"], [156, 3, 1, "", "integrate"], [156, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order_MPI": [[157, 1, 1, "", "imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI": [[157, 3, 1, "", "compute_end_point"], [157, 3, 1, "", "integrate"], [157, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order_mass": [[158, 1, 1, "", "imex_1st_order_mass"]], "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass": [[158, 3, 1, "", "compute_end_point"], [158, 3, 1, "", "compute_residual"], [158, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.multi_implicit": [[159, 1, 1, "", "multi_implicit"]], "implementations.sweeper_classes.multi_implicit.multi_implicit": [[159, 2, 1, "", "Q1"], [159, 2, 1, "", "Q2"], [159, 3, 1, "", "compute_end_point"], [159, 3, 1, "", "integrate"], [159, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.verlet": [[160, 1, 1, "", "verlet"]], "implementations.sweeper_classes.verlet.verlet": [[160, 2, 1, "", "QQ"], [160, 2, 1, "", "QT"], [160, 2, 1, "", "Qx"], [160, 3, 1, "", "compute_end_point"], [160, 3, 1, "", "integrate"], [160, 2, 1, "", "qQ"], [160, 3, 1, "", "update_nodes"]], "implementations.transfer_classes": [[162, 0, 0, "-", "BaseTransfer_mass"], [163, 0, 0, "-", "TransferFenicsMesh"], [164, 0, 0, "-", "TransferMesh"], [165, 0, 0, "-", "TransferMesh_FFT"], [166, 0, 0, "-", "TransferMesh_FFT2D"], [167, 0, 0, "-", "TransferMesh_MPIFFT"], [168, 0, 0, "-", "TransferMesh_NoCoarse"], [169, 0, 0, "-", "TransferPETScDMDA"], [170, 0, 0, "-", "TransferParticles_NoCoarse"]], "implementations.transfer_classes.BaseTransfer_mass": [[162, 1, 1, "", "base_transfer_mass"]], "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass": [[162, 2, 1, "", "coarse"], [162, 2, 1, "", "fine"], [162, 2, 1, "", "logger"], [162, 2, 1, "", "params"], [162, 3, 1, "", "prolong"], [162, 3, 1, "", "prolong_f"], [162, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferFenicsMesh": [[163, 1, 1, "", "mesh_to_mesh_fenics"]], "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics": [[163, 3, 1, "", "project"], [163, 3, 1, "", "prolong"], [163, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh": [[164, 1, 1, "", "mesh_to_mesh"]], "implementations.transfer_classes.TransferMesh.mesh_to_mesh": [[164, 2, 1, "", "Pspace"], [164, 2, 1, "", "Rspace"], [164, 3, 1, "", "prolong"], [164, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_FFT": [[165, 1, 1, "", "mesh_to_mesh_fft"]], "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft": [[165, 2, 1, "", "irfft_object_fine"], [165, 3, 1, "", "prolong"], [165, 3, 1, "", "restrict"], [165, 2, 1, "", "rfft_object_coarse"]], "implementations.transfer_classes.TransferMesh_FFT2D": [[166, 1, 1, "", "mesh_to_mesh_fft2d"]], "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d": [[166, 2, 1, "", "Pspace"], [166, 2, 1, "", "Rspace"], [166, 3, 1, "", "prolong"], [166, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_MPIFFT": [[167, 1, 1, "", "fft_to_fft"]], "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft": [[167, 3, 1, "", "prolong"], [167, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_NoCoarse": [[168, 1, 1, "", "mesh_to_mesh"]], "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh": [[168, 2, 1, "", "Pspace"], [168, 2, 1, "", "Rspace"], [168, 3, 1, "", "prolong"], [168, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferPETScDMDA": [[169, 1, 1, "", "mesh_to_mesh_petsc_dmda"]], "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda": [[169, 3, 1, "", "prolong"], [169, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferParticles_NoCoarse": [[170, 1, 1, "", "particles_to_particles"]], "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles": [[170, 3, 1, "", "prolong"], [170, 3, 1, "", "restrict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "contributor": 1, "coven": 1, "code": [1, 5, 8, 37], "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": [1, 7], "1": [1, 197], "correct": [1, 14, 38], "2": [1, 198], "warn": 1, "3": [1, 199], "temporari": 1, "ban": 1, "4": [1, 200], "perman": 1, "attribut": [1, 6], "how": [2, 3, 9], "contribut": [2, 3, 4, 9], "pysdc": [2, 3, 5, 6, 9, 18, 37, 198, 203], "welcom": [3, 9], "featur": [3, 4, 9], "get": [3, 9, 199], "start": [3, 9], "cite": [3, 9], "acknowledg": [3, 9], "recommend": 4, "pull": 4, "request": 4, "main": 4, "branch": 4, "releas": 4, "develop": 4, "continu": [5, 204], "integr": 5, "lint": 5, "test": [5, 9, 14, 15, 61, 197], "coverag": 5, "except": 5, "document": [5, 8, 9], "gener": 5, "name": 6, "convent": 6, "first": [6, 197, 198, 201], "definit": 6, "packag": [6, 39, 54, 64, 65, 68, 85, 91, 132, 136, 148, 161], "modul": [6, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "class": [6, 7, 77], "function": 6, "variabl": 6, "privat": 6, "public": [6, 38], "constant": 6, "custom": 7, "implement": [7, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "problem": [7, 10, 12, 35, 38, 50, 197], "user": 9, "guid": 9, "tutori": 9, "playground": 9, "project": [9, 11, 17], "api": 9, "allen": 10, "cahn": 10, "from": [10, 38], "bayreuth": 10, "verif": 10, "benchmark": 10, "applic": 10, "further": 10, "relat": 10, "file": 10, "solv": 11, "differenti": 11, "algebra": 11, "equat": [11, 16], "sdc": [11, 15, 16, 33, 35, 200, 204], "overview": 11, "theoret": [11, 33], "detail": 11, "second": [12, 38], "order": [12, 38], "simpl": 12, "solar": 12, "system": [12, 13], "fermi": 12, "pasta": 12, "ulam": 12, "tsingou": 12, "parallel": [13, 35, 202, 203], "time": [13, 203], "simul": 13, "multi": [13, 14, 204], "modal": 13, "energi": 13, "what": [13, 16], "ar": 13, "switch": 13, "process": 13, "power": 13, "pi": 13, "line": 13, "buck": 13, "convert": 13, "batteri": [13, 103], "drain": 13, "model": 13, "rdc": 14, "ration": 14, "defer": [14, 38], "converg": [14, 17], "level": [14, 48], "pfasst": [14, 17, 34, 201, 202], "resili": 15, "reproduct": 15, "plot": 15, "adapt": [15, 70], "paper": 15, "i": 16, "fastest": 16, "variant": 16, "fisher": 16, "grai": 16, "scott": 16, "asymptot": 17, "organis": 17, "compress": 18, "introduct": 18, "method": [18, 38], "proof": 18, "concept": 18, "fast": 33, "wave": 33, "slow": 33, "result": [33, 37], "acoust": 33, "advect": [33, 201], "exampl": 33, "boussinesq": 33, "matrix": 34, "base": [34, 77], "version": 34, "propag": 34, "attempt": 35, "differ": 35, "precondition": 35, "node": [35, 49, 199], "mpi": [35, 202], "simplifi": 35, "newton": 35, "nonlinear": 35, "perform": 37, "analysi": 37, "python": 37, "jobscript": 37, "spectral": 38, "reproduc": 38, "figur": 38, "contact": 38, "core": [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "submodul": [39, 54, 65, 68, 85, 91, 132, 136, 148, 161], "content": [39, 54, 64, 65, 68, 85, 91, 132, 136, 148, 161], "basetransf": 40, "colloc": [41, 197, 199], "common": 42, "descript": [42, 50], "control": [43, 202], "convergencecontrol": 44, "error": [45, 77], "hook": 46, "lagrang": 47, "spacetransf": 51, "step": [52, 197, 198, 199, 200, 201, 202, 203, 204], "sweeper": [53, 198, 199], "helper": [54, 55, 56, 57, 58, 59, 60, 61, 62, 63], "nccl_commun": 55, "plot_help": 56, "problem_help": 57, "pysdc_help": 58, "setup_help": 59, "stats_help": 60, "transfer_help": 62, "visualization_tool": 63, "subpackag": [64, 91], "controller_class": [65, 66, 67], "controller_mpi": 66, "controller_nonmpi": 67, "convergence_controller_class": [68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "adaptive_colloc": 69, "basic_restart": 71, "check_converg": 72, "check_iteration_estim": 73, "crash": 74, "estimate_contraction_factor": 75, "estimate_embedded_error": 76, "estimate_extrapolation_error": 77, "abstract": 77, "extrapol": 77, "estim": [77, 204], "estimate_polynomial_error": 78, "hotrod": 79, "inexact": 80, "interpolate_between_restart": 81, "spread_step_s": 82, "step_size_limit": 83, "store_uold": 84, "datatype_class": [85, 86, 87, 88, 89, 90], "cupy_mesh": 86, "fenics_mesh": 87, "mesh": 88, "particl": [89, 200], "petsc_vec": 90, "problem_class": [91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "acousticadvection_1d_fd_imex": 92, "advectiondiffusionequation_1d_fft": 93, "advectionequation_nd_fd": 94, "allencahn_1d_fd": 95, "allencahn_2d_fd": 96, "allencahn_2d_fd_gpu": 97, "allencahn_2d_fft": 98, "allencahn_2d_fft_gpu": 99, "allencahn_mpifft": 100, "allencahn_temp_mpifft": 101, "auzinger_implicit": 102, "boussinesq_2d_fd_imex": 104, "brussel": 105, "buckconvert": 106, "discontinuoustestod": 107, "fastwaveslowwave_0d": 108, "fermipastaulamtsing": 109, "fullsolarsystem": 110, "generalizedfisher_1d_fd_implicit": 111, "generalizedfisher_1d_petsc": 112, "grayscott_1d_fenics_implicit": 113, "grayscott_2d_petsc_period": 114, "grayscott_mpifft": 115, "harmonicoscil": 116, "heatequation_1d_fenics_matrix_forc": 117, "heatequation_2d_petsc_forc": 118, "heatequation_nd_fd": 119, "heatequation_nd_fd_cupi": 120, "henonheil": 121, "logisticequ": 122, "lorenz": 123, "nonlinearschroedinger_mpifft": 124, "outersolarsystem": 125, "penningtrap_3d": 126, "pilin": 127, "quench": 128, "testequation_0d": 129, "van_der_pol_implicit": 130, "vorticityvelocity_2d_fenics_period": 131, "acoustic_help": [132, 133, 134, 135], "buildfdmatrix": [133, 139], "buildwave1dmatrix": 134, "standard_integr": [135, 141], "boussinesq_help": [136, 137, 138, 139, 140, 141, 142], "build2dfdmatrix": 137, "buildboussinesq2dmatrix": 138, "helper_class": 140, "unflatten": 142, "generic_nd_fd": 143, "nonlinear_ode_1": 144, "odescalar": 145, "odesystem": 146, "polynomial_test_problem": 147, "sweeper_class": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "multistep": [149, 201], "runge_kutta": 150, "runge_kutta_nystrom": 151, "boris_2nd_ord": 152, "explicit": 153, "generic_implicit": 154, "generic_implicit_mpi": 155, "imex_1st_ord": 156, "imex_1st_order_mpi": 157, "imex_1st_order_mass": 158, "multi_implicit": 159, "verlet": 160, "transfer_class": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "basetransfer_mass": 162, "transferfenicsmesh": 163, "transfermesh": 164, "transfermesh_fft": 165, "transfermesh_fft2d": 166, "transfermesh_mpifft": 167, "transfermesh_nocoars": 168, "transferpetscdmda": 169, "transferparticles_nocoars": 170, "A": [197, 198, 199, 200, 201, 202, 203, 204], "spatial": [197, 200], "part": [197, 198, 199, 200, 201, 202, 203, 204], "setup": 197, "b": [197, 198, 199, 200, 201, 202, 203, 204], "accuraci": 197, "check": 197, "c": [197, 198, 199, 200, 201, 202, 203, 204], "d": [197, 200], "data": 198, "structur": 198, "my": [198, 201], "us": 198, "": 198, "frontend": 198, "statist": 199, "new": 199, "ad": 199, "studi": 199, "type": 199, "multilevel": [200, 201], "transfer": 200, "oper": 200, "hierarchi": [200, 201], "v": 200, "mlsdc": 200, "5": 201, "run": 201, "6": 202, "advanc": [202, 204], "The": 202, "nonmpi": 202, "odd": 202, "tempor": 202, "distribut": 202, "7": 203, "extern": 203, "librari": 203, "fenic": 203, "mpi4pi": 203, "fft": 203, "fourier": 203, "transform": 203, "space": 203, "petsc": 203, "8": 204, "topic": 204, "visual": 204, "residu": 204, "iter": 204, "x": 204, "To": 204}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Changelog": [[0, "changelog"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "How to contribute to pySDC": [[2, "how-to-contribute-to-pysdc"]], "Welcome to pySDC!": [[3, "welcome-to-pysdc"], [9, "welcome-to-pysdc"]], "Features": [[3, "features"], [9, "features"]], "Getting started": [[3, "getting-started"], [9, "getting-started"]], "How to cite": [[3, "how-to-cite"], [9, "how-to-cite"]], "Contributing": [[3, "contributing"], [9, "contributing"]], "Acknowledgements": [[3, "acknowledgements"], [9, "acknowledgements"]], "Recommendations for pull requests": [[4, "recommendations-for-pull-requests"]], "Contributing to the main branch": [[4, "contributing-to-the-main-branch"]], "Release development branches": [[4, "release-development-branches"]], "Feature development branches": [[4, "feature-development-branches"]], "Continuous Integration in pySDC": [[5, "continuous-integration-in-pysdc"]], "Code linting": [[5, "code-linting"]], "Code testing": [[5, "code-testing"]], "Code coverage": [[5, "code-coverage"]], "Coverage exceptions": [[5, "coverage-exceptions"]], "Documentation generation": [[5, "documentation-generation"]], "Naming conventions in pySDC": [[6, "naming-conventions-in-pysdc"]], "First definitions": [[6, "first-definitions"]], "Packages and modules names": [[6, "packages-and-modules-names"]], "Class names": [[6, "class-names"]], "Function and variables names": [[6, "function-and-variables-names"]], "Private and public attributes": [[6, "private-and-public-attributes"]], "Constants": [[6, "constants"]], "Custom implementation guidelines": [[7, "custom-implementation-guidelines"]], "Implementing a custom problem class": [[7, "implementing-a-custom-problem-class"]], "Documenting Code": [[8, "documenting-code"]], "Tests": [[9, "tests"], [15, "tests"]], "User Guide": [[9, "user-guide"]], "Tutorial": [[9, "tutorial"]], "Playgrounds": [[9, "playgrounds"]], "Projects": [[9, "projects"]], "API documentation": [[9, "api-documentation"]], "Allen-Cahn problems from Bayreuth": [[10, "allen-cahn-problems-from-bayreuth"]], "Verification": [[10, "verification"]], "Benchmark": [[10, "benchmark"]], "Application": [[10, "application"]], "Further/related files": [[10, "further-related-files"]], "Solving differential algebraic equations with SDC": [[11, "solving-differential-algebraic-equations-with-sdc"]], "Project overview": [[11, "project-overview"]], "Theoretical details": [[11, "theoretical-details"]], "Second-order Problems": [[12, "second-order-problems"]], "Simple problems": [[12, "simple-problems"]], "Solar system problem": [[12, "solar-system-problem"]], "Fermi-Pasta-Ulam-Tsingou problem": [[12, "fermi-pasta-ulam-tsingou-problem"]], "Parallel-in-time simulation for multi-modal energy systems": [[13, "parallel-in-time-simulation-for-multi-modal-energy-systems"]], "What are switching processes in power systems?": [[13, "what-are-switching-processes-in-power-systems"]], "Pi-line": [[13, "pi-line"]], "Buck converter": [[13, "buck-converter"]], "Battery drain model": [[13, "battery-drain-model"]], "RDC: Rational Deferred Corrections": [[14, "rdc-rational-deferred-corrections"]], "Testing RDC convergence": [[14, "testing-rdc-convergence"]], "Multi-level RDC and PFASST with RDC": [[14, "multi-level-rdc-and-pfasst-with-rdc"]], "Resilience in SDC": [[15, "resilience-in-sdc"]], "Reproduction of the plots in the adaptive SDC paper": [[15, "reproduction-of-the-plots-in-the-adaptive-sdc-paper"]], "What is the fastest SDC variant?": [[16, "what-is-the-fastest-sdc-variant"]], "Fisher and Gray-Scott equations": [[16, "fisher-and-gray-scott-equations"]], "Asymptotic convergence of PFASST": [[17, "asymptotic-convergence-of-pfasst"]], "Organisation of the project": [[17, "organisation-of-the-project"]], "Compression in pySDC": [[18, "compression-in-pysdc"]], "Introduction": [[18, "introduction"]], "Methods": [[18, "methods"]], "Proof of Concept": [[18, "proof-of-concept"]], "Fast-Wave-Slow-Wave SDC": [[33, "fast-wave-slow-wave-sdc"]], "Theoretical results": [[33, "theoretical-results"]], "Acoustic-advection example": [[33, "acoustic-advection-example"]], "Boussinesq example": [[33, "boussinesq-example"]], "Matrix-based versions of PFASST": [[34, "matrix-based-versions-of-pfasst"]], "Matrix-based PFASST": [[34, "matrix-based-pfasst"]], "Propagator-based PFASST": [[34, "propagator-based-pfasst"]], "Attempts to parallelize SDC": [[35, "attempts-to-parallelize-sdc"]], "Different preconditioners for SDC": [[35, "different-preconditioners-for-sdc"]], "Node-parallel SDC with MPI": [[35, "node-parallel-sdc-with-mpi"], [35, "id1"]], "Simplified Newton for nonlinear problems": [[35, "simplified-newton-for-nonlinear-problems"]], "Performance analysis of pySDC": [[37, "performance-analysis-of-pysdc"]], "Python codes": [[37, "python-codes"]], "Jobscripts": [[37, "jobscripts"]], "Results": [[37, "results"]], "Spectral Deferred Correction Methods for Second-Order Problems": [[38, "spectral-deferred-correction-methods-for-second-order-problems"]], "Reproducing Figures from the Publication": [[38, "reproducing-figures-from-the-publication"]], "Contact": [[38, "contact"]], "core package": [[39, "core-package"]], "Submodules": [[39, "submodules"], [54, "submodules"], [65, "submodules"], [68, "submodules"], [85, "submodules"], [91, "submodules"], [132, "submodules"], [136, "submodules"], [148, "submodules"], [161, "submodules"]], "Module contents": [[39, "module-core"], [54, "module-helpers"], [64, "module-implementations"], [65, "module-implementations.controller_classes"], [68, "module-implementations.convergence_controller_classes"], [85, "module-implementations.datatype_classes"], [91, "module-implementations.problem_classes"], [132, "module-implementations.problem_classes.acoustic_helpers"], [136, "module-implementations.problem_classes.boussinesq_helpers"], [148, "module-implementations.sweeper_classes"], [161, "module-implementations.transfer_classes"]], "core.BaseTransfer module": [[40, "module-core.BaseTransfer"]], "core.Collocation module": [[41, "module-core.Collocation"]], "core.Common module": [[42, "module-core.Common"]], "Description": [[42, "description"], [50, "description"]], "core.Controller module": [[43, "module-core.Controller"]], "core.ConvergenceController module": [[44, "module-core.ConvergenceController"]], "core.Errors module": [[45, "module-core.Errors"]], "core.Hooks module": [[46, "module-core.Hooks"]], "core.Lagrange module": [[47, "module-core.Lagrange"]], "core.Level module": [[48, "module-core.Level"]], "core.Nodes module": [[49, "module-core.Nodes"]], "core.Problem module": [[50, "module-core.Problem"]], "core.SpaceTransfer module": [[51, "module-core.SpaceTransfer"]], "core.Step module": [[52, "module-core.Step"]], "core.Sweeper module": [[53, "module-core.Sweeper"]], "helpers package": [[54, "helpers-package"]], "helpers.NCCL_communicator module": [[55, "module-helpers.NCCL_communicator"]], "helpers.plot_helper module": [[56, "module-helpers.plot_helper"]], "helpers.problem_helper module": [[57, "module-helpers.problem_helper"]], "helpers.pysdc_helper module": [[58, "module-helpers.pysdc_helper"]], "helpers.setup_helper module": [[59, "module-helpers.setup_helper"]], "helpers.stats_helper module": [[60, "module-helpers.stats_helper"]], "helpers.testing module": [[61, "module-helpers.testing"]], "helpers.transfer_helper module": [[62, "module-helpers.transfer_helper"]], "helpers.visualization_tools module": [[63, "module-helpers.visualization_tools"]], "implementations package": [[64, "implementations-package"]], "Subpackages": [[64, "subpackages"], [91, "subpackages"]], "implementations.controller_classes package": [[65, "implementations-controller-classes-package"]], "implementations.controller_classes.controller_MPI module": [[66, "module-implementations.controller_classes.controller_MPI"]], "implementations.controller_classes.controller_nonMPI module": [[67, "module-implementations.controller_classes.controller_nonMPI"]], "implementations.convergence_controller_classes package": [[68, "implementations-convergence-controller-classes-package"]], "implementations.convergence_controller_classes.adaptive_collocation module": [[69, "module-implementations.convergence_controller_classes.adaptive_collocation"]], "}": [[69, "id3"]], "implementations.convergence_controller_classes.adaptivity module": [[70, "module-implementations.convergence_controller_classes.adaptivity"]], "implementations.convergence_controller_classes.basic_restarting module": [[71, "module-implementations.convergence_controller_classes.basic_restarting"]], "implementations.convergence_controller_classes.check_convergence module": [[72, "module-implementations.convergence_controller_classes.check_convergence"]], "implementations.convergence_controller_classes.check_iteration_estimator module": [[73, "module-implementations.convergence_controller_classes.check_iteration_estimator"]], "implementations.convergence_controller_classes.crash module": [[74, "module-implementations.convergence_controller_classes.crash"]], "implementations.convergence_controller_classes.estimate_contraction_factor module": [[75, "module-implementations.convergence_controller_classes.estimate_contraction_factor"]], "implementations.convergence_controller_classes.estimate_embedded_error module": [[76, "module-implementations.convergence_controller_classes.estimate_embedded_error"]], "implementations.convergence_controller_classes.estimate_extrapolation_error module": [[77, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"]], "Abstract base class for extrapolated error estimates": [[77, "abstract-base-class-for-extrapolated-error-estimates"]], "implementations.convergence_controller_classes.estimate_polynomial_error module": [[78, "module-implementations.convergence_controller_classes.estimate_polynomial_error"]], "implementations.convergence_controller_classes.hotrod module": [[79, "module-implementations.convergence_controller_classes.hotrod"]], "implementations.convergence_controller_classes.inexactness module": [[80, "module-implementations.convergence_controller_classes.inexactness"]], "implementations.convergence_controller_classes.interpolate_between_restarts module": [[81, "module-implementations.convergence_controller_classes.interpolate_between_restarts"]], "implementations.convergence_controller_classes.spread_step_sizes module": [[82, "module-implementations.convergence_controller_classes.spread_step_sizes"]], "implementations.convergence_controller_classes.step_size_limiter module": [[83, "module-implementations.convergence_controller_classes.step_size_limiter"]], "implementations.convergence_controller_classes.store_uold module": [[84, "module-implementations.convergence_controller_classes.store_uold"]], "implementations.datatype_classes package": [[85, "implementations-datatype-classes-package"]], "implementations.datatype_classes.cupy_mesh module": [[86, "module-implementations.datatype_classes.cupy_mesh"]], "implementations.datatype_classes.fenics_mesh module": [[87, "module-implementations.datatype_classes.fenics_mesh"]], "implementations.datatype_classes.mesh module": [[88, "module-implementations.datatype_classes.mesh"]], "implementations.datatype_classes.particles module": [[89, "module-implementations.datatype_classes.particles"]], "implementations.datatype_classes.petsc_vec module": [[90, "module-implementations.datatype_classes.petsc_vec"]], "implementations.problem_classes package": [[91, "implementations-problem-classes-package"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex module": [[92, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT module": [[93, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"]], "implementations.problem_classes.AdvectionEquation_ND_FD module": [[94, "module-implementations.problem_classes.AdvectionEquation_ND_FD"]], "implementations.problem_classes.AllenCahn_1D_FD module": [[95, "module-implementations.problem_classes.AllenCahn_1D_FD"]], "implementations.problem_classes.AllenCahn_2D_FD module": [[96, "module-implementations.problem_classes.AllenCahn_2D_FD"]], "implementations.problem_classes.AllenCahn_2D_FD_gpu module": [[97, "implementations-problem-classes-allencahn-2d-fd-gpu-module"]], "implementations.problem_classes.AllenCahn_2D_FFT module": [[98, "module-implementations.problem_classes.AllenCahn_2D_FFT"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu module": [[99, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"]], "implementations.problem_classes.AllenCahn_MPIFFT module": [[100, "module-implementations.problem_classes.AllenCahn_MPIFFT"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT module": [[101, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"]], "implementations.problem_classes.Auzinger_implicit module": [[102, "module-implementations.problem_classes.Auzinger_implicit"]], "implementations.problem_classes.Battery module": [[103, "module-implementations.problem_classes.Battery"]], "implementations.problem_classes.Boussinesq_2D_FD_imex module": [[104, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"]], "implementations.problem_classes.Brusselator module": [[105, "module-implementations.problem_classes.Brusselator"]], "implementations.problem_classes.BuckConverter module": [[106, "module-implementations.problem_classes.BuckConverter"]], "implementations.problem_classes.DiscontinuousTestODE module": [[107, "module-implementations.problem_classes.DiscontinuousTestODE"]], "implementations.problem_classes.FastWaveSlowWave_0D module": [[108, "module-implementations.problem_classes.FastWaveSlowWave_0D"]], "implementations.problem_classes.FermiPastaUlamTsingou module": [[109, "module-implementations.problem_classes.FermiPastaUlamTsingou"]], "implementations.problem_classes.FullSolarSystem module": [[110, "module-implementations.problem_classes.FullSolarSystem"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit module": [[111, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc module": [[112, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit module": [[113, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic module": [[114, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"]], "implementations.problem_classes.GrayScott_MPIFFT module": [[115, "module-implementations.problem_classes.GrayScott_MPIFFT"]], "implementations.problem_classes.HarmonicOscillator module": [[116, "module-implementations.problem_classes.HarmonicOscillator"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced module": [[117, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced module": [[118, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"]], "implementations.problem_classes.HeatEquation_ND_FD module": [[119, "module-implementations.problem_classes.HeatEquation_ND_FD"]], "implementations.problem_classes.HeatEquation_ND_FD_CuPy module": [[120, "implementations-problem-classes-heatequation-nd-fd-cupy-module"]], "implementations.problem_classes.HenonHeiles module": [[121, "module-implementations.problem_classes.HenonHeiles"]], "implementations.problem_classes.LogisticEquation module": [[122, "module-implementations.problem_classes.LogisticEquation"]], "implementations.problem_classes.Lorenz module": [[123, "module-implementations.problem_classes.Lorenz"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT module": [[124, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"]], "implementations.problem_classes.OuterSolarSystem module": [[125, "module-implementations.problem_classes.OuterSolarSystem"]], "implementations.problem_classes.PenningTrap_3D module": [[126, "module-implementations.problem_classes.PenningTrap_3D"]], "implementations.problem_classes.Piline module": [[127, "module-implementations.problem_classes.Piline"]], "implementations.problem_classes.Quench module": [[128, "module-implementations.problem_classes.Quench"]], "implementations.problem_classes.TestEquation_0D module": [[129, "module-implementations.problem_classes.TestEquation_0D"]], "implementations.problem_classes.Van_der_Pol_implicit module": [[130, "module-implementations.problem_classes.Van_der_Pol_implicit"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic module": [[131, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"]], "implementations.problem_classes.acoustic_helpers package": [[132, "implementations-problem-classes-acoustic-helpers-package"]], "implementations.problem_classes.acoustic_helpers.buildFDMatrix module": [[133, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"]], "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix module": [[134, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"]], "implementations.problem_classes.acoustic_helpers.standard_integrators module": [[135, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"]], "implementations.problem_classes.boussinesq_helpers package": [[136, "implementations-problem-classes-boussinesq-helpers-package"]], "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix module": [[137, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix module": [[138, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildFDMatrix module": [[139, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"]], "implementations.problem_classes.boussinesq_helpers.helper_classes module": [[140, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators module": [[141, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"]], "implementations.problem_classes.boussinesq_helpers.unflatten module": [[142, "module-implementations.problem_classes.boussinesq_helpers.unflatten"]], "implementations.problem_classes.generic_ND_FD module": [[143, "module-implementations.problem_classes.generic_ND_FD"]], "implementations.problem_classes.nonlinear_ODE_1 module": [[144, "module-implementations.problem_classes.nonlinear_ODE_1"]], "implementations.problem_classes.odeScalar module": [[145, "module-implementations.problem_classes.odeScalar"]], "implementations.problem_classes.odeSystem module": [[146, "module-implementations.problem_classes.odeSystem"]], "implementations.problem_classes.polynomial_test_problem module": [[147, "module-implementations.problem_classes.polynomial_test_problem"]], "implementations.sweeper_classes package": [[148, "implementations-sweeper-classes-package"]], "implementations.sweeper_classes.Multistep module": [[149, "module-implementations.sweeper_classes.Multistep"]], "implementations.sweeper_classes.Runge_Kutta module": [[150, "module-implementations.sweeper_classes.Runge_Kutta"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom module": [[151, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"]], "implementations.sweeper_classes.boris_2nd_order module": [[152, "module-implementations.sweeper_classes.boris_2nd_order"]], "implementations.sweeper_classes.explicit module": [[153, "module-implementations.sweeper_classes.explicit"]], "implementations.sweeper_classes.generic_implicit module": [[154, "module-implementations.sweeper_classes.generic_implicit"]], "implementations.sweeper_classes.generic_implicit_MPI module": [[155, "module-implementations.sweeper_classes.generic_implicit_MPI"]], "implementations.sweeper_classes.imex_1st_order module": [[156, "module-implementations.sweeper_classes.imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order_MPI module": [[157, "module-implementations.sweeper_classes.imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_mass module": [[158, "module-implementations.sweeper_classes.imex_1st_order_mass"]], "implementations.sweeper_classes.multi_implicit module": [[159, "module-implementations.sweeper_classes.multi_implicit"]], "implementations.sweeper_classes.verlet module": [[160, "module-implementations.sweeper_classes.verlet"]], "implementations.transfer_classes package": [[161, "implementations-transfer-classes-package"]], "implementations.transfer_classes.BaseTransfer_mass module": [[162, "module-implementations.transfer_classes.BaseTransfer_mass"]], "implementations.transfer_classes.TransferFenicsMesh module": [[163, "module-implementations.transfer_classes.TransferFenicsMesh"]], "implementations.transfer_classes.TransferMesh module": [[164, "module-implementations.transfer_classes.TransferMesh"]], "implementations.transfer_classes.TransferMesh_FFT module": [[165, "module-implementations.transfer_classes.TransferMesh_FFT"]], "implementations.transfer_classes.TransferMesh_FFT2D module": [[166, "module-implementations.transfer_classes.TransferMesh_FFT2D"]], "implementations.transfer_classes.TransferMesh_MPIFFT module": [[167, "module-implementations.transfer_classes.TransferMesh_MPIFFT"]], "implementations.transfer_classes.TransferMesh_NoCoarse module": [[168, "module-implementations.transfer_classes.TransferMesh_NoCoarse"]], "implementations.transfer_classes.TransferPETScDMDA module": [[169, "module-implementations.transfer_classes.TransferPETScDMDA"]], "implementations.transfer_classes.TransferParticles_NoCoarse module": [[170, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "Step-1: A first spatial problem": [[197, "step-1-a-first-spatial-problem"]], "Part A: Spatial problem setup": [[197, "part-a-spatial-problem-setup"]], "Part B: Spatial accuracy check": [[197, "part-b-spatial-accuracy-check"]], "Part C: Collocation problem setup": [[197, "part-c-collocation-problem-setup"]], "Part D: Collocation accuracy test": [[197, "part-d-collocation-accuracy-test"]], "Step-2: Data structures and my first sweeper": [[198, "step-2-data-structures-and-my-first-sweeper"]], "Part A: Step data structure": [[198, "part-a-step-data-structure"]], "Part B: My first sweeper": [[198, "part-b-my-first-sweeper"]], "Part C: Using pySDC\u2019s frontend": [[198, "part-c-using-pysdc-s-frontend"]], "Step-3: Statistics and a new sweeper": [[199, "step-3-statistics-and-a-new-sweeper"]], "Part A: Getting statistics": [[199, "part-a-getting-statistics"]], "Part B: Adding statistics": [[199, "part-b-adding-statistics"]], "Part C: Studying collocation node types": [[199, "part-c-studying-collocation-node-types"]], "Step-4: Multilevel SDC": [[200, "step-4-multilevel-sdc"]], "Part A: Spatial transfer operators": [[200, "part-a-spatial-transfer-operators"]], "Part B: Multilevel hierarchy": [[200, "part-b-multilevel-hierarchy"]], "Part C: SDC vs. MLSDC": [[200, "part-c-sdc-vs-mlsdc"]], "Part D: MLSDC with particles": [[200, "part-d-mlsdc-with-particles"]], "Step-5: PFASST": [[201, "step-5-pfasst"]], "Part A: Multistep multilevel hierarchy": [[201, "part-a-multistep-multilevel-hierarchy"]], "Part B: My first PFASST run": [[201, "part-b-my-first-pfasst-run"]], "Part C: Advection and PFASST": [[201, "part-c-advection-and-pfasst"]], "Step-6: Advanced PFASST controllers": [[202, "step-6-advanced-pfasst-controllers"]], "Part A: The nonMPI controller": [[202, "part-a-the-nonmpi-controller"]], "Part B: Odd temporal distribution": [[202, "part-b-odd-temporal-distribution"]], "Part C: MPI parallelization": [[202, "part-c-mpi-parallelization"]], "Step-7: pySDC with external libraries": [[203, "step-7-pysdc-with-external-libraries"]], "Part A: pySDC and FEniCS": [[203, "part-a-pysdc-and-fenics"]], "Part B: mpi4py-fft for parallel Fourier transforms": [[203, "part-b-mpi4py-fft-for-parallel-fourier-transforms"]], "Part C: Time-parallel pySDC with space-parallel PETSc": [[203, "part-c-time-parallel-pysdc-with-space-parallel-petsc"]], "Step-8: Advanced topics": [[204, "step-8-advanced-topics"]], "Part A: Visualizing Residuals": [[204, "part-a-visualizing-residuals"]], "Part B: Multi-step SDC": [[204, "part-b-multi-step-sdc"]], "Part C: Iteration estimator": [[204, "part-c-iteration-estimator"]], "Part X: To be continued\u2026": [[204, "part-x-to-be-continued"]]}, "indexentries": {"core": [[39, "module-core"]], "module": [[39, "module-core"], [40, "module-core.BaseTransfer"], [41, "module-core.Collocation"], [42, "module-core.Common"], [43, "module-core.Controller"], [44, "module-core.ConvergenceController"], [45, "module-core.Errors"], [46, "module-core.Hooks"], [47, "module-core.Lagrange"], [48, "module-core.Level"], [49, "module-core.Nodes"], [50, "module-core.Problem"], [51, "module-core.SpaceTransfer"], [52, "module-core.Step"], [53, "module-core.Sweeper"], [54, "module-helpers"], [55, "module-helpers.NCCL_communicator"], [56, "module-helpers.plot_helper"], [57, "module-helpers.problem_helper"], [58, "module-helpers.pysdc_helper"], [59, "module-helpers.setup_helper"], [60, "module-helpers.stats_helper"], [61, "module-helpers.testing"], [62, "module-helpers.transfer_helper"], [63, "module-helpers.visualization_tools"], [64, "module-implementations"], [65, "module-implementations.controller_classes"], [66, "module-implementations.controller_classes.controller_MPI"], [67, "module-implementations.controller_classes.controller_nonMPI"], [68, "module-implementations.convergence_controller_classes"], [69, "module-implementations.convergence_controller_classes.adaptive_collocation"], [70, "module-implementations.convergence_controller_classes.adaptivity"], [71, "module-implementations.convergence_controller_classes.basic_restarting"], [72, "module-implementations.convergence_controller_classes.check_convergence"], [73, "module-implementations.convergence_controller_classes.check_iteration_estimator"], [74, "module-implementations.convergence_controller_classes.crash"], [75, "module-implementations.convergence_controller_classes.estimate_contraction_factor"], [76, "module-implementations.convergence_controller_classes.estimate_embedded_error"], [77, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"], [78, "module-implementations.convergence_controller_classes.estimate_polynomial_error"], [79, "module-implementations.convergence_controller_classes.hotrod"], [80, "module-implementations.convergence_controller_classes.inexactness"], [81, "module-implementations.convergence_controller_classes.interpolate_between_restarts"], [82, "module-implementations.convergence_controller_classes.spread_step_sizes"], [83, "module-implementations.convergence_controller_classes.step_size_limiter"], [84, "module-implementations.convergence_controller_classes.store_uold"], [85, "module-implementations.datatype_classes"], [86, "module-implementations.datatype_classes.cupy_mesh"], [87, "module-implementations.datatype_classes.fenics_mesh"], [88, "module-implementations.datatype_classes.mesh"], [89, "module-implementations.datatype_classes.particles"], [90, "module-implementations.datatype_classes.petsc_vec"], [91, "module-implementations.problem_classes"], [92, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"], [93, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"], [94, "module-implementations.problem_classes.AdvectionEquation_ND_FD"], [95, "module-implementations.problem_classes.AllenCahn_1D_FD"], [96, "module-implementations.problem_classes.AllenCahn_2D_FD"], [98, "module-implementations.problem_classes.AllenCahn_2D_FFT"], [99, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"], [100, "module-implementations.problem_classes.AllenCahn_MPIFFT"], [101, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"], [102, "module-implementations.problem_classes.Auzinger_implicit"], [103, "module-implementations.problem_classes.Battery"], [104, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"], [105, "module-implementations.problem_classes.Brusselator"], [106, "module-implementations.problem_classes.BuckConverter"], [107, "module-implementations.problem_classes.DiscontinuousTestODE"], [108, "module-implementations.problem_classes.FastWaveSlowWave_0D"], [109, "module-implementations.problem_classes.FermiPastaUlamTsingou"], [110, "module-implementations.problem_classes.FullSolarSystem"], [111, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"], [112, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"], [113, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"], [114, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"], [115, "module-implementations.problem_classes.GrayScott_MPIFFT"], [116, "module-implementations.problem_classes.HarmonicOscillator"], [117, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"], [118, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"], [119, "module-implementations.problem_classes.HeatEquation_ND_FD"], [121, "module-implementations.problem_classes.HenonHeiles"], [122, "module-implementations.problem_classes.LogisticEquation"], [123, "module-implementations.problem_classes.Lorenz"], [124, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"], [125, "module-implementations.problem_classes.OuterSolarSystem"], [126, "module-implementations.problem_classes.PenningTrap_3D"], [127, "module-implementations.problem_classes.Piline"], [128, "module-implementations.problem_classes.Quench"], [129, "module-implementations.problem_classes.TestEquation_0D"], [130, "module-implementations.problem_classes.Van_der_Pol_implicit"], [131, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"], [132, "module-implementations.problem_classes.acoustic_helpers"], [133, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"], [134, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"], [135, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"], [136, "module-implementations.problem_classes.boussinesq_helpers"], [137, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"], [138, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"], [139, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"], [140, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"], [141, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"], [142, "module-implementations.problem_classes.boussinesq_helpers.unflatten"], [143, "module-implementations.problem_classes.generic_ND_FD"], [144, "module-implementations.problem_classes.nonlinear_ODE_1"], [145, "module-implementations.problem_classes.odeScalar"], [146, "module-implementations.problem_classes.odeSystem"], [147, "module-implementations.problem_classes.polynomial_test_problem"], [148, "module-implementations.sweeper_classes"], [149, "module-implementations.sweeper_classes.Multistep"], [150, "module-implementations.sweeper_classes.Runge_Kutta"], [151, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"], [152, "module-implementations.sweeper_classes.boris_2nd_order"], [153, "module-implementations.sweeper_classes.explicit"], [154, "module-implementations.sweeper_classes.generic_implicit"], [155, "module-implementations.sweeper_classes.generic_implicit_MPI"], [156, "module-implementations.sweeper_classes.imex_1st_order"], [157, "module-implementations.sweeper_classes.imex_1st_order_MPI"], [158, "module-implementations.sweeper_classes.imex_1st_order_mass"], [159, "module-implementations.sweeper_classes.multi_implicit"], [160, "module-implementations.sweeper_classes.verlet"], [161, "module-implementations.transfer_classes"], [162, "module-implementations.transfer_classes.BaseTransfer_mass"], [163, "module-implementations.transfer_classes.TransferFenicsMesh"], [164, "module-implementations.transfer_classes.TransferMesh"], [165, "module-implementations.transfer_classes.TransferMesh_FFT"], [166, "module-implementations.transfer_classes.TransferMesh_FFT2D"], [167, "module-implementations.transfer_classes.TransferMesh_MPIFFT"], [168, "module-implementations.transfer_classes.TransferMesh_NoCoarse"], [169, "module-implementations.transfer_classes.TransferPETScDMDA"], [170, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "base_transfer (class in core.basetransfer)": [[40, "core.BaseTransfer.base_transfer"]], "coarse (base_transfer attribute)": [[40, "core.BaseTransfer.base_transfer.coarse"]], "core.basetransfer": [[40, "module-core.BaseTransfer"]], "fine (base_transfer attribute)": [[40, "core.BaseTransfer.base_transfer.fine"]], "get_transfer_matrix_q() (base_transfer static method)": [[40, "core.BaseTransfer.base_transfer.get_transfer_matrix_Q"]], "logger (base_transfer attribute)": [[40, "core.BaseTransfer.base_transfer.logger"]], "params (base_transfer attribute)": [[40, "core.BaseTransfer.base_transfer.params"]], "prolong() (base_transfer method)": [[40, "core.BaseTransfer.base_transfer.prolong"]], "prolong_f() (base_transfer method)": [[40, "core.BaseTransfer.base_transfer.prolong_f"]], "restrict() (base_transfer method)": [[40, "core.BaseTransfer.base_transfer.restrict"]], "collbase (class in core.collocation)": [[41, "core.Collocation.CollBase"]], "qmat (collbase attribute)": [[41, "core.Collocation.CollBase.Qmat"]], "smat (collbase attribute)": [[41, "core.Collocation.CollBase.Smat"]], "core.collocation": [[41, "module-core.Collocation"]], "delta_m (collbase attribute)": [[41, "core.Collocation.CollBase.delta_m"]], "evaluate() (collbase static method)": [[41, "core.Collocation.CollBase.evaluate"]], "left_is_node (collbase attribute)": [[41, "core.Collocation.CollBase.left_is_node"]], "nodes (collbase attribute)": [[41, "core.Collocation.CollBase.nodes"]], "num_nodes (collbase attribute)": [[41, "core.Collocation.CollBase.num_nodes"]], "right_is_node (collbase attribute)": [[41, "core.Collocation.CollBase.right_is_node"]], "tleft (collbase attribute)": [[41, "core.Collocation.CollBase.tleft"]], "tright (collbase attribute)": [[41, "core.Collocation.CollBase.tright"]], "weights (collbase attribute)": [[41, "core.Collocation.CollBase.weights"]], "registerparams (class in core.common)": [[42, "core.Common.RegisterParams"]], "_parnames (registerparams attribute)": [[42, "core.Common.RegisterParams._parNames"]], "_parnamesreadonly (registerparams attribute)": [[42, "core.Common.RegisterParams._parNamesReadOnly"]], "core.common": [[42, "module-core.Common"]], "params (registerparams attribute)": [[42, "core.Common.RegisterParams.params"]], "params (registerparams property)": [[42, "id0"]], "add_convergence_controller() (controller method)": [[43, "core.Controller.controller.add_convergence_controller"]], "add_hook() (controller method)": [[43, "core.Controller.controller.add_hook"]], "controller (class in core.controller)": [[43, "core.Controller.controller"]], "core.controller": [[43, "module-core.Controller"]], "dump_setup() (controller method)": [[43, "core.Controller.controller.dump_setup"]], "get_convergence_controllers_as_table() (controller method)": [[43, "core.Controller.controller.get_convergence_controllers_as_table"]], "hooks (controller property)": [[43, "core.Controller.controller.hooks"]], "return_stats() (controller method)": [[43, "core.Controller.controller.return_stats"]], "run() (controller method)": [[43, "core.Controller.controller.run"]], "setup_convergence_controllers() (controller method)": [[43, "core.Controller.controller.setup_convergence_controllers"]], "welcome_message() (controller method)": [[43, "core.Controller.controller.welcome_message"]], "convergencecontroller (class in core.convergencecontroller)": [[44, "core.ConvergenceController.ConvergenceController"]], "pars (class in core.convergencecontroller)": [[44, "core.ConvergenceController.Pars"]], "recv() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.Recv"], [44, "core.ConvergenceController.ConvergenceController.recv"]], "send() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.Send"], [44, "core.ConvergenceController.ConvergenceController.send"]], "status (class in core.convergencecontroller)": [[44, "core.ConvergenceController.Status"]], "add_variable() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.add_variable"]], "check_iteration_status() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.check_iteration_status"]], "check_parameters() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.check_parameters"]], "convergence_control() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.convergence_control"]], "core.convergencecontroller": [[44, "module-core.ConvergenceController"]], "debug() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.debug"]], "dependencies() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.dependencies"]], "determine_restart() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.determine_restart"]], "get_new_step_size() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.get_new_step_size"]], "log() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.log"]], "post_iteration_processing() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.post_iteration_processing"]], "post_spread_processing() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.post_spread_processing"]], "post_step_processing() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.post_step_processing"]], "pre_iteration_processing() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.pre_iteration_processing"]], "prepare_mpi_datatypes() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.prepare_MPI_datatypes"]], "prepare_mpi_logical_operations() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.prepare_MPI_logical_operations"]], "prepare_next_block() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.prepare_next_block"]], "reset_buffers_nonmpi() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.reset_buffers_nonMPI"]], "reset_status_variables() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.reset_status_variables"]], "reset_variable() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.reset_variable"]], "setup() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.setup"]], "setup_status_variables() (convergencecontroller method)": [[44, "core.ConvergenceController.ConvergenceController.setup_status_variables"]], "collocationerror": [[45, "core.Errors.CollocationError"]], "communicationerror": [[45, "core.Errors.CommunicationError"]], "controllererror": [[45, "core.Errors.ControllerError"]], "convergenceerror": [[45, "core.Errors.ConvergenceError"]], "dataerror": [[45, "core.Errors.DataError"]], "parametererror": [[45, "core.Errors.ParameterError"]], "problemerror": [[45, "core.Errors.ProblemError"]], "readonlyerror": [[45, "core.Errors.ReadOnlyError"]], "transfererror": [[45, "core.Errors.TransferError"]], "unlockerror": [[45, "core.Errors.UnlockError"]], "core.errors": [[45, "module-core.Errors"]], "entry (class in core.hooks)": [[46, "core.Hooks.Entry"]], "__num_restarts (hooks attribute)": [[46, "core.Hooks.hooks.__num_restarts"]], "__stats (hooks attribute)": [[46, "core.Hooks.hooks.__stats"]], "add_to_stats() (hooks method)": [[46, "core.Hooks.hooks.add_to_stats"]], "core.hooks": [[46, "module-core.Hooks"]], "entry (hooks attribute)": [[46, "core.Hooks.hooks.entry"], [46, "id0"]], "hooks (class in core.hooks)": [[46, "core.Hooks.hooks"]], "increment_stats() (hooks method)": [[46, "core.Hooks.hooks.increment_stats"]], "iter (entry attribute)": [[46, "core.Hooks.Entry.iter"]], "level (entry attribute)": [[46, "core.Hooks.Entry.level"]], "logger (hooks attribute)": [[46, "core.Hooks.hooks.logger"]], "meta_data (hooks attribute)": [[46, "core.Hooks.hooks.meta_data"]], "num_restarts (entry attribute)": [[46, "core.Hooks.Entry.num_restarts"]], "post_comm() (hooks method)": [[46, "core.Hooks.hooks.post_comm"]], "post_iteration() (hooks method)": [[46, "core.Hooks.hooks.post_iteration"]], "post_predict() (hooks method)": [[46, "core.Hooks.hooks.post_predict"]], "post_run() (hooks method)": [[46, "core.Hooks.hooks.post_run"]], "post_setup() (hooks method)": [[46, "core.Hooks.hooks.post_setup"]], "post_step() (hooks method)": [[46, "core.Hooks.hooks.post_step"]], "post_sweep() (hooks method)": [[46, "core.Hooks.hooks.post_sweep"]], "pre_comm() (hooks method)": [[46, "core.Hooks.hooks.pre_comm"]], "pre_iteration() (hooks method)": [[46, "core.Hooks.hooks.pre_iteration"]], "pre_predict() (hooks method)": [[46, "core.Hooks.hooks.pre_predict"]], "pre_run() (hooks method)": [[46, "core.Hooks.hooks.pre_run"]], "pre_setup() (hooks method)": [[46, "core.Hooks.hooks.pre_setup"]], "pre_step() (hooks method)": [[46, "core.Hooks.hooks.pre_step"]], "pre_sweep() (hooks method)": [[46, "core.Hooks.hooks.pre_sweep"]], "process (entry attribute)": [[46, "core.Hooks.Entry.process"]], "process_sweeper (entry attribute)": [[46, "core.Hooks.Entry.process_sweeper"]], "reset_stats() (hooks method)": [[46, "core.Hooks.hooks.reset_stats"]], "return_stats() (hooks method)": [[46, "core.Hooks.hooks.return_stats"]], "sweep (entry attribute)": [[46, "core.Hooks.Entry.sweep"]], "time (entry attribute)": [[46, "core.Hooks.Entry.time"]], "type (entry attribute)": [[46, "core.Hooks.Entry.type"]], "lagrangeapproximation (class in core.lagrange)": [[47, "core.Lagrange.LagrangeApproximation"]], "computefejerrule() (in module core.lagrange)": [[47, "core.Lagrange.computeFejerRule"]], "core.lagrange": [[47, "module-core.Lagrange"]], "getintegrationmatrix() (lagrangeapproximation method)": [[47, "core.Lagrange.LagrangeApproximation.getIntegrationMatrix"]], "getinterpolationmatrix() (lagrangeapproximation method)": [[47, "core.Lagrange.LagrangeApproximation.getInterpolationMatrix"]], "n (lagrangeapproximation property)": [[47, "core.Lagrange.LagrangeApproximation.n"]], "points (lagrangeapproximation attribute)": [[47, "core.Lagrange.LagrangeApproximation.points"]], "weights (lagrangeapproximation attribute)": [[47, "core.Lagrange.LagrangeApproximation.weights"]], "core.level": [[48, "module-core.Level"]], "dt (level property)": [[48, "core.Level.level.dt"]], "f (level attribute)": [[48, "core.Level.level.f"]], "fold (level attribute)": [[48, "core.Level.level.fold"]], "level (class in core.level)": [[48, "core.Level.level"]], "level_index (level attribute)": [[48, "core.Level.level.level_index"]], "params (level attribute)": [[48, "core.Level.level.params"]], "prob (level property)": [[48, "core.Level.level.prob"]], "reset_level() (level method)": [[48, "core.Level.level.reset_level"]], "status (level attribute)": [[48, "core.Level.level.status"]], "sweep (level property)": [[48, "core.Level.level.sweep"]], "tag (level property)": [[48, "core.Level.level.tag"]], "tau (level attribute)": [[48, "core.Level.level.tau"]], "time (level property)": [[48, "core.Level.level.time"]], "u (level attribute)": [[48, "core.Level.level.u"]], "uend (level attribute)": [[48, "core.Level.level.uend"]], "uold (level attribute)": [[48, "core.Level.level.uold"]], "nodeserror": [[49, "core.Nodes.NodesError"]], "nodesgenerator (class in core.nodes)": [[49, "core.Nodes.NodesGenerator"]], "core.nodes": [[49, "module-core.Nodes"]], "evalorthogpoly() (nodesgenerator method)": [[49, "core.Nodes.NodesGenerator.evalOrthogPoly"]], "getnodes() (nodesgenerator method)": [[49, "core.Nodes.NodesGenerator.getNodes"]], "getorthogpolycoefficients() (nodesgenerator method)": [[49, "core.Nodes.NodesGenerator.getOrthogPolyCoefficients"]], "gettridiagcoefficients() (nodesgenerator method)": [[49, "core.Nodes.NodesGenerator.getTridiagCoefficients"]], "node_type (nodesgenerator attribute)": [[49, "core.Nodes.NodesGenerator.node_type"]], "quad_type (nodesgenerator attribute)": [[49, "core.Nodes.NodesGenerator.quad_type"]], "workcounter (class in core.problem)": [[50, "core.Problem.WorkCounter"]], "apply_mass_matrix() (ptype method)": [[50, "core.Problem.ptype.apply_mass_matrix"]], "core.problem": [[50, "module-core.Problem"]], "decrement() (workcounter method)": [[50, "core.Problem.WorkCounter.decrement"]], "dtype_f (ptype attribute)": [[50, "core.Problem.ptype.dtype_f"]], "dtype_u (ptype attribute)": [[50, "core.Problem.ptype.dtype_u"]], "eval_f() (ptype method)": [[50, "core.Problem.ptype.eval_f"]], "f_init (ptype property)": [[50, "core.Problem.ptype.f_init"]], "generate_scipy_reference_solution() (ptype method)": [[50, "core.Problem.ptype.generate_scipy_reference_solution"]], "get_default_sweeper_class() (ptype class method)": [[50, "core.Problem.ptype.get_default_sweeper_class"]], "get_fig() (ptype method)": [[50, "core.Problem.ptype.get_fig"]], "logger (ptype attribute)": [[50, "core.Problem.ptype.logger"], [50, "id0"]], "plot() (ptype method)": [[50, "core.Problem.ptype.plot"]], "ptype (class in core.problem)": [[50, "core.Problem.ptype"]], "u_init (ptype property)": [[50, "core.Problem.ptype.u_init"]], "coarse_prob (space_transfer attribute)": [[51, "core.SpaceTransfer.space_transfer.coarse_prob"]], "core.spacetransfer": [[51, "module-core.SpaceTransfer"]], "fine_prob (space_transfer attribute)": [[51, "core.SpaceTransfer.space_transfer.fine_prob"]], "logger (space_transfer attribute)": [[51, "core.SpaceTransfer.space_transfer.logger"]], "params (space_transfer attribute)": [[51, "core.SpaceTransfer.space_transfer.params"]], "prolong() (space_transfer method)": [[51, "core.SpaceTransfer.space_transfer.prolong"]], "restrict() (space_transfer method)": [[51, "core.SpaceTransfer.space_transfer.restrict"]], "space_transfer (class in core.spacetransfer)": [[51, "core.SpaceTransfer.space_transfer"]], "connect_levels() (step method)": [[52, "core.Step.step.connect_levels"]], "core.step": [[52, "module-core.Step"]], "dt (step property)": [[52, "core.Step.step.dt"]], "init_step() (step method)": [[52, "core.Step.step.init_step"]], "levels (step attribute)": [[52, "core.Step.step.levels"]], "logger (step attribute)": [[52, "core.Step.step.logger"]], "next (step property)": [[52, "core.Step.step.next"]], "params (step attribute)": [[52, "core.Step.step.params"]], "prev (step property)": [[52, "core.Step.step.prev"]], "reset_step() (step method)": [[52, "core.Step.step.reset_step"]], "status (step attribute)": [[52, "core.Step.step.status"]], "step (class in core.step)": [[52, "core.Step.step"]], "time (step property)": [[52, "core.Step.step.time"]], "transfer() (step method)": [[52, "core.Step.step.transfer"]], "coll (sweeper attribute)": [[53, "core.Sweeper.sweeper.coll"]], "compute_end_point() (sweeper method)": [[53, "core.Sweeper.sweeper.compute_end_point"]], "compute_residual() (sweeper method)": [[53, "core.Sweeper.sweeper.compute_residual"]], "core.sweeper": [[53, "module-core.Sweeper"]], "get_qdelta_explicit() (sweeper method)": [[53, "core.Sweeper.sweeper.get_Qdelta_explicit"]], "get_qdelta_implicit() (sweeper method)": [[53, "core.Sweeper.sweeper.get_Qdelta_implicit"]], "integrate() (sweeper method)": [[53, "core.Sweeper.sweeper.integrate"]], "level (sweeper property)": [[53, "core.Sweeper.sweeper.level"]], "logger (sweeper attribute)": [[53, "core.Sweeper.sweeper.logger"]], "params (sweeper attribute)": [[53, "core.Sweeper.sweeper.params"]], "predict() (sweeper method)": [[53, "core.Sweeper.sweeper.predict"]], "rank (sweeper property)": [[53, "core.Sweeper.sweeper.rank"]], "sweeper (class in core.sweeper)": [[53, "core.Sweeper.sweeper"]], "update_nodes() (sweeper method)": [[53, "core.Sweeper.sweeper.update_nodes"]], "helpers": [[54, "module-helpers"]], "allreduce() (ncclcomm method)": [[55, "helpers.NCCL_communicator.NCCLComm.Allreduce"]], "ncclcomm (class in helpers.nccl_communicator)": [[55, "helpers.NCCL_communicator.NCCLComm"]], "reduce() (ncclcomm method)": [[55, "helpers.NCCL_communicator.NCCLComm.Reduce"]], "get_count() (ncclcomm static method)": [[55, "helpers.NCCL_communicator.NCCLComm.get_count"]], "get_dtype() (ncclcomm static method)": [[55, "helpers.NCCL_communicator.NCCLComm.get_dtype"]], "get_op() (ncclcomm method)": [[55, "helpers.NCCL_communicator.NCCLComm.get_op"]], "helpers.nccl_communicator": [[55, "module-helpers.NCCL_communicator"]], "figsize() (in module helpers.plot_helper)": [[56, "helpers.plot_helper.figsize"]], "figsize_by_journal() (in module helpers.plot_helper)": [[56, "helpers.plot_helper.figsize_by_journal"]], "helpers.plot_helper": [[56, "module-helpers.plot_helper"]], "newfig() (in module helpers.plot_helper)": [[56, "helpers.plot_helper.newfig"]], "savefig() (in module helpers.plot_helper)": [[56, "helpers.plot_helper.savefig"]], "setup_mpl() (in module helpers.plot_helper)": [[56, "helpers.plot_helper.setup_mpl"]], "get_1d_grid() (in module helpers.problem_helper)": [[57, "helpers.problem_helper.get_1d_grid"]], "get_finite_difference_matrix() (in module helpers.problem_helper)": [[57, "helpers.problem_helper.get_finite_difference_matrix"]], "get_finite_difference_stencil() (in module helpers.problem_helper)": [[57, "helpers.problem_helper.get_finite_difference_stencil"]], "get_steps() (in module helpers.problem_helper)": [[57, "helpers.problem_helper.get_steps"]], "helpers.problem_helper": [[57, "module-helpers.problem_helper"]], "frozenclass (class in helpers.pysdc_helper)": [[58, "helpers.pysdc_helper.FrozenClass"]], "__isfrozen (frozenclass attribute)": [[58, "helpers.pysdc_helper.FrozenClass.__isfrozen"]], "get() (frozenclass method)": [[58, "helpers.pysdc_helper.FrozenClass.get"]], "helpers.pysdc_helper": [[58, "module-helpers.pysdc_helper"]], "generate_description() (in module helpers.setup_helper)": [[59, "helpers.setup_helper.generate_description"]], "helpers.setup_helper": [[59, "module-helpers.setup_helper"]], "filter_stats() (in module helpers.stats_helper)": [[60, "helpers.stats_helper.filter_stats"]], "get_list_of_types() (in module helpers.stats_helper)": [[60, "helpers.stats_helper.get_list_of_types"]], "get_sorted() (in module helpers.stats_helper)": [[60, "helpers.stats_helper.get_sorted"]], "helpers.stats_helper": [[60, "module-helpers.stats_helper"]], "sort_stats() (in module helpers.stats_helper)": [[60, "helpers.stats_helper.sort_stats"]], "datachecker (class in helpers.testing)": [[61, "helpers.testing.DataChecker"]], "helpers.testing": [[61, "module-helpers.testing"]], "storeandcheck() (datachecker method)": [[61, "helpers.testing.DataChecker.storeAndCheck"]], "writetojson() (datachecker method)": [[61, "helpers.testing.DataChecker.writeToJSON"]], "border_padding() (in module helpers.transfer_helper)": [[62, "helpers.transfer_helper.border_padding"]], "continue_periodic_array() (in module helpers.transfer_helper)": [[62, "helpers.transfer_helper.continue_periodic_array"]], "helpers.transfer_helper": [[62, "module-helpers.transfer_helper"]], "interpolation_matrix_1d() (in module helpers.transfer_helper)": [[62, "helpers.transfer_helper.interpolation_matrix_1d"]], "next_neighbors() (in module helpers.transfer_helper)": [[62, "helpers.transfer_helper.next_neighbors"]], "next_neighbors_periodic() (in module helpers.transfer_helper)": [[62, "helpers.transfer_helper.next_neighbors_periodic"]], "restriction_matrix_1d() (in module helpers.transfer_helper)": [[62, "helpers.transfer_helper.restriction_matrix_1d"]], "helpers.visualization_tools": [[63, "module-helpers.visualization_tools"]], "show_residual_across_simulation() (in module helpers.visualization_tools)": [[63, "helpers.visualization_tools.show_residual_across_simulation"]], "implementations": [[64, "module-implementations"]], "implementations.controller_classes": [[65, "module-implementations.controller_classes"]], "check_iteration_estimate() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.check_iteration_estimate"]], "controller_mpi (class in implementations.controller_classes.controller_mpi)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI"]], "default() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.default"]], "implementations.controller_classes.controller_mpi": [[66, "module-implementations.controller_classes.controller_MPI"]], "it_check() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.it_check"]], "it_coarse() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.it_coarse"]], "it_down() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.it_down"]], "it_fine() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.it_fine"]], "it_up() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.it_up"]], "pfasst() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.pfasst"]], "predict() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.predict"]], "recv() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.recv"]], "recv_full() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.recv_full"]], "restart_block() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.restart_block"]], "run() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.run"]], "send_full() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.send_full"]], "spread() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.spread"]], "wait_with_interrupt() (controller_mpi method)": [[66, "implementations.controller_classes.controller_MPI.controller_MPI.wait_with_interrupt"]], "controller_nonmpi (class in implementations.controller_classes.controller_nonmpi)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI"]], "default() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.default"]], "implementations.controller_classes.controller_nonmpi": [[67, "module-implementations.controller_classes.controller_nonMPI"]], "it_check() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_check"]], "it_coarse() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_coarse"]], "it_down() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_down"]], "it_fine() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_fine"]], "it_up() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_up"]], "pfasst() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.pfasst"]], "predict() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.predict"]], "recv_full() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.recv_full"]], "restart_block() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.restart_block"]], "run() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.run"]], "send_full() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.send_full"]], "spread() (controller_nonmpi method)": [[67, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.spread"]], "implementations.convergence_controller_classes": [[68, "module-implementations.convergence_controller_classes"]], "adaptivecollocation (class in implementations.convergence_controller_classes.adaptive_collocation)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation"]], "check_parameters() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.check_parameters"]], "implementations.convergence_controller_classes.adaptive_collocation": [[69, "module-implementations.convergence_controller_classes.adaptive_collocation"]], "matmul() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.matmul"]], "post_iteration_processing() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.post_iteration_processing"]], "post_spread_processing() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.post_spread_processing"]], "reset_status_variables() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.reset_status_variables"]], "setup() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.setup"]], "setup_status_variables() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.setup_status_variables"]], "switch_sweeper() (adaptivecollocation method)": [[69, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.switch_sweeper"]], "adaptivity (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.Adaptivity"]], "adaptivitybase (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase"]], "adaptivitycollocation (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation"]], "adaptivityextrapolationwithinq (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ"]], "adaptivityforconvergedcollocationproblems (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems"]], "adaptivitypolynomialerror (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError"]], "adaptivityrk (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK"]], "adaptivityresidual (class in implementations.convergence_controller_classes.adaptivity)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual"]], "check_parameters() (adaptivity method)": [[70, "implementations.convergence_controller_classes.adaptivity.Adaptivity.check_parameters"]], "check_parameters() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.check_parameters"]], "check_parameters() (adaptivityresidual method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.check_parameters"]], "compute_optimal_step_size() (adaptivitybase method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.compute_optimal_step_size"]], "dependencies() (adaptivity method)": [[70, "implementations.convergence_controller_classes.adaptivity.Adaptivity.dependencies"]], "dependencies() (adaptivitybase method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.dependencies"]], "dependencies() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.dependencies"]], "dependencies() (adaptivityextrapolationwithinq method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.dependencies"]], "dependencies() (adaptivityforconvergedcollocationproblems method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.dependencies"]], "dependencies() (adaptivitypolynomialerror method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.dependencies"]], "determine_restart() (adaptivitybase method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.determine_restart"]], "determine_restart() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.determine_restart"]], "determine_restart() (adaptivityforconvergedcollocationproblems method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.determine_restart"]], "get_convergence() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_convergence"]], "get_convergence() (adaptivityextrapolationwithinq method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_convergence"]], "get_convergence() (adaptivityforconvergedcollocationproblems method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.get_convergence"]], "get_convergence() (adaptivitypolynomialerror method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_convergence"]], "get_local_error_estimate() (adaptivity method)": [[70, "implementations.convergence_controller_classes.adaptivity.Adaptivity.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitybase method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_local_error_estimate"]], "get_local_error_estimate() (adaptivityextrapolationwithinq method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitypolynomialerror method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_local_error_estimate"]], "get_local_error_estimate() (adaptivityresidual method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.get_local_error_estimate"]], "get_new_step_size() (adaptivity method)": [[70, "implementations.convergence_controller_classes.adaptivity.Adaptivity.get_new_step_size"]], "get_new_step_size() (adaptivitybase method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.get_new_step_size"]], "get_new_step_size() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_new_step_size"]], "get_new_step_size() (adaptivityextrapolationwithinq method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_new_step_size"]], "get_new_step_size() (adaptivitypolynomialerror method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_new_step_size"]], "get_new_step_size() (adaptivityrk method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK.get_new_step_size"]], "get_new_step_size() (adaptivityresidual method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.get_new_step_size"]], "implementations.convergence_controller_classes.adaptivity": [[70, "module-implementations.convergence_controller_classes.adaptivity"]], "post_iteration_processing() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.post_iteration_processing"]], "reset_status_variables() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.reset_status_variables"]], "setup() (adaptivity method)": [[70, "implementations.convergence_controller_classes.adaptivity.Adaptivity.setup"]], "setup() (adaptivitybase method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.setup"]], "setup() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.setup"]], "setup() (adaptivityextrapolationwithinq method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.setup"]], "setup() (adaptivityforconvergedcollocationproblems method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.setup"]], "setup() (adaptivitypolynomialerror method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.setup"]], "setup() (adaptivityrk method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK.setup"]], "setup() (adaptivityresidual method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.setup"]], "setup_status_variables() (adaptivitycollocation method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.setup_status_variables"]], "setup_status_variables() (adaptivityresidual method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.setup_status_variables"]], "trigger_restart_upon_nonconvergence() (adaptivityforconvergedcollocationproblems method)": [[70, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.trigger_restart_upon_nonconvergence"]], "basicrestarting (class in implementations.convergence_controller_classes.basic_restarting)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting"]], "basicrestartingmpi (class in implementations.convergence_controller_classes.basic_restarting)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI"]], "basicrestartingnonmpi (class in implementations.convergence_controller_classes.basic_restarting)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI"]], "dependencies() (basicrestarting method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.dependencies"]], "determine_restart() (basicrestarting method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.determine_restart"]], "determine_restart() (basicrestartingmpi method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI.determine_restart"]], "determine_restart() (basicrestartingnonmpi method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.determine_restart"]], "get_implementation() (basicrestarting class method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.get_implementation"]], "implementations.convergence_controller_classes.basic_restarting": [[71, "module-implementations.convergence_controller_classes.basic_restarting"]], "prepare_next_block() (basicrestartingmpi method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI.prepare_next_block"]], "prepare_next_block() (basicrestartingnonmpi method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.prepare_next_block"]], "reset_buffers_nonmpi() (basicrestartingnonmpi method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.reset_buffers_nonMPI"]], "reset_status_variables() (basicrestarting method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.reset_status_variables"]], "setup() (basicrestarting method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.setup"]], "setup_status_variables() (basicrestarting method)": [[71, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.setup_status_variables"]], "checkconvergence (class in implementations.convergence_controller_classes.check_convergence)": [[72, "implementations.convergence_controller_classes.check_convergence.CheckConvergence"]], "check_convergence() (checkconvergence static method)": [[72, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.check_convergence"]], "check_iteration_status() (checkconvergence method)": [[72, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.check_iteration_status"]], "communicate_convergence() (checkconvergence method)": [[72, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.communicate_convergence"]], "dependencies() (checkconvergence method)": [[72, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.dependencies"]], "implementations.convergence_controller_classes.check_convergence": [[72, "module-implementations.convergence_controller_classes.check_convergence"]], "setup() (checkconvergence method)": [[72, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.setup"]], "checkiterationestimatornonmpi (class in implementations.convergence_controller_classes.check_iteration_estimator)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI"]], "check_iteration_status() (checkiterationestimatornonmpi method)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.check_iteration_status"]], "check_parameters() (checkiterationestimatornonmpi method)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.check_parameters"]], "dependencies() (checkiterationestimatornonmpi method)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.dependencies"]], "implementations.convergence_controller_classes.check_iteration_estimator": [[73, "module-implementations.convergence_controller_classes.check_iteration_estimator"]], "reset_buffers_nonmpi() (checkiterationestimatornonmpi method)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.reset_buffers_nonMPI"]], "setup() (checkiterationestimatornonmpi method)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.setup"]], "setup_status_variables() (checkiterationestimatornonmpi method)": [[73, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.setup_status_variables"]], "crashbase (class in implementations.convergence_controller_classes.crash)": [[74, "implementations.convergence_controller_classes.crash.CrashBase"]], "stopatmaxruntime (class in implementations.convergence_controller_classes.crash)": [[74, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime"]], "stopatnan (class in implementations.convergence_controller_classes.crash)": [[74, "implementations.convergence_controller_classes.crash.StopAtNan"]], "communicate_crash() (crashbase method)": [[74, "implementations.convergence_controller_classes.crash.CrashBase.communicate_crash"]], "implementations.convergence_controller_classes.crash": [[74, "module-implementations.convergence_controller_classes.crash"]], "prepare_next_block() (stopatmaxruntime method)": [[74, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime.prepare_next_block"]], "prepare_next_block() (stopatnan method)": [[74, "implementations.convergence_controller_classes.crash.StopAtNan.prepare_next_block"]], "setup() (stopatmaxruntime method)": [[74, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime.setup"]], "setup() (stopatnan method)": [[74, "implementations.convergence_controller_classes.crash.StopAtNan.setup"]], "estimatecontractionfactor (class in implementations.convergence_controller_classes.estimate_contraction_factor)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor"]], "dependencies() (estimatecontractionfactor method)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.dependencies"]], "implementations.convergence_controller_classes.estimate_contraction_factor": [[75, "module-implementations.convergence_controller_classes.estimate_contraction_factor"]], "post_iteration_processing() (estimatecontractionfactor method)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.post_iteration_processing"]], "pre_iteration_processing() (estimatecontractionfactor method)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.pre_iteration_processing"]], "reset_status_variables() (estimatecontractionfactor method)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.reset_status_variables"]], "setup() (estimatecontractionfactor method)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.setup"]], "setup_status_variables() (estimatecontractionfactor method)": [[75, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.setup_status_variables"]], "estimateembeddederror (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError"]], "estimateembeddederrorcollocation (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation"]], "estimateembeddederrorlinearizedmpi (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI"]], "estimateembeddederrorlinearizednonmpi (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI"]], "dependencies() (estimateembeddederror method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.dependencies"]], "dependencies() (estimateembeddederrorcollocation method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.dependencies"]], "estimate_embedded_error_serial() (estimateembeddederror method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.estimate_embedded_error_serial"]], "get_implementation() (estimateembeddederror class method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.get_implementation"]], "implementations.convergence_controller_classes.estimate_embedded_error": [[76, "module-implementations.convergence_controller_classes.estimate_embedded_error"]], "post_iteration_processing() (estimateembeddederror method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorcollocation method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorlinearizedmpi method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorlinearizednonmpi method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.post_iteration_processing"]], "reset_buffers_nonmpi() (estimateembeddederrorlinearizednonmpi method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.reset_buffers_nonMPI"]], "reset_status_variables() (estimateembeddederror method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.reset_status_variables"]], "reset_status_variables() (estimateembeddederrorcollocation method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.reset_status_variables"]], "setup() (estimateembeddederror method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.setup"]], "setup() (estimateembeddederrorcollocation method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.setup"]], "setup() (estimateembeddederrorlinearizednonmpi method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.setup"]], "setup_status_variables() (estimateembeddederror method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.setup_status_variables"]], "setup_status_variables() (estimateembeddederrorcollocation method)": [[76, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.setup_status_variables"]], "estimateextrapolationerrorbase (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase"]], "estimateextrapolationerrornonmpi (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI"]], "estimateextrapolationerrorwithinq (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ"]], "check_parameters() (estimateextrapolationerrorbase method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.check_parameters"]], "get_extrapolated_error() (estimateextrapolationerrornonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.get_extrapolated_error"]], "get_extrapolated_solution() (estimateextrapolationerrornonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.get_extrapolated_solution"]], "get_extrapolation_coefficients() (estimateextrapolationerrorbase method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.get_extrapolation_coefficients"]], "implementations.convergence_controller_classes.estimate_extrapolation_error": [[77, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"]], "post_iteration_processing() (estimateextrapolationerrornonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.post_iteration_processing"]], "post_iteration_processing() (estimateextrapolationerrorwithinq method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ.post_iteration_processing"]], "prepare_next_block() (estimateextrapolationerrornonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.prepare_next_block"]], "reset_status_variables() (estimateextrapolationerrorbase method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.reset_status_variables"]], "setup() (estimateextrapolationerrorbase method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.setup"]], "setup() (estimateextrapolationerrornonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.setup"]], "setup() (estimateextrapolationerrorwithinq method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ.setup"]], "setup_status_variables() (estimateextrapolationerrorbase method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.setup_status_variables"]], "setup_status_variables() (estimateextrapolationerrornonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.setup_status_variables"]], "store_values() (estimateextrapolationerrorbase method)": [[77, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.store_values"]], "estimatepolynomialerror (class in implementations.convergence_controller_classes.estimate_polynomial_error)": [[78, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError"]], "check_parameters() (estimatepolynomialerror method)": [[78, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.check_parameters"]], "implementations.convergence_controller_classes.estimate_polynomial_error": [[78, "module-implementations.convergence_controller_classes.estimate_polynomial_error"]], "matmul() (estimatepolynomialerror method)": [[78, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.matmul"]], "post_iteration_processing() (estimatepolynomialerror method)": [[78, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.post_iteration_processing"]], "reset_status_variables() (estimatepolynomialerror method)": [[78, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.reset_status_variables"]], "setup() (estimatepolynomialerror method)": [[78, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.setup"]], "hotrod (class in implementations.convergence_controller_classes.hotrod)": [[79, "implementations.convergence_controller_classes.hotrod.HotRod"]], "check_parameters() (hotrod method)": [[79, "implementations.convergence_controller_classes.hotrod.HotRod.check_parameters"]], "dependencies() (hotrod method)": [[79, "implementations.convergence_controller_classes.hotrod.HotRod.dependencies"]], "determine_restart() (hotrod method)": [[79, "implementations.convergence_controller_classes.hotrod.HotRod.determine_restart"]], "implementations.convergence_controller_classes.hotrod": [[79, "module-implementations.convergence_controller_classes.hotrod"]], "post_iteration_processing() (hotrod method)": [[79, "implementations.convergence_controller_classes.hotrod.HotRod.post_iteration_processing"]], "setup() (hotrod method)": [[79, "implementations.convergence_controller_classes.hotrod.HotRod.setup"]], "newtoninexactness (class in implementations.convergence_controller_classes.inexactness)": [[80, "implementations.convergence_controller_classes.inexactness.NewtonInexactness"]], "dependencies() (newtoninexactness method)": [[80, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.dependencies"]], "implementations.convergence_controller_classes.inexactness": [[80, "module-implementations.convergence_controller_classes.inexactness"]], "post_iteration_processing() (newtoninexactness method)": [[80, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.post_iteration_processing"]], "set_maxiter() (newtoninexactness method)": [[80, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.set_maxiter"]], "set_tolerance() (newtoninexactness method)": [[80, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.set_tolerance"]], "setup() (newtoninexactness method)": [[80, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.setup"]], "interpolatebetweenrestarts (class in implementations.convergence_controller_classes.interpolate_between_restarts)": [[81, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts"]], "implementations.convergence_controller_classes.interpolate_between_restarts": [[81, "module-implementations.convergence_controller_classes.interpolate_between_restarts"]], "post_iteration_processing() (interpolatebetweenrestarts method)": [[81, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.post_iteration_processing"]], "post_spread_processing() (interpolatebetweenrestarts method)": [[81, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.post_spread_processing"]], "setup() (interpolatebetweenrestarts method)": [[81, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.setup"]], "setup_status_variables() (interpolatebetweenrestarts method)": [[81, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.setup_status_variables"]], "spreadstepsizesblockwise (class in implementations.convergence_controller_classes.spread_step_sizes)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise"]], "spreadstepsizesblockwisempi (class in implementations.convergence_controller_classes.spread_step_sizes)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI"]], "spreadstepsizesblockwisenonmpi (class in implementations.convergence_controller_classes.spread_step_sizes)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI"]], "get_implementation() (spreadstepsizesblockwise class method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.get_implementation"]], "get_step_from_which_to_spread() (spreadstepsizesblockwise method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.get_step_from_which_to_spread"]], "get_step_from_which_to_spread() (spreadstepsizesblockwisempi method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI.get_step_from_which_to_spread"]], "get_step_from_which_to_spread() (spreadstepsizesblockwisenonmpi method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI.get_step_from_which_to_spread"]], "implementations.convergence_controller_classes.spread_step_sizes": [[82, "module-implementations.convergence_controller_classes.spread_step_sizes"]], "prepare_next_block() (spreadstepsizesblockwisempi method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI.prepare_next_block"]], "prepare_next_block() (spreadstepsizesblockwisenonmpi method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI.prepare_next_block"]], "setup() (spreadstepsizesblockwise method)": [[82, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.setup"]], "stepsizelimiter (class in implementations.convergence_controller_classes.step_size_limiter)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter"]], "stepsizeslopelimiter (class in implementations.convergence_controller_classes.step_size_limiter)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter"]], "dependencies() (stepsizelimiter method)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.dependencies"]], "get_new_step_size() (stepsizelimiter method)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.get_new_step_size"]], "get_new_step_size() (stepsizeslopelimiter method)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter.get_new_step_size"]], "implementations.convergence_controller_classes.step_size_limiter": [[83, "module-implementations.convergence_controller_classes.step_size_limiter"]], "setup() (stepsizelimiter method)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.setup"]], "setup() (stepsizeslopelimiter method)": [[83, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter.setup"]], "storeuold (class in implementations.convergence_controller_classes.store_uold)": [[84, "implementations.convergence_controller_classes.store_uold.StoreUOld"]], "implementations.convergence_controller_classes.store_uold": [[84, "module-implementations.convergence_controller_classes.store_uold"]], "post_iteration_processing() (storeuold method)": [[84, "implementations.convergence_controller_classes.store_uold.StoreUOld.post_iteration_processing"]], "post_spread_processing() (storeuold method)": [[84, "implementations.convergence_controller_classes.store_uold.StoreUOld.post_spread_processing"]], "setup() (storeuold method)": [[84, "implementations.convergence_controller_classes.store_uold.StoreUOld.setup"]], "implementations.datatype_classes": [[85, "module-implementations.datatype_classes"]], "bcast() (cupy_mesh method)": [[86, "implementations.datatype_classes.cupy_mesh.cupy_mesh.bcast"]], "comm (cupy_mesh property)": [[86, "implementations.datatype_classes.cupy_mesh.cupy_mesh.comm"]], "comp1 (comp2_cupy_mesh attribute)": [[86, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh.comp1"]], "comp2 (comp2_cupy_mesh attribute)": [[86, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh.comp2"]], "comp2_cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[86, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh"]], "cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[86, "implementations.datatype_classes.cupy_mesh.cupy_mesh"]], "expl (imex_cupy_mesh attribute)": [[86, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh.expl"]], "imex_cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[86, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh"]], "impl (imex_cupy_mesh attribute)": [[86, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh.impl"]], "implementations.datatype_classes.cupy_mesh": [[86, "module-implementations.datatype_classes.cupy_mesh"]], "irecv() (cupy_mesh method)": [[86, "implementations.datatype_classes.cupy_mesh.cupy_mesh.irecv"]], "isend() (cupy_mesh method)": [[86, "implementations.datatype_classes.cupy_mesh.cupy_mesh.isend"]], "expl (rhs_fenics_mesh attribute)": [[87, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh.expl"]], "fenics_mesh (class in implementations.datatype_classes.fenics_mesh)": [[87, "implementations.datatype_classes.fenics_mesh.fenics_mesh"]], "impl (rhs_fenics_mesh attribute)": [[87, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh.impl"]], "implementations.datatype_classes.fenics_mesh": [[87, "module-implementations.datatype_classes.fenics_mesh"]], "rhs_fenics_mesh (class in implementations.datatype_classes.fenics_mesh)": [[87, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh"]], "values (fenics_mesh attribute)": [[87, "implementations.datatype_classes.fenics_mesh.fenics_mesh.values"]], "multicomponentmesh (class in implementations.datatype_classes.mesh)": [[88, "implementations.datatype_classes.mesh.MultiComponentMesh"]], "_comm (mesh attribute)": [[88, "implementations.datatype_classes.mesh.mesh._comm"]], "bcast() (mesh method)": [[88, "implementations.datatype_classes.mesh.mesh.bcast"]], "comm (mesh property)": [[88, "implementations.datatype_classes.mesh.mesh.comm"]], "comp2_mesh (class in implementations.datatype_classes.mesh)": [[88, "implementations.datatype_classes.mesh.comp2_mesh"]], "components (multicomponentmesh attribute)": [[88, "implementations.datatype_classes.mesh.MultiComponentMesh.components"]], "components (comp2_mesh attribute)": [[88, "implementations.datatype_classes.mesh.comp2_mesh.components"]], "components (imex_mesh attribute)": [[88, "implementations.datatype_classes.mesh.imex_mesh.components"]], "imex_mesh (class in implementations.datatype_classes.mesh)": [[88, "implementations.datatype_classes.mesh.imex_mesh"]], "implementations.datatype_classes.mesh": [[88, "module-implementations.datatype_classes.mesh"]], "irecv() (mesh method)": [[88, "implementations.datatype_classes.mesh.mesh.irecv"]], "isend() (mesh method)": [[88, "implementations.datatype_classes.mesh.mesh.isend"]], "mesh (class in implementations.datatype_classes.mesh)": [[88, "implementations.datatype_classes.mesh.mesh"]], "acceleration (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.acceleration"]], "elec (fields attribute)": [[89, "implementations.datatype_classes.particles.fields.elec"]], "fields (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.fields"]], "fields.electric (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.fields.electric"]], "fields.magnetic (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.fields.magnetic"]], "implementations.datatype_classes.particles": [[89, "module-implementations.datatype_classes.particles"]], "isend() (particles method)": [[89, "implementations.datatype_classes.particles.particles.isend"]], "magn (fields attribute)": [[89, "implementations.datatype_classes.particles.fields.magn"]], "particles (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.particles"]], "particles.position (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.particles.position"]], "particles.velocity (class in implementations.datatype_classes.particles)": [[89, "implementations.datatype_classes.particles.particles.velocity"]], "pos (particles attribute)": [[89, "implementations.datatype_classes.particles.particles.pos"]], "recv() (particles method)": [[89, "implementations.datatype_classes.particles.particles.recv"]], "send() (particles method)": [[89, "implementations.datatype_classes.particles.particles.send"]], "vel (particles attribute)": [[89, "implementations.datatype_classes.particles.particles.vel"]], "bcast() (petsc_vec method)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec.bcast"]], "expl (petsc_vec_comp2 attribute)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2.expl"]], "expl (petsc_vec_imex attribute)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec_imex.expl"]], "impl (petsc_vec_comp2 attribute)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2.impl"]], "impl (petsc_vec_imex attribute)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec_imex.impl"]], "implementations.datatype_classes.petsc_vec": [[90, "module-implementations.datatype_classes.petsc_vec"]], "irecv() (petsc_vec method)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec.irecv"]], "isend() (petsc_vec method)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec.isend"]], "petsc_vec (class in implementations.datatype_classes.petsc_vec)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec"]], "petsc_vec_comp2 (class in implementations.datatype_classes.petsc_vec)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2"]], "petsc_vec_imex (class in implementations.datatype_classes.petsc_vec)": [[90, "implementations.datatype_classes.petsc_vec.petsc_vec_imex"]], "implementations.problem_classes": [[91, "module-implementations.problem_classes"]], "a (acoustic_1d_imex attribute)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.A"]], "dx (acoustic_1d_imex attribute)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.Dx"], [92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dx"]], "id (acoustic_1d_imex attribute)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.Id"]], "acoustic_1d_imex (class in implementations.problem_classes.acousticadvection_1d_fd_imex)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex"]], "dtype_f (acoustic_1d_imex attribute)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dtype_f"]], "dtype_u (acoustic_1d_imex attribute)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dtype_u"]], "eval_f() (acoustic_1d_imex method)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.eval_f"]], "implementations.problem_classes.acousticadvection_1d_fd_imex": [[92, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"]], "mesh (acoustic_1d_imex attribute)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.mesh"]], "solve_system() (acoustic_1d_imex method)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.solve_system"]], "u_exact() (acoustic_1d_imex method)": [[92, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.u_exact"]], "advectiondiffusion1d_imex (class in implementations.problem_classes.advectiondiffusionequation_1d_fft)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex"]], "advectiondiffusion1d_implicit (class in implementations.problem_classes.advectiondiffusionequation_1d_fft)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit"]], "ddx (advectiondiffusion1d_imex attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.ddx"]], "dtype_f (advectiondiffusion1d_imex attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.dtype_f"]], "dtype_f (advectiondiffusion1d_implicit attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.dtype_f"]], "dtype_u (advectiondiffusion1d_imex attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.dtype_u"]], "dtype_u (advectiondiffusion1d_implicit attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.dtype_u"]], "eval_f() (advectiondiffusion1d_imex method)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.eval_f"]], "eval_f() (advectiondiffusion1d_implicit method)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.eval_f"]], "implementations.problem_classes.advectiondiffusionequation_1d_fft": [[93, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"]], "lap (advectiondiffusion1d_imex attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.lap"]], "solve_system() (advectiondiffusion1d_imex method)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.solve_system"]], "solve_system() (advectiondiffusion1d_implicit method)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.solve_system"]], "u_exact() (advectiondiffusion1d_imex method)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.u_exact"]], "xvalues (advectiondiffusion1d_imex attribute)": [[93, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.xvalues"]], "a (advectionnd attribute)": [[94, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.A"]], "id (advectionnd attribute)": [[94, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.Id"]], "advectionnd (class in implementations.problem_classes.advectionequation_nd_fd)": [[94, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd"]], "implementations.problem_classes.advectionequation_nd_fd": [[94, "module-implementations.problem_classes.AdvectionEquation_ND_FD"]], "u_exact() (advectionnd method)": [[94, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.u_exact"]], "a (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.A"]], "a (allencahn_periodic_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.A"]], "allencahn_front_finel (class in implementations.problem_classes.allencahn_1d_fd)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel"]], "allencahn_front_fullyimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit"]], "allencahn_front_semiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit"]], "allencahn_periodic_fullyimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit"]], "allencahn_periodic_multiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit"]], "allencahn_periodic_semiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit"]], "dtype_f (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dtype_f"]], "dtype_f (allencahn_front_semiimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.dtype_f"]], "dtype_f (allencahn_periodic_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dtype_f"]], "dtype_f (allencahn_periodic_multiimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.dtype_f"]], "dtype_f (allencahn_periodic_semiimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.dtype_f"]], "dtype_u (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dtype_u"]], "dtype_u (allencahn_periodic_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dtype_u"]], "dx (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dx"]], "dx (allencahn_periodic_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dx"]], "eval_f() (allencahn_front_finel method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel.eval_f"]], "eval_f() (allencahn_front_fullyimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.eval_f"]], "eval_f() (allencahn_front_semiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.eval_f"]], "eval_f() (allencahn_periodic_fullyimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.eval_f"]], "eval_f() (allencahn_periodic_multiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.eval_f"]], "eval_f() (allencahn_periodic_semiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.eval_f"]], "implementations.problem_classes.allencahn_1d_fd": [[95, "module-implementations.problem_classes.AllenCahn_1D_FD"]], "solve_system() (allencahn_front_finel method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel.solve_system"]], "solve_system() (allencahn_front_fullyimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.solve_system"]], "solve_system() (allencahn_front_semiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.solve_system"]], "solve_system() (allencahn_periodic_fullyimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.solve_system"]], "solve_system() (allencahn_periodic_semiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.solve_system"]], "solve_system_1() (allencahn_periodic_multiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.solve_system_1"]], "solve_system_2() (allencahn_periodic_multiimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.solve_system_2"]], "u_exact() (allencahn_front_fullyimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.u_exact"]], "u_exact() (allencahn_periodic_fullyimplicit method)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.u_exact"]], "uext (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.uext"]], "work_counters (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.work_counters"]], "work_counters (allencahn_periodic_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.work_counters"]], "xvalues (allencahn_front_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.xvalues"]], "xvalues (allencahn_periodic_fullyimplicit attribute)": [[95, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.xvalues"]], "a (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.A"]], "allencahn_fullyimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit"]], "allencahn_multiimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit"]], "allencahn_multiimplicit_v2 (class in implementations.problem_classes.allencahn_2d_fd)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2"]], "allencahn_semiimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit"]], "allencahn_semiimplicit_v2 (class in implementations.problem_classes.allencahn_2d_fd)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2"]], "dtype_f (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dtype_f"]], "dtype_f (allencahn_multiimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.dtype_f"]], "dtype_f (allencahn_multiimplicit_v2 attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.dtype_f"]], "dtype_f (allencahn_semiimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.dtype_f"]], "dtype_f (allencahn_semiimplicit_v2 attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.dtype_f"]], "dtype_u (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dtype_u"]], "dx (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dx"]], "eval_f() (allencahn_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.eval_f"]], "eval_f() (allencahn_multiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.eval_f"]], "eval_f() (allencahn_multiimplicit_v2 method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.eval_f"]], "eval_f() (allencahn_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.eval_f"]], "eval_f() (allencahn_semiimplicit_v2 method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.eval_f"]], "implementations.problem_classes.allencahn_2d_fd": [[96, "module-implementations.problem_classes.AllenCahn_2D_FD"]], "lin_itercount (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.lin_itercount"]], "lin_ncalls (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.lin_ncalls"]], "newton_itercount (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.newton_itercount"]], "newton_ncalls (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.newton_ncalls"]], "solve_system() (allencahn_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.solve_system"]], "solve_system() (allencahn_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.solve_system"]], "solve_system() (allencahn_semiimplicit_v2 method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.solve_system"]], "solve_system_1() (allencahn_multiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.solve_system_1"]], "solve_system_1() (allencahn_multiimplicit_v2 method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.solve_system_1"]], "solve_system_2() (allencahn_multiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.solve_system_2"]], "solve_system_2() (allencahn_multiimplicit_v2 method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.solve_system_2"]], "u_exact() (allencahn_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.u_exact"]], "u_exact() (allencahn_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.u_exact"]], "xvalues (allencahn_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.xvalues"]], "allencahn2d_imex (class in implementations.problem_classes.allencahn_2d_fft)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex"]], "allencahn2d_imex_stab (class in implementations.problem_classes.allencahn_2d_fft)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab"]], "dtype_f (allencahn2d_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dtype_f"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dtype_f"]], "dtype_u (allencahn2d_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dtype_u"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dtype_u"]], "dx (allencahn2d_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dx"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dx"]], "dx (allencahn2d_imex_stab attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.dx"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.dx"]], "eval_f() (allencahn2d_imex method)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.eval_f"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.eval_f"]], "eval_f() (allencahn2d_imex_stab method)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.eval_f"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.eval_f"]], "implementations.problem_classes.allencahn_2d_fft": [[98, "module-implementations.problem_classes.AllenCahn_2D_FFT"]], "lap (allencahn2d_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.lap"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.lap"]], "lap (allencahn2d_imex_stab attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.lap"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.lap"]], "solve_system() (allencahn2d_imex method)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.solve_system"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.solve_system"]], "solve_system() (allencahn2d_imex_stab method)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.solve_system"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.solve_system"]], "u_exact() (allencahn2d_imex method)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.u_exact"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.u_exact"]], "xvalues (allencahn2d_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.xvalues"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.xvalues"]], "xvalues (allencahn2d_imex_stab attribute)": [[98, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.xvalues"], [99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.xvalues"]], "allencahn2d_imex (class in implementations.problem_classes.allencahn_2d_fft_gpu)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex"]], "allencahn2d_imex_stab (class in implementations.problem_classes.allencahn_2d_fft_gpu)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab"]], "implementations.problem_classes.allencahn_2d_fft_gpu": [[99, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"]], "k2 (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.K2"]], "x (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.X"]], "allencahn_imex (class in implementations.problem_classes.allencahn_mpifft)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex"]], "allencahn_imex_timeforcing (class in implementations.problem_classes.allencahn_mpifft)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing"]], "dtype_f (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dtype_f"]], "dtype_u (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dtype_u"]], "dx (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dx"]], "dy (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dy"]], "eval_f() (allencahn_imex method)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.eval_f"]], "eval_f() (allencahn_imex_timeforcing method)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing.eval_f"]], "fft (allencahn_imex attribute)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.fft"]], "implementations.problem_classes.allencahn_mpifft": [[100, "module-implementations.problem_classes.AllenCahn_MPIFFT"]], "solve_system() (allencahn_imex method)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.solve_system"]], "u_exact() (allencahn_imex method)": [[100, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.u_exact"]], "d (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.D"]], "k2 (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.K2"]], "l (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.L"]], "tm (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.TM"]], "x (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.X"]], "allencahn_temp_imex (class in implementations.problem_classes.allencahn_temp_mpifft)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex"]], "comm (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.comm"]], "dtype_f (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dtype_f"]], "dtype_u (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dtype_u"]], "dw (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dw"]], "dx (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dx"]], "dy (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dy"]], "eps (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.eps"]], "eval_f() (allencahn_temp_imex method)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.eval_f"]], "fft (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.fft"]], "implementations.problem_classes.allencahn_temp_mpifft": [[101, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"]], "init_type (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.init_type"]], "nvars (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.nvars"]], "radius (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.radius"]], "solve_system() (allencahn_temp_imex method)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.solve_system"]], "spectral (allencahn_temp_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.spectral"]], "u_exact() (allencahn_temp_imex method)": [[101, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.u_exact"]], "auzinger (class in implementations.problem_classes.auzinger_implicit)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger"]], "dtype_f (auzinger attribute)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.dtype_f"]], "dtype_u (auzinger attribute)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.dtype_u"]], "eval_f() (auzinger method)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.eval_f"]], "implementations.problem_classes.auzinger_implicit": [[102, "module-implementations.problem_classes.Auzinger_implicit"]], "newton_maxiter (auzinger attribute)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.newton_maxiter"]], "newton_tol (auzinger attribute)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.newton_tol"]], "solve_system() (auzinger method)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.solve_system"]], "u_exact() (auzinger method)": [[102, "implementations.problem_classes.Auzinger_implicit.auzinger.u_exact"]], "a (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.A"]], "battery (class in implementations.problem_classes.battery)": [[103, "implementations.problem_classes.Battery.battery"]], "battery_implicit (class in implementations.problem_classes.battery)": [[103, "implementations.problem_classes.Battery.battery_implicit"]], "battery_n_capacitors (class in implementations.problem_classes.battery)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors"]], "count_switches() (battery_n_capacitors method)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.count_switches"]], "dtype_f (battery attribute)": [[103, "implementations.problem_classes.Battery.battery.dtype_f"]], "dtype_f (battery_implicit attribute)": [[103, "implementations.problem_classes.Battery.battery_implicit.dtype_f"]], "dtype_f (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.dtype_f"]], "dtype_u (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.dtype_u"]], "eval_f() (battery method)": [[103, "implementations.problem_classes.Battery.battery.eval_f"]], "eval_f() (battery_implicit method)": [[103, "implementations.problem_classes.Battery.battery_implicit.eval_f"]], "eval_f() (battery_n_capacitors method)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.eval_f"]], "get_problem_dict() (battery_n_capacitors method)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.get_problem_dict"]], "get_switching_info() (battery_n_capacitors method)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.get_switching_info"]], "implementations.problem_classes.battery": [[103, "module-implementations.problem_classes.Battery"]], "nswitches (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.nswitches"]], "solve_system() (battery method)": [[103, "implementations.problem_classes.Battery.battery.solve_system"]], "solve_system() (battery_implicit method)": [[103, "implementations.problem_classes.Battery.battery_implicit.solve_system"]], "solve_system() (battery_n_capacitors method)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.solve_system"]], "switch_a (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.switch_A"]], "switch_f (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.switch_f"]], "t_switch (battery_n_capacitors attribute)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.t_switch"]], "u_exact() (battery method)": [[103, "implementations.problem_classes.Battery.battery.u_exact"]], "u_exact() (battery_n_capacitors method)": [[103, "implementations.problem_classes.Battery.battery_n_capacitors.u_exact"]], "work_counters (battery_implicit attribute)": [[103, "implementations.problem_classes.Battery.battery_implicit.work_counters"]], "d_upwind (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.D_upwind"]], "id (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.Id"]], "m (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.M"]], "n (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.N"]], "bc_hor (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.bc_hor"]], "bc_ver (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.bc_ver"]], "boussinesq_2d_imex (class in implementations.problem_classes.boussinesq_2d_fd_imex)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex"]], "dtype_f (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.dtype_f"]], "dtype_u (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.dtype_u"]], "eval_f() (boussinesq_2d_imex method)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.eval_f"]], "gmres_logger (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.gmres_logger"]], "h (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.h"]], "implementations.problem_classes.boussinesq_2d_fd_imex": [[104, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"]], "solve_system() (boussinesq_2d_imex method)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.solve_system"]], "u_exact() (boussinesq_2d_imex method)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.u_exact"]], "xx (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.xx"]], "zz (boussinesq_2d_imex attribute)": [[104, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.zz"]], "brusselator (class in implementations.problem_classes.brusselator)": [[105, "implementations.problem_classes.Brusselator.Brusselator"]], "dtype_f (brusselator attribute)": [[105, "implementations.problem_classes.Brusselator.Brusselator.dtype_f"]], "dtype_u (brusselator attribute)": [[105, "implementations.problem_classes.Brusselator.Brusselator.dtype_u"]], "eval_f() (brusselator method)": [[105, "implementations.problem_classes.Brusselator.Brusselator.eval_f"]], "get_fig() (brusselator method)": [[105, "implementations.problem_classes.Brusselator.Brusselator.get_fig"]], "implementations.problem_classes.brusselator": [[105, "module-implementations.problem_classes.Brusselator"]], "plot() (brusselator method)": [[105, "implementations.problem_classes.Brusselator.Brusselator.plot"]], "solve_system() (brusselator method)": [[105, "implementations.problem_classes.Brusselator.Brusselator.solve_system"]], "u_exact() (brusselator method)": [[105, "implementations.problem_classes.Brusselator.Brusselator.u_exact"]], "a (buck_converter attribute)": [[106, "implementations.problem_classes.BuckConverter.buck_converter.A"]], "buck_converter (class in implementations.problem_classes.buckconverter)": [[106, "implementations.problem_classes.BuckConverter.buck_converter"]], "dtype_f (buck_converter attribute)": [[106, "implementations.problem_classes.BuckConverter.buck_converter.dtype_f"]], "dtype_u (buck_converter attribute)": [[106, "implementations.problem_classes.BuckConverter.buck_converter.dtype_u"]], "eval_f() (buck_converter method)": [[106, "implementations.problem_classes.BuckConverter.buck_converter.eval_f"]], "implementations.problem_classes.buckconverter": [[106, "module-implementations.problem_classes.BuckConverter"]], "solve_system() (buck_converter method)": [[106, "implementations.problem_classes.BuckConverter.buck_converter.solve_system"]], "u_exact() (buck_converter method)": [[106, "implementations.problem_classes.BuckConverter.buck_converter.u_exact"]], "discontinuoustestode (class in implementations.problem_classes.discontinuoustestode)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE"]], "count_switches() (discontinuoustestode method)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.count_switches"]], "dtype_f (discontinuoustestode attribute)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.dtype_f"]], "dtype_u (discontinuoustestode attribute)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.dtype_u"]], "eval_f() (discontinuoustestode method)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.eval_f"]], "get_switching_info() (discontinuoustestode method)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.get_switching_info"]], "implementations.problem_classes.discontinuoustestode": [[107, "module-implementations.problem_classes.DiscontinuousTestODE"]], "nswitches (discontinuoustestode attribute)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.nswitches"]], "solve_system() (discontinuoustestode method)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.solve_system"]], "t_switch (discontinuoustestode attribute)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.t_switch"]], "t_switch_exact (discontinuoustestode attribute)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.t_switch_exact"]], "u_exact() (discontinuoustestode method)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.u_exact"]], "work_counters (discontinuoustestode attribute)": [[107, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.work_counters"]], "dtype_f (swfw_scalar attribute)": [[108, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.dtype_f"]], "dtype_u (swfw_scalar attribute)": [[108, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.dtype_u"]], "eval_f() (swfw_scalar method)": [[108, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.eval_f"]], "implementations.problem_classes.fastwaveslowwave_0d": [[108, "module-implementations.problem_classes.FastWaveSlowWave_0D"]], "solve_system() (swfw_scalar method)": [[108, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.solve_system"]], "swfw_scalar (class in implementations.problem_classes.fastwaveslowwave_0d)": [[108, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar"]], "u_exact() (swfw_scalar method)": [[108, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.u_exact"]], "dtype_f (fermi_pasta_ulam_tsingou attribute)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dtype_f"]], "dtype_u (fermi_pasta_ulam_tsingou attribute)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dtype_u"]], "dx (fermi_pasta_ulam_tsingou attribute)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dx"]], "eval_f() (fermi_pasta_ulam_tsingou method)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_f"]], "eval_hamiltonian() (fermi_pasta_ulam_tsingou method)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_hamiltonian"]], "eval_mode_energy() (fermi_pasta_ulam_tsingou method)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_mode_energy"]], "fermi_pasta_ulam_tsingou (class in implementations.problem_classes.fermipastaulamtsingou)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou"]], "implementations.problem_classes.fermipastaulamtsingou": [[109, "module-implementations.problem_classes.FermiPastaUlamTsingou"]], "ones (fermi_pasta_ulam_tsingou attribute)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.ones"]], "u_exact() (fermi_pasta_ulam_tsingou method)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.u_exact"]], "xvalues (fermi_pasta_ulam_tsingou attribute)": [[109, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.xvalues"]], "g (full_solar_system attribute)": [[110, "implementations.problem_classes.FullSolarSystem.full_solar_system.G"]], "dtype_f (full_solar_system attribute)": [[110, "implementations.problem_classes.FullSolarSystem.full_solar_system.dtype_f"]], "dtype_u (full_solar_system attribute)": [[110, "implementations.problem_classes.FullSolarSystem.full_solar_system.dtype_u"]], "full_solar_system (class in implementations.problem_classes.fullsolarsystem)": [[110, "implementations.problem_classes.FullSolarSystem.full_solar_system"]], "implementations.problem_classes.fullsolarsystem": [[110, "module-implementations.problem_classes.FullSolarSystem"]], "u_exact() (full_solar_system method)": [[110, "implementations.problem_classes.FullSolarSystem.full_solar_system.u_exact"]], "a (generalized_fisher attribute)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.A"]], "dtype_f (generalized_fisher attribute)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dtype_f"]], "dtype_u (generalized_fisher attribute)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dtype_u"]], "dx (generalized_fisher attribute)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dx"]], "eval_f() (generalized_fisher method)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.eval_f"]], "generalized_fisher (class in implementations.problem_classes.generalizedfisher_1d_fd_implicit)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher"]], "implementations.problem_classes.generalizedfisher_1d_fd_implicit": [[111, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"]], "solve_system() (generalized_fisher method)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.solve_system"]], "u_exact() (generalized_fisher method)": [[111, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.u_exact"]], "a (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.A"]], "f (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.F"]], "fisher_full (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full"]], "fisher_reaction (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction"]], "j (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.J"]], "col (fisher_full attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.col"]], "dtype_f (petsc_fisher_fullyimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.dtype_f"]], "dtype_f (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dtype_f"]], "dtype_f (petsc_fisher_semiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.dtype_f"]], "dtype_u (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dtype_u"]], "dx (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dx"]], "eval_f() (petsc_fisher_fullyimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.eval_f"]], "eval_f() (petsc_fisher_multiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.eval_f"]], "eval_f() (petsc_fisher_semiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.eval_f"]], "formfunction() (fisher_full method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.formFunction"]], "formfunction() (fisher_reaction method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.formFunction"]], "formjacobian() (fisher_full method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.formJacobian"]], "formjacobian() (fisher_reaction method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.formJacobian"]], "get_sys_mat() (petsc_fisher_multiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.get_sys_mat"]], "implementations.problem_classes.generalizedfisher_1d_petsc": [[112, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"]], "ksp (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.ksp"]], "localx (fisher_full attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.localX"]], "localx (fisher_reaction attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.localX"]], "localx (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.localX"]], "mx (fisher_full attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.mx"]], "petsc_fisher_fullyimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit"]], "petsc_fisher_multiimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit"]], "petsc_fisher_semiimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit"]], "row (fisher_full attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.row"]], "snes (petsc_fisher_multiimplicit attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.snes"]], "solve_system() (petsc_fisher_fullyimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.solve_system"]], "solve_system() (petsc_fisher_semiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.solve_system"]], "solve_system_1() (petsc_fisher_multiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.solve_system_1"]], "solve_system_2() (petsc_fisher_multiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.solve_system_2"]], "u_exact() (petsc_fisher_multiimplicit method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.u_exact"]], "f (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F"]], "f1 (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F1"]], "f2 (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F2"]], "m (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.M"]], "v (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.V"]], "dtype_f (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.dtype_f"]], "dtype_u (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.dtype_u"]], "eval_f() (fenics_grayscott method)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.eval_f"]], "fenics_grayscott (class in implementations.problem_classes.grayscott_1d_fenics_implicit)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott"]], "implementations.problem_classes.grayscott_1d_fenics_implicit": [[113, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"]], "solve_system() (fenics_grayscott method)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.solve_system"]], "u_exact() (fenics_grayscott method)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.u_exact"]], "w (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w"]], "w1 (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w1"]], "w2 (fenics_grayscott attribute)": [[113, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w2"]], "amat (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.AMat"]], "gs_full (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full"]], "gs_reaction (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction"]], "id (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.Id"]], "dtype_f (petsc_grayscott_fullyimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.dtype_f"]], "dtype_f (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dtype_f"]], "dtype_f (petsc_grayscott_semiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.dtype_f"]], "dtype_u (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dtype_u"]], "dx (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dx"]], "dy (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dy"]], "eval_f() (petsc_grayscott_fullyimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.eval_f"]], "eval_f() (petsc_grayscott_multiimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.eval_f"]], "eval_f() (petsc_grayscott_semiimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.eval_f"]], "formfunction() (gs_full method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.formFunction"]], "formfunction() (gs_reaction method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.formFunction"]], "formjacobian() (gs_full method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.formJacobian"]], "formjacobian() (gs_reaction method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.formJacobian"]], "implementations.problem_classes.grayscott_2d_petsc_periodic": [[114, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"]], "ksp (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.ksp"]], "localx (gs_full attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.localX"]], "localx (gs_reaction attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.localX"]], "localx (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.localX"]], "petsc_grayscott_fullyimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit"]], "petsc_grayscott_multiimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit"]], "petsc_grayscott_semiimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit"]], "snes (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes"]], "snes_itercount (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes_itercount"]], "snes_ncalls (petsc_grayscott_multiimplicit attribute)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes_ncalls"]], "solve_system() (petsc_grayscott_fullyimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.solve_system"]], "solve_system() (petsc_grayscott_semiimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.solve_system"]], "solve_system_1() (petsc_grayscott_multiimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.solve_system_1"]], "solve_system_2() (petsc_grayscott_multiimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.solve_system_2"]], "u_exact() (petsc_grayscott_multiimplicit method)": [[114, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.u_exact"]], "ku (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.Ku"]], "ku (grayscott_mi_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.Ku"]], "kv (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.Kv"]], "kv (grayscott_mi_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.Kv"]], "x (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.X"]], "x (grayscott_mi_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.X"]], "dtype_f (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.dtype_f"]], "dtype_f (grayscott_mi_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.dtype_f"]], "dtype_f (grayscott_mi_linear attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.dtype_f"]], "dtype_u (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.dtype_u"]], "eval_f() (grayscott_imex_diffusion method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.eval_f"]], "eval_f() (grayscott_imex_linear method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear.eval_f"]], "eval_f() (grayscott_mi_diffusion method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.eval_f"]], "eval_f() (grayscott_mi_linear method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.eval_f"]], "fft (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.fft"]], "fft (grayscott_mi_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.fft"]], "grayscott_imex_diffusion (class in implementations.problem_classes.grayscott_mpifft)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion"]], "grayscott_imex_linear (class in implementations.problem_classes.grayscott_mpifft)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear"]], "grayscott_mi_diffusion (class in implementations.problem_classes.grayscott_mpifft)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion"]], "grayscott_mi_linear (class in implementations.problem_classes.grayscott_mpifft)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear"]], "implementations.problem_classes.grayscott_mpifft": [[115, "module-implementations.problem_classes.GrayScott_MPIFFT"]], "ndim (grayscott_imex_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.ndim"]], "ndim (grayscott_mi_diffusion attribute)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.ndim"]], "solve_system() (grayscott_imex_diffusion method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.solve_system"]], "solve_system_1() (grayscott_mi_diffusion method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.solve_system_1"]], "solve_system_1() (grayscott_mi_linear method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.solve_system_1"]], "solve_system_2() (grayscott_mi_diffusion method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.solve_system_2"]], "solve_system_2() (grayscott_mi_linear method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.solve_system_2"]], "u_exact() (grayscott_imex_diffusion method)": [[115, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.u_exact"]], "dtype_f (harmonic_oscillator attribute)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.dtype_f"]], "dtype_u (harmonic_oscillator attribute)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.dtype_u"]], "eval_f() (harmonic_oscillator method)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.eval_f"]], "eval_hamiltonian() (harmonic_oscillator method)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.eval_hamiltonian"]], "harmonic_oscillator (class in implementations.problem_classes.harmonicoscillator)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator"]], "implementations.problem_classes.harmonicoscillator": [[116, "module-implementations.problem_classes.HarmonicOscillator"]], "u_exact() (harmonic_oscillator method)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.u_exact"]], "u_init() (harmonic_oscillator method)": [[116, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.u_init"]], "k (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.K"]], "k (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.K"]], "k (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.K"]], "m (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.M"]], "m (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.M"]], "m (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.M"]], "v (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.V"]], "v (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.V"]], "v (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.V"]], "apply_mass_matrix() (fenics_heat method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.apply_mass_matrix"]], "bc (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.bc"]], "bc (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.bc"]], "bc (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.bc"]], "bc_hom (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.bc_hom"]], "bc_hom (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.bc_hom"]], "dtype_f (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.dtype_f"]], "dtype_u (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.dtype_u"]], "eval_f() (fenics_heat method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.eval_f"]], "eval_f() (fenics_heat_mass method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.eval_f"]], "fenics_heat (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat"]], "fenics_heat_mass (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass"]], "fenics_heat_mass_timebc (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc"]], "fix_bc_for_residual (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.fix_bc_for_residual"]], "fix_bc_for_residual (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.fix_bc_for_residual"]], "fix_residual() (fenics_heat_mass method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.fix_residual"]], "g (fenics_heat attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.g"]], "g (fenics_heat_mass attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.g"]], "g (fenics_heat_mass_timebc attribute)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.g"]], "implementations.problem_classes.heatequation_1d_fenics_matrix_forced": [[117, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"]], "solve_system() (fenics_heat method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.solve_system"]], "solve_system() (fenics_heat_mass method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.solve_system"]], "solve_system() (fenics_heat_mass_timebc method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.solve_system"]], "u_exact() (fenics_heat method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.u_exact"]], "u_exact() (fenics_heat_mass_timebc method)": [[117, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.u_exact"]], "a (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.A"]], "id (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.Id"]], "dtype_f (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dtype_f"]], "dtype_u (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dtype_u"]], "dx (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dx"]], "dy (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dy"]], "eval_f() (heat2d_petsc_forced method)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.eval_f"]], "heat2d_petsc_forced (class in implementations.problem_classes.heatequation_2d_petsc_forced)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced"]], "implementations.problem_classes.heatequation_2d_petsc_forced": [[118, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"]], "ksp (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp"]], "ksp_itercount (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp_itercount"]], "ksp_ncalls (heat2d_petsc_forced attribute)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp_ncalls"]], "solve_system() (heat2d_petsc_forced method)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.solve_system"]], "u_exact() (heat2d_petsc_forced method)": [[118, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.u_exact"]], "a (heatnd_unforced attribute)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.A"]], "id (heatnd_unforced attribute)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.Id"]], "dtype_f (heatnd_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.dtype_f"]], "eval_f() (heatnd_forced method)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.eval_f"]], "heatnd_forced (class in implementations.problem_classes.heatequation_nd_fd)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced"]], "heatnd_unforced (class in implementations.problem_classes.heatequation_nd_fd)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced"]], "implementations.problem_classes.heatequation_nd_fd": [[119, "module-implementations.problem_classes.HeatEquation_ND_FD"]], "u_exact() (heatnd_forced method)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.u_exact"]], "u_exact() (heatnd_unforced method)": [[119, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.u_exact"]], "dtype_f (henon_heiles attribute)": [[121, "implementations.problem_classes.HenonHeiles.henon_heiles.dtype_f"]], "dtype_u (henon_heiles attribute)": [[121, "implementations.problem_classes.HenonHeiles.henon_heiles.dtype_u"]], "eval_f() (henon_heiles method)": [[121, "implementations.problem_classes.HenonHeiles.henon_heiles.eval_f"]], "eval_hamiltonian() (henon_heiles method)": [[121, "implementations.problem_classes.HenonHeiles.henon_heiles.eval_hamiltonian"]], "henon_heiles (class in implementations.problem_classes.henonheiles)": [[121, "implementations.problem_classes.HenonHeiles.henon_heiles"]], "implementations.problem_classes.henonheiles": [[121, "module-implementations.problem_classes.HenonHeiles"]], "u_exact() (henon_heiles method)": [[121, "implementations.problem_classes.HenonHeiles.henon_heiles.u_exact"]], "dtype_f (logistics_equation attribute)": [[122, "implementations.problem_classes.LogisticEquation.logistics_equation.dtype_f"]], "dtype_u (logistics_equation attribute)": [[122, "implementations.problem_classes.LogisticEquation.logistics_equation.dtype_u"]], "eval_f() (logistics_equation method)": [[122, "implementations.problem_classes.LogisticEquation.logistics_equation.eval_f"]], "implementations.problem_classes.logisticequation": [[122, "module-implementations.problem_classes.LogisticEquation"]], "logistics_equation (class in implementations.problem_classes.logisticequation)": [[122, "implementations.problem_classes.LogisticEquation.logistics_equation"]], "solve_system() (logistics_equation method)": [[122, "implementations.problem_classes.LogisticEquation.logistics_equation.solve_system"]], "u_exact() (logistics_equation method)": [[122, "implementations.problem_classes.LogisticEquation.logistics_equation.u_exact"]], "lorenzattractor (class in implementations.problem_classes.lorenz)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor"]], "dtype_f (lorenzattractor attribute)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor.dtype_f"]], "dtype_u (lorenzattractor attribute)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor.dtype_u"]], "eval_f() (lorenzattractor method)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor.eval_f"]], "implementations.problem_classes.lorenz": [[123, "module-implementations.problem_classes.Lorenz"]], "solve_system() (lorenzattractor method)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor.solve_system"]], "u_exact() (lorenzattractor method)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor.u_exact"]], "work_counter (lorenzattractor attribute)": [[123, "implementations.problem_classes.Lorenz.LorenzAttractor.work_counter"]], "k2 (nonlinearschroedinger_imex attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.K2"]], "x (nonlinearschroedinger_imex attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.X"]], "dtype_f (nonlinearschroedinger_fully_implicit attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.dtype_f"]], "dtype_f (nonlinearschroedinger_imex attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.dtype_f"]], "dtype_u (nonlinearschroedinger_fully_implicit attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.dtype_u"]], "dtype_u (nonlinearschroedinger_imex attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.dtype_u"]], "eval_f() (nonlinearschroedinger_fully_implicit method)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.eval_f"]], "eval_f() (nonlinearschroedinger_imex method)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.eval_f"]], "fft (nonlinearschroedinger_imex attribute)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.fft"]], "implementations.problem_classes.nonlinearschroedinger_mpifft": [[124, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"]], "nonlinearschroedinger_fully_implicit (class in implementations.problem_classes.nonlinearschroedinger_mpifft)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit"]], "nonlinearschroedinger_imex (class in implementations.problem_classes.nonlinearschroedinger_mpifft)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex"]], "solve_system() (nonlinearschroedinger_fully_implicit method)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.solve_system"]], "solve_system() (nonlinearschroedinger_imex method)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.solve_system"]], "u_exact() (nonlinearschroedinger_imex method)": [[124, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.u_exact"]], "g (outer_solar_system attribute)": [[125, "id0"], [125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.G"]], "dtype_f (outer_solar_system attribute)": [[125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.dtype_f"]], "dtype_u (outer_solar_system attribute)": [[125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.dtype_u"]], "eval_f() (outer_solar_system method)": [[125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.eval_f"]], "eval_hamiltonian() (outer_solar_system method)": [[125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.eval_hamiltonian"]], "implementations.problem_classes.outersolarsystem": [[125, "module-implementations.problem_classes.OuterSolarSystem"]], "outer_solar_system (class in implementations.problem_classes.outersolarsystem)": [[125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system"]], "u_exact() (outer_solar_system method)": [[125, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.u_exact"]], "boris_solver() (penningtrap method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.boris_solver"]], "build_f() (penningtrap method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.build_f"]], "dtype_f (penningtrap attribute)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.dtype_f"]], "dtype_u (penningtrap attribute)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.dtype_u"]], "eval_f() (penningtrap method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.eval_f"]], "fast_interactions() (penningtrap static method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.fast_interactions"]], "get_interactions() (penningtrap method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.get_interactions"]], "implementations.problem_classes.penningtrap_3d": [[126, "module-implementations.problem_classes.PenningTrap_3D"]], "penningtrap (class in implementations.problem_classes.penningtrap_3d)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap"]], "u_exact() (penningtrap method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.u_exact"]], "u_init() (penningtrap method)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.u_init"]], "work_counter (penningtrap attribute)": [[126, "implementations.problem_classes.PenningTrap_3D.penningtrap.work_counter"]], "dtype_f (piline attribute)": [[127, "implementations.problem_classes.Piline.piline.dtype_f"]], "dtype_u (piline attribute)": [[127, "implementations.problem_classes.Piline.piline.dtype_u"]], "eval_f() (piline method)": [[127, "implementations.problem_classes.Piline.piline.eval_f"]], "implementations.problem_classes.piline": [[127, "module-implementations.problem_classes.Piline"]], "piline (class in implementations.problem_classes.piline)": [[127, "implementations.problem_classes.Piline.piline"]], "solve_system() (piline method)": [[127, "implementations.problem_classes.Piline.piline.solve_system"]], "u_exact() (piline method)": [[127, "implementations.problem_classes.Piline.piline.u_exact"]], "a (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.A"]], "id (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.Id"]], "quench (class in implementations.problem_classes.quench)": [[128, "implementations.problem_classes.Quench.Quench"]], "quenchimex (class in implementations.problem_classes.quench)": [[128, "implementations.problem_classes.Quench.QuenchIMEX"]], "dtype_f (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.dtype_f"]], "dtype_f (quenchimex attribute)": [[128, "implementations.problem_classes.Quench.QuenchIMEX.dtype_f"]], "dtype_u (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.dtype_u"]], "dx (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.dx"]], "eval_f() (quench method)": [[128, "implementations.problem_classes.Quench.Quench.eval_f"]], "eval_f() (quenchimex method)": [[128, "implementations.problem_classes.Quench.QuenchIMEX.eval_f"]], "eval_f_non_linear() (quench method)": [[128, "implementations.problem_classes.Quench.Quench.eval_f_non_linear"]], "get_non_linear_jacobian() (quench method)": [[128, "implementations.problem_classes.Quench.Quench.get_non_linear_Jacobian"]], "implementations.problem_classes.quench": [[128, "module-implementations.problem_classes.Quench"]], "leak (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.leak"]], "solve_system() (quench method)": [[128, "implementations.problem_classes.Quench.Quench.solve_system"]], "solve_system() (quenchimex method)": [[128, "implementations.problem_classes.Quench.QuenchIMEX.solve_system"]], "u_exact() (quench method)": [[128, "implementations.problem_classes.Quench.Quench.u_exact"]], "u_exact() (quenchimex method)": [[128, "implementations.problem_classes.Quench.QuenchIMEX.u_exact"]], "xv (quench attribute)": [[128, "implementations.problem_classes.Quench.Quench.xv"]], "a (testequation0d attribute)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.A"]], "dtype_f (testequation0d attribute)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.dtype_f"]], "dtype_u (testequation0d attribute)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.dtype_u"]], "eval_f() (testequation0d method)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.eval_f"]], "implementations.problem_classes.testequation_0d": [[129, "module-implementations.problem_classes.TestEquation_0D"]], "setup_gpu() (testequation0d class method)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.setup_GPU"]], "solve_system() (testequation0d method)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.solve_system"]], "testequation0d (class in implementations.problem_classes.testequation_0d)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d"]], "u_exact() (testequation0d method)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.u_exact"]], "xp (testequation0d attribute)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.xp"]], "xsp (testequation0d attribute)": [[129, "implementations.problem_classes.TestEquation_0D.testequation0d.xsp"]], "dtype_f (vanderpol attribute)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.dtype_f"]], "dtype_u (vanderpol attribute)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.dtype_u"]], "eval_f() (vanderpol method)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.eval_f"]], "implementations.problem_classes.van_der_pol_implicit": [[130, "module-implementations.problem_classes.Van_der_Pol_implicit"]], "solve_system() (vanderpol method)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.solve_system"]], "u_exact() (vanderpol method)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.u_exact"]], "vanderpol (class in implementations.problem_classes.van_der_pol_implicit)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol"]], "work_counters (vanderpol attribute)": [[130, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.work_counters"]], "k (fenics_vortex_2d attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.K"]], "k (fenics_vortex_2d_mass attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.K"]], "m (fenics_vortex_2d attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.M"]], "m (fenics_vortex_2d_mass attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.M"]], "v (fenics_vortex_2d attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.V"]], "v (fenics_vortex_2d_mass attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.V"]], "apply_mass_matrix() (fenics_vortex_2d method)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.apply_mass_matrix"]], "dtype_f (fenics_vortex_2d attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.dtype_f"]], "dtype_u (fenics_vortex_2d attribute)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.dtype_u"]], "eval_f() (fenics_vortex_2d method)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.eval_f"]], "eval_f() (fenics_vortex_2d_mass method)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.eval_f"]], "fenics_vortex_2d (class in implementations.problem_classes.vorticityvelocity_2d_fenics_periodic)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d"]], "fenics_vortex_2d_mass (class in implementations.problem_classes.vorticityvelocity_2d_fenics_periodic)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass"]], "implementations.problem_classes.vorticityvelocity_2d_fenics_periodic": [[131, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"]], "solve_system() (fenics_vortex_2d method)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.solve_system"]], "solve_system() (fenics_vortex_2d_mass method)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.solve_system"]], "u_exact() (fenics_vortex_2d method)": [[131, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.u_exact"]], "implementations.problem_classes.acoustic_helpers": [[132, "module-implementations.problem_classes.acoustic_helpers"]], "getbcleft() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[133, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getBCLeft"]], "getbcright() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[133, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getBCRight"]], "gethorizontaldx() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[133, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getHorizontalDx"]], "getmatrix() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[133, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getMatrix"]], "implementations.problem_classes.acoustic_helpers.buildfdmatrix": [[133, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"]], "getwave1dadvectionmatrix() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWave1DAdvectionMatrix"]], "getwave1dmatrix() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWave1DMatrix"]], "getwavebcleft() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWaveBCLeft"]], "getwavebcright() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWaveBCRight"]], "implementations.problem_classes.acoustic_helpers.buildwave1dmatrix": [[134, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"]], "bdf2 (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2"]], "dirk (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk"]], "f() (dirk method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.f"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.f"]], "f_fast() (rk_imex method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_fast"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_fast"]], "f_fast_solve() (rk_imex method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_fast_solve"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_fast_solve"]], "f_slow() (rk_imex method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_slow"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_slow"]], "f_solve() (dirk method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.f_solve"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.f_solve"]], "firsttimestep() (bdf2 method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2.firsttimestep"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.firsttimestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators": [[135, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"]], "rk_imex (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex"]], "timestep() (bdf2 method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2.timestep"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.timestep"]], "timestep() (dirk method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.timestep"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.timestep"]], "timestep() (rk_imex method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.timestep"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.timestep"]], "timestep() (trapezoidal method)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal.timestep"], [141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.timestep"]], "trapezoidal (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[135, "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal"]], "implementations.problem_classes.boussinesq_helpers": [[136, "module-implementations.problem_classes.boussinesq_helpers"]], "get2dmatrix() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[137, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DMatrix"]], "get2dmesh() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[137, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DMesh"]], "get2dupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[137, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DUpwindMatrix"]], "getbchorizontal() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[137, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.getBCHorizontal"]], "getbcvertical() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[137, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.getBCVertical"]], "implementations.problem_classes.boussinesq_helpers.build2dfdmatrix": [[137, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"]], "getboussinesq2dmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesq2DMatrix"]], "getboussinesq2dupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesq2DUpwindMatrix"]], "getboussinesqbchorizontal() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesqBCHorizontal"]], "getboussinesqbcvertical() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesqBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix": [[138, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"]], "getbcleft() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getBCLeft"]], "getbcright() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getBCRight"]], "getmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getMatrix"]], "getupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getUpwindMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildfdmatrix": [[139, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"]], "callback (class in implementations.problem_classes.boussinesq_helpers.helper_classes)": [[140, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback"]], "add() (logging method)": [[140, "implementations.problem_classes.boussinesq_helpers.helper_classes.logging.add"]], "getcounter() (callback method)": [[140, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback.getcounter"]], "getresidual() (callback method)": [[140, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback.getresidual"]], "implementations.problem_classes.boussinesq_helpers.helper_classes": [[140, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"]], "logging (class in implementations.problem_classes.boussinesq_helpers.helper_classes)": [[140, "implementations.problem_classes.boussinesq_helpers.helper_classes.logging"]], "numsmalltimesteps() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.NumSmallTimeSteps"]], "rk3lin() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.RK3Lin"]], "splitexplicit (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit"]], "verletlin() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.VerletLin"]], "bdf2 (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2"]], "dirk (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk"]], "f() (bdf2 method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.f"]], "f() (trapezoidal method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.f"]], "f_fast() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fast"]], "f_fastmom() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fastMom"]], "f_fastther() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fastTher"]], "f_slow() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_slow"]], "f_solve() (bdf2 method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.f_solve"]], "f_solve() (trapezoidal method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.f_solve"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators": [[141, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"]], "rk_imex (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex"]], "timestep() (splitexplicit method)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.timestep"]], "trapezoidal (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[141, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal"]], "implementations.problem_classes.boussinesq_helpers.unflatten": [[142, "module-implementations.problem_classes.boussinesq_helpers.unflatten"]], "unflatten() (in module implementations.problem_classes.boussinesq_helpers.unflatten)": [[142, "implementations.problem_classes.boussinesq_helpers.unflatten.unflatten"]], "a (genericndimfindiff attribute)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.A"]], "genericndimfindiff (class in implementations.problem_classes.generic_nd_fd)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff"]], "id (genericndimfindiff attribute)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.Id"]], "dtype_f (genericndimfindiff attribute)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dtype_f"]], "dtype_u (genericndimfindiff attribute)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dtype_u"]], "dx (genericndimfindiff property)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dx"]], "eval_f() (genericndimfindiff method)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.eval_f"]], "get_default_sweeper_class() (genericndimfindiff class method)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.get_default_sweeper_class"]], "grids (genericndimfindiff property)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.grids"]], "implementations.problem_classes.generic_nd_fd": [[143, "module-implementations.problem_classes.generic_ND_FD"]], "ndim (genericndimfindiff property)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.ndim"]], "solve_system() (genericndimfindiff method)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.solve_system"]], "xvalues (genericndimfindiff attribute)": [[143, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.xvalues"]], "dtype_f (nonlinear_ode_1 attribute)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.dtype_f"]], "dtype_u (nonlinear_ode_1 attribute)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.dtype_u"]], "eval_f() (nonlinear_ode_1 method)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.eval_f"]], "implementations.problem_classes.nonlinear_ode_1": [[144, "module-implementations.problem_classes.nonlinear_ODE_1"]], "newton_itercount (nonlinear_ode_1 attribute)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.newton_itercount"]], "newton_ncalls (nonlinear_ode_1 attribute)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.newton_ncalls"]], "nonlinear_ode_1 (class in implementations.problem_classes.nonlinear_ode_1)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1"]], "solve_system() (nonlinear_ode_1 method)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.solve_system"]], "u_exact() (nonlinear_ode_1 method)": [[144, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.u_exact"]], "protherorobinson (class in implementations.problem_classes.odescalar)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson"]], "dg() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.dg"]], "dtype_f (protherorobinson attribute)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.dtype_f"]], "dtype_u (protherorobinson attribute)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.dtype_u"]], "eval_f() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.eval_f"]], "f() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.f"]], "f_lin() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.f_LIN"]], "f_nonlin() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.f_NONLIN"]], "g() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.g"]], "implementations.problem_classes.odescalar": [[145, "module-implementations.problem_classes.odeScalar"]], "jac() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.jac"]], "jac_lin() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.jac_LIN"]], "jac_nonlin() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.jac_NONLIN"]], "solve_system() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.solve_system"]], "u_exact() (protherorobinson method)": [[145, "implementations.problem_classes.odeScalar.ProtheroRobinson.u_exact"]], "chemicalreaction3var (class in implementations.problem_classes.odesystem)": [[146, "implementations.problem_classes.odeSystem.ChemicalReaction3Var"]], "jacobielliptic (class in implementations.problem_classes.odesystem)": [[146, "implementations.problem_classes.odeSystem.JacobiElliptic"]], "kaps (class in implementations.problem_classes.odesystem)": [[146, "implementations.problem_classes.odeSystem.Kaps"]], "protherorobinsonautonomous (class in implementations.problem_classes.odesystem)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous"]], "dg() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dg"]], "dg2() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dg2"]], "dginv() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dgInv"]], "dginv_lin() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dgInv_LIN"]], "dginv_nonlin() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dgInv_NONLIN"]], "dtype_f (chemicalreaction3var attribute)": [[146, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.dtype_f"]], "dtype_f (jacobielliptic attribute)": [[146, "implementations.problem_classes.odeSystem.JacobiElliptic.dtype_f"]], "dtype_f (kaps attribute)": [[146, "implementations.problem_classes.odeSystem.Kaps.dtype_f"]], "dtype_f (protherorobinsonautonomous attribute)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dtype_f"]], "dtype_u (chemicalreaction3var attribute)": [[146, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.dtype_u"]], "dtype_u (jacobielliptic attribute)": [[146, "implementations.problem_classes.odeSystem.JacobiElliptic.dtype_u"]], "dtype_u (kaps attribute)": [[146, "implementations.problem_classes.odeSystem.Kaps.dtype_u"]], "dtype_u (protherorobinsonautonomous attribute)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dtype_u"]], "eval_f() (chemicalreaction3var method)": [[146, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.eval_f"]], "eval_f() (jacobielliptic method)": [[146, "implementations.problem_classes.odeSystem.JacobiElliptic.eval_f"]], "eval_f() (kaps method)": [[146, "implementations.problem_classes.odeSystem.Kaps.eval_f"]], "eval_f() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.eval_f"]], "f() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.f"]], "f_lin() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.f_LIN"]], "f_nonlin() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.f_NONLIN"]], "g() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.g"]], "implementations.problem_classes.odesystem": [[146, "module-implementations.problem_classes.odeSystem"]], "solve_system() (chemicalreaction3var method)": [[146, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.solve_system"]], "solve_system() (jacobielliptic method)": [[146, "implementations.problem_classes.odeSystem.JacobiElliptic.solve_system"]], "solve_system() (kaps method)": [[146, "implementations.problem_classes.odeSystem.Kaps.solve_system"]], "solve_system() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.solve_system"]], "u_exact() (chemicalreaction3var method)": [[146, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.u_exact"]], "u_exact() (jacobielliptic method)": [[146, "implementations.problem_classes.odeSystem.JacobiElliptic.u_exact"]], "u_exact() (kaps method)": [[146, "implementations.problem_classes.odeSystem.Kaps.u_exact"]], "u_exact() (protherorobinsonautonomous method)": [[146, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.u_exact"]], "dtype_f (polynomial_testequation attribute)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.dtype_f"]], "dtype_f (polynomial_testequation_imex attribute)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX.dtype_f"]], "dtype_u (polynomial_testequation attribute)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.dtype_u"]], "eval_f() (polynomial_testequation method)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.eval_f"]], "eval_f() (polynomial_testequation_imex method)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX.eval_f"]], "implementations.problem_classes.polynomial_test_problem": [[147, "module-implementations.problem_classes.polynomial_test_problem"]], "polynomial_testequation (class in implementations.problem_classes.polynomial_test_problem)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation"]], "polynomial_testequation_imex (class in implementations.problem_classes.polynomial_test_problem)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX"]], "solve_system() (polynomial_testequation method)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.solve_system"]], "u_exact() (polynomial_testequation method)": [[147, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.u_exact"]], "implementations.sweeper_classes": [[148, "module-implementations.sweeper_classes"]], "adamsbashforthexplicit1step (class in implementations.sweeper_classes.multistep)": [[149, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step"]], "adamsmoultonimplicit1step (class in implementations.sweeper_classes.multistep)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step"]], "adamsmoultonimplicit2step (class in implementations.sweeper_classes.multistep)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step"]], "backwardeuler (class in implementations.sweeper_classes.multistep)": [[149, "implementations.sweeper_classes.Multistep.BackwardEuler"]], "cache (class in implementations.sweeper_classes.multistep)": [[149, "implementations.sweeper_classes.Multistep.Cache"]], "multistep (class in implementations.sweeper_classes.multistep)": [[149, "implementations.sweeper_classes.Multistep.MultiStep"]], "alpha (adamsbashforthexplicit1step attribute)": [[149, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step.alpha"]], "alpha (adamsmoultonimplicit1step attribute)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step.alpha"]], "alpha (adamsmoultonimplicit2step attribute)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.alpha"]], "alpha (backwardeuler attribute)": [[149, "implementations.sweeper_classes.Multistep.BackwardEuler.alpha"]], "alpha (multistep attribute)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.alpha"]], "beta (adamsbashforthexplicit1step attribute)": [[149, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step.beta"]], "beta (adamsmoultonimplicit1step attribute)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step.beta"]], "beta (adamsmoultonimplicit2step attribute)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.beta"]], "beta (backwardeuler attribute)": [[149, "implementations.sweeper_classes.Multistep.BackwardEuler.beta"]], "beta (multistep attribute)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.beta"]], "compute_end_point() (multistep method)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.compute_end_point"]], "compute_residual() (multistep method)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.compute_residual"]], "generate_starting_values() (adamsmoultonimplicit2step method)": [[149, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.generate_starting_values"]], "generate_starting_values() (multistep method)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.generate_starting_values"]], "implementations.sweeper_classes.multistep": [[149, "module-implementations.sweeper_classes.Multistep"]], "predict() (multistep method)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.predict"]], "update() (cache method)": [[149, "implementations.sweeper_classes.Multistep.Cache.update"]], "update_nodes() (multistep method)": [[149, "implementations.sweeper_classes.Multistep.MultiStep.update_nodes"]], "ark54 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54"]], "ark548l2sa (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA"]], "ark548l2saerk (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK"]], "ark548l2saerk2 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2"]], "ark548l2saesdirk (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK"]], "ark548l2saesdirk2 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2"]], "backwardeuler (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler"]], "butchertableau (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ButcherTableau"]], "butchertableauclass (ark54 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.ButcherTableauClass"]], "butchertableauclass (ark548l2sa attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.ButcherTableauClass"]], "butchertableauclass (ark548l2saerk attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.ButcherTableauClass"]], "butchertableauclass (ark548l2saesdirk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.ButcherTableauClass"]], "butchertableauclass (cash_karp attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.ButcherTableauClass"]], "butchertableauclass (dirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.DIRK43.ButcherTableauClass"]], "butchertableauclass (esdirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.ButcherTableauClass"]], "butchertableauclass (esdirk53 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.ButcherTableauClass"]], "butchertableauclass (heun_euler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.ButcherTableauClass"]], "butchertableauclass (rungekutta attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.ButcherTableauClass"]], "butchertableauclass_explicit (ark54 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.ButcherTableauClass_explicit"]], "butchertableauclass_explicit (ark548l2sa attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.ButcherTableauClass_explicit"]], "butchertableauclass_explicit (rungekuttaimex attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.ButcherTableauClass_explicit"]], "butchertableauembedded (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ButcherTableauEmbedded"]], "cash_karp (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp"]], "cranknicholson (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson"]], "dirk43 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.DIRK43"]], "esdirk43 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43"]], "esdirk53 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53"]], "explicitmidpointmethod (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod"]], "forwardeuler (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler"]], "heun_euler (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler"]], "implicitmidpointmethod (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod"]], "rk4 (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.RK4"]], "rungekutta (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta"]], "rungekuttaimex (class in implementations.sweeper_classes.runge_kutta)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX"]], "compute_end_point() (rungekutta method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.compute_end_point"]], "gamma (ark548l2saesdirk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.gamma"]], "get_butcher_tableau() (rungekutta class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_Butcher_tableau"]], "get_butcher_tableau_explicit() (rungekuttaimex class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.get_Butcher_tableau_explicit"]], "get_q_matrix() (rungekutta class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_Q_matrix"]], "get_full_f() (rungekutta method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_full_f"]], "get_update_order() (ark54 class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.get_update_order"]], "get_update_order() (ark548l2sa class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.get_update_order"]], "get_update_order() (ark548l2saerk class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.get_update_order"]], "get_update_order() (ark548l2saesdirk2 class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.get_update_order"]], "get_update_order() (cash_karp class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.get_update_order"]], "get_update_order() (dirk43 class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.DIRK43.get_update_order"]], "get_update_order() (esdirk43 class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.get_update_order"]], "get_update_order() (esdirk53 class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.get_update_order"]], "get_update_order() (heun_euler class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.get_update_order"]], "get_update_order() (rungekutta class method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_update_order"]], "i (ark548l2saesdirk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.i"]], "implementations.sweeper_classes.runge_kutta": [[150, "module-implementations.sweeper_classes.Runge_Kutta"]], "integrate() (rungekutta method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.integrate"]], "integrate() (rungekuttaimex method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.integrate"]], "level (rungekutta property)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.level"]], "matrix (ark54 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.matrix"]], "matrix (ark548l2sa attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.matrix"]], "matrix (ark548l2saerk attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.matrix"]], "matrix (ark548l2saerk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2.matrix"]], "matrix (ark548l2saesdirk attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK.matrix"]], "matrix (ark548l2saesdirk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.matrix"]], "matrix (backwardeuler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.matrix"]], "matrix (cash_karp attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.matrix"]], "matrix (cranknicholson attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.matrix"]], "matrix (dirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.DIRK43.matrix"]], "matrix (esdirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.matrix"]], "matrix (esdirk53 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.matrix"]], "matrix (explicitmidpointmethod attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.matrix"]], "matrix (forwardeuler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.matrix"]], "matrix (heun_euler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.matrix"]], "matrix (implicitmidpointmethod attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.matrix"]], "matrix (rk4 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RK4.matrix"]], "matrix (rungekutta attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.matrix"]], "matrix_explicit (ark54 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.matrix_explicit"]], "matrix_explicit (ark548l2sa attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.matrix_explicit"]], "matrix_explicit (rungekuttaimex attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.matrix_explicit"]], "nodes (ark54 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.nodes"]], "nodes (ark548l2sa attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.nodes"]], "nodes (ark548l2saerk attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.nodes"]], "nodes (ark548l2saesdirk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.nodes"]], "nodes (backwardeuler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.nodes"]], "nodes (cash_karp attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.nodes"]], "nodes (cranknicholson attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.nodes"]], "nodes (dirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.DIRK43.nodes"]], "nodes (esdirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.nodes"]], "nodes (esdirk53 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.nodes"]], "nodes (explicitmidpointmethod attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.nodes"]], "nodes (forwardeuler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.nodes"]], "nodes (heun_euler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.nodes"]], "nodes (implicitmidpointmethod attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.nodes"]], "nodes (rk4 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RK4.nodes"]], "nodes (rungekutta attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.nodes"]], "predict() (rungekutta method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.predict"]], "predict() (rungekuttaimex method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.predict"]], "s2 (esdirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.s2"]], "update_nodes() (rungekutta method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.update_nodes"]], "update_nodes() (rungekuttaimex method)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.update_nodes"]], "weights (ark54 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK54.weights"]], "weights (ark548l2sa attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.weights"]], "weights (ark548l2saerk attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.weights"]], "weights (ark548l2saesdirk2 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.weights"]], "weights (backwardeuler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.weights"]], "weights (cash_karp attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.weights"]], "weights (cranknicholson attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.weights"]], "weights (dirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.DIRK43.weights"]], "weights (esdirk43 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.weights"]], "weights (esdirk53 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.weights"]], "weights (explicitmidpointmethod attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.weights"]], "weights (forwardeuler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.weights"]], "weights (heun_euler attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.weights"]], "weights (implicitmidpointmethod attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.weights"]], "weights (rk4 attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RK4.weights"]], "weights (rungekutta attribute)": [[150, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.weights"]], "rkn (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[151, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RKN"]], "rungekuttanystrom (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[151, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom"]], "velocity_verlet (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[151, "implementations.sweeper_classes.Runge_Kutta_Nystrom.Velocity_Verlet"]], "compute_end_point() (rungekuttanystrom method)": [[151, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.compute_end_point"]], "get_full_f() (rungekuttanystrom method)": [[151, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.get_full_f"]], "implementations.sweeper_classes.runge_kutta_nystrom": [[151, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"]], "update_nodes() (rungekuttanystrom method)": [[151, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.update_nodes"]], "s (boris_2nd_order attribute)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.S"]], "sq (boris_2nd_order attribute)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.SQ"]], "st (boris_2nd_order attribute)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.ST"]], "sx (boris_2nd_order attribute)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.Sx"]], "boris_2nd_order (class in implementations.sweeper_classes.boris_2nd_order)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order"]], "compute_end_point() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.compute_end_point"]], "get_scalar_problems_manysweep_mats() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_manysweep_mats"]], "get_scalar_problems_picardsweep_mats() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_picardsweep_mats"]], "get_scalar_problems_sweeper_mats() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_sweeper_mats"]], "get_sweeper_mats() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_sweeper_mats"]], "implementations.sweeper_classes.boris_2nd_order": [[152, "module-implementations.sweeper_classes.boris_2nd_order"]], "integrate() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.integrate"]], "update_nodes() (boris_2nd_order method)": [[152, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.update_nodes"]], "qe (explicit attribute)": [[153, "implementations.sweeper_classes.explicit.explicit.QE"]], "compute_end_point() (explicit method)": [[153, "implementations.sweeper_classes.explicit.explicit.compute_end_point"]], "explicit (class in implementations.sweeper_classes.explicit)": [[153, "implementations.sweeper_classes.explicit.explicit"]], "implementations.sweeper_classes.explicit": [[153, "module-implementations.sweeper_classes.explicit"]], "integrate() (explicit method)": [[153, "implementations.sweeper_classes.explicit.explicit.integrate"]], "update_nodes() (explicit method)": [[153, "implementations.sweeper_classes.explicit.explicit.update_nodes"]], "qi (generic_implicit attribute)": [[154, "implementations.sweeper_classes.generic_implicit.generic_implicit.QI"]], "compute_end_point() (generic_implicit method)": [[154, "implementations.sweeper_classes.generic_implicit.generic_implicit.compute_end_point"]], "generic_implicit (class in implementations.sweeper_classes.generic_implicit)": [[154, "implementations.sweeper_classes.generic_implicit.generic_implicit"]], "implementations.sweeper_classes.generic_implicit": [[154, "module-implementations.sweeper_classes.generic_implicit"]], "integrate() (generic_implicit method)": [[154, "implementations.sweeper_classes.generic_implicit.generic_implicit.integrate"]], "update_nodes() (generic_implicit method)": [[154, "implementations.sweeper_classes.generic_implicit.generic_implicit.update_nodes"]], "sweepermpi (class in implementations.sweeper_classes.generic_implicit_mpi)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI"]], "comm (sweepermpi property)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.comm"]], "compute_end_point() (sweepermpi method)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.compute_end_point"]], "compute_end_point() (generic_implicit_mpi method)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.compute_end_point"]], "compute_residual() (sweepermpi method)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.compute_residual"]], "generic_implicit_mpi (class in implementations.sweeper_classes.generic_implicit_mpi)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI"]], "implementations.sweeper_classes.generic_implicit_mpi": [[155, "module-implementations.sweeper_classes.generic_implicit_MPI"]], "integrate() (generic_implicit_mpi method)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.integrate"]], "predict() (sweepermpi method)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.predict"]], "rank (sweepermpi property)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.rank"]], "rank (generic_implicit_mpi attribute)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.rank"]], "update_nodes() (generic_implicit_mpi method)": [[155, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.update_nodes"]], "qe (imex_1st_order attribute)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.QE"]], "qi (imex_1st_order attribute)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.QI"]], "compute_end_point() (imex_1st_order method)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.compute_end_point"]], "get_scalar_problems_manysweep_mat() (imex_1st_order method)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_scalar_problems_manysweep_mat"]], "get_scalar_problems_sweeper_mats() (imex_1st_order method)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_scalar_problems_sweeper_mats"]], "get_sweeper_mats() (imex_1st_order method)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_sweeper_mats"]], "imex_1st_order (class in implementations.sweeper_classes.imex_1st_order)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order": [[156, "module-implementations.sweeper_classes.imex_1st_order"]], "integrate() (imex_1st_order method)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.integrate"]], "update_nodes() (imex_1st_order method)": [[156, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.update_nodes"]], "compute_end_point() (imex_1st_order_mpi method)": [[157, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.compute_end_point"]], "imex_1st_order_mpi (class in implementations.sweeper_classes.imex_1st_order_mpi)": [[157, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_mpi": [[157, "module-implementations.sweeper_classes.imex_1st_order_MPI"]], "integrate() (imex_1st_order_mpi method)": [[157, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.integrate"]], "update_nodes() (imex_1st_order_mpi method)": [[157, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.update_nodes"]], "compute_end_point() (imex_1st_order_mass method)": [[158, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.compute_end_point"]], "compute_residual() (imex_1st_order_mass method)": [[158, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.compute_residual"]], "imex_1st_order_mass (class in implementations.sweeper_classes.imex_1st_order_mass)": [[158, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass"]], "implementations.sweeper_classes.imex_1st_order_mass": [[158, "module-implementations.sweeper_classes.imex_1st_order_mass"]], "update_nodes() (imex_1st_order_mass method)": [[158, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.update_nodes"]], "q1 (multi_implicit attribute)": [[159, "implementations.sweeper_classes.multi_implicit.multi_implicit.Q1"]], "q2 (multi_implicit attribute)": [[159, "implementations.sweeper_classes.multi_implicit.multi_implicit.Q2"]], "compute_end_point() (multi_implicit method)": [[159, "implementations.sweeper_classes.multi_implicit.multi_implicit.compute_end_point"]], "implementations.sweeper_classes.multi_implicit": [[159, "module-implementations.sweeper_classes.multi_implicit"]], "integrate() (multi_implicit method)": [[159, "implementations.sweeper_classes.multi_implicit.multi_implicit.integrate"]], "multi_implicit (class in implementations.sweeper_classes.multi_implicit)": [[159, "implementations.sweeper_classes.multi_implicit.multi_implicit"]], "update_nodes() (multi_implicit method)": [[159, "implementations.sweeper_classes.multi_implicit.multi_implicit.update_nodes"]], "qq (verlet attribute)": [[160, "implementations.sweeper_classes.verlet.verlet.QQ"], [160, "implementations.sweeper_classes.verlet.verlet.qQ"]], "qt (verlet attribute)": [[160, "implementations.sweeper_classes.verlet.verlet.QT"]], "qx (verlet attribute)": [[160, "implementations.sweeper_classes.verlet.verlet.Qx"]], "compute_end_point() (verlet method)": [[160, "implementations.sweeper_classes.verlet.verlet.compute_end_point"]], "implementations.sweeper_classes.verlet": [[160, "module-implementations.sweeper_classes.verlet"]], "integrate() (verlet method)": [[160, "implementations.sweeper_classes.verlet.verlet.integrate"]], "update_nodes() (verlet method)": [[160, "implementations.sweeper_classes.verlet.verlet.update_nodes"]], "verlet (class in implementations.sweeper_classes.verlet)": [[160, "implementations.sweeper_classes.verlet.verlet"]], "implementations.transfer_classes": [[161, "module-implementations.transfer_classes"]], "base_transfer_mass (class in implementations.transfer_classes.basetransfer_mass)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass"]], "coarse (base_transfer_mass attribute)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.coarse"]], "fine (base_transfer_mass attribute)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.fine"]], "implementations.transfer_classes.basetransfer_mass": [[162, "module-implementations.transfer_classes.BaseTransfer_mass"]], "logger (base_transfer_mass attribute)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.logger"]], "params (base_transfer_mass attribute)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.params"]], "prolong() (base_transfer_mass method)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.prolong"]], "prolong_f() (base_transfer_mass method)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.prolong_f"]], "restrict() (base_transfer_mass method)": [[162, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.restrict"]], "implementations.transfer_classes.transferfenicsmesh": [[163, "module-implementations.transfer_classes.TransferFenicsMesh"]], "mesh_to_mesh_fenics (class in implementations.transfer_classes.transferfenicsmesh)": [[163, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics"]], "project() (mesh_to_mesh_fenics method)": [[163, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.project"]], "prolong() (mesh_to_mesh_fenics method)": [[163, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.prolong"]], "restrict() (mesh_to_mesh_fenics method)": [[163, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.restrict"]], "pspace (mesh_to_mesh attribute)": [[164, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.Pspace"], [168, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.Pspace"]], "rspace (mesh_to_mesh attribute)": [[164, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.Rspace"], [168, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.Rspace"]], "implementations.transfer_classes.transfermesh": [[164, "module-implementations.transfer_classes.TransferMesh"]], "mesh_to_mesh (class in implementations.transfer_classes.transfermesh)": [[164, "implementations.transfer_classes.TransferMesh.mesh_to_mesh"]], "prolong() (mesh_to_mesh method)": [[164, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.prolong"], [168, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.prolong"]], "restrict() (mesh_to_mesh method)": [[164, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.restrict"], [168, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.restrict"]], "implementations.transfer_classes.transfermesh_fft": [[165, "module-implementations.transfer_classes.TransferMesh_FFT"]], "irfft_object_fine (mesh_to_mesh_fft attribute)": [[165, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.irfft_object_fine"]], "mesh_to_mesh_fft (class in implementations.transfer_classes.transfermesh_fft)": [[165, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft"]], "prolong() (mesh_to_mesh_fft method)": [[165, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.prolong"]], "restrict() (mesh_to_mesh_fft method)": [[165, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.restrict"]], "rfft_object_coarse (mesh_to_mesh_fft attribute)": [[165, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.rfft_object_coarse"]], "pspace (mesh_to_mesh_fft2d attribute)": [[166, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.Pspace"]], "rspace (mesh_to_mesh_fft2d attribute)": [[166, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.Rspace"]], "implementations.transfer_classes.transfermesh_fft2d": [[166, "module-implementations.transfer_classes.TransferMesh_FFT2D"]], "mesh_to_mesh_fft2d (class in implementations.transfer_classes.transfermesh_fft2d)": [[166, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d"]], "prolong() (mesh_to_mesh_fft2d method)": [[166, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.prolong"]], "restrict() (mesh_to_mesh_fft2d method)": [[166, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.restrict"]], "fft_to_fft (class in implementations.transfer_classes.transfermesh_mpifft)": [[167, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft"]], "implementations.transfer_classes.transfermesh_mpifft": [[167, "module-implementations.transfer_classes.TransferMesh_MPIFFT"]], "prolong() (fft_to_fft method)": [[167, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft.prolong"]], "restrict() (fft_to_fft method)": [[167, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft.restrict"]], "implementations.transfer_classes.transfermesh_nocoarse": [[168, "module-implementations.transfer_classes.TransferMesh_NoCoarse"]], "mesh_to_mesh (class in implementations.transfer_classes.transfermesh_nocoarse)": [[168, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh"]], "implementations.transfer_classes.transferpetscdmda": [[169, "module-implementations.transfer_classes.TransferPETScDMDA"]], "mesh_to_mesh_petsc_dmda (class in implementations.transfer_classes.transferpetscdmda)": [[169, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda"]], "prolong() (mesh_to_mesh_petsc_dmda method)": [[169, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda.prolong"]], "restrict() (mesh_to_mesh_petsc_dmda method)": [[169, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda.restrict"]], "implementations.transfer_classes.transferparticles_nocoarse": [[170, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "particles_to_particles (class in implementations.transfer_classes.transferparticles_nocoarse)": [[170, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles"]], "prolong() (particles_to_particles method)": [[170, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles.prolong"]], "restrict() (particles_to_particles method)": [[170, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles.restrict"]]}})