Search.setIndex({"docnames": ["CHANGELOG", "CODE_OF_CONDUCT", "CONTRIBUTING", "README", "docs/contrib/01_pull_requests", "docs/contrib/02_continuous_integration", "docs/contrib/03_naming_conventions", "docs/contrib/04_custom_implementations", "docs/contrib/05_documenting_code", "index", "projects/AllenCahn_Bayreuth", "projects/DAE", "projects/Hamiltonian", "projects/PinTSimE", "projects/RDC", "projects/Resilience", "projects/SDC_showdown", "projects/asymp_conv", "projects/compression", "projects/doc_SDC_showdown", "projects/doc_asympconv", "projects/doc_fput", "projects/doc_fwsw_acoustic", "projects/doc_fwsw_boussinesq", "projects/doc_fwsw_theory", "projects/doc_hamiltonian_simple", "projects/doc_matrixPFASST_matrix", "projects/doc_matrixPFASST_propagator", "projects/doc_parallelSDC_nonlinear", "projects/doc_parallelSDC_preconditioner", "projects/doc_parallelSDC_preconditioner_MPI", "projects/doc_performance", "projects/doc_solar_system", "projects/fwsw", "projects/matrixPFASST", "projects/parallelSDC", "projects/performance", "pySDC/core", "pySDC/core.BaseTransfer", "pySDC/core.Collocation", "pySDC/core.Common", "pySDC/core.Controller", "pySDC/core.ConvergenceController", "pySDC/core.Errors", "pySDC/core.Hooks", "pySDC/core.Lagrange", "pySDC/core.Level", "pySDC/core.Nodes", "pySDC/core.Problem", "pySDC/core.SpaceTransfer", "pySDC/core.Step", "pySDC/core.Sweeper", "pySDC/helpers", "pySDC/helpers.NCCL_communicator", "pySDC/helpers.plot_helper", "pySDC/helpers.problem_helper", "pySDC/helpers.pysdc_helper", "pySDC/helpers.setup_helper", "pySDC/helpers.stats_helper", "pySDC/helpers.transfer_helper", "pySDC/helpers.visualization_tools", "pySDC/implementations", "pySDC/implementations.controller_classes", "pySDC/implementations.controller_classes.controller_MPI", "pySDC/implementations.controller_classes.controller_nonMPI", "pySDC/implementations.convergence_controller_classes", "pySDC/implementations.convergence_controller_classes.adaptive_collocation", "pySDC/implementations.convergence_controller_classes.adaptivity", "pySDC/implementations.convergence_controller_classes.basic_restarting", "pySDC/implementations.convergence_controller_classes.check_convergence", "pySDC/implementations.convergence_controller_classes.check_iteration_estimator", "pySDC/implementations.convergence_controller_classes.crash", "pySDC/implementations.convergence_controller_classes.estimate_contraction_factor", "pySDC/implementations.convergence_controller_classes.estimate_embedded_error", "pySDC/implementations.convergence_controller_classes.estimate_extrapolation_error", "pySDC/implementations.convergence_controller_classes.estimate_polynomial_error", "pySDC/implementations.convergence_controller_classes.hotrod", "pySDC/implementations.convergence_controller_classes.inexactness", "pySDC/implementations.convergence_controller_classes.interpolate_between_restarts", "pySDC/implementations.convergence_controller_classes.spread_step_sizes", "pySDC/implementations.convergence_controller_classes.step_size_limiter", "pySDC/implementations.convergence_controller_classes.store_uold", "pySDC/implementations.datatype_classes", "pySDC/implementations.datatype_classes.cupy_mesh", "pySDC/implementations.datatype_classes.fenics_mesh", "pySDC/implementations.datatype_classes.mesh", "pySDC/implementations.datatype_classes.particles", "pySDC/implementations.datatype_classes.petsc_vec", "pySDC/implementations.problem_classes", "pySDC/implementations.problem_classes.AcousticAdvection_1D_FD_imex", "pySDC/implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT", "pySDC/implementations.problem_classes.AdvectionEquation_ND_FD", "pySDC/implementations.problem_classes.AllenCahn_1D_FD", "pySDC/implementations.problem_classes.AllenCahn_2D_FD", "pySDC/implementations.problem_classes.AllenCahn_2D_FD_gpu", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT_gpu", "pySDC/implementations.problem_classes.AllenCahn_MPIFFT", "pySDC/implementations.problem_classes.AllenCahn_Temp_MPIFFT", "pySDC/implementations.problem_classes.Auzinger_implicit", "pySDC/implementations.problem_classes.Battery", "pySDC/implementations.problem_classes.Boussinesq_2D_FD_imex", "pySDC/implementations.problem_classes.BuckConverter", "pySDC/implementations.problem_classes.DiscontinuousTestODE", "pySDC/implementations.problem_classes.FastWaveSlowWave_0D", "pySDC/implementations.problem_classes.FermiPastaUlamTsingou", "pySDC/implementations.problem_classes.FullSolarSystem", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_FD_implicit", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_PETSc", "pySDC/implementations.problem_classes.GrayScott_1D_FEniCS_implicit", "pySDC/implementations.problem_classes.GrayScott_2D_PETSc_periodic", "pySDC/implementations.problem_classes.GrayScott_MPIFFT", "pySDC/implementations.problem_classes.HarmonicOscillator", "pySDC/implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced", "pySDC/implementations.problem_classes.HeatEquation_2D_PETSc_forced", "pySDC/implementations.problem_classes.HeatEquation_ND_FD", "pySDC/implementations.problem_classes.HeatEquation_ND_FD_CuPy", "pySDC/implementations.problem_classes.HenonHeiles", "pySDC/implementations.problem_classes.LogisticEquation", "pySDC/implementations.problem_classes.Lorenz", "pySDC/implementations.problem_classes.NonlinearSchroedinger_MPIFFT", "pySDC/implementations.problem_classes.OuterSolarSystem", "pySDC/implementations.problem_classes.PenningTrap_3D", "pySDC/implementations.problem_classes.Piline", "pySDC/implementations.problem_classes.Quench", "pySDC/implementations.problem_classes.TestEquation_0D", "pySDC/implementations.problem_classes.Van_der_Pol_implicit", "pySDC/implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic", "pySDC/implementations.problem_classes.acoustic_helpers", "pySDC/implementations.problem_classes.acoustic_helpers.buildFDMatrix", "pySDC/implementations.problem_classes.acoustic_helpers.buildWave1DMatrix", "pySDC/implementations.problem_classes.acoustic_helpers.standard_integrators", "pySDC/implementations.problem_classes.boussinesq_helpers", "pySDC/implementations.problem_classes.boussinesq_helpers.build2DFDMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.buildFDMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.helper_classes", "pySDC/implementations.problem_classes.boussinesq_helpers.standard_integrators", "pySDC/implementations.problem_classes.boussinesq_helpers.unflatten", "pySDC/implementations.problem_classes.generic_ND_FD", "pySDC/implementations.problem_classes.nonlinear_ODE_1", "pySDC/implementations.problem_classes.polynomial_test_problem", "pySDC/implementations.sweeper_classes", "pySDC/implementations.sweeper_classes.Multistep", "pySDC/implementations.sweeper_classes.Runge_Kutta", "pySDC/implementations.sweeper_classes.Runge_Kutta_Nystrom", "pySDC/implementations.sweeper_classes.boris_2nd_order", "pySDC/implementations.sweeper_classes.explicit", "pySDC/implementations.sweeper_classes.generic_implicit", "pySDC/implementations.sweeper_classes.generic_implicit_MPI", "pySDC/implementations.sweeper_classes.imex_1st_order", "pySDC/implementations.sweeper_classes.imex_1st_order_MPI", "pySDC/implementations.sweeper_classes.imex_1st_order_mass", "pySDC/implementations.sweeper_classes.multi_implicit", "pySDC/implementations.sweeper_classes.verlet", "pySDC/implementations.transfer_classes", "pySDC/implementations.transfer_classes.BaseTransfer_mass", "pySDC/implementations.transfer_classes.TransferFenicsMesh", "pySDC/implementations.transfer_classes.TransferMesh", "pySDC/implementations.transfer_classes.TransferMesh_FFT", "pySDC/implementations.transfer_classes.TransferMesh_FFT2D", "pySDC/implementations.transfer_classes.TransferMesh_MPIFFT", "pySDC/implementations.transfer_classes.TransferMesh_NoCoarse", "pySDC/implementations.transfer_classes.TransferPETScDMDA", "pySDC/implementations.transfer_classes.TransferParticles_NoCoarse", "tutorial/doc_step_1_A", "tutorial/doc_step_1_B", "tutorial/doc_step_1_C", "tutorial/doc_step_1_D", "tutorial/doc_step_2_A", "tutorial/doc_step_2_B", "tutorial/doc_step_2_C", "tutorial/doc_step_3_A", "tutorial/doc_step_3_B", "tutorial/doc_step_3_C", "tutorial/doc_step_4_A", "tutorial/doc_step_4_B", "tutorial/doc_step_4_C", "tutorial/doc_step_4_D", "tutorial/doc_step_5_A", "tutorial/doc_step_5_B", "tutorial/doc_step_5_C", "tutorial/doc_step_6_A", "tutorial/doc_step_6_B", "tutorial/doc_step_6_C", "tutorial/doc_step_7_A", "tutorial/doc_step_7_B", "tutorial/doc_step_7_C", "tutorial/doc_step_8_A", "tutorial/doc_step_8_B", "tutorial/doc_step_8_C", "tutorial/step_1", "tutorial/step_2", "tutorial/step_3", "tutorial/step_4", "tutorial/step_5", "tutorial/step_6", "tutorial/step_7", "tutorial/step_8"], "filenames": ["CHANGELOG.rst", "CODE_OF_CONDUCT.rst", "CONTRIBUTING.rst", "README.rst", "docs/contrib/01_pull_requests.rst", "docs/contrib/02_continuous_integration.rst", "docs/contrib/03_naming_conventions.rst", "docs/contrib/04_custom_implementations.rst", "docs/contrib/05_documenting_code.rst", "index.rst", "projects/AllenCahn_Bayreuth.rst", "projects/DAE.rst", "projects/Hamiltonian.rst", "projects/PinTSimE.rst", "projects/RDC.rst", "projects/Resilience.rst", "projects/SDC_showdown.rst", "projects/asymp_conv.rst", "projects/compression.rst", "projects/doc_SDC_showdown.rst", "projects/doc_asympconv.rst", "projects/doc_fput.rst", "projects/doc_fwsw_acoustic.rst", "projects/doc_fwsw_boussinesq.rst", "projects/doc_fwsw_theory.rst", "projects/doc_hamiltonian_simple.rst", "projects/doc_matrixPFASST_matrix.rst", "projects/doc_matrixPFASST_propagator.rst", "projects/doc_parallelSDC_nonlinear.rst", "projects/doc_parallelSDC_preconditioner.rst", "projects/doc_parallelSDC_preconditioner_MPI.rst", "projects/doc_performance.rst", "projects/doc_solar_system.rst", "projects/fwsw.rst", "projects/matrixPFASST.rst", "projects/parallelSDC.rst", "projects/performance.rst", "pySDC/core.rst", "pySDC/core.BaseTransfer.rst", "pySDC/core.Collocation.rst", "pySDC/core.Common.rst", "pySDC/core.Controller.rst", "pySDC/core.ConvergenceController.rst", "pySDC/core.Errors.rst", "pySDC/core.Hooks.rst", "pySDC/core.Lagrange.rst", "pySDC/core.Level.rst", "pySDC/core.Nodes.rst", "pySDC/core.Problem.rst", "pySDC/core.SpaceTransfer.rst", "pySDC/core.Step.rst", "pySDC/core.Sweeper.rst", "pySDC/helpers.rst", "pySDC/helpers.NCCL_communicator.rst", "pySDC/helpers.plot_helper.rst", "pySDC/helpers.problem_helper.rst", "pySDC/helpers.pysdc_helper.rst", "pySDC/helpers.setup_helper.rst", "pySDC/helpers.stats_helper.rst", "pySDC/helpers.transfer_helper.rst", "pySDC/helpers.visualization_tools.rst", "pySDC/implementations.rst", "pySDC/implementations.controller_classes.rst", "pySDC/implementations.controller_classes.controller_MPI.rst", "pySDC/implementations.controller_classes.controller_nonMPI.rst", "pySDC/implementations.convergence_controller_classes.rst", "pySDC/implementations.convergence_controller_classes.adaptive_collocation.rst", "pySDC/implementations.convergence_controller_classes.adaptivity.rst", "pySDC/implementations.convergence_controller_classes.basic_restarting.rst", "pySDC/implementations.convergence_controller_classes.check_convergence.rst", "pySDC/implementations.convergence_controller_classes.check_iteration_estimator.rst", "pySDC/implementations.convergence_controller_classes.crash.rst", "pySDC/implementations.convergence_controller_classes.estimate_contraction_factor.rst", "pySDC/implementations.convergence_controller_classes.estimate_embedded_error.rst", "pySDC/implementations.convergence_controller_classes.estimate_extrapolation_error.rst", "pySDC/implementations.convergence_controller_classes.estimate_polynomial_error.rst", "pySDC/implementations.convergence_controller_classes.hotrod.rst", "pySDC/implementations.convergence_controller_classes.inexactness.rst", "pySDC/implementations.convergence_controller_classes.interpolate_between_restarts.rst", "pySDC/implementations.convergence_controller_classes.spread_step_sizes.rst", "pySDC/implementations.convergence_controller_classes.step_size_limiter.rst", "pySDC/implementations.convergence_controller_classes.store_uold.rst", "pySDC/implementations.datatype_classes.rst", "pySDC/implementations.datatype_classes.cupy_mesh.rst", "pySDC/implementations.datatype_classes.fenics_mesh.rst", "pySDC/implementations.datatype_classes.mesh.rst", "pySDC/implementations.datatype_classes.particles.rst", "pySDC/implementations.datatype_classes.petsc_vec.rst", "pySDC/implementations.problem_classes.rst", "pySDC/implementations.problem_classes.AcousticAdvection_1D_FD_imex.rst", "pySDC/implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.rst", "pySDC/implementations.problem_classes.AdvectionEquation_ND_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_1D_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FD_gpu.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT_gpu.rst", "pySDC/implementations.problem_classes.AllenCahn_MPIFFT.rst", "pySDC/implementations.problem_classes.AllenCahn_Temp_MPIFFT.rst", "pySDC/implementations.problem_classes.Auzinger_implicit.rst", "pySDC/implementations.problem_classes.Battery.rst", "pySDC/implementations.problem_classes.Boussinesq_2D_FD_imex.rst", "pySDC/implementations.problem_classes.BuckConverter.rst", "pySDC/implementations.problem_classes.DiscontinuousTestODE.rst", "pySDC/implementations.problem_classes.FastWaveSlowWave_0D.rst", "pySDC/implementations.problem_classes.FermiPastaUlamTsingou.rst", "pySDC/implementations.problem_classes.FullSolarSystem.rst", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.rst", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_PETSc.rst", "pySDC/implementations.problem_classes.GrayScott_1D_FEniCS_implicit.rst", "pySDC/implementations.problem_classes.GrayScott_2D_PETSc_periodic.rst", "pySDC/implementations.problem_classes.GrayScott_MPIFFT.rst", "pySDC/implementations.problem_classes.HarmonicOscillator.rst", "pySDC/implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.rst", "pySDC/implementations.problem_classes.HeatEquation_2D_PETSc_forced.rst", "pySDC/implementations.problem_classes.HeatEquation_ND_FD.rst", "pySDC/implementations.problem_classes.HeatEquation_ND_FD_CuPy.rst", "pySDC/implementations.problem_classes.HenonHeiles.rst", "pySDC/implementations.problem_classes.LogisticEquation.rst", "pySDC/implementations.problem_classes.Lorenz.rst", "pySDC/implementations.problem_classes.NonlinearSchroedinger_MPIFFT.rst", "pySDC/implementations.problem_classes.OuterSolarSystem.rst", "pySDC/implementations.problem_classes.PenningTrap_3D.rst", "pySDC/implementations.problem_classes.Piline.rst", "pySDC/implementations.problem_classes.Quench.rst", "pySDC/implementations.problem_classes.TestEquation_0D.rst", "pySDC/implementations.problem_classes.Van_der_Pol_implicit.rst", "pySDC/implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.rst", "pySDC/implementations.problem_classes.acoustic_helpers.rst", "pySDC/implementations.problem_classes.acoustic_helpers.buildFDMatrix.rst", "pySDC/implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.rst", "pySDC/implementations.problem_classes.acoustic_helpers.standard_integrators.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.buildFDMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.helper_classes.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.standard_integrators.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.unflatten.rst", "pySDC/implementations.problem_classes.generic_ND_FD.rst", "pySDC/implementations.problem_classes.nonlinear_ODE_1.rst", "pySDC/implementations.problem_classes.polynomial_test_problem.rst", "pySDC/implementations.sweeper_classes.rst", "pySDC/implementations.sweeper_classes.Multistep.rst", "pySDC/implementations.sweeper_classes.Runge_Kutta.rst", "pySDC/implementations.sweeper_classes.Runge_Kutta_Nystrom.rst", "pySDC/implementations.sweeper_classes.boris_2nd_order.rst", "pySDC/implementations.sweeper_classes.explicit.rst", "pySDC/implementations.sweeper_classes.generic_implicit.rst", "pySDC/implementations.sweeper_classes.generic_implicit_MPI.rst", "pySDC/implementations.sweeper_classes.imex_1st_order.rst", "pySDC/implementations.sweeper_classes.imex_1st_order_MPI.rst", "pySDC/implementations.sweeper_classes.imex_1st_order_mass.rst", "pySDC/implementations.sweeper_classes.multi_implicit.rst", "pySDC/implementations.sweeper_classes.verlet.rst", "pySDC/implementations.transfer_classes.rst", "pySDC/implementations.transfer_classes.BaseTransfer_mass.rst", "pySDC/implementations.transfer_classes.TransferFenicsMesh.rst", "pySDC/implementations.transfer_classes.TransferMesh.rst", "pySDC/implementations.transfer_classes.TransferMesh_FFT.rst", "pySDC/implementations.transfer_classes.TransferMesh_FFT2D.rst", "pySDC/implementations.transfer_classes.TransferMesh_MPIFFT.rst", "pySDC/implementations.transfer_classes.TransferMesh_NoCoarse.rst", "pySDC/implementations.transfer_classes.TransferPETScDMDA.rst", "pySDC/implementations.transfer_classes.TransferParticles_NoCoarse.rst", "tutorial/doc_step_1_A.rst", "tutorial/doc_step_1_B.rst", "tutorial/doc_step_1_C.rst", "tutorial/doc_step_1_D.rst", "tutorial/doc_step_2_A.rst", "tutorial/doc_step_2_B.rst", "tutorial/doc_step_2_C.rst", "tutorial/doc_step_3_A.rst", "tutorial/doc_step_3_B.rst", "tutorial/doc_step_3_C.rst", "tutorial/doc_step_4_A.rst", "tutorial/doc_step_4_B.rst", "tutorial/doc_step_4_C.rst", "tutorial/doc_step_4_D.rst", "tutorial/doc_step_5_A.rst", "tutorial/doc_step_5_B.rst", "tutorial/doc_step_5_C.rst", "tutorial/doc_step_6_A.rst", "tutorial/doc_step_6_B.rst", "tutorial/doc_step_6_C.rst", "tutorial/doc_step_7_A.rst", "tutorial/doc_step_7_B.rst", "tutorial/doc_step_7_C.rst", "tutorial/doc_step_8_A.rst", "tutorial/doc_step_8_B.rst", "tutorial/doc_step_8_C.rst", "tutorial/step_1.rst", "tutorial/step_2.rst", "tutorial/step_3.rst", "tutorial/step_4.rst", "tutorial/step_5.rst", "tutorial/step_6.rst", "tutorial/step_7.rst", "tutorial/step_8.rst"], "titles": ["Changelog", "Contributor Covenant Code of Conduct", "How to contribute to pySDC", "Welcome to pySDC!", "Recommendations for pull requests", "Continuous Integration in pySDC", "Naming conventions in pySDC", "Custom implementation guidelines", "Documenting Code", "Welcome to pySDC!", "Allen-Cahn problems from Bayreuth", "Solving differential algebraic equations with SDC", "Second-order Problems", "Parallel-in-time simulation for multi-modal energy systems", "RDC: Rational Deferred Corrections", "Resilience in SDC", "What is the fastest SDC variant?", "Asymptotic convergence of PFASST", "Compression in pySDC", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Fast-Wave-Slow-Wave SDC", "Matrix-based versions of PFASST", "Attempts to parallelize SDC", "Performance analysis of pySDC", "core package", "core.BaseTransfer module", "core.Collocation module", "core.Common module", "core.Controller module", "core.ConvergenceController module", "core.Errors module", "core.Hooks module", "core.Lagrange module", "core.Level module", "core.Nodes module", "core.Problem module", "core.SpaceTransfer module", "core.Step module", "core.Sweeper module", "helpers package", "helpers.NCCL_communicator module", "helpers.plot_helper module", "helpers.problem_helper module", "helpers.pysdc_helper module", "helpers.setup_helper module", "helpers.stats_helper module", "helpers.transfer_helper module", "helpers.visualization_tools module", "implementations package", "implementations.controller_classes package", "implementations.controller_classes.controller_MPI module", "implementations.controller_classes.controller_nonMPI module", "implementations.convergence_controller_classes package", "implementations.convergence_controller_classes.adaptive_collocation module", "implementations.convergence_controller_classes.adaptivity module", "implementations.convergence_controller_classes.basic_restarting module", "implementations.convergence_controller_classes.check_convergence module", "implementations.convergence_controller_classes.check_iteration_estimator module", "implementations.convergence_controller_classes.crash module", "implementations.convergence_controller_classes.estimate_contraction_factor module", "implementations.convergence_controller_classes.estimate_embedded_error module", "implementations.convergence_controller_classes.estimate_extrapolation_error module", "implementations.convergence_controller_classes.estimate_polynomial_error module", "implementations.convergence_controller_classes.hotrod module", "implementations.convergence_controller_classes.inexactness module", "implementations.convergence_controller_classes.interpolate_between_restarts module", "implementations.convergence_controller_classes.spread_step_sizes module", "implementations.convergence_controller_classes.step_size_limiter module", "implementations.convergence_controller_classes.store_uold module", "implementations.datatype_classes package", "implementations.datatype_classes.cupy_mesh module", "implementations.datatype_classes.fenics_mesh module", "implementations.datatype_classes.mesh module", "implementations.datatype_classes.particles module", "implementations.datatype_classes.petsc_vec module", "implementations.problem_classes package", "implementations.problem_classes.AcousticAdvection_1D_FD_imex module", "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT module", "implementations.problem_classes.AdvectionEquation_ND_FD module", "implementations.problem_classes.AllenCahn_1D_FD module", "implementations.problem_classes.AllenCahn_2D_FD module", "implementations.problem_classes.AllenCahn_2D_FD_gpu module", "implementations.problem_classes.AllenCahn_2D_FFT module", "implementations.problem_classes.AllenCahn_2D_FFT_gpu module", "implementations.problem_classes.AllenCahn_MPIFFT module", "implementations.problem_classes.AllenCahn_Temp_MPIFFT module", "implementations.problem_classes.Auzinger_implicit module", "implementations.problem_classes.Battery module", "implementations.problem_classes.Boussinesq_2D_FD_imex module", "implementations.problem_classes.BuckConverter module", "implementations.problem_classes.DiscontinuousTestODE module", "implementations.problem_classes.FastWaveSlowWave_0D module", "implementations.problem_classes.FermiPastaUlamTsingou module", "implementations.problem_classes.FullSolarSystem module", "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit module", "implementations.problem_classes.GeneralizedFisher_1D_PETSc module", "implementations.problem_classes.GrayScott_1D_FEniCS_implicit module", "implementations.problem_classes.GrayScott_2D_PETSc_periodic module", "implementations.problem_classes.GrayScott_MPIFFT module", "implementations.problem_classes.HarmonicOscillator module", "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced module", "implementations.problem_classes.HeatEquation_2D_PETSc_forced module", "implementations.problem_classes.HeatEquation_ND_FD module", "implementations.problem_classes.HeatEquation_ND_FD_CuPy module", "implementations.problem_classes.HenonHeiles module", "implementations.problem_classes.LogisticEquation module", "implementations.problem_classes.Lorenz module", "implementations.problem_classes.NonlinearSchroedinger_MPIFFT module", "implementations.problem_classes.OuterSolarSystem module", "implementations.problem_classes.PenningTrap_3D module", "implementations.problem_classes.Piline module", "implementations.problem_classes.Quench module", "implementations.problem_classes.TestEquation_0D module", "implementations.problem_classes.Van_der_Pol_implicit module", "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic module", "implementations.problem_classes.acoustic_helpers package", "implementations.problem_classes.acoustic_helpers.buildFDMatrix module", "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix module", "implementations.problem_classes.acoustic_helpers.standard_integrators module", "implementations.problem_classes.boussinesq_helpers package", "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix module", "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix module", "implementations.problem_classes.boussinesq_helpers.buildFDMatrix module", "implementations.problem_classes.boussinesq_helpers.helper_classes module", "implementations.problem_classes.boussinesq_helpers.standard_integrators module", "implementations.problem_classes.boussinesq_helpers.unflatten module", "implementations.problem_classes.generic_ND_FD module", "implementations.problem_classes.nonlinear_ODE_1 module", "implementations.problem_classes.polynomial_test_problem module", "implementations.sweeper_classes package", "implementations.sweeper_classes.Multistep module", "implementations.sweeper_classes.Runge_Kutta module", "implementations.sweeper_classes.Runge_Kutta_Nystrom module", "implementations.sweeper_classes.boris_2nd_order module", "implementations.sweeper_classes.explicit module", "implementations.sweeper_classes.generic_implicit module", "implementations.sweeper_classes.generic_implicit_MPI module", "implementations.sweeper_classes.imex_1st_order module", "implementations.sweeper_classes.imex_1st_order_MPI module", "implementations.sweeper_classes.imex_1st_order_mass module", "implementations.sweeper_classes.multi_implicit module", "implementations.sweeper_classes.verlet module", "implementations.transfer_classes package", "implementations.transfer_classes.BaseTransfer_mass module", "implementations.transfer_classes.TransferFenicsMesh module", "implementations.transfer_classes.TransferMesh module", "implementations.transfer_classes.TransferMesh_FFT module", "implementations.transfer_classes.TransferMesh_FFT2D module", "implementations.transfer_classes.TransferMesh_MPIFFT module", "implementations.transfer_classes.TransferMesh_NoCoarse module", "implementations.transfer_classes.TransferPETScDMDA module", "implementations.transfer_classes.TransferParticles_NoCoarse module", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Step-1: A first spatial problem", "Step-2: Data structures and my first sweeper", "Step-3: Statistics and a new sweeper", "Step-4: Multilevel SDC", "Step-5: PFASST", "Step-6: Advanced PFASST controllers", "Step-7: pySDC with external libraries", "Step-8: Advanced topics"], "terms": {"back": [0, 1, 2, 4, 5, 6, 7, 8, 165, 191], "main": [0, 1, 2, 5, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 39, 63, 64, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "page": [0, 1, 2, 9, 18, 54, 108, 110, 114, 120, 145], "januari": 0, "24": [0, 12, 32, 144, 171, 173, 180, 181, 192, 193, 195], "2024": [0, 171, 173, 192, 193], "version": [0, 1, 3, 4, 5, 9, 11, 14, 15, 16, 18, 19, 26, 27, 42, 48, 63, 64, 67, 68, 70, 74, 79, 109, 113, 122, 127, 141, 194], "5": [0, 9, 12, 14, 17, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 44, 89, 92, 97, 98, 100, 101, 102, 103, 107, 109, 113, 117, 118, 123, 125, 126, 127, 131, 137, 140, 143, 144, 168, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 196, 197, 198], "4": [0, 6, 9, 12, 14, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 44, 89, 100, 101, 103, 104, 109, 113, 125, 127, 140, 144, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198], "0": [0, 1, 5, 7, 8, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 42, 44, 45, 47, 48, 50, 53, 54, 55, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 137, 139, 140, 143, 144, 154, 158, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "contain": [0, 5, 8, 9, 10, 11, 12, 16, 18, 19, 33, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 48, 51, 55, 58, 59, 63, 64, 68, 71, 74, 78, 79, 84, 86, 90, 92, 93, 99, 100, 101, 105, 106, 108, 110, 111, 113, 118, 120, 122, 125, 126, 139, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 156, 166, 168, 169, 176, 182, 191, 192, 193, 194, 196], "code": [0, 2, 3, 4, 6, 7, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 71, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "second": [0, 5, 9, 15, 21, 25, 32, 33, 34, 38, 47, 67, 74, 75, 83, 85, 92, 93, 105, 106, 107, 109, 111, 112, 114, 117, 119, 121, 144, 145, 146, 149, 150, 153, 154, 156, 190, 193, 198], "order": [0, 3, 5, 8, 9, 10, 11, 13, 15, 16, 18, 19, 21, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 41, 42, 45, 47, 55, 59, 66, 67, 68, 70, 72, 73, 74, 75, 76, 81, 83, 85, 86, 89, 91, 92, 93, 101, 105, 107, 109, 112, 113, 114, 115, 117, 122, 124, 125, 127, 129, 130, 131, 133, 134, 135, 137, 139, 143, 144, 145, 146, 150, 152, 153, 154, 166, 168, 171, 173, 175, 181, 185, 190, 191, 192, 193, 194, 195, 197, 198], "sdc": [0, 2, 3, 9, 12, 13, 14, 18, 19, 28, 34, 50, 63, 64, 67, 69, 73, 74, 77, 79, 105, 124, 146, 150, 170, 171, 172, 173, 174, 177, 178, 181, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197], "paper": [0, 3, 8, 9, 14, 17, 45, 63, 64, 105, 193], "ikrom96git": 0, "It": [0, 3, 5, 9, 10, 13, 18, 36, 39, 42, 46, 66, 67, 104, 119, 123, 144, 149, 191, 192, 194, 196, 197], "also": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 15, 16, 18, 35, 36, 41, 67, 68, 74, 79, 80, 102, 111, 122, 139, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198], "ha": [0, 3, 4, 9, 10, 18, 42, 66, 67, 68, 71, 74, 75, 78, 79, 80, 90, 93, 100, 102, 124, 125, 140, 149, 179, 188, 191, 192, 193, 194, 195, 196, 197, 198], "some": [0, 2, 4, 5, 6, 11, 12, 13, 15, 36, 40, 42, 53, 66, 68, 71, 119, 124, 127, 166, 168, 191, 192, 193, 198], "chang": [0, 4, 5, 7, 13, 36, 64, 66, 67, 73, 74, 77, 100, 102, 103, 192, 193, 195, 197], "fenic": [0, 3, 9, 84, 109, 113, 127, 157, 185], "part": [0, 3, 5, 9, 14, 16, 19, 26, 27, 29, 30, 34, 35, 36, 38, 42, 83, 84, 85, 87, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 104, 109, 110, 111, 113, 120, 122, 123, 124, 127, 141, 144, 145, 156, 169, 179, 180, 181, 184, 186, 187, 188, 190], "includ": [0, 1, 34, 63, 64, 85, 92, 93, 106, 127, 144, 145, 191, 197], "correct": [0, 3, 4, 9, 10, 11, 33, 34, 38, 46, 63, 64, 89, 104, 105, 122, 127, 145, 150, 156, 176, 185, 194, 197], "treatment": [0, 93, 113], "boundari": [0, 26, 27, 29, 30, 34, 35, 39, 55, 59, 90, 91, 92, 93, 95, 96, 97, 98, 101, 108, 109, 110, 113, 114, 115, 120, 124, 127, 139, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 189, 190, 191, 192, 193, 194, 195, 196, 198], "condit": [0, 5, 11, 18, 26, 27, 29, 30, 34, 35, 48, 55, 66, 78, 81, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 139, 140, 143, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "first": [0, 3, 4, 5, 9, 12, 14, 15, 33, 38, 41, 42, 45, 51, 66, 68, 73, 74, 79, 83, 85, 100, 105, 109, 111, 119, 144, 146, 149, 150, 152, 153, 156, 166, 167, 168, 172, 193, 194], "step": [0, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 41, 42, 44, 46, 51, 55, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 97, 98, 102, 103, 108, 110, 111, 120, 122, 124, 143, 144, 145, 146, 149, 152, 154, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190], "x": [0, 3, 5, 8, 9, 11, 12, 21, 25, 28, 29, 30, 32, 35, 39, 42, 45, 55, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 120, 122, 125, 158, 160, 162, 165, 166, 168, 191, 197], "juli": 0, "28": [0, 119], "2023": [0, 108, 110, 114, 139], "For": [0, 1, 3, 4, 6, 8, 9, 12, 15, 18, 26, 33, 34, 36, 42, 45, 63, 64, 66, 67, 89, 92, 93, 95, 96, 97, 98, 100, 103, 107, 108, 110, 113, 120, 122, 125, 139, 140, 144, 145, 146, 149, 150, 180, 186, 187, 190, 191, 193, 194, 195, 197, 198], "3": [0, 3, 6, 7, 9, 11, 12, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 44, 66, 76, 86, 92, 97, 98, 99, 100, 101, 105, 106, 108, 109, 110, 111, 115, 117, 119, 120, 121, 122, 125, 144, 145, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198], "lot": [0, 144, 145, 193, 196], "pull": [0, 2, 5], "request": [0, 1, 2, 5, 42, 63, 68, 83, 85, 86, 87, 171, 192], "got": [0, 7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "merg": [0, 4, 41], "thank": 0, "brownbaerchen": 0, "tlunet": 0, "lisawim": 0, "all": [0, 1, 3, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 26, 27, 29, 30, 33, 34, 35, 40, 41, 42, 44, 45, 46, 51, 63, 64, 66, 67, 68, 70, 71, 74, 75, 79, 86, 91, 100, 106, 115, 122, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 168, 172, 179, 182, 184, 185, 191, 192, 193, 194, 195, 196, 197, 198], "contribut": [0, 1, 5, 6, 7, 8], "besid": 0, "usual": [0, 6, 18, 78, 195, 197], "bugfix": 0, "polish": 0, "pysdc": [0, 4, 7, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95, 100, 119, 123, 125, 126, 141, 144, 156, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198], "now": [0, 3, 9, 10, 13, 18, 34, 35, 42, 68, 144, 169, 176, 191, 192, 193, 194, 195, 196, 198], "come": [0, 4, 5, 10, 15, 18, 28, 35, 42, 191, 196, 198], "linear": [0, 7, 11, 16, 17, 19, 28, 34, 35, 74, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 113, 114, 115, 119, 120, 123, 124, 125, 127, 139, 141, 167, 168, 187, 191, 197], "multistep": [0, 142], "method": [0, 3, 6, 8, 9, 11, 12, 13, 14, 15, 33, 34, 35, 39, 41, 42, 44, 45, 48, 50, 64, 66, 67, 73, 74, 75, 78, 92, 93, 99, 100, 101, 109, 113, 118, 119, 120, 124, 125, 126, 127, 137, 139, 140, 143, 144, 145, 166, 168, 191, 197, 198], "classic": [0, 2, 3, 9, 12, 16, 19, 21, 25, 28, 32, 35, 144], "rung": [0, 67, 73, 144, 145], "kutta": [0, 67, 73, 144, 145], "dae": 0, "sweeper": [0, 3, 6, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 46, 66, 71, 73, 78, 127, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198], "more": [0, 2, 3, 5, 7, 8, 9, 10, 12, 13, 16, 18, 19, 25, 32, 33, 35, 56, 67, 72, 73, 122, 125, 169, 173, 174, 176, 177, 178, 185, 191, 192, 193, 194, 195, 197, 198], "improv": [0, 4, 6, 8, 13, 18, 193, 194], "project": [0, 3, 4, 5, 10, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 100, 109, 113, 125, 127, 157, 198], "we": [0, 1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 17, 18, 25, 33, 34, 35, 36, 41, 42, 45, 53, 54, 63, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 100, 119, 124, 143, 144, 145, 169, 170, 171, 175, 176, 184, 185, 191, 192, 193, 194, 195, 196, 197, 198], "have": [0, 1, 4, 5, 6, 9, 12, 13, 15, 25, 27, 34, 35, 36, 42, 48, 53, 66, 67, 68, 73, 74, 75, 78, 83, 84, 85, 87, 91, 93, 143, 144, 145, 169, 179, 185, 191, 192, 193, 194, 195, 196, 197, 198], "board": [0, 95, 96], "brand": 0, "new": [0, 3, 4, 5, 7, 8, 9, 11, 13, 34, 35, 50, 64, 66, 72, 78, 79, 80, 101, 108, 110, 143, 144, 145, 166, 168, 172, 184, 191, 196], "switch": [0, 66, 67, 73, 100, 102, 103, 125], "estim": [0, 13, 15, 63, 67, 69, 72, 73, 75, 76, 77, 100, 103, 182, 190, 196], "test": [0, 2, 3, 4, 10, 11, 12, 13, 16, 17, 18, 19, 26, 27, 33, 34, 35, 36, 69, 80, 103, 109, 113, 125, 127, 141, 145, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "ground": 0, "compress": [0, 9], "libpressio": [0, 18], "march": [0, 11, 74], "2": [0, 5, 6, 7, 9, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 44, 48, 59, 66, 67, 74, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 144, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 50, 56, 63, 64, 66, 67, 68, 69, 71, 73, 74, 75, 76, 78, 79, 80, 81, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "out": [0, 3, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 63, 64, 73, 122, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "multipl": [0, 13, 18, 41, 42, 44, 50, 66, 74, 75, 149, 176, 181, 185, 186, 192, 193, 194, 195, 196, 197], "direct": [0, 18, 67, 80, 91, 93, 97, 98, 101, 108, 110, 114, 115, 118, 124, 139, 164, 171, 192], "The": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 27, 33, 34, 35, 36, 38, 39, 41, 42, 45, 47, 48, 51, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 191, 192, 194, 195, 197, 198], "problem": [0, 2, 3, 6, 9, 11, 15, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 41, 43, 46, 49, 57, 66, 67, 71, 73, 74, 75, 77, 79, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 139, 140, 141, 146, 150, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "class": [0, 1, 2, 4, 8, 11, 12, 14, 16, 19, 25, 26, 27, 28, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 178, 179, 180, 181, 187, 190, 191, 192, 193, 194, 195, 197, 198], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 33, 34, 35, 36, 39, 42, 45, 47, 48, 50, 57, 63, 66, 67, 73, 74, 75, 83, 84, 85, 86, 87, 91, 92, 95, 96, 97, 98, 100, 101, 102, 105, 107, 108, 109, 111, 115, 123, 125, 139, 144, 145, 146, 150, 157, 158, 159, 160, 161, 162, 163, 169, 180, 182, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198], "defin": [0, 2, 3, 6, 7, 9, 34, 36, 38, 39, 48, 50, 67, 68, 69, 71, 77, 79, 80, 81, 102, 103, 104, 107, 108, 109, 112, 113, 114, 127, 139, 146, 150, 171, 173, 181, 192, 193, 194, 195, 197], "paramet": [0, 4, 7, 8, 10, 11, 12, 14, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 156, 157, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "explicitli": [0, 90, 92, 95, 96, 97, 98, 113, 197], "constructor": [0, 7], "dictionari": [0, 12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 40, 42, 43, 44, 50, 58, 66, 67, 68, 69, 71, 75, 77, 79, 80, 81, 100, 125, 149, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "param": [0, 6, 29, 30, 35, 38, 40, 41, 42, 46, 49, 50, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 175, 191, 192, 194], "properti": [0, 8, 33, 40, 41, 45, 46, 48, 50, 51, 74, 83, 85, 139, 144, 149, 197], "return": [0, 7, 8, 12, 16, 19, 21, 25, 26, 27, 32, 34, 38, 39, 41, 42, 44, 45, 46, 47, 48, 50, 51, 54, 55, 56, 57, 58, 59, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 165, 166, 167, 168, 170, 172, 173, 174, 178, 182, 184, 185, 190, 191, 192, 193, 194, 196, 197, 198], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 33, 34, 35, 36, 38, 42, 45, 48, 50, 58, 59, 66, 67, 68, 70, 71, 73, 74, 75, 76, 89, 90, 92, 93, 98, 100, 102, 106, 109, 110, 111, 113, 119, 122, 126, 127, 141, 143, 144, 145, 149, 150, 156, 167, 170, 171, 172, 178, 185, 191, 192, 193, 194, 195, 196, 197, 198], "automat": [0, 2, 5, 7, 9, 42, 73], "store": [0, 7, 8, 15, 16, 29, 30, 35, 42, 66, 70, 72, 73, 74, 75, 78, 81, 143, 144, 145, 168, 175, 191, 193, 194], "attribut": [0, 4, 7, 8, 43, 48, 49, 56, 74, 90, 100, 123, 144, 158, 159, 160, 161, 162, 191, 193, 195], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 32, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127, 139, 140, 141, 144, 145, 146, 149, 150, 152, 154, 156, 165, 166, 168, 170, 172, 173, 174, 175, 177, 178, 182, 185, 188, 190, 191, 193, 194, 195, 196, 197, 198], "_makeattributeandregist": [0, 7], "allow": [0, 1, 2, 5, 6, 10, 35, 41, 42, 66, 67, 68, 69, 71, 74, 75, 76, 85, 91, 115, 193, 195, 197], "readonli": [0, 7], "paramt": [0, 16, 19, 26, 27, 34], "warn": [0, 5, 36, 48, 167, 185, 190, 191, 197, 198], "backward": [0, 42, 144, 159], "compat": [0, 3, 4, 9, 42, 66, 67, 70, 73, 74, 75, 76], "resili": [0, 9, 18], "quench": [0, 88], "result": [0, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 42, 44, 66, 78, 113, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "collabor": [0, 18], "between": [0, 6, 13, 18, 26, 27, 34, 38, 39, 42, 50, 66, 67, 68, 70, 72, 73, 74, 76, 78, 92, 93, 101, 102, 107, 114, 119, 124, 156, 157, 158, 159, 160, 161, 162, 163, 165, 177, 178, 189, 191, 192, 194, 196, 198], "eschnaubelt": 0, "dure": [0, 1, 4, 5, 15, 18, 36, 44, 46, 48, 69, 80, 109, 110, 111, 192, 193, 194], "time": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 48, 50, 58, 63, 64, 66, 67, 68, 74, 75, 79, 80, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 156, 167, 168, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198], "app": 0, "hackathon": 0, "usi": 0, "lugano": 0, "mani": [0, 2, 3, 5, 9, 10, 39, 68, 72, 170, 191, 192, 194, 196, 197], "other": [0, 1, 2, 5, 6, 13, 16, 18, 27, 34, 41, 42, 46, 58, 67, 68, 74, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 139, 140, 141, 144, 185, 191, 193, 194, 197], "under": [0, 3, 9, 10, 18, 33, 195], "hood": 0, "prepar": [0, 5, 12, 21, 25, 32, 42, 194], "6": [0, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 44, 92, 97, 98, 120, 121, 144, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198], "23": 0, "1": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 42, 44, 45, 47, 48, 55, 59, 74, 75, 76, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "bring": 0, "document": [0, 2, 3, 4, 7, 33, 73], "both": [0, 6, 12, 13, 14, 18, 26, 33, 34, 42, 55, 69, 89, 90, 93, 99, 100, 101, 104, 109, 111, 113, 114, 126, 127, 144, 149, 177, 182, 184, 189, 194, 196, 197, 198], "github": [0, 2, 3, 5, 9, 15, 45], "websit": [0, 5], "reviv": 0, "codecov": [0, 5], "connect": 0, "start": [0, 4, 5, 6, 15, 18, 41, 44, 48, 63, 64, 66, 95, 103, 109, 113, 119, 122, 123, 126, 143, 150, 170, 182, 191, 192, 196], "opensff": 0, "best": [0, 1, 6, 18, 80, 192, 194], "practic": [0, 11, 73], "guid": [0, 18, 125, 166, 168, 191], "hook": [0, 5, 11, 12, 25, 32, 37, 41, 63, 64, 73, 171, 173, 174, 178, 190, 192, 193, 194, 198], "wai": [0, 1, 9, 11, 18, 34, 66, 75, 89, 90, 92, 93, 103, 108, 110, 111, 113, 127, 144, 145, 181, 185, 192, 193, 194, 195, 197], "thei": [0, 1, 4, 5, 6, 9, 10, 13, 15, 18, 33, 42, 57, 67, 73, 78, 101, 102, 109, 110, 111, 191], "handl": [0, 13, 42, 43, 47, 79, 83, 85, 86, 87, 92, 93, 110, 120, 196], "without": [0, 1, 5, 15, 26, 27, 34, 127, 193, 194, 196, 197], "break": [0, 4, 184, 191, 196], "api": [0, 4, 197], "hoorai": 0, "batteri": [0, 88], "model": [0, 11, 15, 100, 102, 105, 109, 110, 111, 119, 123, 124], "quit": [0, 5, 193], "an": [0, 1, 5, 11, 13, 15, 18, 33, 34, 35, 41, 42, 48, 53, 59, 66, 67, 71, 73, 74, 75, 80, 90, 95, 96, 100, 102, 103, 107, 108, 111, 113, 123, 125, 127, 141, 144, 145, 146, 150, 170, 190, 191, 192, 194, 195, 196, 197, 198], "updat": [0, 3, 4, 5, 9, 11, 18, 41, 42, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 103, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 168, 170, 191, 192], "adapt": [0, 1, 65, 66, 74, 80, 144, 149, 196], "plai": [0, 10, 165, 191, 198], "promin": [0, 197], "role": 0, "octob": 0, "7": [0, 3, 5, 9, 12, 21, 26, 27, 28, 29, 34, 35, 44, 144, 170, 171, 172, 173, 176, 178, 179, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198], "2022": 0, "visibl": [0, 1], "invis": [0, 1], "ones": [0, 16, 105, 127, 144, 167, 168, 191], "those": [0, 1, 3, 4, 5, 6, 7, 9, 26, 27, 34, 47, 139, 196], "exist": [0, 4, 33, 42, 44, 56, 197], "you": [0, 2, 3, 5, 7, 9, 15, 42, 48, 54, 56, 57, 66, 67, 73, 78, 79, 80, 125, 139, 141, 145, 191, 192, 196, 198], "should": [0, 4, 5, 6, 7, 9, 10, 11, 18, 41, 42, 44, 45, 47, 48, 74, 75, 92, 103, 107, 108, 110, 111, 112, 118, 124, 126, 139, 195, 197, 198], "fine": [0, 14, 36, 38, 49, 50, 59, 63, 64, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 178, 191, 194], "major": 0, "converg": [0, 9, 11, 12, 13, 18, 33, 41, 42, 43, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 171, 173, 185, 191, 192, 193, 196, 197], "control": [0, 9, 12, 13, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 42, 43, 44, 50, 58, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 102, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198], "check": [0, 3, 5, 7, 9, 10, 12, 15, 17, 25, 27, 28, 34, 35, 42, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 103, 165, 166, 170, 174, 175, 176, 177, 179, 180, 183, 192, 193, 194, 195, 196, 197, 198], "whether": [0, 39, 42, 50, 66, 67, 68, 69, 70, 74, 75, 76, 103, 126, 197, 198], "tricki": 0, "so": [0, 12, 13, 18, 35, 36, 42, 50, 67, 71, 72, 74, 89, 90, 95, 96, 97, 98, 100, 101, 103, 104, 109, 111, 113, 119, 120, 122, 127, 149, 191, 192, 193, 195, 196, 198], "made": [0, 5, 11, 15], "separ": [0, 5, 8, 18, 35, 42, 191], "modul": [0, 4, 7, 9], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 27, 28, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 50, 57, 59, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 119, 121, 122, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 146, 149, 150, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 170, 172, 176, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198], "make": [0, 1, 5, 6, 12, 15, 42, 44, 48, 66, 67, 73, 74, 169, 170, 192, 193, 195], "featur": [0, 14, 196, 198], "like": [0, 1, 3, 5, 6, 7, 8, 9, 26, 27, 33, 34, 35, 36, 42, 45, 50, 66, 73, 74, 78, 119, 193, 195, 197, 198], "easier": [0, 49, 158, 159, 160, 161, 162, 166, 168, 191, 192], "implement": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 39, 42, 45, 47, 48, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "been": [0, 4, 5, 9, 18, 35, 36, 42, 67, 68, 74, 80, 124, 188, 194, 195, 198], "streamlin": 0, "bit": [0, 149, 191, 192, 193, 194], "them": [0, 2, 4, 5, 6, 7, 13, 15, 16, 18, 35, 41, 78, 97, 98, 149, 151, 193], "readabl": [0, 2, 4, 6], "digest": 0, "error": [0, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 42, 47, 63, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "leverag": [0, 18], "box": [0, 35], "colloc": [0, 3, 9, 14, 18, 33, 34, 35, 37, 43, 51, 66, 67, 73, 74, 75, 78, 79, 100, 103, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 168, 170, 171, 173, 174, 190, 192, 194, 198], "complet": [0, 63, 195], "rewrot": 0, "node": [0, 5, 14, 18, 33, 37, 38, 39, 45, 46, 51, 59, 66, 67, 73, 74, 75, 78, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 107, 109, 111, 113, 114, 118, 120, 122, 124, 126, 127, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 170, 174, 176, 185, 192, 194, 195, 197], "weight": [0, 8, 10, 18, 38, 39, 45, 55, 144, 152], "comput": [0, 3, 7, 8, 9, 10, 12, 14, 16, 18, 19, 21, 25, 28, 32, 35, 38, 42, 45, 47, 48, 51, 63, 66, 67, 73, 74, 80, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 165, 166, 167, 168, 170, 171, 173, 175, 177, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198], "faster": [0, 197], "reliabl": [0, 2], "shorter": [0, 6, 194], "better": [0, 3, 6, 9, 78, 144, 185, 191, 197], "But": [0, 4, 5, 6], "sinc": [0, 3, 9, 11, 12, 13, 18, 33, 36, 42, 67, 73, 74, 119, 143, 185, 191, 192, 196, 197, 198], "old": [0, 9, 39, 66, 143], "do": [0, 4, 5, 6, 9, 11, 18, 26, 27, 34, 39, 42, 50, 66, 67, 73, 74, 78, 80, 91, 143, 144, 166, 169, 170, 171, 175, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198], "anymor": [0, 198], "tutori": [0, 3, 4, 5, 12, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "most": [0, 3, 5, 6, 9, 11, 12, 50, 78, 125, 191, 192, 194, 195, 197], "playground": [0, 3, 5, 18], "look": [0, 2, 5, 14, 15, 42, 119, 191, 194, 195, 198], "over": [0, 12, 13, 16, 19, 28, 29, 30, 34, 35, 38, 39, 44, 100, 109, 110, 111, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 166, 168, 174, 180, 181, 182, 191, 193, 195, 196, 198], "see": [0, 1, 3, 5, 9, 14, 15, 16, 17, 18, 19, 26, 27, 34, 36, 42, 76, 109, 111, 113, 119, 120, 122, 125, 127, 144, 149, 150, 167, 179, 180, 181, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198], "what": [0, 1, 9, 12, 15, 25, 42, 66, 73, 78, 169, 175, 191, 192, 193, 194, 196, 198], "energi": [0, 9, 12, 21, 100, 105, 123, 173, 174, 178, 193, 194], "grid": [0, 28, 29, 30, 34, 35, 55, 59, 90, 92, 93, 95, 96, 97, 98, 105, 108, 109, 110, 111, 120, 123, 124, 139, 163, 166, 168, 191, 194], "simul": [0, 9, 10, 11, 12, 15, 18, 21, 25, 32, 60, 68, 79, 100, 102, 123, 124, 170, 172, 182, 192, 193, 196], "readi": [0, 4, 55, 195, 198], "wait": [0, 5, 63, 184, 196], "idea": [0, 3, 6, 9, 34, 35, 78, 144, 145, 193, 195, 196], "effort": 0, "condens": 0, "clean": [0, 9, 46, 50], "up": [0, 3, 5, 9, 10, 12, 15, 18, 21, 25, 28, 29, 30, 32, 35, 46, 50, 63, 64, 66, 67, 75, 109, 110, 111, 124, 143, 165, 166, 168, 175, 176, 180, 181, 184, 185, 189, 191, 192, 193, 194, 195, 196, 197, 198], "reduc": [0, 18, 53, 66, 67, 75, 139, 164, 170, 171, 172, 174, 185, 192, 193, 194, 197], "number": [0, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 42, 44, 45, 47, 53, 55, 59, 63, 64, 66, 67, 68, 69, 74, 75, 79, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 122, 124, 126, 127, 139, 140, 144, 145, 146, 150, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "file": [0, 3, 5, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 54, 166, 184, 191, 192, 196], "onli": [0, 4, 5, 6, 10, 12, 14, 15, 18, 27, 33, 34, 35, 39, 40, 41, 42, 43, 46, 51, 58, 67, 70, 73, 74, 75, 80, 92, 93, 102, 106, 109, 121, 122, 124, 141, 143, 144, 145, 149, 151, 165, 166, 169, 170, 171, 173, 178, 182, 184, 188, 191, 192, 193, 194, 195, 196, 197, 198], "margin": 0, "differ": [0, 1, 3, 6, 9, 10, 12, 15, 16, 17, 18, 26, 27, 28, 33, 34, 38, 41, 42, 45, 55, 66, 67, 70, 72, 73, 74, 75, 76, 78, 91, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 107, 114, 115, 119, 124, 126, 139, 143, 156, 173, 174, 177, 178, 180, 181, 182, 184, 185, 189, 191, 192, 193, 194, 195, 196, 197, 198], "significantli": [0, 18, 67, 195], "could": [0, 1, 4, 18, 66, 67, 75, 144, 145], "potenti": [0, 6, 59, 113], "your": [0, 3, 4, 5, 9, 54, 73, 191, 193], "too": [0, 10, 12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 79, 170, 173, 174, 178, 180, 181, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "reli": [0, 36, 42, 74, 194], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 34, 45, 57, 66, 75, 80, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141, 143, 191], "affect": [0, 1], "toward": [0, 1, 124], "gpu": [0, 55, 96, 125], "data": [0, 3, 9, 10, 11, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 39, 42, 43, 44, 46, 48, 49, 53, 58, 63, 64, 76, 83, 84, 85, 86, 87, 89, 122, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198], "type": [0, 3, 5, 7, 9, 10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 135, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198], "base": [0, 2, 3, 5, 7, 9, 10, 11, 13, 14, 16, 18, 19, 26, 27, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 56, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 174, 178, 191, 193, 194], "cupi": [0, 55, 83, 96], "possibl": [0, 6, 38, 42, 59, 66, 67, 80, 124, 156, 191, 194], "timo2705": 0, "ci": [0, 2, 3, 4, 5, 9, 10, 12, 16, 17, 33, 36, 197], "pipelin": [0, 15, 67, 79], "overhaul": 0, "again": [0, 35, 149, 192, 193, 194, 195, 196, 197, 198], "enabl": [0, 15, 67, 194], "simultan": [0, 99, 126], "earlier": [0, 144, 145], "lint": 0, "benchmark": [0, 5, 36], "least": [0, 3, 9, 14, 193, 196], "princip": 0, "environ": [0, 1, 3, 9, 12, 15, 124, 184, 196, 197], "ubuntu": [0, 3, 9], "maco": [0, 3, 9], "format": [0, 5, 6, 11, 125], "black": [0, 5, 35, 190, 198], "flakeheaven": [0, 5], "cleaner": 0, "sourc": [0, 5, 13, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 194], "after": [0, 5, 6, 7, 9, 10, 11, 13, 16, 18, 42, 44, 67, 68, 73, 74, 77, 78, 102, 170, 171, 173, 178, 190, 192, 193, 194, 195, 198], "complaint": [0, 1], "here": [0, 1, 5, 8, 9, 11, 12, 13, 14, 15, 18, 33, 35, 39, 42, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 79, 80, 81, 83, 84, 85, 87, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 111, 112, 113, 117, 119, 120, 122, 126, 127, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 168, 170, 171, 172, 173, 174, 177, 178, 181, 184, 185, 188, 191, 192, 193, 194, 195, 196, 197, 198], "about": [0, 1, 5, 12, 42, 46, 55, 73, 74, 100, 103, 194, 195, 196], "recommend": [0, 2, 3, 5, 9, 191, 194], "run": [0, 3, 5, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 41, 44, 57, 58, 60, 63, 64, 71, 74, 80, 119, 165, 166, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198], "befor": [0, 5, 42, 44, 51, 66, 67, 68, 103, 125, 144, 149, 169, 187, 192, 197], "submiss": 0, "decemb": 0, "13": [0, 26, 34, 171, 173, 181, 189, 190, 192, 193, 195, 198], "2021": 0, "python": [0, 2, 3, 5, 6, 8, 9, 15, 18, 108, 110, 114, 184, 186, 196, 197], "9": [0, 16, 19, 26, 27, 34, 144, 170, 171, 172, 173, 174, 178, 179, 181, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 196, 197, 198], "cleanup": 0, "suit": [0, 191], "seem": [0, 12, 14, 144], "sort": [0, 1, 12, 16, 19, 21, 25, 26, 32, 34, 58, 166, 168, 172, 174, 175, 178, 184, 189, 191, 193, 194, 196, 198], "depend": [0, 3, 9, 10, 13, 42, 56, 67, 68, 69, 70, 72, 73, 76, 77, 80, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 108, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 139, 140, 141, 166, 168, 170, 171, 173, 187, 191, 192, 193, 194, 195, 197], "mamba": [0, 5], "which": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 15, 16, 18, 29, 30, 33, 34, 35, 36, 40, 41, 42, 48, 50, 58, 59, 63, 66, 67, 68, 73, 74, 75, 76, 77, 79, 80, 89, 90, 91, 95, 96, 100, 102, 104, 105, 109, 112, 113, 114, 119, 120, 123, 124, 125, 126, 127, 139, 144, 145, 146, 149, 150, 191, 192, 193, 194, 196, 197], "much": [0, 5, 67, 144, 145, 173, 174, 178, 192, 193, 194], "workflow": [0, 63, 64], "local": [0, 4, 5, 7, 18, 67, 73, 74, 75, 76, 92, 93, 100, 102, 103, 108, 110, 114, 119, 123, 124, 125, 127, 139, 141, 185, 197], "act": [0, 1, 6, 53], "introduc": [0, 4, 5, 9, 18, 150, 193, 198], "marker": [0, 28, 29, 30, 35, 166, 168, 191], "soem": 0, "distribut": [0, 18, 39, 47, 57, 63, 64, 68, 78, 95, 96, 108, 110, 111, 114, 120], "platform": [0, 3, 9], "And": [0, 144], "final": [0, 2, 5, 9, 11, 18, 28, 34, 35, 38, 42, 68, 74, 76, 79, 80, 154, 156, 174, 192, 193], "latex": [0, 3, 9, 54], "instal": [0, 3, 5, 9, 10, 11, 15, 18, 195, 196, 197], "longer": [0, 5, 13, 194], "need": [0, 3, 5, 9, 10, 15, 16, 18, 19, 27, 33, 34, 35, 36, 41, 42, 48, 50, 63, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 80, 102, 105, 109, 114, 119, 127, 143, 154, 167, 168, 169, 176, 184, 185, 191, 192, 194, 196, 197, 198], "plot": [0, 3, 5, 9, 11, 12, 13, 16, 17, 18, 19, 21, 25, 28, 29, 30, 32, 35, 166, 168, 188, 189, 191, 198], "august": [0, 3, 9], "11": [0, 26, 27, 34, 100, 125, 139, 140, 144, 170, 171, 172, 173, 177, 180, 185, 186, 189, 192, 193, 194, 195, 197, 198], "signific": [0, 197, 198], "impact": [0, 1, 17, 18], "user": [0, 4, 6, 8, 38, 42, 44, 46, 49, 50, 51, 70, 125, 156, 171, 173, 192, 193, 194, 195], "rewritten": 0, "port": [0, 9], "action": [0, 1, 3, 5, 9], "awai": [0, 76], "from": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 55, 58, 60, 63, 64, 66, 67, 73, 74, 75, 79, 90, 100, 101, 106, 113, 119, 122, 124, 125, 139, 140, 143, 144, 145, 149, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "travi": 0, "flake8": [0, 5], "pytest": [0, 3, 5, 9], "nose": 0, "One": [0, 191, 194, 195, 198], "thing": [0, 6, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 35, 100, 103, 126, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "mai": [0, 1, 2, 3, 4, 5, 6, 9, 16, 18, 44, 55, 73, 78, 144, 170, 192, 196, 198], "follow": [0, 1, 2, 5, 6, 7, 8, 10, 11, 15, 34, 39, 100, 102, 105, 107, 108, 122, 139, 182, 192, 193, 196, 197], "petsc": [0, 3, 9, 16, 19, 108, 110, 114, 163, 184, 187, 196], "structur": [0, 2, 4, 9, 46, 50, 108, 110, 125, 187, 191, 195, 197], "remov": [0, 1, 4, 5, 143, 150], "unnecessari": [0, 18], "boilerpl": 0, "long": [0, 5, 6, 17, 33, 73, 74, 102, 185, 197], "releas": [0, 3, 9, 33], "mark": [0, 18], "mesh": [0, 7, 10, 55, 82, 83, 86, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141, 144, 145, 157, 158, 159, 160, 161, 162, 165, 166, 171, 185, 191, 192, 197], "particl": [0, 82, 105, 106, 112, 117, 121, 122, 164, 173, 178, 193], "creation": [0, 12, 21, 25, 28, 32, 35, 170, 171, 172, 173, 174, 178, 185, 192, 193, 194, 197], "arrai": [0, 7, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 39, 48, 59, 100, 125, 144, 165, 166, 173, 174, 175, 178, 180, 181, 185, 186, 187, 190, 191, 193, 194, 195, 197, 198], "each": [0, 2, 5, 7, 9, 11, 13, 16, 18, 19, 26, 27, 29, 30, 33, 34, 35, 36, 42, 44, 63, 64, 66, 68, 73, 74, 79, 92, 93, 100, 102, 122, 126, 139, 149, 169, 172, 174, 176, 177, 179, 180, 181, 182, 190, 191, 192, 193, 194, 195, 196, 198], "oper": [0, 5, 38, 42, 50, 66, 74, 75, 89, 90, 91, 92, 93, 95, 96, 97, 98, 107, 111, 114, 115, 120, 124, 139, 141, 156, 191, 192, 196], "avoid": [0, 1, 4, 5, 6, 56, 195], "directli": [0, 4, 5, 11, 34, 64, 91, 115, 118, 167, 168, 191], "subclass": 0, "numpi": [0, 6, 7, 8, 10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 45, 48, 55, 85, 125, 146, 150, 165, 166, 167, 168, 173, 174, 175, 178, 180, 181, 185, 186, 187, 190, 191, 193, 194, 195, 197, 198], "": [0, 1, 3, 5, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 40, 42, 48, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 99, 100, 105, 106, 108, 109, 110, 111, 113, 114, 118, 119, 121, 122, 124, 125, 126, 127, 140, 144, 146, 149, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198], "ndarrai": [0, 39, 48, 55, 59, 66, 75, 83, 84, 85, 98, 101, 122, 146, 150], "somewhat": [0, 5, 196], "definit": [0, 7, 149, 193], "less": [0, 10, 73, 74, 169, 176, 185, 192, 194, 195, 197], "futur": 0, "proof": 0, "If": [0, 3, 4, 5, 7, 9, 13, 42, 44, 48, 54, 67, 71, 73, 74, 75, 78, 91, 100, 102, 103, 106, 111, 115, 118, 120, 121, 139, 143, 185, 196, 197], "sure": [0, 5, 42, 44, 48, 66, 67, 73, 193], "don": [0, 3, 4, 5, 8, 9, 42, 67, 74, 80, 144, 145, 170, 192, 196], "t": [0, 3, 4, 5, 7, 8, 9, 11, 12, 21, 25, 32, 38, 42, 45, 47, 48, 53, 67, 72, 73, 74, 80, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 156, 166, 167, 168, 170, 175, 191, 192, 194, 196, 198], "upgrad": 0, "quadratur": [0, 39, 45, 47, 66, 67, 73, 74, 78, 174, 193], "even": [0, 4, 5, 6, 33, 184, 193, 194, 196, 197], "No": [0, 1, 3, 9, 26, 27, 34, 89, 100, 104, 127, 191], "push": [0, 4, 5, 9], "abov": [0, 3, 4, 9, 11, 15, 18, 33, 42, 100, 167, 191, 194], "routin": [0, 4, 9, 10, 12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 38, 44, 46, 50, 60, 63, 64, 69, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 156, 164, 165, 166, 167, 168, 170, 182, 185, 186, 188, 189, 191, 192, 193, 196, 197, 198], "work": [0, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 67, 74, 77, 149, 170, 175, 180, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 197, 198], "recent": [0, 18], "matplotlib": [0, 36, 54, 166, 168, 191], "yet": [0, 10, 14, 18, 34, 35, 44, 191, 192, 193, 194, 195, 196, 198], "were": [0, 1, 15], "would": [0, 3, 4, 9, 13, 79, 144, 145, 193], "minor": 0, "30": [0, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 139, 172, 174, 175, 177, 178, 180, 181, 182, 185, 186, 190, 193, 194, 195, 196, 197, 198], "2019": [0, 3, 9, 111, 120], "add": [0, 4, 5, 6, 7, 9, 16, 19, 35, 38, 41, 42, 44, 66, 67, 68, 72, 73, 74, 75, 78, 124, 127, 136, 143, 149, 156, 166, 168, 191, 193], "exampl": [0, 1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 35, 42, 90, 91, 92, 93, 95, 96, 97, 98, 100, 102, 107, 108, 111, 112, 113, 114, 120, 123, 125, 149, 173, 191, 192, 193, 194, 195, 196, 197, 198], "nonlinear": [0, 16, 19, 67, 92, 93, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 113, 118, 119, 120, 122, 126, 127, 140, 197], "schr\u00f6dinger": [0, 120, 197], "equat": [0, 9, 13, 15, 17, 26, 27, 33, 34, 35, 74, 76, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 144, 145, 180, 181, 185, 186, 190, 193, 194, 195, 197, 198], "grai": [0, 109, 110, 111], "scott": [0, 109, 110, 111], "particular": [0, 3, 4, 5, 8, 9, 10, 16, 18, 19, 33, 46, 66, 74, 141, 144, 145, 191, 194, 196, 197], "allen": [0, 9, 36, 92, 93, 95, 96, 97, 98], "cahn": [0, 9, 36, 92, 93, 95, 96, 97, 98], "parallel": [0, 3, 4, 5, 9, 10, 12, 15, 18, 36, 63, 64, 66, 73, 75, 79, 83, 85, 97, 108, 110, 111, 114, 120, 149, 180, 181, 184, 186, 187, 189, 192, 195, 198], "fft": [0, 3, 9, 10, 36, 90, 95, 96, 97, 98, 111, 120, 159, 160, 161], "librari": [0, 2, 5, 9, 18, 125, 196], "mpi4pi": [0, 3, 9, 10, 15, 30, 35, 42, 53, 58, 68, 69, 71, 79, 97, 98, 111, 120, 184, 186, 187, 192, 195, 196], "There": [0, 6, 13, 36, 67], "8": [0, 3, 5, 6, 9, 27, 34, 54, 119, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197], "where": [0, 3, 7, 8, 9, 13, 14, 18, 26, 27, 33, 34, 35, 36, 42, 45, 47, 57, 74, 78, 90, 93, 95, 96, 97, 98, 100, 103, 104, 105, 106, 109, 110, 111, 113, 115, 121, 122, 124, 139, 144, 145, 149, 170, 191, 192, 193, 194, 196, 198], "show": [0, 5, 13, 14, 15, 17, 33, 36, 79, 173, 174, 178, 193, 194, 195, 196, 197], "usag": [0, 4, 11, 36, 187, 191, 197], "three": [0, 5, 29, 35, 47, 74, 119, 123, 150, 193, 194, 198], "extern": [0, 1, 9, 15, 92, 122, 194], "petsc4pi": [0, 3, 9, 16, 19, 108, 110, 114], "mpi": [0, 3, 9, 10, 15, 18, 30, 36, 42, 53, 58, 66, 67, 68, 69, 70, 71, 74, 75, 79, 85, 97, 111, 120, 149, 184, 186, 187, 195, 197], "performan": 0, "detail": [0, 2, 3, 5, 8, 9, 10, 13, 67, 120, 122, 125, 193, 196, 197], "perform": [0, 3, 4, 5, 9, 18, 31, 33, 46, 53, 63, 64, 66, 69, 74, 75, 125, 141, 144, 145, 195, 196, 198], "analysi": [0, 5, 9], "score": [0, 36], "p": [0, 8, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 45, 59, 89, 101, 108, 109, 110, 111, 166, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "extra": 0, "iter": [0, 11, 12, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 42, 44, 48, 63, 64, 66, 67, 69, 70, 72, 73, 74, 77, 78, 81, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 136, 139, 140, 141, 144, 145, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197], "taken": [0, 4, 15, 36, 106, 121, 140, 144], "februari": 0, "14": [0, 12, 27, 32, 34, 144, 145, 181, 186, 189, 195, 197, 198], "accompani": [0, 9, 193], "acm": [0, 3, 9], "tom": [0, 3, 9], "prototyp": [0, 3, 9, 18, 48, 192], "spectral": [0, 3, 9, 11, 17, 33, 35, 89, 90, 95, 96, 97, 98, 104, 111, 120, 150, 186, 197], "defer": [0, 3, 9, 11, 33, 89, 104, 150], "In": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 33, 34, 35, 36, 66, 70, 73, 74, 100, 113, 119, 127, 141, 144, 145, 191, 192, 193, 194, 195, 197, 198], "drop": [0, 13, 100], "support": [0, 3, 9, 53, 144, 145, 194], "variou": [0, 9, 10, 39, 42, 57, 66, 67, 190, 198], "incomp": 0, "led": 0, "inconsist": [0, 185, 197], "had": 0, "while": [0, 2, 3, 5, 9, 12, 15, 18, 33, 35, 66, 73, 74, 75, 170, 184, 192, 193, 194, 195, 196, 197], "A": [0, 1, 4, 6, 8, 9, 11, 13, 16, 18, 19, 26, 27, 34, 35, 41, 45, 46, 57, 66, 68, 74, 75, 89, 91, 92, 93, 100, 101, 102, 103, 107, 108, 109, 110, 111, 113, 114, 115, 122, 123, 124, 125, 127, 139, 144, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190], "pledg": 0, "migrat": 0, "decis": [0, 1], "alreadi": [0, 2, 3, 5, 9, 36, 41, 42, 44, 78, 170, 192, 193, 196], "unifi": 0, "instead": [0, 11, 34, 42, 53, 54, 67, 78, 95, 96, 141, 184, 190, 192, 196, 198], "provid": [0, 1, 2, 7, 10, 13, 18, 26, 27, 34, 39, 55, 92, 93, 100, 103, 111, 125, 178, 192, 193, 194, 197], "maintain": [0, 3, 6, 9, 18], "four": [0, 30, 35], "one": [0, 4, 5, 7, 12, 14, 15, 16, 18, 29, 30, 35, 36, 41, 42, 48, 55, 59, 60, 63, 64, 66, 67, 68, 69, 73, 75, 89, 90, 92, 100, 102, 103, 105, 107, 108, 109, 110, 113, 118, 127, 140, 143, 144, 149, 165, 169, 171, 173, 178, 184, 191, 192, 193, 194, 196], "emul": [0, 13, 124, 195], "controller_nonmpi": [0, 12, 16, 19, 21, 25, 26, 28, 29, 30, 32, 34, 35, 62, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "controller_mpi": [0, 62, 184, 187, 196, 197, 198], "further": [0, 6, 9, 50, 55, 80, 100, 193, 198], "confus": [0, 5, 149], "multigrid": [0, 3, 9, 34, 198], "perspect": [0, 3, 9], "algorithm": [0, 3, 9, 18, 195, 196, 197, 198], "exchang": 0, "than": [0, 5, 6, 15, 16, 18, 19, 49, 58, 67, 78, 100, 158, 159, 160, 161, 162, 165, 169, 177, 185, 191, 192, 194, 196, 197], "determin": [0, 1, 10, 42, 67, 69, 74, 80, 100, 102, 144, 145], "when": [0, 1, 3, 4, 5, 6, 8, 9, 11, 13, 18, 34, 42, 43, 44, 56, 66, 67, 71, 73, 74, 78, 80, 100, 103, 118, 124, 125, 126, 143, 144, 145, 187, 193, 194, 197, 198], "stop": [0, 41, 67, 69, 78, 92, 107, 118, 126, 140, 198], "previou": [0, 5, 11, 50, 66, 70, 73, 74, 122, 143], "behavior": [0, 1, 13, 105, 107, 108, 195], "restor": 0, "flag": [0, 16, 19, 39, 56, 59, 63, 64, 113, 192, 198], "front": [0, 102], "end": [0, 5, 6, 11, 13, 41, 42, 46, 51, 63, 64, 66, 74, 75, 119, 122, 171, 173, 182, 192, 193, 194, 196], "redund": 0, "specif": [0, 2, 4, 8, 10, 42, 45, 54, 55, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 118], "descript": [0, 5, 9, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 41, 42, 50, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "declar": 0, "within": [0, 1, 5, 6, 9, 35, 43, 67, 71, 73, 74, 190, 191, 193, 198], "precis": [0, 16, 18, 35, 196], "header": [0, 29, 30, 35, 166, 191], "__init__": [0, 6, 7, 8, 42, 125, 149], "inherti": 0, "renew": 0, "deprec": [0, 9], "requir": [0, 3, 5, 9, 12, 18, 29, 30, 35, 55, 67, 74, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141, 144, 145, 177, 192, 194, 197, 198], "2018": [0, 144], "integr": [0, 2, 3, 4, 6, 9, 11, 12, 14, 15, 18, 33, 36, 38, 39, 45, 51, 122, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 169, 192], "consist": [0, 2, 4, 6, 103, 121, 122, 123, 191], "initi": [0, 7, 11, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 41, 42, 44, 48, 50, 63, 64, 66, 74, 78, 80, 81, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "u": [0, 1, 3, 5, 7, 9, 11, 46, 48, 50, 67, 74, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 131, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 165, 166, 170, 171, 173, 191, 192, 193], "f": [0, 3, 5, 6, 7, 8, 9, 11, 12, 21, 25, 26, 27, 28, 32, 34, 35, 38, 39, 45, 46, 48, 49, 74, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "fix": [0, 4, 5, 13, 15, 33, 35, 98, 113, 120, 195, 198], "throughout": [0, 191], "As": [0, 5, 13, 18, 53, 185, 191, 194, 195, 197], "bug": [0, 4, 42, 44, 171, 173, 192, 193], "discov": 0, "3018": 0, "ship": [0, 3, 9], "dmda": [0, 108, 110, 163], "solver": [0, 12, 16, 18, 33, 35, 76, 77, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 139, 140, 141, 187, 190, 193, 194, 197, 198], "right": [0, 1, 5, 6, 7, 11, 12, 16, 18, 19, 26, 27, 28, 29, 30, 33, 34, 35, 39, 45, 46, 48, 51, 55, 59, 66, 78, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "c": [0, 3, 7, 9, 26, 27, 29, 30, 34, 35, 89, 90, 91, 100, 101, 102, 109, 113, 120, 122, 127, 181, 185, 190], "commun": [0, 1, 3, 9, 10, 18, 42, 43, 44, 53, 58, 63, 66, 68, 69, 70, 71, 73, 75, 79, 83, 85, 86, 87, 97, 98, 108, 110, 111, 114, 120, 149, 184, 187, 196, 197], "split": [0, 33, 89, 93, 95, 96, 104, 109, 144, 150, 184, 187, 196, 197], "space": [0, 1, 5, 10, 16, 18, 19, 26, 27, 34, 35, 36, 38, 49, 50, 55, 71, 90, 95, 96, 97, 98, 107, 108, 109, 110, 111, 113, 120, 124, 127, 156, 166, 168, 175, 176, 177, 179, 180, 181, 182, 186, 187, 189, 190, 191, 192, 194, 195, 196, 198], "get": [0, 5, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 54, 55, 56, 58, 66, 67, 68, 72, 74, 75, 79, 93, 95, 103, 108, 119, 123, 124, 126, 144, 145, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198], "mpich3": 0, "bind": [0, 197], "download": [0, 5], "pypi": [0, 3, 9], "doe": [0, 5, 6, 12, 14, 35, 44, 46, 50, 56, 57, 67, 71, 144, 145, 185, 191, 192, 193, 194, 195, 196, 197, 198], "packag": [0, 5, 9, 15, 125], "ever": 0, "annoi": 0, "incredibli": 0, "slow": [0, 9, 10, 15, 89, 104, 150], "setup": [0, 9, 10, 12, 26, 27, 28, 29, 30, 34, 35, 41, 42, 44, 59, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 105, 122, 166, 168, 169, 171, 173, 175, 179, 185, 190, 192, 193, 194, 195, 197, 198], "phase": [0, 12, 25, 63, 64, 81, 112], "copi": [0, 7, 46, 51, 143, 149, 184, 189, 196, 198], "dill": [0, 12, 21, 25, 32], "90": [0, 16, 19, 81], "certain": [0, 10, 11, 18, 33, 124, 195], "increas": [0, 8, 18, 45, 47, 91, 185, 194, 195, 197, 198], "speed": [0, 10, 18, 89, 90, 91, 101], "calcul": 0, "pen": [0, 12, 21, 25, 32, 122, 173, 178, 193, 194], "trap": [0, 12, 21, 25, 32, 122, 173, 178, 193, 194], "novemb": 0, "2017": 0, "matrix": [0, 8, 9, 11, 17, 26, 27, 29, 30, 33, 35, 38, 39, 45, 47, 48, 51, 55, 59, 66, 74, 75, 89, 91, 92, 93, 100, 101, 102, 107, 108, 109, 110, 111, 113, 114, 115, 120, 122, 123, 124, 125, 127, 139, 144, 146, 147, 148, 149, 150, 152, 153, 154, 158, 160, 162, 167, 168, 185, 191, 197], "pfasst": [0, 3, 9, 10, 12, 26, 27, 35, 60, 63, 64, 180, 181, 182, 183, 184, 186, 189, 192, 194, 197, 198], "matrixpfasst": [0, 26, 27, 34], "involv": [0, 1], "few": [0, 2, 4, 6, 9, 12, 15, 196, 197, 198], "unexpect": 0, "place": [0, 5, 42, 72, 73], "e": [0, 1, 3, 4, 5, 6, 9, 12, 35, 44, 48, 50, 56, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 164, 166, 168, 169, 173, 178, 191, 192, 193, 194, 195, 196, 197, 198], "g": [0, 3, 4, 5, 6, 9, 12, 28, 29, 30, 35, 44, 48, 49, 50, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 139, 140, 141, 157, 158, 159, 160, 161, 162, 163, 164, 169, 191, 192, 193, 194, 195, 196, 197, 198], "transfer": [0, 16, 19, 26, 27, 34, 35, 36, 38, 43, 49, 50, 158, 159, 160, 161, 162, 164, 175, 176, 177, 179, 180, 181, 182, 187, 189, 190, 192, 195, 196, 197, 198], "neglig": 0, "though": [0, 5, 10], "25": [0, 12, 16, 19, 21, 25, 26, 27, 28, 34, 35, 92, 93, 95, 96, 97, 98, 102, 105, 144, 173, 174, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198], "6th": 0, "workshop": 0, "avail": [0, 1, 5, 9, 14, 18, 36, 39, 42, 67, 73, 74, 143, 144], "index": [0, 5, 9, 11, 29, 30, 35, 66, 73, 74, 79, 100, 103], "http": [0, 1, 3, 5, 8, 9, 12, 21, 45, 76, 97, 98, 101, 105, 106, 108, 110, 111, 112, 114, 120, 125, 140, 144, 145], "org": [0, 1, 3, 5, 8, 9, 12, 21, 76, 99, 101, 105, 106, 108, 110, 111, 114, 119, 120, 144, 145], "simpli": [0, 5, 16, 192, 193, 194, 195, 198], "pip": [0, 3, 5, 9, 10], "natur": [0, 1, 11, 119, 125, 193], "notabl": [0, 41, 67], "meet": 0, "standard": [0, 2, 11, 14, 16, 33, 34, 35, 38, 73, 74, 122, 156, 191, 193, 194, 195, 196], "2016": [0, 3, 9, 76, 89, 104, 150], "its": [0, 3, 5, 6, 9, 12, 54, 67, 74, 103, 124, 165, 166, 191, 192, 193, 194, 195], "redesign": 0, "core": [0, 3, 4, 5, 7, 9, 12, 149, 167, 168, 169, 170, 171, 173, 176, 191, 192, 193, 194, 197], "actual": [0, 13, 14, 44, 100, 122, 124, 144, 145, 170, 185, 191, 192, 193, 195, 196, 197, 198], "necessari": [0, 5, 16, 19, 46, 66, 185, 193, 197], "someth": [0, 41, 42, 48, 66, 67], "well": [0, 1, 10, 12, 14, 17, 18, 34, 35, 36, 38, 41, 42, 67, 68, 69, 74, 109, 113, 119, 124, 127, 156, 166, 168, 185, 191, 192, 193, 195, 197, 198], "collect": [0, 5, 12, 21, 25, 29, 30, 32, 35, 105, 166, 168, 175, 191, 194], "either": [0, 18, 67, 80, 91, 115, 144, 145, 170, 185, 191, 192, 197], "introduct": 0, "ad": [0, 4, 8, 41, 42, 56, 73, 143, 149, 198], "below": [0, 8, 12, 13, 15, 17, 18, 42, 67, 80, 100, 192, 193, 197, 198], "explain": [0, 9], "fashion": [0, 92, 93, 111], "simpl": [0, 6, 9, 10, 11, 13, 26, 27, 34, 35, 69, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 111, 118, 119, 120, 123, 124, 125, 126, 139, 140, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "spatial": [0, 9, 16, 18, 19, 26, 27, 34, 38, 50, 55, 90, 91, 92, 93, 95, 96, 97, 98, 105, 107, 108, 109, 110, 111, 113, 114, 115, 120, 124, 127, 139, 156, 158, 160, 162, 165, 166, 169, 175, 179, 180, 181, 187, 190, 192, 193, 195, 197, 198], "discret": [0, 8, 13, 18, 45, 55, 89, 90, 91, 92, 93, 100, 101, 103, 107, 108, 110, 111, 114, 115, 120, 124, 139, 165, 166, 190, 191, 197, 198], "formul": [0, 11, 34, 106, 109, 113, 121, 127, 146, 147, 148, 149, 150, 152, 153, 154, 191], "move": [0, 67, 68, 193], "mlsdc": [0, 3, 9, 12, 34, 50, 63, 64, 177, 178, 185, 186, 195, 196, 197, 198], "inclus": [0, 1, 39], "two": [0, 10, 11, 12, 13, 16, 33, 34, 36, 39, 47, 50, 53, 67, 69, 73, 75, 76, 89, 92, 93, 95, 96, 99, 101, 102, 104, 107, 109, 110, 111, 113, 114, 124, 127, 139, 144, 145, 153, 166, 168, 178, 191, 194, 195, 196, 198], "gener": [0, 6, 7, 9, 11, 15, 17, 23, 33, 35, 39, 47, 48, 55, 57, 95, 96, 107, 108, 110, 120, 139, 143, 148, 149, 185, 193, 194, 197], "input": [0, 10, 13, 48, 57, 59, 108, 110, 148, 192], "nonmpi": [0, 42], "real": [0, 11, 35, 53, 97, 98, 111, 118, 120, 159, 186, 191, 195, 197], "virtual": [0, 3, 9, 12, 64, 195], "parallelisim": 0, "simplifi": [0, 6, 8, 28], "coarsen": [0, 12, 14, 185, 194, 197, 198], "libpfasst": 0, "offer": [0, 192], "plugin": [0, 195, 198], "subpackag": 0, "fulli": [0, 3, 9, 11, 16, 19, 38, 42, 47, 67, 89, 90, 92, 93, 100, 104, 108, 110, 120, 122, 124, 191], "sphinx": [0, 5, 9], "apidoc": [0, 9], "mainli": [0, 9], "realiz": [0, 9, 26, 27, 34, 109, 110, 114, 196], "clearli": [0, 9], "stabl": [0, 144, 191], "barycentr": [0, 8, 45, 59], "interpol": [0, 8, 13, 38, 45, 59, 66, 67, 73, 75, 78, 100, 113, 175, 178, 194, 195], "equidistantspline_right": 0, "spline": 0, "multi": [0, 3, 9, 15, 16, 19, 67, 92, 93, 108, 111, 153, 179, 182, 189, 191, 192, 195, 196], "aka": [0, 16], "singl": [0, 1, 5, 18, 26, 27, 34, 46, 58, 69, 122, 125, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 169, 170, 171, 172, 173, 174, 178, 182, 185, 186, 192, 193, 194, 196, 197, 198], "level": [0, 1, 3, 6, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 37, 38, 42, 43, 44, 49, 50, 51, 63, 64, 66, 67, 72, 73, 74, 79, 81, 143, 144, 149, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "expect": [0, 4, 9, 13, 28, 35, 74, 85, 148, 165, 166, 167, 168, 169, 172, 173, 174, 175, 177, 188, 190, 191, 192, 193, 194, 196, 197, 198], "rework": 0, "intern": [0, 13, 122, 192], "simplic": 0, "member": 1, "leader": 1, "particip": 1, "harass": 1, "free": [1, 26, 27, 34, 35, 66, 171, 173, 187, 192, 193, 197], "experi": [1, 9, 13, 15, 105, 166, 168, 191, 193], "everyon": 1, "regardless": 1, "ag": 1, "bodi": [1, 106, 121], "size": [1, 7, 8, 13, 15, 18, 38, 42, 45, 46, 50, 55, 63, 67, 68, 70, 74, 76, 78, 79, 80, 89, 101, 105, 108, 122, 125, 139, 167, 168, 184, 190, 191, 196, 198], "disabl": [1, 9], "ethnic": 1, "sex": 1, "characterist": [1, 195], "gender": 1, "ident": [1, 48, 89, 91, 101, 110, 114, 115, 124, 139], "express": [1, 100, 102, 113, 123], "educ": [1, 3, 9], "socio": 1, "econom": 1, "statu": [1, 37, 42, 46, 50, 63, 64, 66, 67, 68, 69, 72, 73, 108, 110, 170, 192], "nation": [1, 18], "person": [1, 4], "appear": [1, 11], "race": 1, "religion": 1, "sexual": 1, "orient": [1, 2], "interact": [1, 26, 27, 34, 122, 194], "open": [1, 5, 12, 13, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "welcom": [1, 171, 173, 192, 193], "divers": 1, "healthi": 1, "posit": [1, 12, 16, 19, 21, 25, 28, 32, 35, 86, 105, 106, 112, 117, 121, 122, 146, 154, 173, 178, 180, 181, 185, 186, 187, 193, 194, 195, 197], "demonstr": [1, 9, 10, 18, 187, 188, 192, 193, 194, 195, 196, 197, 198], "empathi": 1, "kind": [1, 39, 45, 93, 193, 195], "peopl": 1, "Being": 1, "respect": [1, 18, 26, 27, 33, 34], "opinion": 1, "viewpoint": [1, 33], "give": [1, 3, 5, 9, 42, 59, 67, 70, 75, 80, 126, 195, 196], "gracefulli": 1, "accept": [1, 5, 11, 66, 125], "construct": [1, 55, 193], "feedback": 1, "apolog": 1, "mistak": 1, "learn": [1, 9], "focus": 1, "just": [1, 5, 9, 29, 30, 34, 35, 42, 48, 68, 73, 74, 78, 111, 141, 143, 164, 172, 185, 193, 197], "individu": [1, 16, 18, 19, 41], "overal": [1, 109, 110, 111, 196], "unaccept": 1, "languag": 1, "imageri": 1, "attent": 1, "advanc": [1, 3, 9, 108, 110, 111, 114, 120, 194], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 4, 5], "polit": 1, "attack": 1, "public": [1, 4, 9, 33, 35, 36, 119], "privat": 1, "publish": 1, "inform": [1, 13, 42, 44, 55, 67, 100, 103, 108, 110, 191, 193, 198], "physic": [1, 12, 122], "email": 1, "address": 1, "explicit": [1, 3, 9, 83, 84, 85, 87, 111, 120, 127, 141, 142, 144, 145, 150, 152, 192], "permiss": 1, "reason": [1, 42, 144, 145, 191, 194], "consid": [1, 5, 11, 13, 33, 48, 91, 115], "inappropri": 1, "profession": 1, "set": [1, 2, 3, 4, 7, 8, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 40, 42, 43, 44, 45, 50, 57, 58, 66, 67, 78, 80, 91, 122, 139, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "clarifi": [1, 13], "take": [1, 3, 9, 10, 11, 18, 29, 30, 34, 35, 41, 47, 48, 68, 79, 91, 139, 166, 168, 185, 191, 194, 197, 198], "appropri": [1, 101, 141, 191], "fair": 1, "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "edit": 1, "reject": 1, "commit": [1, 2, 4, 5, 15], "wiki": [1, 106, 145], "issu": [1, 3, 4, 5, 9, 144], "align": [1, 16, 19], "moder": 1, "appli": [1, 5, 11, 13, 18, 35, 38, 113, 127, 144, 156], "offici": 1, "repres": [1, 7, 170, 191, 192, 195], "mail": 1, "post": [1, 5, 44, 192], "via": [1, 3, 9, 10, 17, 26, 27, 33, 34, 35, 38, 46, 49, 50, 67, 69, 95, 96, 113, 156, 157, 158, 159, 160, 161, 162, 195], "social": 1, "media": 1, "account": [1, 4, 47, 106, 121, 194], "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 13, 100, 103], "instanc": [1, 4, 5, 6, 8, 18, 26, 27, 34, 41, 42, 44, 45, 66, 67, 74, 75, 108, 110, 139, 149, 165, 166, 167, 168, 169, 170, 191, 192], "abus": 1, "otherwis": [1, 5, 42, 44, 74, 79, 102, 127, 185, 191, 197], "report": [1, 5, 9, 105], "review": [1, 18, 33], "investig": [1, 11, 13, 17, 33, 89, 104, 105, 122, 124], "promptli": 1, "fairli": 1, "oblig": 1, "privaci": 1, "secur": 1, "incid": 1, "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "written": [1, 4, 5, 6, 11, 34, 92, 146, 150], "clariti": 1, "around": [1, 74, 191, 192, 198], "explan": [1, 13, 15], "why": 1, "wa": [1, 3, 9, 15, 42, 67, 100, 105, 193], "apologi": 1, "through": [1, 2, 3, 4, 9, 42, 64, 80], "seri": 1, "continu": [1, 2, 3, 4, 6, 7, 9, 15, 59, 67, 69, 78, 109, 110, 111, 113, 127], "unsolicit": 1, "specifi": [1, 5, 7, 11, 16, 19, 36, 50, 58, 125, 185, 194, 195, 197], "period": [1, 26, 27, 29, 30, 34, 35, 59, 89, 90, 91, 92, 93, 95, 96, 97, 98, 102, 108, 110, 111, 115, 120, 127, 139, 158, 159, 160, 161, 162, 181, 187, 190, 195, 197, 198], "channel": [1, 5], "term": [1, 10, 47, 74, 93, 95, 96, 105, 113, 114, 115, 122, 124, 192], "lead": [1, 42, 124, 144, 145, 194, 198], "seriou": [1, 198], "sustain": 1, "pattern": 1, "aggress": [1, 14, 185, 197], "disparag": 1, "www": [1, 3, 9, 12, 21, 105, 106, 111, 140], "code_of_conduct": 1, "html": [1, 5, 106, 111, 120], "inspir": [1, 6, 8, 45, 47], "mozilla": 1, "ladder": 1, "answer": [1, 18], "common": [1, 11, 13, 37], "question": [1, 18, 198], "faq": 1, "translat": 1, "develop": [2, 3, 5, 6, 8, 9, 13, 96, 119], "approach": [2, 3, 5, 9, 34, 35, 139, 185, 195, 197], "fork": [2, 4, 5], "extend": [2, 122, 193], "skip": 2, "furthermor": 2, "branch": [2, 5, 15], "pre": [2, 4, 5, 29, 30, 35, 178, 192, 194], "To": [2, 3, 5, 9, 11, 15, 139, 193, 194, 195, 196, 197], "pleas": [2, 3, 5, 9, 15, 44, 58, 67, 73, 80, 144, 145, 149, 192, 193], "addition": [2, 92], "rule": [2, 5, 6, 45, 47, 66, 67, 73, 143, 144, 145, 154, 193], "enforc": [2, 5, 6, 42, 80], "summar": 2, "convent": [2, 5, 7], "chosen": [2, 194], "name": [2, 3, 4, 5, 7, 9, 12, 16, 19, 25, 32, 40, 42, 43, 46, 54, 56, 122, 184, 191, 192, 193, 195, 196], "function": [2, 4, 5, 7, 8, 11, 12, 13, 16, 19, 21, 25, 28, 29, 30, 32, 35, 41, 42, 44, 45, 46, 48, 50, 53, 57, 58, 59, 63, 64, 67, 68, 70, 73, 74, 76, 78, 84, 90, 95, 96, 97, 98, 100, 102, 103, 108, 109, 110, 111, 112, 113, 120, 122, 125, 127, 141, 146, 149, 150, 164, 165, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "flavor": [2, 3, 9, 68, 73, 79, 178, 194, 196], "applic": [2, 4, 9, 13, 44, 58, 66, 71, 102, 191, 198], "object": [2, 6, 8, 18, 35, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 53, 56, 57, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 97, 98, 101, 108, 110, 111, 114, 120, 125, 131, 136, 137, 143, 144, 156, 173, 174, 178, 192, 193, 194, 198], "program": [2, 5, 26, 27, 34, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "oop": 2, "custom": [2, 6, 8, 14, 38, 44, 46, 48, 49, 50, 51, 125, 146, 147, 150, 152, 153, 154, 156, 159, 193], "inherit": [2, 7, 40, 90, 100, 149], "framework": [2, 197], "addit": [2, 4, 6, 36, 41, 57, 91, 125, 193, 196], "guidelin": [2, 3, 5, 6, 9], "given": [2, 5, 7, 8, 36, 39, 45, 47, 49, 50, 66, 89, 90, 92, 99, 100, 104, 113, 118, 119, 122, 126, 140, 165, 191, 195, 196, 198], "esp": [3, 9], "multilevel": [3, 9, 50], "extens": [3, 9], "intend": [3, 9, 13], "rapid": [3, 9], "purpos": [3, 9, 41, 184, 188, 192, 194, 196, 198], "predictor": [3, 9, 44, 51, 63, 64, 144, 149, 194], "toi": [3, 9, 124], "easili": [3, 6, 9, 12, 18], "variant": [3, 9, 12, 14, 19, 185, 197], "implicit": [3, 9, 11, 16, 19, 26, 29, 30, 33, 34, 35, 83, 84, 85, 87, 90, 92, 93, 100, 108, 110, 111, 113, 127, 141, 143, 144, 148, 149, 150, 152, 153, 180, 181, 186, 187, 190, 192, 195, 197, 198], "imex": [3, 9, 26, 33, 34, 89, 127, 141, 144, 150, 152, 170, 171, 172, 173, 174, 178, 180, 186, 187, 190, 192, 193, 194, 195, 197, 198], "verlet": [3, 9, 12, 21, 25, 32, 142, 145, 146], "diagon": [3, 9, 26, 27, 34, 35, 125, 144], "topic": [3, 9, 18], "outcom": [3, 9, 18], "gitlab": [3, 9], "10": [3, 8, 9, 12, 14, 16, 19, 21, 25, 28, 29, 30, 32, 35, 76, 98, 99, 101, 102, 106, 108, 110, 114, 119, 124, 144, 145, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "host": [3, 4, 9], "com": [3, 9, 45, 145], "often": [3, 9, 18, 67], "choic": [3, 5, 9, 144, 145, 195], "thu": [3, 9, 11, 13, 191, 194], "checkout": [3, 9], "conda": [3, 5, 9, 10], "found": [3, 9, 12, 13, 14, 29, 30, 33, 35, 42, 59, 100, 103, 193, 197], "folder": [3, 5, 9, 10, 197], "etc": [3, 5, 9, 36, 42, 67, 70, 74, 76, 194, 195], "env": [3, 9, 125, 184, 196], "creat": [3, 9, 10, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 35, 44, 100, 109, 113, 127, 139, 165, 166, 167, 168, 169, 176, 187, 188, 191, 192, 193, 194, 195, 197, 198], "yml": [3, 9], "m": [3, 5, 8, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 42, 45, 64, 68, 74, 75, 76, 79, 101, 109, 113, 122, 124, 127, 131, 167, 168, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "correspond": [3, 5, 9, 12, 18, 25, 26, 27, 33, 34, 42, 47, 50, 58, 66, 146, 147, 148, 149, 150, 151, 152, 153, 154, 194, 196, 198], "chose": [3, 9, 119], "pythonpath": [3, 9, 184, 196], "export": [3, 5, 9], "path": [3, 5, 9, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 42, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "root": [3, 5, 9, 11, 13, 53, 83, 85, 87, 103, 184, 196], "want": [3, 5, 9, 18, 42, 66, 67, 68, 71, 73, 74, 79, 145, 192, 196, 198], "import": [3, 5, 6, 7, 8, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 42, 74, 125, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "statement": [3, 5, 9], "assum": [3, 9, 122, 195], "directori": [3, 5, 9, 12, 15, 16, 19, 21, 25, 28, 32, 35, 184, 196], "decent": [3, 9], "compil": [3, 9], "although": [3, 6, 9, 10, 191, 192, 194], "go": [3, 5, 9, 14, 44, 63, 64, 78, 80, 170, 184, 192, 195, 196], "great": [3, 9], "let": [3, 8, 9, 45, 78, 92, 100, 104], "know": [3, 9, 46, 67, 74, 75, 78, 173, 192, 193, 195], "help": [3, 6, 8, 9, 36, 185, 193, 197], "greatli": [3, 9, 18], "appreci": [3, 9], "citat": [3, 9, 144], "robert": [3, 9, 18, 122], "speck": [3, 9, 89, 104, 122, 150], "997": [3, 9, 166, 191], "transact": [3, 9], "mathemat": [3, 9], "softwar": [3, 9, 109, 113, 127], "volum": [3, 9], "45": [3, 9, 124, 186, 197], "doi": [3, 8, 9, 76, 99, 101, 119, 124, 144], "1145": [3, 9, 144], "3310410": [3, 9], "current": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 19, 21, 25, 28, 32, 35, 39, 42, 44, 46, 48, 50, 51, 59, 63, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 149, 152, 184, 192, 196, 198], "zenodo": [3, 9], "origin": [3, 9, 14, 33, 39, 111, 119, 122], "pancetta": [3, 9], "small": [3, 9, 10, 16, 18, 19, 48, 170, 191, 192], "scientist": [3, 9], "interest": [3, 9, 18, 33, 36, 193, 195, 196, 198], "changelog": [3, 9], "evolut": [3, 9, 72], "dearli": [3, 9], "read": [3, 6, 8, 9, 11, 12, 16, 19, 21, 25, 28, 32, 35, 40, 43, 56], "our": [3, 9, 63, 64, 191, 192, 193, 195, 197], "forget": [3, 5, 9], "peek": [3, 9], "nice": [3, 9, 11, 18, 74, 191, 195], "conduct": [3, 5, 9, 124], "receiv": [3, 9, 42, 46, 63, 83, 85, 86, 87], "fund": [3, 9], "european": [3, 9], "high": [3, 9, 12, 14, 16, 19, 21, 25, 28, 32, 35, 74, 122, 180, 181, 185, 186, 187, 190, 194, 195, 197, 198], "joint": [3, 9], "undertak": [3, 9], "ju": [3, 9], "grant": [3, 9], "agreement": [3, 9], "955701": [3, 9], "union": [3, 9], "horizon": [3, 9], "2020": [3, 9], "research": [3, 9], "innov": [3, 9], "programm": [3, 9], "belgium": [3, 9], "franc": [3, 9], "germani": [3, 9], "switzerland": [3, 9], "german": [3, 9], "feder": [3, 9], "ministri": [3, 9], "bmbf": [3, 9], "16hpc047": [3, 9], "helmholtz": [3, 9], "engin": [3, 9], "preparatori": [3, 9], "studi": [3, 9, 33, 35, 67, 105], "hirse_p": [3, 9], "nbsp": [3, 9], "done": [4, 5, 9, 10, 12, 13, 14, 16, 19, 21, 25, 28, 29, 30, 32, 35, 42, 67, 103, 107, 110, 111, 114, 124, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "repositori": [4, 5], "eventu": [4, 6, 9], "mainten": 4, "howev": [4, 5, 6, 18, 42, 74, 91, 124, 144, 145, 194, 198], "highli": [4, 194], "trough": 4, "dedic": [4, 102], "master": [4, 5, 9, 11, 15], "contributor": 4, "propos": 4, "solv": [4, 7, 9, 16, 18, 19, 48, 66, 67, 74, 75, 79, 90, 91, 92, 93, 95, 96, 97, 98, 100, 107, 108, 109, 110, 111, 113, 115, 118, 119, 120, 122, 125, 127, 141, 144, 145, 167, 168, 191, 197], "accuraci": [4, 10, 13, 18, 55, 66, 73, 74, 139, 165, 166, 168, 169, 190, 192, 196, 198], "issue214": 4, "214": [4, 171, 192], "awesome_new_project": 4, "some_featur": 4, "favor": [4, 6], "short": [4, 6, 196], "lower": [4, 5, 18, 35, 67, 73, 75, 80, 144, 145, 148, 193], "case": [4, 5, 6, 11, 13, 35, 70, 100, 103, 107, 108, 191, 194, 195, 196, 198], "underscor": [4, 6], "eas": [4, 6, 50], "interfac": [4, 18, 41, 48, 49, 51, 144, 145, 192], "modifi": [4, 5, 11, 35, 36, 47, 73], "default": [4, 5, 16, 19, 42, 44, 45, 48, 51, 56, 57, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 109, 113, 124, 125, 127, 139, 143, 149, 192, 194], "valu": [4, 6, 7, 8, 10, 11, 12, 13, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 39, 40, 41, 42, 44, 45, 46, 48, 50, 51, 55, 56, 57, 58, 59, 63, 64, 66, 67, 70, 72, 73, 74, 76, 78, 80, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 135, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "revis": 4, "happen": [4, 26, 27, 34, 41, 42, 66, 67, 73, 78, 198], "upstream": 4, "repo": 4, "hesit": 4, "regularli": [4, 5, 13], "conflict": 4, "On": 4, "my_featur": 4, "git": [4, 5], "fetch": 4, "synchron": [4, 11], "v": [4, 5, 12, 16, 19, 21, 25, 26, 27, 30, 32, 34, 35, 92, 100, 102, 105, 109, 110, 111, 113, 122, 123, 127, 165, 166, 170, 174, 177, 182, 183, 184, 187, 189, 191, 192, 193, 196, 197, 198], "next": [4, 5, 6, 7, 8, 11, 14, 18, 46, 50, 59, 66, 67, 73, 79, 100, 193, 194, 195, 196, 198], "v5": 4, "v6": 4, "forc": [4, 10, 12, 92, 97, 98, 105, 113, 114, 115, 173, 178, 193, 194, 197], "re": [4, 53, 113, 170, 192, 194], "write": [4, 5, 12, 21, 26, 27, 28, 29, 30, 32, 34, 35, 42, 78, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "script": [4, 9, 10, 11, 16, 36, 119, 196], "anyon": 4, "onc": [4, 5, 26, 27, 34, 42, 66, 74, 75, 184, 196], "roadmap": 4, "mileston": 4, "associ": [4, 8, 45, 46, 139], "down": [4, 13, 15, 63, 64, 102], "Such": 4, "same": [4, 6, 7, 15, 18, 27, 34, 41, 42, 66, 74, 79, 90, 91, 93, 100, 115, 124, 139, 172, 179, 191, 192, 193, 194, 195, 196], "never": [4, 66, 75], "modif": [4, 55], "own": [4, 5, 18, 193], "prefix": [4, 6], "dev": 4, "cannot": [4, 7, 11, 42, 67, 141, 194], "sever": [4, 12, 35, 91, 115], "solut": [4, 6, 7, 10, 11, 13, 15, 16, 18, 19, 26, 27, 28, 33, 34, 35, 46, 48, 66, 67, 70, 71, 73, 74, 75, 78, 81, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 165, 166, 167, 168, 170, 171, 173, 175, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198], "summari": [4, 5, 6, 7, 8], "panel": [5, 125], "divid": [5, 89, 101, 104, 109, 113, 127, 196], "categori": 5, "build": [5, 27, 34, 55, 167, 168, 184, 191, 196], "artifact": 5, "section": [5, 125], "style": [5, 8, 12, 16, 19, 21, 25, 28, 32, 35, 63, 64, 74], "syntax": [5, 6], "complianc": 5, "pep": [5, 6], "comprehens": [5, 66], "bugbear": 5, "diff": [5, 26, 34, 177, 189, 194, 198], "color": [5, 18, 28, 29, 30, 35, 166, 168, 187, 191, 197], "reformat": 5, "command": [5, 15], "line": [5, 6, 11, 18, 66, 123, 139, 166, 167, 168, 184, 191, 196], "120": 5, "charact": [5, 6], "arithmet": 5, "variabl": [5, 7, 12, 25, 41, 42, 48, 50, 56, 66, 67, 68, 70, 72, 73, 74, 75, 78, 81, 101, 144, 145, 184, 193, 195, 196], "empti": [5, 184, 196], "autom": [5, 109, 113, 127], "possibli": [5, 10, 15, 66, 75, 78], "bin": 5, "sh": 5, "stage": [5, 42, 51, 63, 64, 74, 143, 144, 145, 149, 152, 171, 173, 192, 193, 198], "head": 5, "grep": [5, 29, 30, 35], "py": [5, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 100, 125, 146, 147, 150, 152, 153, 154, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "sed": 5, "rev": 5, "pars": 5, "toplevel": 5, "delet": [5, 74], "becaus": [5, 18, 74, 78, 119, 127, 149, 185, 197], "fail": [5, 184, 196], "fi": 5, "chmod": 5, "execut": [5, 196], "Be": [5, 67, 77, 80, 144], "awar": [5, 67, 77, 80, 144, 145], "alter": 5, "editor": 5, "whenev": [5, 41, 66, 191], "r": [5, 8, 16, 19, 28, 29, 30, 35, 38, 59, 89, 92, 93, 95, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 110, 114, 121, 122, 123, 124, 139, 156, 198], "messag": [5, 42, 63, 66, 67, 70, 74, 75, 76], "detect": [5, 18, 76], "abort": [5, 26, 27, 34, 71], "ahead": 5, "worri": [5, 196], "obtain": [5, 8, 34, 35, 45, 55, 66, 67, 73, 74, 109], "msg": [5, 42, 71], "commit_msg_fil": 5, "flakeheaven_output": 5, "interpret": 5, "trailer": 5, "echo": 5, "assign": [5, 29, 30, 35, 141], "note": [5, 6, 8, 12, 14, 16, 17, 19, 26, 27, 33, 34, 45, 73, 125, 127, 171, 185, 186, 191, 192, 193, 194, 195, 196, 197, 198], "relat": [5, 33, 38, 42, 48, 49, 50, 51, 156, 193], "constantli": [5, 124], "pep8": [5, 9], "might": [5, 18, 56, 78, 80, 196], "caus": [5, 15, 144, 196], "date": 5, "forg": 5, "pass": [5, 6, 8, 16, 19, 26, 27, 29, 30, 34, 35, 38, 42, 46, 48, 50, 51, 54, 58, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 156, 179, 180, 181, 186, 187, 190, 191, 192, 194, 195, 197, 198], "toml": [5, 184, 196], "compon": [5, 10, 11, 13, 83, 84, 85, 87, 99, 111, 118, 119, 126, 140, 153, 198], "test_nod": 5, "how": [5, 8, 12, 13, 17, 18, 68, 72, 73, 74, 102, 124, 125, 172, 191, 192, 193, 194, 195, 196, 197, 198], "compar": [5, 10, 13, 16, 19, 26, 27, 28, 33, 34, 35, 66, 67, 74, 75, 76, 95, 96, 165, 166, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198], "indic": [5, 6, 9, 39, 43, 59, 63, 92, 95, 96, 97, 98, 100, 102, 103, 107, 109, 113, 118, 124, 126, 127, 140, 192], "print": [5, 6, 7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "load": [5, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 35, 42, 67, 68, 69, 72, 73, 76, 77, 80, 100, 123], "sitecustom": 5, "process_startup": 5, "durat": 5, "analyz": [5, 33, 34, 36, 191], "henc": [5, 15, 18, 42, 67, 75, 113, 124, 127], "finish": [5, 171, 173, 192, 193], "process": [5, 10, 15, 18, 26, 34, 36, 43, 44, 63, 74, 83, 85, 87, 109, 110, 111, 171, 173, 179, 180, 181, 182, 183, 184, 188, 189, 192, 193, 195, 196, 198], "combin": [5, 11, 12, 74, 184, 187, 194, 196, 197], "htmlcov": 5, "favorit": [5, 144], "browser": 5, "did": [5, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 74, 166, 167, 168, 169, 170, 171, 175, 184, 187, 191, 192, 194, 196, 197], "ignor": [5, 144, 145, 198], "rais": [5, 6, 7, 12, 16, 19, 25, 26, 27, 32, 34, 42, 71, 184, 185, 196, 197], "tool": [5, 36, 192], "pyproject": [5, 184, 196], "conditionali": 5, "loop": [5, 13, 16, 19, 28, 29, 30, 35, 44, 166, 168, 174, 180, 181, 182, 191, 193, 195, 196], "pragma": 5, "cover": 5, "def": [5, 6, 7, 8, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "preced": 5, "think": 5, "justifi": 5, "built": [5, 6, 144, 145, 192, 198], "task": [5, 196], "doc": [5, 120], "unzip": 5, "rst": 5, "update_apidoc": 5, "b": [5, 16, 19, 26, 27, 28, 29, 30, 34, 35, 66, 74, 75, 101, 109, 110, 111, 113, 122, 125, 127, 131, 137, 173, 178, 179, 180, 181, 187, 190], "Then": [5, 8, 13, 14, 15, 45, 191, 193], "graph": [5, 28, 35], "imag": 5, "still": [5, 35, 42, 66, 75, 141, 144], "miss": [5, 198], "concern": 5, "mostli": [6, 43], "Of": [6, 194], "cours": [6, 42, 194], "strictli": [6, 144, 145], "alwai": [6, 15, 44, 67, 79, 102, 144, 145, 146, 154, 191, 194, 196], "guido": 6, "von": 6, "rossum": 6, "kei": [6, 12, 16, 19, 21, 25, 29, 30, 32, 35, 56, 58, 63, 64, 74, 100, 139, 174, 184, 192, 193, 195, 196], "insight": 6, "state": [6, 13, 35, 97, 98, 100, 102, 103], "foolish": 6, "hobgoblin": 6, "littl": [6, 186, 191, 193, 197], "mind": [6, 48, 55, 75, 141], "find": [6, 9, 13, 15, 18, 29, 30, 35, 42, 59, 166, 168, 191], "optim": [6, 11, 35, 67, 120, 166, 168, 191], "compromis": 6, "someon": [6, 9], "els": [6, 12, 16, 19, 25, 26, 27, 29, 30, 32, 34, 35, 67, 100, 103, 127, 149, 178, 182, 184, 185, 186, 187, 190, 194, 196, 197, 198], "understand": [6, 8, 36], "my": [6, 9], "effect": [6, 67, 119, 124], "kilomet": 6, "aspect": [6, 18], "interdepend": 6, "attract": 6, "lowercas": 6, "variablenamelikethi": 6, "snake_cas": 6, "variable_name_like_thi": 6, "pascalcas": 6, "camelcas": 6, "uppercas": 6, "minu": 6, "try": [6, 14, 15, 66, 67, 73, 184, 191, 196], "stick": 6, "discourag": 6, "advectiondiffus": 6, "except": [6, 15, 42, 43, 47, 124, 184, 196], "suffix": [6, 195], "parametererror": [6, 37, 43], "goe": [6, 42], "argument": [6, 42, 44, 48, 58, 91, 125, 172, 193], "tleft": [6, 39, 167, 168, 191], "quadtyp": 6, "legendr": [6, 39, 45, 47, 167, 168, 177, 191, 193, 194], "computefejerrul": [6, 37, 45], "nnode": [6, 176, 194], "nodegener": 6, "getorthogpolycoeff": 6, "self": [6, 7, 8, 42, 64, 69, 74, 100, 149], "ncoeff": 6, "abbrevi": 6, "deterior": [6, 13], "rather": [6, 8, 12, 13, 18, 33, 185, 192, 196, 197], "getorthogonalpolynomialcoeffici": 6, "plural": 6, "acronym": 6, "jacobimssdc": 6, "multistepsdcjacobi": 6, "mssdcjacobi": 6, "put": [6, 166, 191, 193, 198], "exception": 6, "special": [6, 9, 11, 12, 25, 32, 34, 93, 107, 108, 113, 173, 174, 178, 193, 194, 198], "mysweep": 6, "initsweep": 6, "getattr": 6, "_initsweep_": 6, "attributeerror": 6, "notimplementederror": [6, 12, 16, 19, 25, 32, 185, 197], "_initsweep_copi": 6, "_initsweep_spread": 6, "_": [6, 8, 11, 12, 21, 25, 32, 45, 111, 113, 120, 127, 171, 173, 190, 192, 193, 198], "chucknorri": 6, "_think": 6, "doubt": 6, "doubl": [6, 67], "__": [6, 171, 173, 192, 193], "left": [6, 11, 12, 14, 21, 25, 32, 33, 39, 45, 55, 59, 91, 92, 93, 95, 96, 97, 98, 107, 108, 113, 114, 115, 117, 122, 139, 150, 166, 168, 191], "__dict__": [6, 56], "node_typ": [6, 39, 47, 167, 168, 177, 191, 194], "equid": [6, 39], "chebi": [6, 39], "quad_typ": [6, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 47, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "gauss": [6, 15, 18, 35, 39, 45, 47, 67, 73, 174, 193, 195, 198], "radau": [6, 16, 19, 26, 27, 28, 29, 30, 34, 35, 39, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "lobatto": [6, 12, 21, 25, 32, 39, 47, 174, 193], "string": [6, 16, 19, 41, 42, 46, 58, 139], "distinguish": 6, "select": [6, 67, 75], "probabl": [6, 122, 197], "keep": [6, 10, 41, 42, 48, 55, 75, 141, 182, 196], "replac": [6, 14, 16, 19, 193, 194], "_initsweep_copy_past": 6, "_initsweep_spread_out": 6, "non": [7, 17, 35, 42, 59, 63, 67, 68, 70, 74, 79, 83, 85, 86, 87, 119, 124, 196], "od": [7, 9, 48, 51, 99, 100, 102, 119, 123, 140, 143, 149, 194, 197], "form": [7, 9, 11, 91, 93, 95, 96, 97, 98, 109, 110, 111, 115, 118, 125, 146, 150, 185, 191, 195, 197], "frac": [7, 8, 45, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 139, 140], "du": [7, 16, 19, 109, 110, 111, 118, 140], "dt": [7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 45, 46, 50, 67, 74, 99, 100, 102, 103, 104, 112, 117, 118, 119, 122, 123, 125, 126, 131, 137, 139, 140, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "quad": 7, "u_0": [7, 11, 104], "vector": [7, 8, 11, 45, 55, 59, 66, 74, 75, 105, 106, 108, 109, 110, 113, 121, 127, 158, 162, 167, 168, 191, 192], "scalar": [7, 8, 33, 45, 104, 109, 113, 127, 146, 150], "hand": [7, 18, 42, 48, 51, 55, 66, 74, 78, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 167, 168, 191, 192, 194, 197], "side": [7, 18, 48, 51, 55, 66, 78, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 167, 168, 191, 192, 194, 197], "ptype": [7, 37, 46, 48, 49, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141], "templat": [7, 36], "lambda": [7, 12, 16, 19, 21, 25, 26, 27, 32, 34, 104, 118, 122, 125, 146, 150, 184, 196], "ct": 7, "complex": [7, 9, 12, 33, 53, 85, 193], "np": [7, 8, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 45, 47, 59, 66, 75, 84, 89, 90, 92, 93, 95, 97, 98, 100, 101, 102, 104, 105, 122, 123, 124, 125, 139, 165, 166, 167, 168, 173, 174, 175, 178, 180, 181, 184, 185, 186, 187, 190, 191, 193, 194, 195, 196, 197, 198], "problemerror": [7, 37, 43], "datatype_class": [7, 10, 61, 166, 171, 173, 191, 192, 193, 197], "mycustomproblem": 7, "datatyp": [7, 10, 42, 83, 85, 161], "dtype_u": [7, 46, 48, 50, 73, 74, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 165, 166, 175, 191, 194], "dtype_f": [7, 46, 48, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 144, 145], "lam": [7, 118], "len": [7, 12, 16, 19, 21, 27, 29, 30, 32, 34, 35, 166, 168, 175, 176, 179, 184, 187, 191, 194, 195, 196, 197], "shape": [7, 38], "must": [7, 8, 45, 48, 100, 194], "1d": [7, 16, 17, 33, 55, 59, 89, 92, 107, 124, 159, 191], "call": [7, 12, 13, 16, 19, 21, 25, 28, 29, 30, 32, 35, 41, 42, 44, 48, 50, 53, 58, 67, 68, 73, 77, 78, 81, 92, 93, 100, 102, 110, 111, 114, 122, 126, 127, 140, 149, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "super": [7, 42, 44, 111, 193], "init": [7, 8, 42, 48, 83, 84, 85, 86, 87, 165, 166, 175, 181, 191, 194, 195], "none": [7, 10, 12, 16, 19, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 41, 42, 44, 46, 48, 55, 56, 58, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 89, 93, 95, 96, 97, 98, 100, 101, 103, 105, 108, 109, 110, 111, 114, 119, 120, 123, 124, 125, 126, 127, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 168, 171, 173, 182, 185, 186, 190, 191, 192, 193, 196, 197, 198], "dtype": [7, 85, 125, 173, 174, 178, 193, 194], "regist": [7, 40, 58, 172, 193], "localvar": 7, "true": [7, 12, 16, 19, 26, 27, 32, 34, 42, 46, 54, 59, 74, 92, 100, 103, 107, 111, 118, 119, 120, 124, 126, 139, 140, 144, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "rh": [7, 10, 38, 46, 48, 51, 74, 83, 84, 85, 87, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 137, 139, 140, 141, 143, 149, 156], "eval_f": [7, 48, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 165, 166, 191], "f_init": [7, 48], "list": [7, 8, 9, 10, 12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 41, 42, 45, 46, 48, 50, 54, 55, 58, 59, 64, 66, 68, 74, 75, 76, 79, 92, 95, 96, 97, 98, 100, 101, 103, 105, 109, 125, 127, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 166, 168, 172, 173, 174, 175, 178, 180, 181, 182, 184, 189, 191, 193, 194, 195, 196, 198], "output": [7, 12, 13, 25, 32, 36, 44, 48, 66, 108, 110, 159, 173, 174, 178, 182, 184, 187, 193, 194, 196, 197], "fals": [7, 12, 16, 19, 32, 41, 42, 44, 54, 55, 59, 63, 64, 68, 73, 106, 118, 120, 121, 125, 139, 147, 148, 149, 150, 151, 152, 153, 171, 173, 178, 182, 185, 186, 187, 189, 190, 192, 193, 194, 196, 197, 198], "docstr": 8, "itself": [8, 13, 42, 74, 124, 194, 198], "describ": [8, 9, 11, 16, 17, 19, 36, 100, 106, 109, 110, 111, 121, 172, 193], "lagrangeapproxim": [8, 37, 45], "approxim": [8, 11, 18, 45, 74, 75, 90, 92, 95, 96, 97, 98, 111, 118, 119, 120, 123, 124, 125, 126], "point": [8, 13, 18, 39, 45, 46, 47, 54, 59, 66, 73, 74, 75, 90, 92, 93, 95, 96, 97, 98, 100, 103, 106, 108, 121, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 165, 166, 191], "lagrang": [8, 37, 109, 113, 127, 194], "math": [8, 101, 108, 113, 127], "t_j": [8, 45], "leq": [8, 45, 100, 102, 103, 115, 140], "j": [8, 45, 89, 93, 95, 96, 97, 98, 102, 104, 105, 106, 108, 109, 110, 113, 121, 127, 144], "n": [8, 12, 16, 19, 21, 26, 27, 28, 32, 34, 35, 45, 91, 93, 95, 96, 97, 98, 100, 101, 105, 106, 107, 109, 111, 113, 115, 120, 121, 122, 127, 129, 130, 133, 134, 135, 137, 139, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "formula": [8, 45, 170, 192], "displaystyl": [8, 45, 91, 115], "sum_": [8, 11, 45, 105, 106, 115, 121, 122], "w_j": [8, 45], "x_j": [8, 45], "f_j": [8, 45], "prod_": [8, 45, 91, 115], "k": [8, 11, 12, 21, 25, 28, 29, 30, 32, 33, 35, 45, 59, 74, 90, 100, 102, 105, 109, 110, 111, 112, 113, 122, 124, 127, 146, 150, 166, 168, 174, 191, 193], "neq": [8, 45, 106, 121, 122], "x_k": [8, 45], "theori": [8, 45], "dx": [8, 28, 35, 55, 89, 92, 93, 95, 96, 97, 98, 101, 105, 107, 108, 109, 110, 113, 114, 122, 124, 127, 129, 130, 133, 134, 135, 137, 139, 165, 166, 175, 191, 194], "1137": 8, "s0036144502417715": 8, "tupl": [8, 44, 45, 58, 73, 91, 93, 95, 96, 97, 98, 101, 107, 108, 109, 110, 111, 112, 114, 115, 120, 124, 127, 139, 190, 193, 198], "1darrai": [8, 45, 47, 48, 89, 90, 92, 93, 95, 96, 97, 100, 104, 105, 122, 124, 139], "scale": [8, 10, 12, 15, 16, 18, 19, 21, 25, 28, 29, 30, 32, 35, 45, 54, 92, 93, 95, 96, 97, 98, 122, 191, 197], "getinterpolationmatrix": [8, 45], "vec": [8, 16, 19, 45, 87, 89, 92, 93, 100, 101, 102, 103, 104, 108, 109, 110, 113, 114, 120, 123, 124, 125, 127, 139], "tau_m": [8, 45], "p_": [8, 45], "inter": [8, 45, 122], "pinter": [8, 45], "2darrai": [8, 45, 102, 122, 123], "row": [8, 45, 66, 68, 74, 75, 108, 150], "column": [8, 45, 74, 108, 125, 150, 167, 168, 191], "cute": 8, "pictur": [8, 12, 18, 21, 36], "cat": 8, "coverag": 9, "flatten": [9, 48], "steep": 9, "curv": 9, "eight": 9, "briefli": [9, 198], "discuss": [9, 196], "along": [9, 13, 122], "highlight": 9, "shown": [9, 12, 16], "ye": [9, 55], "jupyt": [9, 15], "notebook": [9, 15], "awesom": [9, 39], "statist": [9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 44, 58, 60, 63, 64, 92, 172, 173, 174, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198], "gather": [9, 16, 44, 122, 166, 168, 174, 175, 184, 191, 193, 194, 196, 198], "medium": 9, "group": 9, "bori": [9, 12, 122, 146, 193, 194], "becom": [9, 11, 18, 66, 74, 106, 121, 196], "evolv": 9, "proper": 9, "suppos": [9, 196, 198], "focuss": 9, "beyond": [9, 35, 194], "basi": [9, 12, 102], "present": [9, 41, 178, 194], "readm": 9, "intent": 9, "content": 9, "conform": 9, "attempt": 9, "fast": [9, 89, 90, 95, 96, 97, 98, 104, 111, 120, 122, 150], "wave": [9, 89, 90, 104, 107, 108, 150, 165, 166, 191], "rdc": 9, "ration": 9, "asymptot": 9, "fastest": 9, "bayreuth": 9, "modal": 9, "system": [9, 11, 15, 18, 32, 36, 74, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 144, 145, 167, 168, 191, 193, 197], "differenti": [9, 13, 15, 76, 99, 100, 102, 103, 109, 113, 118, 119, 123, 127, 139, 145], "algebra": 9, "helper": [9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 38, 41, 44, 63, 64, 100, 108, 110, 112, 122, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "tabl": [9, 39, 41], "search": 9, "materi": 10, "scienc": [10, 198], "paraphas": 10, "partner": 10, "flexibl": 10, "run_simple_forcing_verif": 10, "2d": [10, 11, 16, 33, 66, 75, 91, 93, 101, 114, 115, 160, 186, 197], "against": [10, 34], "known": [10, 11, 13, 42, 95, 96, 119, 122], "circl": [10, 92, 93, 95, 96, 97, 98], "shrink": [10, 167, 168, 191], "drive": [10, 92, 97, 98, 198], "vanish": [10, 74], "numer": [10, 11, 12, 18, 33, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 123, 124, 125, 126, 127, 140, 141, 145], "scheme": [10, 11, 33, 34, 35, 66, 67, 74, 75, 101, 143, 144, 145, 146, 195, 198], "constant": [10, 74, 93, 95, 96, 106, 112, 113, 121, 122, 146, 195, 198], "dw": [10, 92, 97, 98], "radiu": [10, 17, 33, 35, 92, 93, 95, 96, 97, 98], "stai": [10, 102], "run_temp_forcing_verif": 10, "temperatur": [10, 119, 124], "run_temp_forcing_refer": 10, "These": [10, 15, 35, 36, 42, 144, 145], "serial": [10, 15, 18, 64, 73, 83, 85, 189, 195, 196, 197, 198], "mimick": 10, "larger": [10, 191, 197], "hpc": [10, 36], "machin": [10, 11, 16, 18, 196], "allencahn_monitor_and_dump": 10, "radii": 10, "dump": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 41], "o": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 166, 168, 184, 188, 189, 191, 196, 198], "allencahn_monitor": 10, "allencahn_dump": 10, "visual": [10, 16, 19, 28, 29, 30, 33, 35, 36, 60, 166, 168, 188, 191], "turn": [10, 125, 194], "field": [10, 13, 44, 82, 86, 122, 173, 178, 193, 194], "png": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 60, 166, 168, 188, 189, 191, 198], "visualize_temp": 10, "movi": 10, "run_pysc_ac": 10, "ex": [10, 36], "jobscript": 10, "jureca": [10, 36], "allencahn_mpifft": [10, 88], "problem_class": [10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 48, 57, 61, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "allencahn_temp_mpifft": [10, 88], "thesi": 11, "suffic": [11, 67], "misc": 11, "hookclass_da": 11, "linear_plot": 11, "previous": 11, "npy": 11, "axi": [11, 122, 166, 168, 191], "loglog_plot": 11, "logarithm": 11, "commonli": 11, "semilogy_plot": 11, "y": [11, 97, 98, 99, 110, 114, 117, 166, 168, 191], "simple_da": 11, "analyt": [11, 47, 89, 118, 165, 166, 167, 168, 191], "pendulum": 11, "veri": [11, 12, 13, 14, 16, 19, 34, 48, 103, 144, 171, 173, 191, 192, 193, 195], "solvabl": 11, "synchronous_machin": 11, "attach": [11, 193], "infinit": 11, "bu": 11, "undergo": 11, "torqu": 11, "disturb": 11, "transistor_amplifi": 11, "transistor": 11, "amplifi": 11, "world": [11, 187, 197], "situat": [11, 194], "run_convergence_test": 11, "mention": [11, 15, 33], "run_iteration_test": 11, "behaviour": [11, 67, 119, 143], "residu": [11, 33, 41, 51, 60, 66, 67, 69, 74, 77, 108, 110, 113, 124, 149, 151, 152, 170, 171, 172, 173, 185, 188, 189, 192, 193, 194, 197], "fully_implicit_dae_playground": 11, "arena": 11, "synchronous_machine_playground": 11, "fully_implicit_da": 11, "represent": 11, "aris": [11, 13, 44, 92, 107, 118, 126, 139, 140], "jacobian": [11, 35, 47, 48, 108, 110, 124], "partial_": 11, "singular": [11, 140], "impli": [11, 197], "deriv": [11, 14, 34, 41, 44, 47, 55, 74, 89, 92, 101, 112, 124, 127, 139, 140, 141, 150], "denot": [11, 73, 90, 92, 95, 96, 97, 98, 100, 104, 111, 112, 113, 115, 120, 127], "isol": 11, "picard": [11, 146, 147, 148, 149, 150, 152, 153, 154], "ordinari": [11, 13, 15, 76, 99, 100, 102, 103, 119, 123], "henceforth": 11, "cast": 11, "unknown": [11, 74, 92, 93, 95, 96, 97, 98, 101, 112], "int_0": 11, "tu": 11, "tau": [11, 38, 46, 156, 185, 197], "d": [11, 14, 28, 29, 35, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 117, 119, 121, 123, 125, 126, 139, 184, 196], "tild": 11, "delta": [11, 29, 30, 35, 45, 92, 93, 95, 96, 97, 98, 104, 107, 108, 109, 110, 111, 120, 127], "t_": [11, 102, 119, 122], "t_m": [11, 98], "int_": [11, 45, 109, 113, 127], "discretis": [11, 124, 139], "obviou": [11, 14], "mathbf": 11, "q": [11, 29, 30, 35, 51, 109, 122, 144, 145, 146, 149, 150, 152, 167, 168, 191], "l": [11, 28, 29, 30, 35, 59, 73, 90, 95, 96, 97, 98, 100, 111, 120, 144, 166, 168, 169, 170, 176, 191, 192, 194], "_l": 11, "low": 11, "euler": [11, 35, 101, 143, 144, 146, 147, 150, 152, 154, 181, 195], "_0": 11, "begin": [11, 42, 122, 171, 173, 192, 193, 196], "pmatrix": 11, "t_1": 11, "dot": [11, 27, 34, 125], "t_2": 11, "clear": [11, 193], "repeatedli": 11, "recalcul": [11, 13], "reformul": [11, 113, 127], "carri": [11, 42], "u_": [11, 105], "familiar": 11, "scipi": [11, 14, 45, 48, 89, 92, 93, 95, 96, 119, 120, 123, 124, 125, 126, 167, 168, 191], "3rd": 12, "harmon": [12, 25, 112], "oscil": [12, 14, 25, 112, 126], "henon": [12, 25], "heil": [12, 25, 117], "hamiltonian_output": [12, 25, 32], "monitor": [12, 13, 196], "deviat": [12, 173, 174, 175, 178, 193, 194], "exact": [12, 16, 19, 26, 27, 28, 34, 35, 48, 73, 74, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 140, 141, 167, 168, 170, 171, 173, 175, 177, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "hamiltonian": [12, 21, 25, 32, 105, 112, 117, 121], "100": [12, 16, 19, 25, 29, 30, 32, 35, 92, 93, 99, 100, 103, 107, 109, 110, 111, 118, 119, 123, 126, 171, 173, 174, 175, 178, 192, 193, 194], "processor": [12, 18, 21, 32, 182, 185, 186, 187, 196, 197], "full": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 48, 106, 109, 110, 120, 124, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "simple_problem": [12, 25], "defaultdict": [12, 21, 25, 32], "plot_help": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 52], "plt_helper": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "stats_help": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 52, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "get_sort": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 52, 58, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "filter_stat": [12, 21, 25, 32, 52, 58, 172, 193], "controller_class": [12, 16, 19, 21, 25, 26, 28, 29, 30, 32, 34, 35, 61, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "harmonicoscil": [12, 25, 88], "harmonic_oscil": [12, 25, 88, 112], "henonheil": [12, 25, 88], "henon_heil": [12, 25, 88, 117], "sweeper_class": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 61, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "transfer_class": [12, 21, 25, 26, 27, 32, 34, 61, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198], "transferparticles_nocoars": [12, 21, 25, 32, 155, 178, 194], "particles_to_particl": [12, 21, 25, 32, 155, 164, 178, 194], "setup_harmon": [12, 25], "everyth": [12, 21, 25, 32, 39, 127, 169, 176, 192, 194], "dict": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 40, 41, 42, 44, 50, 57, 58, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 100, 105, 119, 122, 125, 139, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "controller_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 63, 64, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "level_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "restol": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "1e": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 91, 92, 93, 99, 100, 101, 103, 107, 108, 110, 111, 114, 115, 118, 119, 120, 124, 126, 139, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "sweeper_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 66, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "num_nod": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 39, 47, 66, 144, 145, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "initial_guess": [12, 16, 19, 21, 25, 26, 27, 32, 34, 144, 145, 171, 173, 186, 187, 190, 192, 193, 197, 198], "zero": [12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 48, 74, 100, 102, 124, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "problem_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "amp": [12, 25, 112], "step_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "maxit": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 77, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "50": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 127, 172, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "hook_class": [12, 21, 25, 28, 32, 35, 171, 173, 174, 178, 190, 192, 193, 194, 198], "logger_level": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 66, 171, 172, 173, 174, 177, 178, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "fill": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 51, 122, 143, 144, 149, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "easi": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "hierarchi": [12, 21, 25, 28, 32, 35, 63, 64, 149, 170, 171, 172, 173, 174, 176, 178, 179, 185, 192, 193, 197], "space_transfer_class": [12, 16, 19, 21, 25, 26, 27, 32, 34, 38, 50, 156, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 189, 190, 194, 195, 196, 197, 198], "setup_henonheil": [12, 25], "run_simul": [12, 21, 25, 32, 172, 174, 186, 190, 193, 197, 198], "prob": [12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 46, 108, 110, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "arg": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 48, 71, 91, 165, 166, 167, 168, 170, 182, 184, 185, 186, 191, 192, 196, 197], "str": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 40, 41, 42, 45, 47, 51, 54, 55, 56, 58, 60, 66, 67, 70, 73, 74, 75, 76, 91, 95, 96, 97, 98, 109, 113, 115, 124, 125, 127, 139, 143, 149, 152, 175, 184, 185, 187, 194, 196, 197], "t0": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 63, 64, 109, 113, 167, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "tend": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 42, 63, 64, 68, 74, 79, 80, 167, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "num_proc": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 63, 64, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "maxmeanit": [12, 25, 32], "elif": [12, 16, 19, 25, 26, 27, 28, 29, 30, 32, 34, 35, 185, 190, 197, 198], "instanti": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 42, 48, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "finest": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 50, 63, 64, 67, 73, 74, 79, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "uinit": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "u_exact": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 140, 141, 166, 167, 168, 170, 171, 172, 173, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "uend": [12, 16, 19, 21, 25, 28, 29, 30, 32, 34, 35, 46, 146, 147, 148, 149, 150, 152, 153, 154, 167, 168, 170, 171, 172, 173, 174, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198], "stat": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 41, 44, 58, 60, 63, 64, 171, 172, 173, 174, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198], "u0": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 41, 50, 63, 64, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 137, 139, 140, 141, 167, 168, 171, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "filter": [12, 16, 19, 21, 25, 27, 28, 29, 30, 32, 34, 35, 58, 172, 173, 174, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 198], "iter_count": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 172, 180, 181, 182, 184, 185, 186, 187, 188, 190, 193, 195, 196, 197, 198], "niter": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 48, 170, 172, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "sortbi": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 58, 172, 173, 174, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "item": [12, 16, 19, 21, 25, 27, 28, 32, 34, 35, 58, 172, 173, 174, 178, 180, 181, 182, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198], "2f": [12, 16, 19, 21, 25, 28, 32, 35, 170, 172, 175, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "2i": [12, 16, 19, 21, 25, 28, 32, 35, 166, 168, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198], "mean": [12, 13, 14, 15, 16, 18, 19, 21, 25, 28, 32, 35, 73, 74, 80, 100, 102, 114, 124, 149, 180, 181, 185, 186, 187, 190, 195, 197, 198], "rang": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 100, 108, 124, 165, 166, 168, 175, 176, 179, 180, 181, 185, 186, 187, 190, 191, 194, 195, 197, 198], "ptp": [12, 16, 19, 21, 25, 28, 32, 35, 180, 181, 185, 186, 187, 195, 197], "max": [12, 16, 19, 21, 25, 28, 32, 35, 69, 91, 115, 166, 168, 180, 181, 185, 186, 187, 188, 191, 195, 197, 198], "min": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 166, 168, 176, 180, 181, 185, 186, 187, 188, 191, 194, 195, 197, 198], "int": [12, 16, 19, 21, 25, 28, 32, 35, 39, 42, 44, 45, 46, 47, 55, 59, 63, 67, 68, 74, 79, 83, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 113, 114, 115, 118, 119, 122, 124, 125, 126, 127, 139, 140, 146, 149, 150, 175, 180, 181, 185, 186, 187, 194, 195, 197], "argmax": [12, 16, 19, 21, 25, 28, 32, 35, 180, 181, 185, 186, 187, 195, 197], "argmin": [12, 16, 19, 21, 25, 28, 32, 35, 180, 181, 185, 186, 187, 195, 197], "std": [12, 16, 19, 21, 25, 28, 32, 35, 180, 181, 185, 186, 187, 195, 197], "var": [12, 16, 19, 21, 25, 28, 32, 35, 180, 181, 185, 186, 187, 195, 197], "float": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 39, 41, 42, 46, 47, 48, 50, 54, 55, 67, 68, 71, 74, 79, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 143, 180, 181, 182, 185, 186, 187, 195, 196, 197], "assert": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "fname": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 60, 166, 168, 171, 173, 182, 183, 184, 187, 188, 191, 192, 193, 196, 197, 198], "dat": [12, 16, 19, 21, 25, 32], "wb": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "close": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 67, 79, 139, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "isfil": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 166, 168, 188, 189, 191, 198], "show_result": [12, 16, 19, 21, 25, 32], "cwd": [12, 16, 19, 21, 25, 28, 32, 35, 184, 196], "rb": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "extract": [12, 21, 25, 32, 58], "extract_stat": [12, 21, 25, 32], "err_hamiltonian": [12, 21, 25, 32], "append": [12, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 59, 166, 168, 191], "mpl": [12, 16, 19, 21, 25, 28, 32, 35], "setup_mpl": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 52, 54], "newfig": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 52, 54], "textwidth": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 54], "238": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "96": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "89": [12, 21, 25, 28, 29, 30, 32, 35], "rearrang": [12, 21, 25, 32], "err_ham": [12, 21, 25, 32], "ham": [12, 21, 25, 32, 105, 112, 117, 121], "plt": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 166, 168, 191], "semilogi": [12, 21, 25, 32], "lw": [12, 21, 25, 28, 29, 30, 32, 35], "label": [12, 21, 25, 28, 29, 30, 32, 35, 166, 168, 191], "7e": [12, 25], "08": [12, 16, 19, 25, 26, 27, 29, 30, 34, 35, 93, 103, 106, 124, 170, 171, 172, 173, 175, 177, 185, 186, 187, 190, 192, 193, 194, 197, 198], "larg": [12, 13, 18, 21, 25, 26, 27, 32, 33, 34, 79, 188, 189, 191, 198], "xlabel": [12, 21, 25, 28, 29, 30, 32, 35, 166, 168, 191], "ylabel": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 166, 168, 191], "legend": [12, 21, 25, 28, 29, 30, 32, 35, 166, 168, 191], "loc": [12, 21, 25, 28, 29, 30, 32, 35, 166, 168, 191], "center": [12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 35, 91, 92, 107, 115, 124, 139, 171, 173, 178, 181, 190, 192, 193, 194, 195, 198], "bbox_to_anchor": [12, 21, 25, 32], "_hamiltonian": [12, 25, 32], "savefig": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 52, 54, 166, 168, 191], "pdf": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 120, 166, 168, 191], "pgf": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35], "__name__": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "__main__": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "slightli": [12, 33, 119, 193, 194], "movement": 12, "planet": [12, 106, 121], "acceler": [12, 48, 66, 82, 86, 105, 106, 112, 117, 121, 122], "due": [12, 17, 18, 33, 113, 194, 196, 197], "gravit": [12, 106, 121], "outersolarsystem": [12, 32, 88], "six": [12, 121], "outer": [12, 32, 35, 121], "sun": [12, 102, 106, 121], "mass": [12, 48, 106, 109, 112, 113, 121, 122, 127, 152, 185, 197], "inner": [12, 39, 165, 166, 191], "jupit": [12, 121], "saturn": [12, 121], "uranu": [12, 121], "neptun": [12, 121], "pluto": [12, 121], "fullsolarsystem": [12, 32, 88], "earth": [12, 106], "moon": [12, 106], "15": [12, 14, 26, 27, 34, 42, 66, 166, 173, 174, 176, 179, 181, 186, 189, 191, 193, 194, 195, 197, 198], "per": [12, 16, 19, 29, 30, 35, 55, 86, 139], "solar_system": [12, 32], "mpl_toolkit": [12, 32], "mplot3d": [12, 32], "axes3d": [12, 32], "full_solar_system": [12, 32, 88, 106], "outer_solar_system": [12, 32, 88, 106, 121], "setup_outer_solar_system": [12, 32], "spread": [12, 26, 27, 32, 34, 42, 63, 64, 68, 78, 79, 81, 171, 173, 192, 193], "sun_onli": [12, 32, 106, 121], "setup_full_solar_system": [12, 32], "10000": [12, 21, 32, 91, 115, 139, 171, 192], "1000": [12, 21, 32, 102, 104, 124], "19": [12, 32, 144, 180, 186, 195, 197], "_out": [12, 32], "txt": [12, 21, 26, 27, 28, 32, 34, 35, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "w": [12, 16, 19, 21, 26, 27, 28, 32, 34, 35, 38, 47, 101, 109, 124, 127, 156, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181, 182, 184, 188, 189, 191, 192, 193, 194, 195, 196, 198], "4e": [12, 16, 19, 26, 27, 28, 32, 34, 35, 167, 172, 186, 187, 190, 191, 193, 197, 198], "fig": [12, 32, 33], "figur": [12, 14, 17, 18, 28, 29, 30, 32, 35, 54, 166, 168, 191, 198], "ax": [12, 28, 32, 35, 166, 168, 191], "add_subplot": [12, 32], "111": [12, 32], "3d": [12, 32], "npart": [12, 21, 32, 105, 122, 173, 174, 178, 193, 194], "ndim": [12, 32, 91, 111, 115, 139, 190, 198], "nstep": [12, 21, 32, 180, 181, 190, 195, 198], "po": [12, 21, 32, 86, 122, 173, 193], "idx": [12, 21, 32], "enumer": [12, 21, 32], "wrong": [12, 16, 19, 32, 63, 64, 184, 196], "dimens": [12, 32, 55, 84, 86, 91, 93, 101, 111, 114, 115, 120, 124, 127, 139, 190, 194, 198], "_posit": [12, 32], "06": [12, 16, 19, 26, 27, 32, 34, 91, 115, 124, 144, 166, 170, 171, 172, 173, 174, 180, 186, 191, 192, 193, 195, 197], "74": [12, 32], "75": [12, 26, 27, 32, 34, 180, 181, 182, 183, 184, 188, 189, 190, 195, 196, 198], "56": [12, 32], "18": [12, 26, 27, 32, 34, 186, 189, 197, 198], "02": [12, 26, 27, 32, 34, 90, 101, 144, 173, 186, 193, 197], "37": [12, 32], "40": [12, 32, 76, 172, 186, 189, 193, 197, 198], "54": [12, 32], "famou": 12, "fput": [12, 21, 105], "fermipastaulamtsing": [12, 21, 88], "limit": [12, 17, 35, 67, 68, 71, 79, 80, 166, 168, 187, 191, 197], "until": [12, 17, 33, 66, 102, 170, 182, 192, 196], "refer": [12, 13, 14, 15, 16, 19, 38, 42, 48, 49, 73, 76, 79, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 120, 122, 123, 124, 125, 127, 144, 156], "fermi_pasta_ulam_tsing": [12, 21, 88, 105], "hamiltonian_and_energy_output": [12, 21], "setup_fput": [12, 21], "12": [12, 21, 27, 28, 34, 35, 91, 92, 93, 99, 107, 111, 115, 118, 124, 139, 144, 166, 168, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "2048": [12, 21, 105], "alpha": [12, 21, 47, 100, 105, 122, 131, 137, 143], "energy_mod": [12, 21, 105], "reproduc": [12, 14, 15, 21, 36], "scholarpedia": [12, 21, 105], "articl": [12, 21, 105, 106], "ulam_nonlinear_lattice_oscil": [12, 21, 105], "fput_out": [12, 21], "runtim": [12, 17, 21, 33, 71, 194], "timing_run": [12, 16, 19, 21, 172, 185, 186, 187, 190, 193, 197, 198], "took": [12, 21, 170, 190, 192, 198], "4f": [12, 16, 19, 21, 185, 186, 187, 190, 197, 198], "46": [12, 21], "6e": [12, 21, 165, 167, 169, 171, 177, 178, 191, 192, 194], "fput_hamiltonian": [12, 21], "energy_step": [12, 21], "mode": [12, 21, 73, 105], "th": [12, 21, 91, 100, 105, 106, 115, 121, 122], "fput_energi": [12, 21], "16": [12, 21, 26, 27, 34, 91, 114, 115, 139, 166, 168, 173, 174, 180, 181, 186, 189, 190, 191, 193, 195, 197, 198], "fput_posit": [12, 21], "83": [12, 21], "475": [12, 21], "42": [12, 21], "48": [12, 21, 181, 195], "6981": [12, 21], "deal": [13, 167, 168, 184, 191, 192, 193, 194, 196], "dc": 13, "microgrid": 13, "techniqu": 13, "dynam": [13, 33, 100, 101, 103, 178, 194], "discontinu": [13, 100], "prove": [13, 18], "sign": [13, 100, 103, 127], "restart": [13, 18, 42, 44, 63, 64, 67, 68, 78, 79, 101, 172, 193], "occur": [13, 15, 18, 103], "subinterv": [13, 100], "inher": 13, "restrict": [13, 38, 46, 49, 50, 59, 156, 157, 158, 159, 160, 161, 162, 163, 164, 185, 194, 197], "regard": 13, "consumpt": 13, "household": 13, "voltag": [13, 100, 102, 123], "smaller": [13, 14], "target": [13, 18, 42, 50, 63, 83, 85, 86, 87], "duti": [13, 102], "cycl": [13, 102], "typic": [13, 18, 103, 195], "behav": 13, "seen": [13, 15, 102, 107, 108, 194], "capacitor": [13, 100, 102, 123], "coil": 13, "settl": 13, "background": 13, "serv": [13, 100, 123], "transmiss": [13, 123], "transport": 13, "domain": [13, 18, 33, 89, 92, 95, 96, 97, 98, 101, 102, 107, 108, 124, 191], "illustr": [13, 100], "circuit": [13, 100], "guettel": 14, "klein": 14, "equidist": [14, 35, 39, 59], "barycentricinterpol": 14, "mybarycentricinterpol": 14, "blend": 14, "rest": [14, 92, 93, 192], "resolut": [14, 91, 107, 108, 109, 110, 111, 113, 114, 115, 120, 124, 127, 139, 194], "van": [14, 15, 126], "der": [14, 15, 126], "pol": [14, 15, 126], "vanderpol_refer": 14, "vari": [14, 66, 193, 196], "maximum": [14, 41, 67, 68, 69, 71, 92, 93, 99, 100, 101, 107, 108, 110, 114, 118, 119, 124, 126, 139, 140, 144, 145, 170, 192], "vanderpol_error_test": 14, "straightforward": [14, 192, 193, 198], "vanderpol_mlsdc_pfasst_test": 14, "20": [14, 28, 29, 30, 35, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 187, 191, 192, 193, 194, 195, 197], "bitflip": 15, "factor": [15, 18, 67, 72, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141], "radiat": 15, "conveni": [15, 46, 191], "latest": [15, 97, 98, 111], "strategi": [15, 35, 194, 198], "adjust": [15, 78, 80, 166, 168, 191], "product": [15, 35, 113, 127, 158, 162, 191], "hot": [15, 67, 76], "rod": [15, 67, 76], "design": 15, "pure": 15, "detector": [15, 76], "soft": [15, 18, 76], "fault": [15, 18, 76], "tri": 15, "recov": 15, "lorenz": [15, 48, 88], "attractor": [15, 119], "thorough": [15, 191], "duplic": 15, "pilin": [15, 88], "electr": [15, 86, 122], "good": [15, 18, 195, 197], "sweep": [15, 18, 34, 36, 44, 46, 51, 63, 64, 67, 70, 73, 74, 76, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 171, 173, 176, 192, 193, 194, 198], "last": [15, 42, 67, 73, 74, 75, 79, 81, 144, 145, 149, 151, 194, 195], "higher": [15, 47, 48, 74, 109, 113, 127, 144, 165, 169, 177, 185, 191, 192, 194, 197], "embed": [15, 67, 69, 72, 73, 75, 77, 144], "extrapol": [15, 67, 75], "li": 15, "top": [15, 18, 119], "fewer": [15, 67, 194], "block": [15, 18, 26, 27, 34, 42, 44, 60, 63, 64, 67, 68, 73, 79, 83, 85, 86, 87, 185, 196, 197, 198], "seidel": [15, 18, 67, 73], "nake": 15, "ey": [15, 101, 167, 168, 191], "navig": 15, "bash": 15, "mpirun": [15, 184, 186, 196, 197], "work_precis": 15, "fault_stat": 15, "run_vdp": 15, "run_quench": 15, "run_ac": 15, "run_schroeding": 15, "paper_plot": 15, "semi": [16, 19, 33, 73, 92, 93, 95, 96, 97, 98, 108, 110, 111, 120, 124], "inexact": [16, 18, 19, 28, 35, 65, 66], "isdc": 16, "comparison": 16, "win": 16, "sdc_showdown": [16, 19], "sdc_timing_fish": [16, 19], "pickl": [16, 19, 28, 29, 30, 35], "generalizedfisher_1d_petsc": [16, 19, 88], "petsc_fisher_multiimplicit": [16, 19, 88, 108], "petsc_fisher_fullyimplicit": [16, 19, 88, 108], "petsc_fisher_semiimplicit": [16, 19, 88, 108], "generic_implicit": [16, 19, 26, 27, 28, 29, 34, 35, 142, 149, 169, 176, 177, 181, 182, 189, 190, 192, 194, 195, 196, 198], "imex_1st_ord": [16, 19, 142, 151, 152, 170, 171, 172, 179, 180, 185, 186, 187, 190, 192, 193, 195, 197, 198], "multi_implicit": [16, 19, 142], "setup_paramet": [16, 19], "relev": [16, 19, 42, 192, 193], "nsweep": [16, 19, 26, 27, 34, 146, 150, 171, 173, 186, 187, 190, 192, 193, 197, 198], "q1": [16, 19, 153], "lu": [16, 19, 26, 27, 28, 29, 34, 35, 125, 169, 176, 177, 180, 181, 182, 186, 187, 189, 190, 192, 194, 195, 196, 197, 198], "q2": [16, 19, 153], "qi": [16, 19, 26, 27, 28, 29, 30, 34, 35, 144, 145, 148, 150, 169, 171, 173, 176, 177, 180, 181, 182, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198], "nu": [16, 19, 26, 27, 28, 29, 30, 34, 35, 90, 93, 95, 96, 107, 108, 113, 114, 115, 127, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "nvar": [16, 19, 26, 27, 28, 29, 30, 34, 35, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 107, 108, 110, 111, 115, 120, 124, 139, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "2049": [16, 19], "lambda0": [16, 19, 28, 29, 30, 35, 107, 108], "interv": [16, 19, 28, 29, 30, 35, 39, 45, 46, 74, 92, 107, 108, 122, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 168, 170, 172, 191, 192, 193], "nlsol_tol": [16, 19, 108, 110], "nlsol_maxit": [16, 19, 108, 110], "lsol_tol": [16, 19, 108, 110], "lsol_maxit": [16, 19, 108, 110], "space_transfer_param": [16, 19, 26, 27, 34, 38, 49, 50, 156, 175, 176, 177, 179, 180, 181, 182, 187, 189, 190, 194, 195, 196, 197, 198], "finter": [16, 19, 178, 185, 194, 197], "mesh_to_mesh_petsc_dmda": [16, 19, 155, 163, 187, 197], "run_sdc_vari": [16, 19], "bool": [16, 19, 39, 41, 42, 44, 46, 55, 58, 59, 66, 67, 68, 69, 70, 71, 74, 75, 76, 79, 92, 97, 98, 100, 103, 106, 107, 111, 118, 120, 121, 124, 126, 140, 149, 151, 182, 185, 186, 196, 197], "nor": [16, 19], "incomplet": [16, 19, 125], "stuff": [16, 19, 42, 74], "uex": [16, 19, 26, 27, 28, 34, 35, 170, 171, 173, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198], "err": [16, 19, 28, 35, 165, 166, 167, 168, 169, 170, 171, 173, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198], "ab": [16, 19, 26, 28, 34, 35, 165, 166, 168, 170, 171, 173, 174, 175, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198], "count": [16, 17, 19, 26, 27, 29, 30, 34, 35, 41, 42, 48, 92, 100, 103, 119, 122, 126, 140, 172, 181, 182, 184, 189, 192, 193, 194, 195, 196, 198], "snes_itercount": [16, 19, 110], "ksp_itercount": [16, 19, 114], "snes_ncal": [16, 19, 110], "ksp_ncall": [16, 19, 114], "sec": [16, 19, 185, 186, 187, 197], "pde": [16, 18, 19, 111, 127, 187, 197], "2e": [16, 19, 165, 169, 171, 187, 191, 192, 197], "05": [16, 19, 27, 28, 34, 35, 101, 127, 170, 171, 172, 173, 174, 175, 182, 186, 188, 192, 193, 194, 196, 197, 198], "match": [16, 19, 76, 187, 197], "toler": [16, 19, 33, 48, 66, 67, 69, 70, 76, 77, 91, 92, 93, 99, 100, 101, 107, 108, 110, 114, 115, 118, 119, 124, 126, 139, 140, 185, 187, 193, 194, 197, 198], "pkl": [16, 19, 28, 29, 30, 35], "xcoord": [16, 19], "sorted_data": [16, 19], "revers": [16, 19, 168, 191], "tup": [16, 19, 184, 196], "height": [16, 19, 54], "bar": [16, 19], "xtick": [16, 19, 28, 35, 166, 168, 191], "rotat": [16, 19], "save": [16, 19, 28, 29, 30, 35, 46, 166, 168, 191], "beautifi": [16, 19, 28, 35, 166, 168, 191], "driver": [16, 19, 63, 64], "timings_sdc_variants_fish": [16, 19], "sdc_timing_grayscott": [16, 19], "grayscott_2d_petsc_period": [16, 19, 88], "petsc_grayscott_multiimplicit": [16, 19, 88, 110], "petsc_grayscott_fullyimplicit": [16, 19, 88, 110], "petsc_grayscott_semiimplicit": [16, 19, 88, 110], "dv": [16, 19, 109, 110, 111, 122], "01": [16, 19, 26, 28, 29, 30, 34, 35, 101, 102, 109, 111, 127, 144, 171, 173, 174, 186, 192, 193, 197], "09": [16, 19, 29, 30, 35, 109, 111, 119, 120, 126, 170, 171, 172, 173, 177, 181, 190, 192, 193, 194, 195, 198], "086": [16, 19, 109, 111], "128": [16, 19, 26, 27, 34, 92, 93, 95, 96, 97, 98, 113, 124, 127, 181, 185, 186, 195, 197], "gs_refer": [16, 19], "viewer": [16, 19], "createbinari": [16, 19], "3e": [16, 19, 26, 34, 174, 193], "run_refer": [16, 19], "view": [16, 19, 73], "timings_sdc_variants_grayscott": [16, 19], "heat": [17, 29, 30, 34, 35, 113, 114, 115, 124, 139, 144, 180, 185, 190, 193, 194, 195, 197, 198], "advect": [17, 18, 26, 27, 29, 30, 34, 35, 89, 90, 91, 101, 139, 181, 190, 198], "stiff": [17, 26, 27, 33, 34, 35, 48, 126, 127, 195], "conv_test_to0": 17, "conv_test_toinf": 17, "smoother": [17, 198], "eigenvalu": 17, "smoother_specrad_heatmap": 17, "heatmap": 17, "pfasst_conv_test": 17, "pfasst_conv_linf": 17, "diffus": [17, 26, 27, 34, 90, 95, 96, 97, 98, 107, 108, 109, 110, 111, 113, 114, 115, 120, 127, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "teh": [17, 156], "aim": 18, "whatev": [18, 42, 48, 66, 67, 68, 70, 74, 76, 78, 191, 192], "clemson": 18, "univers": [18, 105], "argonn": 18, "laboratori": 18, "forschungszentrum": 18, "juelich": 18, "umbrella": 18, "jlesc": 18, "web": [18, 108, 110, 114], "ampl": 18, "opportun": 18, "sebastian": 18, "goetschel": 18, "martin": 18, "weiser": 18, "hardwar": 18, "trend": 18, "memori": [18, 74], "bound": 18, "resourc": [18, 108, 110, 114], "perhap": 18, "wise": 18, "spent": 18, "access": [18, 49, 64, 158, 159, 160, 161, 162, 166, 168, 170, 191, 192, 193, 195], "interconnect": 18, "slower": 18, "pint": 18, "concurr": 18, "effici": [18, 67, 78, 125], "ideal": 18, "candid": 18, "benefit": 18, "sum": [18, 35, 53], "evalu": [18, 39, 47, 48, 51, 74, 89, 90, 92, 93, 95, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141, 143, 146, 147, 148, 149, 150, 152, 153, 154, 194], "intermedi": [18, 74, 103], "substanti": 18, "random": [18, 95, 96], "decomposit": [18, 35, 125], "allot": 18, "expens": [18, 194], "lossi": 18, "greater": [18, 100], "lossless": 18, "abl": 18, "afford": 18, "desir": [18, 67, 68, 73, 79], "earli": 18, "trigger": 18, "costli": [18, 194], "notic": [18, 67], "endless": 18, "progress": 18, "accordingli": [18, 78], "measur": [18, 193], "reduct": [18, 28, 35], "footprint": 18, "manag": [18, 46, 143], "underwood": 18, "sz3": 18, "compressor": 18, "docker": 18, "togeth": [18, 185, 192, 197], "immedi": [18, 73, 198], "decompress": 18, "everi": [18, 42, 66, 74, 75, 77, 78, 79], "captur": 18, "downsid": 18, "verifi": [18, 36], "stall": 18, "dash": 18, "repeat": 18, "showcas": 18, "suffer": 18, "establish": 18, "remain": [18, 191], "manner": 18, "benefici": 18, "fermi": [21, 105], "pasta": [21, 105], "ulam": [21, 105], "tsingou": [21, 105], "plotgmrescounter_boussinesq": [23, 33], "compare_to_matrixbas": [26, 34], "pathlib": [26, 27, 34, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "advectionequation_nd_fd": [26, 27, 29, 30, 34, 35, 88, 181, 190, 195, 198], "advectionnd": [26, 27, 29, 30, 34, 35, 88, 91, 181, 190, 195, 198], "heatequation_nd_fd": [26, 27, 29, 30, 34, 35, 88, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 189, 190, 191, 192, 193, 194, 195, 196, 198], "heatnd_unforc": [26, 27, 29, 30, 34, 35, 88, 115, 165, 166, 167, 168, 169, 175, 176, 177, 182, 189, 191, 192, 194, 196, 198], "testequation_0d": [26, 27, 34, 88], "testequation0d": [26, 27, 34, 88, 125, 141], "transfermesh": [26, 27, 34, 155, 175, 176, 177, 179, 180, 181, 182, 189, 190, 194, 195, 196, 198], "mesh_to_mesh": [26, 27, 34, 155, 158, 162, 175, 176, 177, 179, 180, 181, 182, 189, 190, 194, 195, 196, 198], "transfermesh_nocoars": [26, 27, 34, 155, 190, 198], "mesh_to_mesh_nocoars": [26, 27, 34], "controller_matrix_nonmpi": [26, 27, 34], "diffusion_setup": [26, 27, 34], "par": [26, 27, 34, 37, 42], "trick": [26, 34, 35, 92, 122, 180, 186, 187, 190, 195, 197, 198], "activ": [26, 34, 63, 64, 66, 68, 74, 79, 171, 173, 180, 182, 186, 187, 190, 192, 193, 195, 196, 197, 198], "coeffici": [26, 27, 34, 47, 74, 90, 100, 102, 113, 114, 115, 118, 123, 127, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "freq": [26, 27, 29, 30, 34, 35, 90, 91, 114, 115, 139, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "frequenc": [26, 27, 34, 91, 101, 102, 114, 115, 139, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "127": [26, 27, 34, 92, 107, 111], "63": [26, 29, 30, 34, 35, 182, 189, 196, 198], "degre": [26, 27, 29, 30, 34, 35, 55, 89, 107, 109, 110, 111, 113, 125, 127, 139, 141, 165, 167, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 187, 191, 192, 193, 194, 195, 196, 197], "freedom": [26, 27, 29, 30, 34, 35, 55, 89, 107, 109, 110, 111, 113, 127, 139, 165, 167, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 187, 191, 192, 193, 194, 195, 196, 197], "bc": [26, 27, 29, 30, 34, 35, 55, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 110, 111, 113, 114, 115, 118, 119, 120, 123, 124, 125, 126, 139, 140, 141, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 181, 182, 189, 190, 191, 192, 193, 194, 195, 196, 198], "dirichlet": [26, 27, 29, 30, 34, 35, 91, 92, 101, 109, 113, 114, 115, 139, 158, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 179, 180, 182, 189, 191, 192, 193, 194, 195, 196, 198], "rorder": [26, 27, 34, 175, 176, 177, 179, 180, 181, 182, 187, 189, 190, 194, 195, 196, 197, 198], "iorder": [26, 27, 34, 175, 176, 177, 179, 180, 181, 182, 187, 189, 190, 194, 195, 196, 197, 198], "all_to_don": [26, 34, 171, 173, 182, 192, 193, 196], "advection_setup": [26, 27, 34], "64": [26, 27, 29, 30, 34, 35, 98, 181, 185, 190, 195, 197, 198], "stencil_typ": [26, 27, 29, 30, 34, 35, 55, 91, 115, 124, 139, 171, 181, 190, 192, 195, 198], "testequation_setup": [26, 34], "1j": [26, 27, 34], "whole": [26, 27, 34, 186, 192, 193, 197], "ilim_left": [26, 27, 34], "ilim_right": [26, 27, 34], "rlim_left": [26, 27, 34], "rlim_right": [26, 27, 34], "ilam": [26, 27, 34], "logspac": [26, 27, 34], "rlam": [26, 27, 34], "rl": [26, 27, 34, 102, 123], "il": [26, 27, 34], "propag": [26, 27, 33, 124], "compare_control": [26, 27, 34], "handler": [26, 27, 34], "testequ": [26, 27, 34], "valueerror": [26, 27, 34], "vali": [26, 27, 34], "nwork": [26, 27, 34], "controller_mat": [26, 34], "controller_nomat": [26, 34], "uend_mat": [26, 27, 34], "stats_mat": [26, 27, 34], "uend_nomat": [26, 34], "stats_nomat": [26, 34], "err_mat": [26, 34], "err_nomat": [26, 34], "mat": [26, 27, 34, 108, 110], "nomat": [26, 34], "convert": [26, 34, 102, 125, 172, 174, 178, 189, 193, 194, 198], "iter_counts_mat": [26, 27, 34], "iter_counts_nomat": [26, 34], "par_list": [26, 27, 34], "1e02": [26, 27, 34], "mkdir": [26, 27, 34, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "parent": [26, 27, 34, 44, 127, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "exist_ok": [26, 27, 34, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "comparison_matrix_vs_nomat_detail": [26, 34], "0e": [26, 27, 34], "0681e": [26, 34], "07": [26, 34, 170, 171, 172, 173, 178, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 196, 197, 198], "1102e": [26, 34], "0169e": [26, 34], "04": [26, 34, 92, 93, 95, 96, 97, 98, 165, 167, 169, 170, 171, 172, 173, 180, 181, 186, 187, 191, 192, 193, 195, 197], "4409e": [26, 34, 190, 198], "00": [26, 27, 28, 34, 35, 173, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198], "8573e": [26, 34], "1781e": [26, 34], "9363e": [26, 34], "4433e": [26, 34], "2887e": [26, 34], "7511e": [26, 34], "22": [26, 34, 139], "0000e": [26, 27, 34, 190, 198], "3996e": [26, 34], "17": [26, 34, 35, 181, 186, 195, 197], "7992e": [26, 34], "3372e": [26, 34], "compare_to_propag": [27, 34], "scalar_equation_setup": [27, 34], "equal": [27, 34, 74, 100, 108, 110, 114], "prescrib": [27, 33, 34, 192], "prop": [27, 34], "build_propagation_matrix": [27, 34], "err_prop_ex": [27, 34], "linalg": [27, 34, 125, 167, 168, 173, 191, 193], "norm": [27, 33, 34, 71, 167, 168, 173, 191, 193], "err_mat_ex": [27, 34], "err_mat_prop": [27, 34], "comparison_matrix_vs_propagator_detail": [27, 34], "2542e": [27, 34], "0509e": [27, 34], "6141e": [27, 34], "03": [27, 28, 34, 35, 124, 170, 171, 172, 173, 178, 186, 192, 193, 194, 197], "7400e": [27, 34], "6858e": [27, 34], "2878e": [27, 34], "3515e": [27, 34], "8462e": [27, 34], "6312e": [27, 34], "8449e": [27, 34], "21": [27, 34, 181, 195], "4603e": [27, 34], "0384e": [27, 34], "4674e": [27, 34], "parallelsdc": [28, 29, 30, 35], "nonlinear_playground": [28, 35], "generalizedfisher_1d_fd_implicit_jac": [28, 35], "generalized_fisher_jac": [28, 35], "linearized_implicit_fixed_parallel": [28, 35], "linearized_implicit_fixed_parallel_prec": [28, 35], "linearized_implicit_parallel": [28, 35], "option": [28, 35, 45, 67, 73, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 126, 127, 139, 140, 198], "255": [28, 35, 177, 180, 194, 195], "newton_maxit": [28, 29, 30, 35, 92, 93, 99, 100, 103, 107, 111, 118, 119, 124, 126, 140, 190, 198], "newton_tol": [28, 29, 30, 35, 77, 92, 93, 99, 100, 103, 107, 111, 118, 119, 124, 126, 140, 190, 198], "fixed_time_in_jacobian": [28, 35], "sweeper_list": [28, 35], "parallelsdc_nonlinear_out": [28, 35], "686e": [28, 35], "xvalu": [28, 29, 30, 35, 90, 92, 93, 95, 96, 105, 139, 165, 166, 191], "later": [28, 29, 30, 35, 166, 191, 192, 193], "parallelsdc_results_graph": [28, 35], "plot_graph": [28, 35], "338": [28, 35], "xlim": [28, 35, 166, 168, 191], "ylim": [28, 29, 30, 35, 166, 168, 191], "markeredgecolor": [28, 29, 30, 35], "ncol": [28, 29, 30, 35, 166, 168, 191], "parallelsdc_fish": [28, 35], "newton_vs_sdc": [28, 35], "errreductionhook": [28, 35], "err_reduction_hook": [28, 35], "2047": [28, 35], "dt_list": [28, 35, 168, 191], "error_reduct": [28, 35], "error_pr": [28, 35], "error_pre_iter": [28, 35], "error_post": [28, 35], "error_post_iter": [28, 35], "rate": [28, 33, 35, 109, 110, 111], "error_reduction_data": [28, 35], "color_list": [28, 29, 30, 35], "red": [28, 35], "blue": [28, 35], "green": [28, 35], "marker_list": [28, 29, 30, 35], "label_list": [28, 35], "newton": [28, 77, 92, 93, 99, 100, 103, 106, 107, 108, 110, 111, 118, 119, 120, 121, 124, 126, 140], "zip": [28, 29, 30, 35, 189, 190, 198], "loglog": [28, 35, 166, 168, 191], "quadrat": [28, 35, 105], "set_xtick": [28, 35], "gca": [28, 35], "invert_xaxi": [28, 35], "1e0": [28, 35], "parallelsdc_fisher_newton": [28, 35], "preconditioner_playground": [29, 35], "namedtupl": [29, 30, 35, 44, 166, 168, 175, 191, 194], "generalizedfisher_1d_fd_implicit": [29, 30, 35, 88], "generalized_fish": [29, 30, 35, 88, 107], "van_der_pol_implicit": [29, 30, 35, 88], "vanderpol": [29, 30, 35, 88, 126], "id": [29, 30, 35, 89, 91, 101, 110, 114, 115, 124, 139, 166, 168, 175, 191, 194], "qd_type": [29, 30, 35, 51], "qd_list": [29, 30, 35], "ie": [29, 35, 171, 173, 181, 185, 192, 193, 195, 197], "iepar": [29, 30, 35], "qpar": [29, 30, 35], "min3": [29, 30, 35], "min_gt": [29, 30, 35], "setup_list": [29, 30, 35], "fisher": [29, 30, 35, 107, 108], "param_list": [29, 30, 35], "decid": [29, 30, 35, 74, 78, 100, 197], "mu": [29, 30, 35, 112, 126, 146], "exit": [29, 30, 35], "parallelsdc_iterations_precond": [29, 35], "plot_iter": [29, 30, 35], "qd_type_list": [29, 30, 35], "isinst": [29, 30, 35], "precondition": [29, 30, 73, 144, 145, 149, 181, 195], "five": [29, 35], "qd": [29, 30, 35], "semilogx": [29, 30, 35], "linestyl": [29, 30, 35], "lambda_0": [29, 30, 35, 107, 108], "60": [29, 30, 35, 172, 185, 186, 193, 197], "parallelsdc_preconditioner_": [29, 35], "preconditioner_playground_mpi": [30, 35], "generic_implicit_mpi": [30, 35, 142], "basetransfer_mpi": [30, 35], "base_transfer_mpi": [30, 35], "comm": [30, 35, 42, 53, 58, 63, 68, 69, 71, 79, 83, 85, 86, 87, 97, 98, 108, 110, 111, 114, 120, 149, 184, 186, 187, 196, 197], "get_siz": [30, 35, 184, 187, 196, 197], "base_transfer_class": [30, 35, 50, 194], "get_rank": [30, 35, 184, 186, 187, 196, 197], "parallelsdc_iterations_precond_mpi": [30, 35], "parallelsdc_preconditioner_mpi_": [30, 35], "comm_world": [30, 35, 97, 108, 110, 111, 114, 120, 184, 186, 187, 196, 197], "solar": [32, 106, 121], "explor": [33, 192, 198], "sisdc": 33, "rk": [33, 144, 145], "dirk": [33, 124, 128, 131, 132, 137], "v2": 33, "therefor": [33, 106, 121, 192, 193, 195], "omit": [33, 194], "fwsw": 33, "suffici": [33, 67, 124], "reach": [33, 67, 80, 126, 170, 192, 198], "stabil": [33, 95, 96, 101, 198], "configur": [33, 56, 198], "dispers": 33, "versu": 33, "multiscal": 33, "gmre": [33, 91, 101, 120, 139, 190, 193, 198], "achiev": [33, 74, 193, 194, 196, 197], "twogrid": 34, "propagaton": 34, "composit": [34, 42, 79], "compactli": 34, "smooth": [34, 122, 173, 178, 193, 194], "coars": [34, 36, 38, 49, 50, 59, 63, 64, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 178, 185, 194, 197, 198], "allinclusive_matrix_nonmpi": 34, "concept": 34, "exploit": 34, "resembl": 34, "notat": [34, 119, 150, 196], "produc": [34, 35, 39, 47, 109, 110, 111, 188, 189, 194, 198], "anoth": [34, 93, 196, 198], "excit": 34, "goal": [35, 36], "robust": 35, "across": [35, 42, 60, 63, 64, 71, 72, 74, 149], "easiest": [35, 197], "far": [35, 67, 89, 90, 95, 96, 97, 98, 101, 104, 109, 111, 113, 120, 127, 191, 194, 195, 196, 198], "triangular": [35, 144, 145, 148], "jacobi": [35, 67, 73, 108, 198], "minimz": 35, "minim": [35, 124], "map": 35, "aforement": 35, "indi": 35, "commerci": 35, "aggreg": 35, "art": 35, "academ": 35, "subscript": 35, "plan": [35, 159], "lamdt": 35, "imaginari": 35, "surprisingli": 35, "symmetri": 35, "kroneck": [35, 191], "naiv": 35, "decoupl": [35, 191], "incl": 35, "nonetheless": 35, "jube": 36, "vampir": 36, "cube": 36, "cd": 36, "jsc": 36, "run_simple_forcing_benchmark": 36, "trace": 36, "manual": [36, 42], "instrument": 36, "region": 36, "primarili": 36, "xml": 36, "jube_run_pysdc_ac_spac": 36, "jube_run_pysdc_ac_spacetim": 36, "run_pysdc_ac": 36, "tmpl": 36, "stand": 36, "alon": 36, "run_pysdc_ac_scorep": 36, "howto": 36, "basetransf": [37, 197], "base_transf": [37, 38, 50, 156, 158, 159, 160, 161, 162, 194], "collbas": [37, 39, 51, 167, 168, 171, 173, 191, 192, 193], "registerparam": [37, 40, 48], "convergencecontrol": [37, 41, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "collocationerror": [37, 43], "communicationerror": [37, 43], "controllererror": [37, 43], "convergenceerror": [37, 43, 71], "dataerror": [37, 43], "readonlyerror": [37, 43], "transfererror": [37, 43], "unlockerror": [37, 43], "entri": [37, 44, 58, 74, 125, 144, 146, 150, 166, 168, 191, 193, 194], "nodeserror": [37, 47], "nodesgener": [37, 47], "workcount": [37, 48, 92, 100, 103, 126], "spacetransf": [37, 164], "space_transf": [37, 49, 50, 157, 158, 159, 160, 161, 162, 163, 164], "fine_level": [38, 50, 156], "coarse_level": [38, 50, 156], "base_transfer_param": [38, 50, 156, 178, 185, 194, 197], "logger": [38, 42, 44, 48, 49, 50, 51, 101, 156, 187, 197], "log": [38, 42, 48, 49, 50, 51, 63, 64, 103, 132, 136, 156, 166, 168, 191, 192, 193, 198], "__par": [38, 46, 49, 50, 51, 156], "static": [38, 39, 53, 69, 122, 125], "get_transfer_matrix_q": 38, "f_node": 38, "c_node": 38, "quickli": [38, 185, 192, 197], "matric": [38, 146, 150, 167, 191], "lagrangian": 38, "nf": [38, 158, 160, 162], "nc": [38, 158, 160, 162], "prolong": [38, 49, 50, 63, 64, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 194], "prolong_f": [38, 156], "reevalu": [38, 66, 156], "fa": [38, 46, 156], "tright": [39, 167, 168, 191], "kwarg": [39, 42, 44, 48, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 115, 120, 141], "polynomi": [39, 45, 47, 74, 75, 141], "chebyshev": 39, "cann": 39, "equival": [39, 42], "equidistantinn": 39, "equidistantnoleft": 39, "collgausslegendr": 39, "collgausslobatto": 39, "collgaussradau_left": 39, "collgaussradau_right": 39, "qmat": [39, 167, 168, 191], "smat": 39, "delta_m": 39, "distanc": [39, 92, 93, 107, 114, 124], "right_is_nod": 39, "left_is_nod": 39, "util": [40, 42, 48, 58, 68], "_parnam": 40, "_parnamesreadonli": 40, "usempi": [41, 68, 73, 79], "abstract": [41, 42, 48, 49, 51, 67], "add_convergence_control": 41, "convergence_control": [41, 42, 190, 198], "allow_doubl": 41, "afterward": [41, 66], "add_hook": 41, "dump_setup": [41, 171, 173, 187, 192, 193, 197], "get_convergence_controllers_as_t": 41, "debug": [41, 42, 196], "track": 41, "getter": [41, 44, 46, 50, 83, 85], "return_stat": [41, 44], "setup_convergence_control": 41, "checkconverg": [41, 65, 69, 171, 173, 192, 193], "care": [41, 68, 74, 91, 144, 196], "criterion": [41, 67], "welcome_messag": [41, 171, 173, 192, 193], "plug": 42, "recv": [42, 63, 64, 86], "buffer": [42, 70, 73, 83, 85, 86], "intracomm": [42, 58, 68, 71, 79], "send": [42, 46, 53, 63, 64, 83, 85, 86, 87], "dest": [42, 83, 85, 86, 87], "rank": [42, 51, 66, 68, 71, 74, 75, 79, 83, 85, 86, 87, 109, 113, 127, 149, 184, 186, 187, 196, 197], "add_vari": 42, "allow_overwrit": 42, "frozen": 42, "destin": 42, "recurs": 42, "By": [42, 75, 79, 192, 196], "overwrit": [42, 66, 108, 110], "outsid": [42, 80], "hard": 42, "forgo": 42, "reset": [42, 44, 46, 54, 63, 64, 66, 67, 68, 70, 73, 170, 192, 193], "check_iteration_statu": [42, 69, 70], "check_paramet": [42, 66, 67, 70, 74, 75, 76], "assumpt": [42, 67, 70, 74, 76], "went": [42, 67, 70, 74, 76, 181, 195], "it_check": [42, 63, 64], "post_iteration_process": [42, 66, 67, 72, 73, 74, 75, 76, 77, 78, 81], "shortcut": [42, 59, 169, 170, 172, 192, 193], "determine_restart": [42, 67, 68, 76], "get_new_step_s": [42, 67, 80], "arbitrari": [42, 67, 84, 100], "criteria": [42, 69], "control_ord": [42, 67, 68], "integ": [42, 45, 100], "print_convergence_control": 42, "info": [42, 171, 173, 192, 193], "post_spread_process": [42, 66, 78, 81], "post_step_process": 42, "pre_iteration_process": [42, 72], "prepare_mpi_datatyp": 42, "prepare_mpi_logical_oper": 42, "logic": [42, 192], "prepare_next_block": [42, 68, 71, 74, 79], "reset_buffers_nonmpi": [42, 68, 70, 73], "imit": [42, 73], "replic": 42, "somebodi": 42, "sent": [42, 198], "reset_status_vari": [42, 66, 67, 68, 72, 73, 74, 75], "restart_block": [42, 63, 64, 67, 73], "reset_vari": 42, "suppli": [42, 44, 54, 58, 66, 70, 80, 100, 149], "overrid": [42, 55, 66, 67, 69, 78, 124], "scan": 42, "being": [42, 124, 127, 174, 193], "prioriti": 42, "noth": [42, 64, 143, 149], "children": 42, "overload": 42, "child": [42, 68, 73, 74, 79, 127], "setup_status_vari": [42, 66, 67, 68, 70, 72, 73, 74, 78], "frozenclass": [42, 46, 50, 52, 56], "status_variab": 42, "thrown": 43, "unlock": 43, "process_sweep": 44, "num_restart": 44, "alia": [44, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 140, 141, 144], "post_step": 44, "level_numb": 44, "filer_recomput": 44, "__num_restart": 44, "__stat": 44, "identifi": [44, 63], "add_to_stat": [44, 63, 64], "metadata": [44, 58], "keyword": [44, 48, 58], "accord": [44, 144, 170, 192], "increment_stat": 44, "increment": [44, 48, 170, 192], "meta_data": 44, "post_comm": 44, "post_iter": 44, "post_predict": 44, "post_run": [44, 171, 173, 192, 193], "post_setup": 44, "post_sweep": [44, 171, 173, 192, 193], "pre_comm": 44, "pre_iter": 44, "pre_predict": 44, "pre_run": 44, "pre_setup": 44, "pre_step": 44, "pre_sweep": 44, "reset_stat": 44, "getintegrationmatrix": 45, "numquad": 45, "legendre_numpi": 45, "tau_": 45, "pair": [45, 144, 166, 168, 191], "legendre_scipi": 45, "fejer": 45, "internali": 45, "dft": 45, "waldvogel": 45, "2006": 45, "quadpi": 45, "nschloe": 45, "nico_schl\u00f6m": 45, "level_index": [46, 170, 192], "__statu": [46, 50], "dof": [46, 168, 175, 176, 190, 191, 194, 198], "uold": [46, 81], "fold": 46, "alloc": 46, "meta": [46, 191, 193], "referenc": [46, 50], "reset_level": 46, "reset_statu": 46, "tag": [46, 63, 83, 85, 86, 87], "Its": [47, 118], "book": [47, 145], "gautschi": 47, "evalorthogpoli": 47, "beta": [47, 67, 105, 119, 143], "orthogon": 47, "recurr": 47, "pi": [47, 90, 91, 95, 96, 102, 113, 114, 115, 123, 165, 166, 175, 191, 194], "oder": 47, "getnod": 47, "locat": 47, "getorthogpolycoeffici": 47, "num_coeff": 47, "gettridiagcoeffici": 47, "tridiagon": 47, "decrement": 48, "essenti": 48, "apply_mass_matrix": [48, 113, 127], "generate_scipy_reference_solut": 48, "eval_rh": 48, "u_init": [48, 93, 95, 103, 112, 119, 122, 123, 124, 125, 126, 141, 173, 174, 178, 193, 194], "t_init": [48, 93, 95, 103, 119, 123, 124, 125, 126, 141], "solve_ivp": 48, "dimension": [48, 59, 89, 90, 92, 93, 95, 96, 97, 98, 101, 107, 108, 109, 110, 111, 113, 114, 115, 120], "reshap": 48, "bdf": 48, "jac": 48, "signatur": 48, "classmethod": [48, 68, 73, 79, 125, 139, 144], "get_default_sweeper_class": [48, 139], "fine_prob": [49, 157, 158, 159, 160, 161, 162, 163, 164, 175, 194], "coarse_prob": [49, 157, 158, 159, 160, 161, 162, 163, 164, 175, 194], "bundl": [50, 195], "hidden": [50, 192], "setter": [50, 103], "connect_level": 50, "coupl": [50, 191, 197], "init_step": 50, "prev": 50, "reset_step": 50, "corresp": 50, "wrapper": [50, 56, 63, 197], "stepper": 50, "coll": [51, 167, 168, 176, 191, 194], "compute_end_point": [51, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 192], "compute_residu": [51, 143, 149, 152, 170, 192], "belong": [51, 57, 73, 143, 149, 152, 194], "get_qdelta_explicit": 51, "get_qdelta_implicit": 51, "predict": [51, 63, 64, 78, 143, 144, 149, 170, 192, 194], "update_nod": [51, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 170, 192], "nccl_commun": 52, "ncclcomm": [52, 53], "figsiz": [52, 54, 166, 168, 191], "figsize_by_journ": [52, 54], "problem_help": 52, "get_1d_grid": [52, 55], "get_finite_difference_matrix": [52, 55], "get_finite_difference_stencil": [52, 55], "get_step": [52, 55], "pysdc_help": 52, "setup_help": 52, "generate_descript": [52, 57], "get_list_of_typ": [52, 58, 172, 193], "sort_stat": [52, 58, 172, 193], "transfer_help": 52, "border_pad": [52, 59], "continue_periodic_arrai": [52, 59], "interpolation_matrix_1d": [52, 59], "next_neighbor": [52, 59], "next_neighbors_period": [52, 59], "restriction_matrix_1d": [52, 59], "visualization_tool": [52, 188, 189, 198], "show_residual_across_simul": [52, 60, 188, 189, 198], "wrap": 53, "nccl": 53, "allreduc": 53, "sendbuf": 53, "recvbuf": 53, "op": 53, "get_count": 53, "doesn": [53, 72, 74], "get_dtyp": 53, "get_op": 53, "mpi_op": 53, "ratio": [54, 72, 122, 124], "textwdith": 54, "width": [54, 55, 95, 96, 97, 98, 102, 108, 110], "rel": [54, 67, 68, 106, 167, 168, 178, 191, 194], "journal": [54, 111, 120, 122], "text": [54, 66, 101], "rescal": 54, "fit": [54, 144, 145], "6180339887": 54, "filenam": [54, 60, 182, 196], "save_pdf": 54, "save_pgf": 54, "save_png": 54, "font_siz": 54, "left_boundari": 55, "right_boundari": 55, "finit": [55, 74, 91, 92, 93, 107, 109, 113, 114, 115, 124, 127, 139, 191, 197], "dim": [55, 138, 158, 160, 162], "bc_param": 55, "fd": [55, 91, 92, 93, 107, 114, 115, 124, 139, 165, 166, 190, 191, 198], "stencil": [55, 91, 108, 115, 124, 139, 191], "spars": [55, 89, 91, 101, 107, 115, 124, 125, 139, 167, 168, 191], "taylor": [55, 74], "expans": [55, 74], "offset": [55, 83, 85, 86], "element": [55, 109, 113, 124, 127, 191, 197], "freez": 56, "__isfrozen": 56, "wish": 56, "recomput": [58, 74], "raw": 58, "anyth": [58, 67], "transform": [58, 90, 95, 96, 97, 98, 101, 111, 120, 159, 194], "pad_typ": 59, "mirror": 59, "pad": 59, "emb": 59, "npdarrai": 59, "arr": 59, "nn": [59, 139], "neighbor": 59, "fine_grid": 59, "coarse_grid": 59, "equidist_nest": 59, "contruct": 59, "nest": 59, "spr": 59, "csc_matrix": [59, 89, 101, 125], "submodul": 61, "convergence_controller_class": [61, 190, 198], "mg": [63, 64], "check_iteration_estim": [63, 65, 190, 198], "catch": [63, 64], "termin": [63, 64, 69, 92, 93, 99, 101, 107, 108, 110, 114, 118, 119, 124, 126, 140], "it_coars": [63, 64], "it_down": [63, 64], "coarsest": [63, 64, 187, 197], "it_fin": [63, 64, 171, 173, 192, 193], "it_up": [63, 64], "talk": [63, 64], "realli": [63, 141, 171, 173, 192, 193, 197], "me": [63, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 140, 141], "recv_ful": [63, 64], "bookkeep": [63, 64], "record": [63, 64, 66, 73], "mssdc": [63, 64, 73, 189, 198], "send_ful": [63, 64], "wait_with_interrupt": 63, "interrupt": [63, 198], "local_ms_run": 64, "local_ms_act": 64, "active_slot": 64, "adaptive_colloc": 65, "adaptivecolloc": [65, 66, 73], "adaptivitybas": [65, 67], "adaptivitycolloc": [65, 67], "adaptivityextrapolationwithinq": [65, 67], "adaptivityforconvergedcollocationproblem": [65, 67], "adaptivitypolynomialerror": [65, 67], "adaptivityrk": [65, 67], "adaptivityresidu": [65, 67], "basic_restart": 65, "basicrestart": [65, 68], "basicrestartingmpi": [65, 68], "basicrestartingnonmpi": [65, 68, 171, 173, 192, 193], "check_converg": 65, "checkiterationestimatornonmpi": [65, 70, 190, 198], "crash": 65, "crashbas": [65, 71], "stopatmaxruntim": [65, 71], "stopatnan": [65, 71], "estimate_contraction_factor": 65, "estimatecontractionfactor": [65, 72], "estimate_embedded_error": 65, "estimateembeddederror": [65, 73], "estimateembeddederrorcolloc": [65, 67, 73], "estimateembeddederrorlinearizedmpi": [65, 73], "estimateembeddederrorlinearizednonmpi": [65, 73], "estimate_extrapolation_error": 65, "estimateextrapolationerrorbas": [65, 74], "estimateextrapolationerrornonmpi": [65, 74], "estimateextrapolationerrorwithinq": [65, 74], "estimate_polynomial_error": 65, "estimatepolynomialerror": [65, 75], "hotrod": 65, "newtoninexact": [65, 77], "interpolate_between_restart": 65, "interpolatebetweenrestart": [65, 78], "spread_step_s": 65, "spreadstepsizesblockwis": [65, 79], "spreadstepsizesblockwisempi": [65, 79], "spreadstepsizesblockwisenonmpi": [65, 79, 171, 173, 192, 193], "step_size_limit": 65, "stepsizelimit": [65, 80], "stepsizeslopelimit": [65, 80], "store_uold": 65, "storeuold": [65, 81], "underli": [66, 73], "ensur": [66, 196, 198], "soon": [66, 78], "length": [66, 100, 194], "feel": 66, "exactli": [66, 67, 195], "speedup": [66, 194], "ware": 66, "matmul": [66, 75], "entir": [66, 75, 124], "axb": [66, 75], "switch_sweep": 66, "yield": [67, 195, 196], "contract": [67, 72], "boost": 67, "boolean": [67, 79, 113], "avoid_restart": 67, "unclear": 67, "get_local_error_estim": 67, "safeti": [67, 198], "compute_optimal_step_s": 67, "e_tol": 67, "e_est": 67, "preset": 67, "subtract": [67, 73, 144, 145], "get_converg": 67, "trigger_restart_upon_nonconverg": 67, "basic": [67, 68, 191, 192, 194, 195, 196, 198], "correl": 67, "emploi": 67, "simpler": [67, 194], "hit": 67, "threshold": [67, 71, 124, 125, 198], "exce": [67, 71, 76, 124], "upper": [67, 80], "fall": [67, 71], "e_tol_low": 67, "absolut": 67, "halv": [67, 185, 194, 197], "use_restol": 67, "max_restart": [67, 68], "reutrn": 67, "tell": 68, "anywai": [68, 185, 197], "95": [68, 171, 173, 175, 186, 192, 193, 194, 197], "lost": 68, "patienc": 68, "get_implement": [68, 73, 79], "retriev": [68, 73, 166, 168, 173, 191, 193], "cl": [68, 73, 79], "step_size_spread": 68, "communicate_converg": 69, "immit": 70, "storag": [70, 74, 100], "communicate_crash": 71, "exceed": 71, "max_runtim": 71, "nan": [71, 92, 107, 118, 126, 140], "thresh": 71, "overwritten": [72, 149, 197], "reiniti": 72, "pretend": [73, 74], "accur": [73, 76, 144], "consecut": [73, 166, 168, 191, 198], "unless": [73, 147, 148, 149, 150, 152, 153], "estimate_embedded_error_seri": 73, "global": [73, 108], "haven": 73, "thought": 73, "error_embedded_estimate_colloc": 73, "adaptive_coll_param": 73, "averag": 73, "get_extrapolation_coeffici": 74, "t_eval": 74, "reflect": [74, 192], "elsewher": 74, "squar": [74, 125], "amount": 74, "overhead": 74, "enough": [74, 143, 170, 171, 192], "prefactor": 74, "accumul": 74, "plu": [74, 175, 178, 194], "lte": 74, "use_adapt": 74, "dens": 74, "cheap": 74, "coeff": [74, 139], "store_valu": 74, "moment": 74, "get_extrapolated_error": 74, "get_extrapolated_solut": 74, "shouldn": 74, "no_storag": 74, "share": [74, 144], "That": [74, 75, 80], "cancel": 74, "matter": 74, "arriv": [74, 192], "sai": [75, 102], "2m": 75, "incorpor": 76, "lightweight": 76, "silent": 76, "corrupt": 76, "guhur": 76, "et": [76, 108, 110, 114], "al": [76, 108, 110, 114], "springer": [76, 101, 102, 109, 113, 127, 145], "1007": [76, 101, 144, 145], "978": [76, 101, 145], "319": 76, "43659": 76, "3_47": 76, "throw": 76, "crucial": [76, 194], "gradual": 77, "refin": [77, 109, 113, 114, 125, 127, 185, 187, 197], "set_maxit": 77, "set_toler": 77, "lvl": 77, "tol": 77, "guess": [78, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141, 198], "choos": [78, 124, 144, 145, 195], "thibaut": 78, "magic": [78, 190, 198], "overrul": 79, "get_step_from_which_to_spread": 79, "new_step": 79, "predecessor": 79, "dt_min": 80, "dt_max": 80, "slope": 80, "u_old": 81, "cupy_mesh": [82, 96], "comp2_cupy_mesh": [82, 83], "imex_cupy_mesh": [82, 83, 96], "fenics_mesh": [82, 109, 113, 127], "rhs_fenics_mesh": [82, 84, 113, 127], "comp2_mesh": [82, 85, 92, 93, 111], "imex_mesh": [82, 85, 89, 90, 92, 93, 95, 97, 98, 100, 101, 102, 104, 111, 115, 120, 123, 124, 141, 171, 192], "petsc_vec": [82, 108, 110, 114], "petsc_vec_comp2": [82, 87, 108, 110], "petsc_vec_imex": [82, 87, 108, 110, 114], "val": [83, 84, 85, 86, 87, 139], "comp1": [83, 85], "comp2": [83, 85], "stride": [83, 85, 86], "bcast": [83, 85, 87], "broadcast": [83, 85, 87], "irecv": [83, 85, 87], "isend": [83, 85, 86, 87], "forward": [83, 85, 86, 87, 143, 144, 145, 159, 198], "impl": [83, 84, 85, 87, 150, 151], "expl": [83, 84, 85, 87, 124, 150, 151], "_comm": 85, "magnet": [86, 122, 124], "elec": 86, "magn": 86, "veloc": [86, 89, 101, 105, 106, 112, 117, 121, 122, 127, 145, 146, 154], "vel": [86, 122], "acoustic_help": 88, "boussinesq_help": 88, "acousticadvection_1d_fd_imex": 88, "acoustic_1d_imex": [88, 89], "advectiondiffusionequation_1d_fft": 88, "advectiondiffusion1d_imex": [88, 90], "advectiondiffusion1d_implicit": [88, 90], "allencahn_1d_fd": 88, "allencahn_front_finel": [88, 92], "allencahn_front_fullyimplicit": [88, 92], "allencahn_front_semiimplicit": [88, 92], "allencahn_periodic_fullyimplicit": [88, 92], "allencahn_periodic_multiimplicit": [88, 92], "allencahn_periodic_semiimplicit": [88, 92], "allencahn_2d_fd": 88, "allencahn_fullyimplicit": [88, 93], "allencahn_multiimplicit": [88, 93], "allencahn_multiimplicit_v2": [88, 93], "allencahn_semiimplicit": [88, 93], "allencahn_semiimplicit_v2": [88, 93], "allencahn_2d_fd_gpu": 88, "allencahn_2d_fft": 88, "allencahn2d_imex": [88, 95, 96], "allencahn2d_imex_stab": [88, 95, 96], "allencahn_2d_fft_gpu": 88, "allencahn_imex": [88, 97], "allencahn_imex_timeforc": [88, 97], "allencahn_temp_imex": [88, 98], "auzinger_implicit": [88, 190, 198], "auzing": [88, 99, 190, 198], "battery_implicit": [88, 100], "battery_n_capacitor": [88, 100], "boussinesq_2d_fd_imex": 88, "boussinesq_2d_imex": [88, 101], "buckconvert": 88, "buck_convert": [88, 102], "discontinuoustestod": 88, "fastwaveslowwave_0d": 88, "swfw_scalar": [88, 104], "fisher_ful": [88, 108], "fisher_react": [88, 108], "grayscott_1d_fenics_implicit": 88, "fenics_grayscott": [88, 109], "gs_full": [88, 110], "gs_reaction": [88, 110], "grayscott_mpifft": 88, "grayscott_imex_diffus": [88, 111], "grayscott_imex_linear": [88, 111], "grayscott_mi_diffus": [88, 111], "grayscott_mi_linear": [88, 111], "heatequation_1d_fenics_matrix_forc": [88, 185, 197], "fenics_heat": [88, 113, 185, 197], "fenics_heat_mass": [88, 113, 185, 197], "fenics_heat_mass_timebc": [88, 113, 185, 197], "heatequation_2d_petsc_forc": [88, 187, 197], "heat2d_petsc_forc": [88, 114, 187, 197], "heatnd_forc": [88, 115, 170, 171, 172, 179, 180, 190, 192, 193, 195, 198], "heatequation_nd_fd_cupi": 88, "logisticequ": 88, "logistics_equ": [88, 118], "lorenzattractor": [88, 119], "nonlinearschroedinger_mpifft": [88, 186, 197], "nonlinearschroedinger_fully_implicit": [88, 120], "nonlinearschroedinger_imex": [88, 120, 186, 197], "penningtrap_3d": [88, 173, 174, 178, 193, 194], "penningtrap": [88, 122, 173, 174, 178, 193, 194], "quenchimex": [88, 124], "vorticityvelocity_2d_fenics_period": 88, "fenics_vortex_2d": [88, 127], "fenics_vortex_2d_mass": [88, 127], "generic_nd_fd": 88, "genericndimfindiff": [88, 91, 115, 139], "nonlinear_ode_1": 88, "polynomial_test_problem": 88, "polynomial_testequ": [88, 141], "polynomial_testequation_imex": [88, 141], "cadv": 89, "order_adv": 89, "waveno": 89, "acoust": [89, 101], "partial": [89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 107, 108, 109, 110, 111, 114, 115, 120, 127, 139], "c_": [89, 101, 134], "equiv": 89, "p_0": 89, "sound": 89, "ruprecht": [89, 104, 122, 150], "siam": [89, 104], "sci": [89, 104, 109, 110, 111, 124], "vol": [89, 104, 122], "38": [89, 104, 107, 108, 109, 110, 111, 182, 183, 184, 188, 189, 196, 198], "solve_system": [89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141], "cdot": [89, 92, 93, 100, 101, 102, 103, 104, 108, 109, 110, 113, 114, 120, 122, 123, 124, 125, 127, 139], "abbrev": [89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141], "stepsiz": [89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 139, 140, 141], "256": [90, 109, 110], "unforc": [90, 91, 115, 194], "treat": [90, 92, 93, 95, 96, 97, 98, 108, 110, 111, 113, 124, 127, 197], "wherea": [90, 109, 110, 111], "sin": [90, 91, 95, 96, 99, 113, 114, 115, 165, 166, 175, 191, 194], "omega": [90, 109, 110, 111, 113, 127], "exp": [90, 103, 104, 107, 108], "fourier": [90, 95, 96, 97, 98, 111, 120], "ddx": 90, "gradient": [90, 93], "lap": [90, 95, 96], "laplacian": [90, 92, 93, 95, 96, 120, 165, 166, 191], "512": [91, 115, 139], "lintol": [91, 115, 120, 124, 139, 171, 192], "linit": [91, 115, 120, 124, 139, 171, 190, 192, 198], "solver_typ": [91, 115, 139, 171, 190, 192, 198], "sigma": [91, 115, 119, 171, 192], "nd": [91, 115, 124, 139, 158, 162], "bf": [91, 93, 95, 96, 97, 98, 106, 115, 121], "x_i": [91, 93, 95, 96, 97, 98, 115], "coordin": [91, 97, 98, 111, 120], "central": [91, 114, 192], "cg": [91, 109, 113, 115, 127, 139, 185, 190, 197, 198], "gaussian": [91, 115, 124], "grad": [91, 124], "csc": [91, 107, 115, 124, 125, 139], "won": 91, "sol": [91, 115, 139], "ep": [92, 93, 95, 96, 97, 98], "stop_at_nan": [92, 103, 107, 118, 119, 126, 140], "inhomogen": 92, "varepsilon": [92, 93, 95, 96, 97, 98], "2u": [92, 97, 98], "d_w": [92, 97, 98], "tanh": [92, 93, 95, 96, 97, 98], "vt": 92, "sqrt": [92, 93, 95, 96, 97, 98, 107, 108, 140], "finel": 92, "laplac": [92, 93, 97, 98, 107, 111, 114, 120], "diag": [92, 125], "uext": 92, "work_count": [92, 100, 103, 119, 122, 126], "counter": [92, 170, 192], "implicitli": [92, 93, 95, 96, 97, 98, 108, 110, 111, 120, 124], "solve_system_1": [92, 93, 108, 110, 111], "solve_system_2": [92, 93, 108, 110, 111], "200": [93, 140, 171, 173, 192, 193], "lin_tol": 93, "lin_maxit": 93, "inexact_linear_ratio": [93, 124], "y_j": [93, 95, 96, 97, 98], "spdiag": 93, "newton_itercount": [93, 140], "lin_itercount": 93, "newton_ncal": [93, 140], "lin_ncal": 93, "conjug": 93, "ac": 93, "init_typ": [95, 96, 97, 98], "checker": [95, 96], "uniform": [95, 96], "tranform": [95, 96, 97, 98], "especi": 96, "cp": 96, "initialis": [97, 98], "ogrid": [97, 98], "k2": [97, 98, 120], "dy": [97, 98, 110, 114], "readthedoc": [97, 98, 111], "io": [97, 98, 111], "en": [97, 98, 106, 111, 112], "tm": 98, "y_1": [99, 119], "y_2": [99, 119], "2_1": [99, 115], "2_2": 99, "co": [99, 113, 114, 115, 119], "2140": 99, "camco": 99, "2015": [99, 109, 113, 122, 127], "ncapacitor": 100, "v_ref": 100, "drain": 100, "h": [100, 101, 103, 117, 133, 134], "v_1": 100, "v_": [100, 102, 123], "ref": 100, "i_l": 100, "cr": 100, "r_": [100, 102, 123], "resist": [100, 102, 123], "resistor": [100, 102, 123], "capacit": [100, 102, 123], "ell": [100, 102, 123], "induct": [100, 102, 123], "inductor": [100, 102, 123], "c_n": 100, "nonhomogen": [100, 102, 123], "a_k": [100, 102], "f_k": [100, 102], "n_": [100, 122], "switch_a": 100, "switch_f": 100, "t_switch": [100, 103], "nswitch": [100, 103], "count_switch": [100, 103], "insid": [100, 124], "pintsim": 100, "switch_estim": 100, "v_k": 100, "c_k": 100, "c_1": [100, 102, 123], "v_2": 100, "v_3": 100, "c_2": [100, 102, 123], "c_3": 100, "max_": 100, "satisfi": [100, 114, 185, 197], "geq": [100, 103], "get_problem_dict": 100, "coeffic": 100, "get_switching_info": [100, 103], "switch_detect": [100, 103], "m_guess": [100, 103], "state_funct": [100, 103], "u_adv": [101, 134], "nfreq": [101, 134], "x_bound": 101, "z_bound": 101, "order_upw": 101, "gmres_maxit": 101, "500": [101, 185, 197], "gmres_restart": 101, "gmres_tol_limit": 101, "boussinesq": 101, "z": [101, 107, 108, 122], "300": 101, "order_upwind": 101, "upwind": 101, "bc_hor": [101, 133, 134], "bc_ver": [101, 133, 134], "dimems": 101, "neumann": [101, 124, 139], "xx": 101, "zz": 101, "sp": [101, 167, 168, 191], "d_upwind": 101, "gmres_logg": 101, "durran": 101, "fluid": [101, 119], "appl": 101, "32": [101, 171, 173, 186, 190, 192, 193, 197, 198], "verlag": 101, "york": 101, "2010": 101, "4419": 101, "6412": 101, "fsw": 102, "c1": [102, 123], "001": 102, "rp": 102, "l1": 102, "c2": [102, 123], "buck": 102, "sw": 102, "f_": [102, 124], "roughli": 102, "percentag": 102, "bmod": 102, "i_": [102, 123], "l_1": 102, "puls": 102, "61": 102, "2012": [102, 109, 113, 127], "gyselinck": 102, "marti": 102, "sabariego": 102, "devic": 102, "steadi": [102, 119], "regim": 102, "electromot": 102, "2013": 102, "approx": 103, "6094379": 103, "t_switch_exact": 103, "theorem": 103, "lambda_": 104, "lambda_f": 104, "gg": 104, "im": 104, "nversion": 104, "vibrat": 105, "spring": [105, 112, 146], "weak": [105, 109, 113, 127, 185, 197], "fpu": 105, "cubic": 105, "u_j": 105, "2_": 105, "v_j": 105, "1955": 105, "lo": 105, "alamo": 105, "la": [105, 196], "1940": 105, "enrico": 105, "segr\u00e9": 105, "ed": 105, "chicago": 105, "press": 105, "1965": 105, "eval_hamiltonian": [105, 112, 117, 121], "eval_mode_energi": 105, "trajectori": [105, 106, 112, 117, 121, 122], "mutual": [106, 121], "influenc": [106, 121], "motion": [106, 119, 121, 122], "law": [106, 121], "m_i": [106, 121], "_i": [106, 121], "m_j": [106, 121], "_j": [106, 121], "gravitation": [106, 121], "m_1": [106, 121], "_1": [106, 121], "aanda": 106, "aa": 106, "2002": 106, "aa1405": 106, "wikipedia": [106, 145], "planetary_mass": 106, "values_from_the_de405_ephemeri": 106, "reaction": [107, 108, 109, 110, 111], "travel": [107, 108], "kolmogorov": [107, 108], "petrovskii": [107, 108], "piskunov": [107, 108], "mathbb": [107, 108, 122, 139], "lambda_1": [107, 108, 125], "feng": [107, 108], "chao": [107, 108], "soliton": [107, 108], "fractal": [107, 108], "481": [107, 108], "488": [107, 108], "2008": [107, 108], "urrent": 107, "da": [108, 110], "sne": [108, 110], "tempor": [108, 110, 120, 191], "q_": [108, 110, 122], "localx": [108, 110], "xe": 108, "mx": 108, "col": 108, "formfunct": [108, 110], "formjacobian": [108, 110], "same_nonzero_pattern": [108, 110], "sigma_1": 108, "ksp": [108, 110, 114], "satish": [108, 110, 114], "balai": [108, 110, 114], "lisandro": [108, 110, 111, 114, 120], "dalcin": [108, 110, 111, 114, 120], "rodrigo": [108, 110, 114], "paz": [108, 110, 114], "pablo": [108, 110, 114], "kler": [108, 110, 114], "alejandro": [108, 110, 114], "cosimo": [108, 110, 114], "water": [108, 110, 114], "2011": [108, 110, 114], "get_sys_mat": 108, "assembl": [108, 122, 166, 168, 174, 191, 193], "c_nvar": [109, 113, 127, 185, 197], "famili": [109, 113, 127, 185, 197], "substanc": [109, 110, 111], "decai": [109, 110, 111], "feed": [109, 110, 111], "d_u": [109, 110, 111], "d_v": [109, 110, 111], "multipli": 109, "u_t": [109, 113], "v_t": 109, "trail": [109, 113, 127], "galerkin": [109, 113, 127], "synonym": [109, 113, 127], "trial": [109, 113, 127], "functionspac": [109, 113, 127], "w1": 109, "w2": 109, "f1": 109, "tensor": [109, 113, 127], "f2": 109, "autocatalyt": [109, 110, 111], "isotherm": [109, 110, 111], "stir": [109, 110, 111], "tank": [109, 110, 111], "reactor": [109, 110, 111], "isola": [109, 110, 111], "multist": [109, 110, 111], "chem": [109, 110, 111], "eng": [109, 110, 111], "1983": [109, 110, 111], "alna": [109, 113, 127], "blechta": [109, 113, 127], "hake": [109, 113, 127], "johansson": [109, 113, 127], "kehlet": [109, 113, 127], "logg": [109, 113, 127], "richardson": [109, 113, 127], "ring": [109, 113, 127], "rogn": [109, 113, 127], "archiv": [109, 113, 127], "mardal": [109, 113, 127], "dolfin": [109, 113, 127], "t_0": 109, "amat": 110, "pfft": [111, 120], "ku": 111, "kv": 111, "mikael": [111, 120], "mortensen": [111, 120], "david": [111, 120], "key": [111, 120], "multidimension": [111, 120], "chebfun": 111, "grayscott": 111, "kx": 112, "damp": 112, "amplitud": [112, 122], "beltoforion": 112, "de": [112, 145], "nabla": [113, 127], "dirichletbc": 113, "bc_hom": 113, "homogen": 113, "fix_bc_for_residu": 113, "fix_residu": 113, "cnvar": [114, 187, 197], "sol_tol": [114, 187, 197], "sol_maxit": 114, "2_n": 115, "x_1": 115, "x_n": 115, "k_i": 115, "h\u00e9non": 117, "logist": 118, "rho": [119, 127], "6666666666666665": 119, "99": [119, 120, 124, 175, 181, 186, 187, 188, 194, 195, 197, 198], "exhibit": 119, "chaotic": 119, "butterfli": 119, "convect": 119, "layer": 119, "bottom": 119, "surfac": 119, "kept": 119, "proport": 119, "third": [119, 143, 194], "distort": 119, "vertic": 119, "profil": 119, "1175": 119, "1520": 119, "0469": 119, "1963": 119, "020": 119, "0130": 119, "dnf": 119, "y_3": 119, "reynold": 119, "supercrit": 119, "provok": 119, "instabl": 119, "nfev": 119, "newton_krylov": 120, "krylov": 120, "283185307179586": 120, "parallelis": 120, "arxiv": 120, "nlin": 120, "0702010": 120, "000295912208286": 121, "omega_b": [122, 173, 174, 178, 193, 194], "omega_": [122, 173, 174, 178, 193, 194], "sig": [122, 173, 174, 178, 193, 194], "hat": 122, "e_": 122, "charg": 122, "x_": 122, "ext": 122, "epsilon": 122, "coulomb": 122, "die": 122, "glimmentladung": 122, "bei": 122, "niedrigem": 122, "druck": 122, "zwischen": 122, "koaxialen": 122, "zylindern": 122, "einem": 122, "axialen": 122, "magnetfeld": 122, "physica": 122, "1936": 122, "mathia": 122, "winkel": 122, "daniel": 122, "boris_solv": 122, "old_field": 122, "new_field": 122, "old_part": 122, "build_f": 122, "pepc": 122, "fast_interact": 122, "efield": 122, "get_interact": 122, "rpi": 123, "lpi": 123, "l_": 123, "cv": 124, "u_thresh": 124, "u_max": 124, "q_max": 124, "leak_rang": 124, "55": 124, "leak_typ": 124, "leak_transit": 124, "direct_solv": 124, "min_lintol": 124, "reference_sol_typ": 124, "cool": 124, "superconduct": 124, "leak": 124, "runawai": 124, "huge": 124, "destroi": 124, "cern": 124, "past": 124, "warrant": 124, "total": [124, 173, 178, 193, 194], "insul": 124, "volumetr": 124, "capac": 124, "thermal": 124, "power": 124, "densiti": 124, "exponenti": 124, "xv": 124, "thin": 124, "shell": 124, "schnaubelt": 124, "wozniak": 124, "sch\u00f6p": 124, "supercond": 124, "technol": 124, "36": 124, "044004": 124, "1088": 124, "1361": 124, "6668": 124, "acbeea": 124, "eval_f_non_linear": 124, "get_non_linear_jacobian": 124, "usegpu": 125, "lambda_n": 125, "sequenc": [125, 126], "array_lik": [125, 126], "setup_gpu": 125, "splu": 125, "permc_spec": 125, "diag_pivot_thresh": 125, "relax": 125, "panel_s": 125, "permut": [125, 185, 197], "sparsiti": 125, "preserv": 125, "colamd": 125, "mmd_ata": 125, "minimum": 125, "mmd_at_plus_a": 125, "pivot": 125, "superlu": 125, "expert": 125, "supernod": 125, "equil": 125, "iterrefin": 125, "equilibr": 125, "off": [125, 194], "inva": 125, "spilu": 125, "portal": 125, "nersc": 125, "gov": [125, 140, 144], "xp": 125, "home": 125, "runner": 125, "micromamba": 125, "lib": 125, "python3": 125, "site": 125, "xsp": 125, "crash_at_maxit": 126, "vortic": 127, "w_t": 127, "invers": [127, 185, 197], "mvec": 127, "imex_1st_order_mass": [127, 142, 185, 197], "__eval_": 127, "buildfdmatrix": [128, 132], "getbcleft": [128, 129, 132, 135], "getbcright": [128, 129, 132, 135], "gethorizontaldx": [128, 129], "getmatrix": [128, 129, 132, 135], "buildwave1dmatrix": 128, "getwave1dadvectionmatrix": [128, 130], "getwave1dmatrix": [128, 130], "getwavebcleft": [128, 130], "getwavebcright": [128, 130], "standard_integr": [128, 132], "bdf2": [128, 131, 132, 137], "rk_imex": [128, 131, 132, 137], "trapezoid": [128, 131, 132, 137, 143, 146, 154], "bc_left": [129, 130, 135], "bc_right": [129, 130, 135], "firsttimestep": [131, 137], "timestep": [131, 137], "um1": [131, 137], "f_solv": [131, 137], "m_fast": 131, "m_slow": 131, "f_fast": [131, 137], "f_fast_solv": [131, 137], "f_slow": [131, 137], "build2dfdmatrix": 132, "get2dmatrix": [132, 133], "get2dmesh": [132, 133], "get2dupwindmatrix": [132, 133], "getbchorizont": [132, 133], "getbcvert": [132, 133], "buildboussinesq2dmatrix": 132, "getboussinesq2dmatrix": [132, 134], "getboussinesq2dupwindmatrix": [132, 134], "getboussinesqbchorizont": [132, 134], "getboussinesqbcvert": [132, 134], "getupwindmatrix": [132, 135], "helper_class": 132, "callback": [132, 136], "splitexplicit": [132, 137], "unflatten": 132, "x_b": 133, "z_b": 133, "dz": [133, 137], "getcount": 136, "getresidu": 136, "pparam": 137, "numsmalltimestep": 137, "rk3lin": 137, "fslow": 137, "dtau": 137, "verletlin": 137, "f_fastmom": 137, "f_fastther": 137, "uin": 138, "nx": 138, "nz": 138, "sat": 139, "feb": 139, "39": 139, "bcparam": 139, "mol": 139, "shift": 139, "neumann_bc_ord": 139, "5e": [140, 173, 182, 185, 189, 193, 196, 197, 198], "osti": 140, "servlet": 140, "purl": 140, "6111421": 140, "seed": 141, "26266": 141, "dummi": [141, 164], "indent": 141, "half": [141, 146, 154, 175, 194], "adamsbashforthexplicit1step": [142, 143], "adamsmoultonimplicit1step": [142, 143], "adamsmoultonimplicit2step": [142, 143], "backwardeul": [142, 143, 144], "cach": [142, 143], "runge_kutta": 142, "ark54": [142, 144], "ark548l2sa": [142, 144], "ark548l2saerk": [142, 144], "ark548l2saerk2": [142, 144], "ark548l2saesdirk": [142, 144], "ark548l2saesdirk2": [142, 144], "butchertableau": [142, 144, 145], "butchertableauembed": [142, 144], "cash_karp": [142, 144], "cranknicholson": [142, 144], "dirk43": [142, 144], "esdirk53": [142, 144], "explicitmidpointmethod": [142, 144], "forwardeul": [142, 144], "heun_eul": [142, 144], "implicitmidpointmethod": [142, 144], "rk4": [142, 144], "rungekutta": [142, 144, 145], "rungekuttaimex": [142, 144], "runge_kutta_nystrom": 142, "rkn": [142, 145], "rungekuttanystrom": [142, 145], "velocity_verlet": [142, 145], "boris_2nd_ord": [142, 173, 174, 178, 193, 194], "sweepermpi": [142, 149, 151], "imex_1st_order_mpi": 142, "dress": 143, "08333333333333333": 143, "6666666666666666": 143, "4166666666666667": 143, "generate_starting_valu": 143, "almost": 143, "impress": 143, "belov": 143, "koelner": 143, "dom": 143, "num_step": 143, "oldest": 143, "bespok": 143, "provision": 143, "ark5": 144, "8l": 144, "sa": 144, "erk": 144, "esdirk": 144, "1016": 144, "s0168": 144, "9274": 144, "00138": 144, "butchertableauclass": 144, "butchertableauclass_explicit": 144, "get_update_ord": 144, "205": [144, 171, 192], "1025": 144, "04757042": 144, "07389944": 144, "08074895": 144, "29921812": 144, "46382067": 144, "04803878": 144, "14689238": 144, "11740333": 144, "22170197": 144, "00759375": 144, "1784573": 144, "01974675": 144, "22154535": 144, "03612492": 144, "54553377": 144, "09554859": 144, "3386928": 144, "14043176": 144, "07058771": 144, "76287525": 144, "matrix_explicit": 144, "41": [144, 186, 197], "17753521": 144, "08239438": 144, "12262308": 144, "07552741": 144, "29017765": 144, "24492577": 144, "61510341": 144, "40294452": 144, "35401238": 144, "4857009": 144, "031256": 144, "46413844": 144, "23046868": 144, "84460712": 144, "125": [144, 182, 187, 189, 190, 196, 197, 198], "674808": 144, "38943865": 144, "69220068": 144, "09466623": 144, "21115733": 144, "48853707": 144, "25992958": 144, "19815049": 144, "92": 144, "09957696": 144, "40716288": 144, "16014818": 144, "1442366": 144, "77956562": 144, "21723324": 144, "apnum": 144, "007": 144, "kennedi": 144, "carpent": 144, "newer": 144, "appar": 144, "22222222": 144, "26824595": 144, "05794559": 144, "0089384": 144, "04330529": 144, "03401389": 144, "25515937": 144, "13179599": 144, "03237673": 144, "12385474": 144, "14270778": 144, "30932282": 144, "68291993": 144, "05882276": 144, "04130861": 144, "89718343": 144, "17366254": 144, "25479166": 144, "24190177": 144, "30740486": 144, "19998305": 144, "44444444": 144, "11111111": 144, "64760301": 144, "09182987": 144, "03544857": 144, "012009": 144, "34252355": 144, "26767786": 144, "11056894": 144, "85638959": 144, "00977228": 144, "21070865": 144, "07592412": 144, "20765519": 144, "23548432": 144, "46686371": 144, "29035988": 144, "37840597": 144, "56345584": 144, "28832383": 144, "32884988": 144, "61439672": 144, "3174778": 144, "71215206": 144, "11498708": 144, "09139032": 144, "04049657": 144, "75871412": 144, "11526943": 144, "35675713": 144, "72": 144, "955": 144, "06272422": 144, "25523316": 144, "23902755": 144, "39907952": 144, "14315725": 144, "18709281": 144, "oppos": 144, "claim": 144, "stiffli": 144, "singli": 144, "gamma": 144, "2222222222222222": 144, "among": 144, "connoisseur": 144, "fifth": 144, "79505": 144, "79507": 144, "075": 144, "225": 144, "2037037": 144, "59259259": 144, "2962963": 144, "0294958": 144, "34179688": 144, "04159433": 144, "40034541": 144, "06176758": 144, "875": 144, "0978836": 144, "40257649": 144, "21043771": 144, "2891022": 144, "10217737": 144, "3839079": 144, "24459274": 144, "01932199": 144, "bf01934920": 144, "83333333": 144, "57692308": 144, "98148148": 144, "81481481": 144, "65958848": 144, "27699588": 144, "04925926": 144, "25641026": 144, "16666667": 144, "40666667": 144, "04619048": 144, "64285714": 144, "42666667": 144, "56333333": 144, "ntr": 144, "nasa": 144, "20160005923": 144, "27805384": 144, "31357496": 144, "43697244": 144, "09456105": 144, "13349473": 144, "05000194": 144, "22208425": 144, "09710432": 144, "03123381": 144, "06990092": 144, "89887281": 144, "61640883": 144, "12228335": 144, "5666084": 144, "69330188": 144, "55610768": 144, "02860124": 144, "44739556": 144, "70955276": 144, "11977427": 144, "38199341": 144, "99233927": 144, "24727121": 144, "Not": [144, 194], "fourth": 144, "everybodi": 144, "darl": 144, "33333333": 144, "success": [144, 145, 195], "realis": [144, 145], "q_delta": [144, 145], "butcher": [144, 145], "tableau": [144, 145], "wast": [144, 145], "flop": [144, 145], "tableaux": [144, 145], "substitut": [144, 145], "cheaper": [144, 145], "fundament": [144, 145], "collocation_class": [144, 145, 191], "get_butcher_tableau": 144, "get_q_matrix": 144, "get_full_f": [144, 145], "get_butcher_tableau_explicit": 144, "nystrom": 145, "link": 145, "540": 145, "78862": 145, "284": 145, "chapter": 145, "ii": 145, "attribu": 145, "butcher_tableau": 145, "funtion": 145, "algorithmu": 145, "sq": 146, "st": 146, "sx": 146, "get_scalar_problems_manysweep_mat": [146, 150], "friction": 146, "get_scalar_problems_picardsweep_mat": 146, "get_scalar_problems_sweeper_mat": [146, 150], "narrai": 146, "get_sweeper_mat": [146, 150], "qq": [146, 154], "qx": [146, 154], "qt": [146, 154], "qe": [147, 150, 171, 173, 192, 193], "do_full_upd": [147, 148, 149, 150, 152, 153], "administ": 149, "last_onli": [149, 151], "lambda_fast": 150, "lambda_slow": 150, "basetransfer_mass": 155, "base_transfer_mass": [155, 156], "transferfenicsmesh": [155, 185, 197], "mesh_to_mesh_fen": [155, 157, 185, 197], "transfermesh_fft": 155, "mesh_to_mesh_fft": [155, 159], "transfermesh_fft2d": 155, "mesh_to_mesh_fft2d": [155, 160], "transfermesh_mpifft": [155, 186, 197], "fft_to_fft": [155, 161, 186, 197], "transferpetscdmda": [155, 187, 197], "custon": [158, 160, 161, 162, 164], "rspace": [158, 160, 162], "pspace": [158, 160, 162], "irfft_object_fin": 159, "rfft_object_coars": 159, "pmesh": 161, "step_1": [165, 166, 167, 168, 169, 175, 191, 192, 194], "a_spatial_problem_setup": [165, 169, 191, 192], "1023": [165, 167, 169, 170, 171, 172, 177, 191, 192, 193, 194], "run_accuracy_check": [165, 166, 168, 169, 191, 192], "step_1_a_out": [165, 191], "sine": [165, 166, 191], "u_lap": [165, 166, 191], "981783e": [165, 169, 191, 192], "b_spatial_accuracy_check": [166, 175, 191, 194], "agg": [166, 168, 191], "pylab": [166, 168, 191], "nvars_list": [166, 168, 175, 191, 194], "get_accuracy_ord": [166, 168, 175, 191, 194], "step_1_b_out": [166, 191], "3f": [166, 168, 191], "plot_accuraci": [166, 168, 191], "step_1_accuracy_test_spac": [166, 191], "isclos": [166, 168, 190, 191, 198], "rtol": [166, 168, 191], "id_prev": [166, 168, 191], "prev_error": [166, 168, 191], "this_error": [166, 168, 191], "this_nvar": [166, 191], "old_nvar": [166, 191], "tmp": [166, 168, 191], "fontsiz": [166, 168, 191], "labels": [166, 168, 191], "titles": [166, 168, 191], "ytick": [166, 168, 191], "linewidth": [166, 168, 191], "rcparam": [166, 168, 191], "base_error": [166, 168, 191], "2nd": [166, 191], "order_guide_spac": [166, 168, 191], "min_err": [166, 168, 191], "1e99": [166, 168, 191], "max_err": [166, 168, 191], "0e00": [166, 168, 191], "err_list": [166, 168, 191], "markers": [166, 168, 191], "numpoint": [166, 168, 191], "bbox_inch": [166, 168, 191], "tight": [166, 168, 191], "888": [166, 191], "949": [166, 191], "976": [166, 191], "988": [166, 191], "994": [166, 191], "999": [166, 191], "982": [166, 191], "c_collocation_problem_setup": [167, 191], "solve_collocation_problem": [167, 191], "step_1_c_out": [167, 191], "kron": [167, 168, 191], "u0_col": [167, 168, 191], "u_col": [167, 168, 191], "spsolv": [167, 168, 191], "inf": [167, 168, 173, 191, 193], "803471e": [167, 191], "d_collocation_accuracy_check": [168, 191], "16383": [168, 191], "step_1_d_out": [168, 191], "step_1_accuracy_test_col": [168, 191], "this_dt": [168, 191], "old_dt": [168, 191], "spacn": [168, 191], "5th": [168, 191], "791": [168, 191], "364": [168, 191], "671": [168, 191], "step_2": [169, 170, 171, 192], "a_step_data_structur": [169, 192], "step_2_a_out": [169, 192], "b_my_first_sweep": [170, 192], "run_imex_sdc": [170, 192], "8e": [170, 173, 174, 177, 178, 182, 184, 189, 192, 193, 194, 196, 198], "step_2_b_out": [170, 192], "endpoint": [170, 192], "11190756e": [170, 171, 192], "68442667e": [170, 171, 192], "80377591e": [170, 171, 192], "21707909e": [170, 171, 192], "38272147e": [170, 171, 192], "36445413e": [170, 171, 192], "68953216e": [170, 171, 192], "52601840e": [170, 171, 192], "07249025e": [170, 171, 192], "27343378e": [170, 171, 192], "18931339e": [170, 171, 192], "48499772e": [170, 171, 192], "c_using_pysdcs_frontend": [171, 192], "log_to_fil": [171, 173, 192, 193], "step_2_c_out": [171, 192], "156": [171, 192], "146": [171, 173, 192, 193], "astonish": [171, 173, 192, 193], "87": [171, 173, 192, 193], "_____": [171, 173, 192, 193], "____": [171, 173, 192, 193], "___": [171, 173, 192, 193], "160": [171, 173, 192, 193], "overview": [171, 173, 192, 193], "157": [171, 192], "227": [171, 173, 192, 193], "default_hook": [171, 173, 192, 193], "defaulthook": [171, 192], "mssdc_jac": [171, 173, 189, 192, 193, 198], "predict_typ": [171, 173, 180, 181, 182, 186, 192, 193, 195, 196, 197], "use_iteration_estim": [171, 173, 192, 193], "dt_initi": [171, 173, 192, 193], "residual_typ": [171, 173, 192, 193], "full_ab": [171, 173, 192, 193], "ee": [171, 173, 192, 193], "do_coll_upd": [171, 173, 192, 193], "skip_residual_comput": [171, 173, 192, 193], "230": [171, 173, 192, 193], "232": [171, 173, 192, 193], "170": [171, 173, 192, 193], "100000": [171, 192], "163": [171, 192], "166": [171, 192], "173": [171, 192], "176": [171, 192], "179": [171, 192], "182": [171, 192], "185": [171, 192], "188": [171, 192], "192": [171, 192], "195": [171, 192], "199": [171, 192], "200000": [171, 192], "69984764e": [171, 192], "202": [171, 192], "05518433e": [171, 192], "40642621e": [171, 192], "208": [171, 192], "85982063e": [171, 192], "211": [171, 192], "79216702e": [171, 192], "12278839e": [171, 192], "217": [171, 192], "85495353e": [171, 192], "221": [171, 192], "78947003e": [171, 192], "224": [171, 192], "68230621e": [171, 192], "26313315e": [171, 192], "82951499e": [171, 192], "233": [171, 192], "99691114e": [171, 192], "234": [171, 192], "340": [171, 173, 192, 193], "166689e": [171, 192], "step_3": [172, 173, 174, 178, 193, 194], "a_getting_statist": [172, 193], "step_3_a_out": [172, 193], "residual_post_iter": [172, 193], "verbos": [172, 174, 193], "timing_setup": [172, 193], "timing_comm": [172, 193], "residual_post_sweep": [172, 193], "timing_sweep": [172, 193], "timing_iter": [172, 193], "timing_step": [172, 193], "residual_post_step": [172, 193], "_recomput": [172, 193], "1119e": [172, 193], "6844e": [172, 193], "8038e": [172, 193], "2171e": [172, 193], "3827e": [172, 193], "3645e": [172, 193], "6895e": [172, 193], "5260e": [172, 193], "0725e": [172, 193], "2734e": [172, 193], "1893e": [172, 193], "4850e": [172, 193], "70": [172, 186, 193, 197], "80": [172, 193], "b_adding_statist": [173, 193], "hookclass_particl": [173, 174, 178, 193, 194], "particle_hook": [173, 174, 178, 193, 194], "run_penning_trap_simul": [173, 178, 193, 194], "etot": [173, 174, 178, 193, 194], "base_energi": [173, 174, 178, 193, 194], "step_3_b_out": [173, 193], "10f": [173, 178, 193, 194], "545": [173, 193], "0625": [173, 181, 193, 195], "551": [173, 193], "000000": [173, 193], "53203678e": [173, 193], "557": [173, 193], "09852117e": [173, 193], "563": [173, 193], "50301513e": [173, 193], "568": [173, 193], "67724741e": [173, 193], "574": [173, 193], "95583202e": [173, 193], "579": [173, 193], "11405073e": [173, 193], "585": [173, 193], "26902403e": [173, 193], "591": [173, 193], "16534547e": [173, 193], "596": [173, 193], "66968022e": [173, 193], "602": [173, 193], "09408171e": [173, 193], "608": [173, 193], "17123386e": [173, 193], "610": [173, 193], "8799": [173, 193], "5000000000": [173, 193], "00000000e": [173, 178, 193, 194], "8785": [173, 193], "0038936088": [173, 193], "44961064e": [173, 193], "c_study_colloc": [174, 193], "stats_dict": [174, 193], "ediff": [174, 193], "step_3_c_out": [174, 193], "cclass": [174, 193], "final_energi": [174, 193], "ediff_expect": [174, 193], "qtype": [174, 193], "44960920e": [174, 193], "33862938e": [174, 193], "32710645e": [174, 193], "step_4": [175, 176, 177, 178, 194], "a_spatial_transfer_oper": [175, 194], "nvars_fin": [175, 194], "nvars_fine_list": [175, 194], "4i": [175, 176, 194], "pfine": [175, 194], "pcoars": [175, 194], "xvalues_fin": [175, 194], "uexact_fin": [175, 194], "xvalues_coars": [175, 194], "uexact_coars": [175, 194], "uinter": [175, 194], "step_4_a_out": [175, 194], "91": [175, 194], "35": [175, 194], "98": [175, 194], "62": [175, 182, 183, 184, 188, 189, 190, 194, 196, 198], "b_multilevel_hierarchi": [176, 194], "31": [176, 179, 182, 189, 194, 195, 196, 198], "step_4_b_out": [176, 194], "c_sdc_vs_mlsdc": [177, 194], "sweeper_params_sdc": [177, 194], "sweeper_params_mlsdc": [177, 194], "problem_params_sdc": [177, 194], "problem_params_mlsdc": [177, 194], "511": [177, 180, 194, 195], "description_sdc": [177, 194], "description_mlsdc": [177, 194], "controller_sdc": [177, 194], "controller_mlsdc": [177, 194], "uend_sdc": [177, 194], "stats_sdc": [177, 178, 194], "uend_mlsdc": [177, 194], "stats_mlsdc": [177, 178, 194], "niter_sdc": [177, 194], "niter_mlsdc": [177, 194], "err_sdc": [177, 194], "err_mlsdc": [177, 194], "step_4_c_out": [177, 194], "96232037e": [177, 194], "95409337e": [177, 194], "22700796e": [177, 194], "d_mlsdc_with_particl": [178, 194], "penningtrap_3d_coars": [178, 194], "penningtrap_coars": [178, 194], "time_sdc": [178, 194], "time_mlsdc": [178, 194], "stats_mlsdc_fint": [178, 194], "time_mlsdc_fint": [178, 194], "step_4_d_out": [178, 194], "8f": [178, 194], "energy_sdc": [178, 194], "energy_mlsdc": [178, 194], "energy_mlsdc_fint": [178, 194], "transfer_param": [178, 194], "start_tim": [178, 194], "perf_count": [178, 194], "end_tim": [178, 194], "77557224": [178, 194], "29699976": [178, 194], "98662255": [178, 194], "407936": [178, 194], "7556966486": [178, 194], "406977": [178, 194], "9425667246": [178, 194], "35039652e": [178, 194], "9425660003": [178, 194], "9428639794": [178, 194], "35039579e": [178, 194], "step_5": [179, 180, 181, 195], "a_multistep_multilevel_hierarchi": [179, 195], "step_5_a_out": [179, 195], "b_my_first_pfasst_run": [180, 195], "pfasst_burnin": [180, 181, 182, 195, 196], "num_proc_list": [180, 181, 182, 183, 195, 196], "log2": [180, 181, 195], "step_5_b_out": [180, 195], "3505e": [180, 195], "94": [180, 181, 195], "88": [180, 182, 183, 184, 188, 189, 195, 196, 198], "33": [180, 195], "43": [180, 181, 195], "c_advection_and_pfasst": [181, 195], "qi_list": [181, 195], "niters_min_al": [181, 195], "niters_max_al": [181, 195], "step_5_c_out": [181, 195], "1365e": [181, 195], "82": [181, 195], "93": [181, 195], "59": [181, 195], "44": [181, 195], "29": [181, 195], "27": [181, 195], "step_6": [182, 183, 184, 188, 196, 198], "a_run_non_mpi_control": [182, 183, 184, 188, 196, 198], "multi_level": [182, 183, 196], "set_parameters_ml": [182, 184, 188, 196, 198], "set_parameters_sl": [182, 196], "1i": [182, 184, 188, 196, 198], "weird": [182, 184, 196], "errtol": [182, 190, 196, 198], "ask": [182, 196, 198], "step_6_a_sl_out": [182, 196], "step_6_a_ml_out": [182, 196], "87627033e": [182, 196], "87300679e": [182, 184, 196], "87272106e": [182, 184, 196], "87294206e": [182, 184, 196], "87290945e": [182, 183, 184, 196], "b_odd_temporal_distribut": [183, 196], "main_a": [183, 196], "odd": [183, 184], "step_6_b_out": [183, 184, 196], "87358935e": [183, 184, 196], "87358097e": [183, 184, 196], "87271747e": [183, 184, 196], "c_mpi_parallel": [184, 196], "playground_parallel": [184, 196], "subprocess": [184, 196], "del": [184, 196], "importerror": [184, 196], "my_env": [184, 196], "coverage_process_start": [184, 196], "num_procs_list": [184, 196], "step_6_c1_out": [184, 196], "cmd": [184, 196], "popen": [184, 196], "stdout": [184, 196], "pipe": [184, 196], "stderr": [184, 196], "readlin": [184, 196], "returncod": [184, 196], "step_6_c2_out": [184, 196], "sy": [184, 187, 196, 197], "iter_counts_list": [184, 196], "argv": [184, 187, 196, 197], "iter_counts_gath": [184, 196], "sublist": [184, 196], "step_7": [185, 186, 187, 197], "a_pysdc_with_fen": [185, 197], "ml": [185, 186, 190, 197, 198], "ugli": [185, 197], "problemclass": [185, 197], "run_vari": [185, 197], "mass_inv": [185, 197], "mass_timebc": [185, 197], "step_7_a_out": [185, 197], "14e": [185, 197], "25e": [185, 197], "NOT": [185, 197], "run_pfasst_vari": [185, 197], "1387407230222816e": [185, 197], "6721": [185, 197], "1387594756569534e": [185, 197], "2516": [185, 197], "2473562155116167e": [185, 197], "2474": [185, 197], "138768636885694e": [185, 197], "3133": [185, 197], "1387216566052821e": [185, 197], "9201": [185, 197], "2473561574763597e": [185, 197], "8855": [185, 197], "1150087179536389e": [185, 197], "26": [185, 197], "6738": [185, 197], "b_pysdc_with_mpi4pyfft": [186, 197], "nl": [186, 197], "fine_onli": [186, 197], "step_7_b_out": [186, 197], "133e": [186, 197], "maxmean": [186, 197], "1321e": [186, 197], "3044": [186, 197], "1749e": [186, 197], "0281": [186, 197], "1316e": [186, 197], "2687": [186, 197], "1744e": [186, 197], "1645": [186, 197], "65": [186, 187, 197], "1306e": [186, 197], "7125": [186, 197], "1688e": [186, 197], "5349": [186, 197], "c_pysdc_with_petsc": [187, 197], "world_rank": [187, 197], "world_siz": [187, 197], "space_comm": [187, 197], "space_rank": [187, 197], "time_comm": [187, 197], "time_rank": [187, 197], "step_7_c_out": [187, 197], "8990": [187, 197], "9479e": [187, 197], "8457": [187, 197], "7703": [187, 197], "step_8": [188, 189, 190, 198], "a_visualize_residu": [188, 198], "min_it": [188, 198], "max_it": [188, 198], "step_8_a_out": [188, 198], "step_8_residu": [188, 198], "1555e": [188, 198], "b_multistep_sdc": [189, 198], "description_pfasst": [189, 198], "description_mssdc": [189, 198], "controller_params_jac": [189, 198], "controller_params_g": [189, 198], "controller_mssdc_jac": [189, 198], "controller_mssdc_g": [189, 198], "controller_pfasst": [189, 198], "uend_pfasst": [189, 198], "stats_pfasst": [189, 198], "uend_mssdc_jac": [189, 198], "stats_mssdc_jac": [189, 198], "uend_mssdc_g": [189, 198], "stats_mssdc_g": [189, 198], "err_mssdc_jac": [189, 198], "err_mssdc_g": [189, 198], "err_pfasst": [189, 198], "diff_jac": [189, 198], "diff_g": [189, 198], "diff_jac_g": [189, 198], "step_8_b_out": [189, 198], "iter_counts_pfasst": [189, 198], "iter_counts_mssdc_jac": [189, 198], "iter_counts_mssdc_g": [189, 198], "item_pfasst": [189, 198], "item_mssdc_jac": [189, 198], "item_mssdc_g": [189, 198], "parmssdc": [189, 198], "sermssdc": [189, 198], "step_8_residuals_mssdc_jac": [189, 198], "step_8_residuals_mssdc_g": [189, 198], "87344391e": [189, 198], "87650037e": [189, 198], "87540078e": [189, 198], "05646515e": [189, 198], "95687314e": [189, 198], "09959201e": [189, 198], "c_iteration_estim": [190, 198], "mesh_to_mesh_nc": [190, 198], "hookclass_error_output": [190, 198], "error_output": [190, 198], "setup_diffus": [190, 198], "setup_advect": [190, 198], "setup_auzing": [190, 198], "ndim_list": [190, 198], "nsteps_list": [190, 198], "nproc": [190, 198], "step_8_c_out": [190, 198], "mean_number_of_iter": [190, 198], "pde_error": [190, 198], "pde_error_after_step": [190, 198], "coll_error": [190, 198], "coll_error_after_step": [190, 198], "pde_err": [190, 198], "coll_err": [190, 198], "atol": [190, 198], "1250": [190, 198], "7804e": [190, 198], "4661e": [190, 198], "2500": [190, 198], "9619e": [190, 198], "8075e": [190, 198], "3750": [190, 198], "2300e": [190, 198], "0376e": [190, 198], "5000": [190, 198], "8684e": [190, 198], "6490e": [190, 198], "6250": [190, 198], "7128e": [190, 198], "8078e": [190, 198], "7500": [190, 198], "6619e": [190, 198], "5365e": [190, 198], "8750": [190, 198], "6530e": [190, 198], "0645e": [190, 198], "0000": [190, 198], "6478e": [190, 198], "2759e": [190, 198], "3171141720001742": [190, 198], "8191e": [190, 198], "3584e": [190, 198], "7174e": [190, 198], "0504e": [190, 198], "2849e": [190, 198], "9697e": [190, 198], "7307e": [190, 198], "6494e": [190, 198], "0813e": [190, 198], "0748e": [190, 198], "3516e": [190, 198], "7096e": [190, 198], "5501e": [190, 198], "9957e": [190, 198], "6813e": [190, 198], "6975e": [190, 198], "7475459669999509": [190, 198], "6459e": [190, 198], "5511e": [190, 198], "2907e": [190, 198], "0930e": [190, 198], "3307e": [190, 198], "4571e": [190, 198], "8225e": [190, 198], "1875e": [190, 198], "5517e": [190, 198], "9147e": [190, 198], "20068714499984708": [190, 198], "7050e": [190, 198], "1841e": [190, 198], "4360e": [190, 198], "1141e": [190, 198], "1852e": [190, 198], "4836e": [190, 198], "1886e": [190, 198], "8580e": [190, 198], "2256e": [190, 198], "1830e": [190, 198], "5987e": [190, 198], "9666e": [190, 198], "1819e": [190, 198], "6045955380000123": [190, 198], "6598e": [190, 198], "0010e": [190, 198], "4700e": [190, 198], "5583e": [190, 198], "1829e": [190, 198], "6153e": [190, 198], "8266e": [190, 198], "8338e": [190, 198], "14377909499989983": [190, 198], "2389e": [190, 198], "4469e": [190, 198], "1763e": [190, 198], "7832e": [190, 198], "3399e": [190, 198], "8017e": [190, 198], "1486e": [190, 198], "3802e": [190, 198], "17206839200002833": [190, 198], "heatequation_1d_fd": 191, "encapsul": 191, "quick": 191, "peak": 191, "reveal": 191, "sometim": 191, "he": 191, "happili": [191, 192], "subroutin": 191, "gaussradau_right": 191, "fun": 191, "beat": 191, "thoroughli": 191, "dig": 192, "deeper": 192, "ran": 192, "normal": [192, 196], "steer": 192, "life": 192, "heatequation_1d_fd_forc": 192, "rhs_imex_mesh": 192, "shed": 192, "light": 192, "deepli": 192, "tediou": [192, 195], "wors": 192, "behold": 192, "proce": 192, "friendliest": 192, "suppress": 192, "controller_paramet": 192, "capabl": [192, 196], "contrast": [192, 193, 195], "focu": 193, "stamp": 193, "admittedli": 193, "complic": [193, 195], "electromagnet": 193, "ineffici": 193, "interestingli": 193, "symmetr": 193, "conserv": 193, "thumb": 193, "altern": [193, 198], "fly": 193, "knowledg": 194, "longest": 194, "pretti": [194, 198], "fact": [194, 197], "finer": 194, "msdc": 194, "sensit": 194, "interplai": 194, "trivial": 194, "_nonmpi": 195, "principl": 195, "quantiti": 195, "parabol": 195, "heavili": 195, "saw": 195, "consider": 195, "At": 195, "sweeper_help": 195, "get_qd": 195, "mpi_parallel": 196, "accident": 196, "exercis": 196, "counterpart": 196, "snippet": 196, "set_paramet": 196, "headach": 196, "nosetest": 196, "invert": 197, "methodologi": 197, "valuabl": 197, "latter": 197, "With": 197, "unfavor": 197, "testb": 197, "petsc_dmda_grid": 197, "mere": 198, "pick": 198, "dead": 198, "prevent": 198, "safe": 198, "lipschitz": 198, "procedur": 198, "met": 198, "shall": 198}, "objects": {"": [[37, 0, 0, "-", "core"], [52, 0, 0, "-", "helpers"], [61, 0, 0, "-", "implementations"]], "core": [[38, 0, 0, "-", "BaseTransfer"], [39, 0, 0, "-", "Collocation"], [40, 0, 0, "-", "Common"], [41, 0, 0, "-", "Controller"], [42, 0, 0, "-", "ConvergenceController"], [43, 0, 0, "-", "Errors"], [44, 0, 0, "-", "Hooks"], [45, 0, 0, "-", "Lagrange"], [46, 0, 0, "-", "Level"], [47, 0, 0, "-", "Nodes"], [48, 0, 0, "-", "Problem"], [49, 0, 0, "-", "SpaceTransfer"], [50, 0, 0, "-", "Step"], [51, 0, 0, "-", "Sweeper"]], "core.BaseTransfer": [[38, 1, 1, "", "base_transfer"]], "core.BaseTransfer.base_transfer": [[38, 2, 1, "", "coarse"], [38, 2, 1, "", "fine"], [38, 3, 1, "", "get_transfer_matrix_Q"], [38, 2, 1, "", "logger"], [38, 2, 1, "", "params"], [38, 3, 1, "", "prolong"], [38, 3, 1, "", "prolong_f"], [38, 3, 1, "", "restrict"]], "core.Collocation": [[39, 1, 1, "", "CollBase"]], "core.Collocation.CollBase": [[39, 2, 1, "", "Qmat"], [39, 2, 1, "", "Smat"], [39, 2, 1, "", "delta_m"], [39, 3, 1, "", "evaluate"], [39, 2, 1, "", "left_is_node"], [39, 2, 1, "", "nodes"], [39, 2, 1, "", "num_nodes"], [39, 2, 1, "", "right_is_node"], [39, 2, 1, "", "tleft"], [39, 2, 1, "", "tright"], [39, 2, 1, "", "weights"]], "core.Common": [[40, 1, 1, "", "RegisterParams"]], "core.Common.RegisterParams": [[40, 2, 1, "", "_parNames"], [40, 2, 1, "", "_parNamesReadOnly"], [40, 4, 1, "id0", "params"]], "core.Controller": [[41, 1, 1, "", "controller"]], "core.Controller.controller": [[41, 3, 1, "", "add_convergence_controller"], [41, 3, 1, "", "add_hook"], [41, 3, 1, "", "dump_setup"], [41, 3, 1, "", "get_convergence_controllers_as_table"], [41, 4, 1, "", "hooks"], [41, 3, 1, "", "return_stats"], [41, 3, 1, "", "run"], [41, 3, 1, "", "setup_convergence_controllers"], [41, 3, 1, "", "welcome_message"]], "core.ConvergenceController": [[42, 1, 1, "", "ConvergenceController"], [42, 1, 1, "", "Pars"], [42, 1, 1, "", "Status"]], "core.ConvergenceController.ConvergenceController": [[42, 3, 1, "", "Recv"], [42, 3, 1, "", "Send"], [42, 3, 1, "", "add_variable"], [42, 3, 1, "", "check_iteration_status"], [42, 3, 1, "", "check_parameters"], [42, 3, 1, "", "convergence_control"], [42, 3, 1, "", "debug"], [42, 3, 1, "", "dependencies"], [42, 3, 1, "", "determine_restart"], [42, 3, 1, "", "get_new_step_size"], [42, 3, 1, "", "log"], [42, 3, 1, "", "post_iteration_processing"], [42, 3, 1, "", "post_spread_processing"], [42, 3, 1, "", "post_step_processing"], [42, 3, 1, "", "pre_iteration_processing"], [42, 3, 1, "", "prepare_MPI_datatypes"], [42, 3, 1, "", "prepare_MPI_logical_operations"], [42, 3, 1, "", "prepare_next_block"], [42, 3, 1, "", "recv"], [42, 3, 1, "", "reset_buffers_nonMPI"], [42, 3, 1, "", "reset_status_variables"], [42, 3, 1, "", "reset_variable"], [42, 3, 1, "", "send"], [42, 3, 1, "", "setup"], [42, 3, 1, "", "setup_status_variables"]], "core.Errors": [[43, 5, 1, "", "CollocationError"], [43, 5, 1, "", "CommunicationError"], [43, 5, 1, "", "ControllerError"], [43, 5, 1, "", "ConvergenceError"], [43, 5, 1, "", "DataError"], [43, 5, 1, "", "ParameterError"], [43, 5, 1, "", "ProblemError"], [43, 5, 1, "", "ReadOnlyError"], [43, 5, 1, "", "TransferError"], [43, 5, 1, "", "UnlockError"]], "core.Hooks": [[44, 1, 1, "", "Entry"], [44, 1, 1, "", "hooks"]], "core.Hooks.Entry": [[44, 2, 1, "", "iter"], [44, 2, 1, "", "level"], [44, 2, 1, "", "num_restarts"], [44, 2, 1, "", "process"], [44, 2, 1, "", "process_sweeper"], [44, 2, 1, "", "sweep"], [44, 2, 1, "", "time"], [44, 2, 1, "", "type"]], "core.Hooks.hooks": [[44, 2, 1, "", "__num_restarts"], [44, 2, 1, "", "__stats"], [44, 3, 1, "", "add_to_stats"], [44, 2, 1, "id0", "entry"], [44, 3, 1, "", "increment_stats"], [44, 2, 1, "", "logger"], [44, 2, 1, "", "meta_data"], [44, 3, 1, "", "post_comm"], [44, 3, 1, "", "post_iteration"], [44, 3, 1, "", "post_predict"], [44, 3, 1, "", "post_run"], [44, 3, 1, "", "post_setup"], [44, 3, 1, "", "post_step"], [44, 3, 1, "", "post_sweep"], [44, 3, 1, "", "pre_comm"], [44, 3, 1, "", "pre_iteration"], [44, 3, 1, "", "pre_predict"], [44, 3, 1, "", "pre_run"], [44, 3, 1, "", "pre_setup"], [44, 3, 1, "", "pre_step"], [44, 3, 1, "", "pre_sweep"], [44, 3, 1, "", "reset_stats"], [44, 3, 1, "", "return_stats"]], "core.Lagrange": [[45, 1, 1, "", "LagrangeApproximation"], [45, 6, 1, "", "computeFejerRule"]], "core.Lagrange.LagrangeApproximation": [[45, 3, 1, "", "getIntegrationMatrix"], [45, 3, 1, "", "getInterpolationMatrix"], [45, 4, 1, "", "n"], [45, 2, 1, "", "points"], [45, 2, 1, "", "weights"]], "core.Level": [[46, 1, 1, "", "level"]], "core.Level.level": [[46, 4, 1, "", "dt"], [46, 2, 1, "", "f"], [46, 2, 1, "", "fold"], [46, 2, 1, "", "level_index"], [46, 2, 1, "", "params"], [46, 4, 1, "", "prob"], [46, 3, 1, "", "reset_level"], [46, 2, 1, "", "status"], [46, 4, 1, "", "sweep"], [46, 4, 1, "", "tag"], [46, 2, 1, "", "tau"], [46, 4, 1, "", "time"], [46, 2, 1, "", "u"], [46, 2, 1, "", "uend"], [46, 2, 1, "", "uold"]], "core.Nodes": [[47, 5, 1, "", "NodesError"], [47, 1, 1, "", "NodesGenerator"]], "core.Nodes.NodesGenerator": [[47, 3, 1, "", "evalOrthogPoly"], [47, 3, 1, "", "getNodes"], [47, 3, 1, "", "getOrthogPolyCoefficients"], [47, 3, 1, "", "getTridiagCoefficients"], [47, 2, 1, "", "node_type"], [47, 2, 1, "", "quad_type"]], "core.Problem": [[48, 1, 1, "", "WorkCounter"], [48, 1, 1, "", "ptype"]], "core.Problem.WorkCounter": [[48, 3, 1, "", "decrement"]], "core.Problem.ptype": [[48, 3, 1, "", "apply_mass_matrix"], [48, 2, 1, "", "dtype_f"], [48, 2, 1, "", "dtype_u"], [48, 3, 1, "", "eval_f"], [48, 4, 1, "", "f_init"], [48, 3, 1, "", "generate_scipy_reference_solution"], [48, 3, 1, "", "get_default_sweeper_class"], [48, 2, 1, "id0", "logger"], [48, 4, 1, "", "u_init"]], "core.SpaceTransfer": [[49, 1, 1, "", "space_transfer"]], "core.SpaceTransfer.space_transfer": [[49, 2, 1, "", "coarse_prob"], [49, 2, 1, "", "fine_prob"], [49, 2, 1, "", "logger"], [49, 2, 1, "", "params"], [49, 3, 1, "", "prolong"], [49, 3, 1, "", "restrict"]], "core.Step": [[50, 1, 1, "", "step"]], "core.Step.step": [[50, 3, 1, "", "connect_levels"], [50, 4, 1, "", "dt"], [50, 3, 1, "", "init_step"], [50, 2, 1, "", "levels"], [50, 2, 1, "", "logger"], [50, 4, 1, "", "next"], [50, 2, 1, "", "params"], [50, 4, 1, "", "prev"], [50, 3, 1, "", "reset_step"], [50, 2, 1, "", "status"], [50, 4, 1, "", "time"], [50, 3, 1, "", "transfer"]], "core.Sweeper": [[51, 1, 1, "", "sweeper"]], "core.Sweeper.sweeper": [[51, 2, 1, "", "coll"], [51, 3, 1, "", "compute_end_point"], [51, 3, 1, "", "compute_residual"], [51, 3, 1, "", "get_Qdelta_explicit"], [51, 3, 1, "", "get_Qdelta_implicit"], [51, 3, 1, "", "integrate"], [51, 4, 1, "", "level"], [51, 2, 1, "", "logger"], [51, 2, 1, "", "params"], [51, 3, 1, "", "predict"], [51, 4, 1, "", "rank"], [51, 3, 1, "", "update_nodes"]], "helpers": [[53, 0, 0, "-", "NCCL_communicator"], [54, 0, 0, "-", "plot_helper"], [55, 0, 0, "-", "problem_helper"], [56, 0, 0, "-", "pysdc_helper"], [57, 0, 0, "-", "setup_helper"], [58, 0, 0, "-", "stats_helper"], [59, 0, 0, "-", "transfer_helper"], [60, 0, 0, "-", "visualization_tools"]], "helpers.NCCL_communicator": [[53, 1, 1, "", "NCCLComm"]], "helpers.NCCL_communicator.NCCLComm": [[53, 3, 1, "", "Allreduce"], [53, 3, 1, "", "Reduce"], [53, 3, 1, "", "get_count"], [53, 3, 1, "", "get_dtype"], [53, 3, 1, "", "get_op"]], "helpers.plot_helper": [[54, 6, 1, "", "figsize"], [54, 6, 1, "", "figsize_by_journal"], [54, 6, 1, "", "newfig"], [54, 6, 1, "", "savefig"], [54, 6, 1, "", "setup_mpl"]], "helpers.problem_helper": [[55, 6, 1, "", "get_1d_grid"], [55, 6, 1, "", "get_finite_difference_matrix"], [55, 6, 1, "", "get_finite_difference_stencil"], [55, 6, 1, "", "get_steps"]], "helpers.pysdc_helper": [[56, 1, 1, "", "FrozenClass"]], "helpers.pysdc_helper.FrozenClass": [[56, 2, 1, "", "__isfrozen"], [56, 3, 1, "", "get"]], "helpers.setup_helper": [[57, 6, 1, "", "generate_description"]], "helpers.stats_helper": [[58, 6, 1, "", "filter_stats"], [58, 6, 1, "", "get_list_of_types"], [58, 6, 1, "", "get_sorted"], [58, 6, 1, "", "sort_stats"]], "helpers.transfer_helper": [[59, 6, 1, "", "border_padding"], [59, 6, 1, "", "continue_periodic_array"], [59, 6, 1, "", "interpolation_matrix_1d"], [59, 6, 1, "", "next_neighbors"], [59, 6, 1, "", "next_neighbors_periodic"], [59, 6, 1, "", "restriction_matrix_1d"]], "helpers.visualization_tools": [[60, 6, 1, "", "show_residual_across_simulation"]], "implementations": [[62, 0, 0, "-", "controller_classes"], [65, 0, 0, "-", "convergence_controller_classes"], [82, 0, 0, "-", "datatype_classes"], [88, 0, 0, "-", "problem_classes"], [142, 0, 0, "-", "sweeper_classes"], [155, 0, 0, "-", "transfer_classes"]], "implementations.controller_classes": [[63, 0, 0, "-", "controller_MPI"], [64, 0, 0, "-", "controller_nonMPI"]], "implementations.controller_classes.controller_MPI": [[63, 1, 1, "", "controller_MPI"]], "implementations.controller_classes.controller_MPI.controller_MPI": [[63, 3, 1, "", "check_iteration_estimate"], [63, 3, 1, "", "default"], [63, 3, 1, "", "it_check"], [63, 3, 1, "", "it_coarse"], [63, 3, 1, "", "it_down"], [63, 3, 1, "", "it_fine"], [63, 3, 1, "", "it_up"], [63, 3, 1, "", "pfasst"], [63, 3, 1, "", "predict"], [63, 3, 1, "", "recv"], [63, 3, 1, "", "recv_full"], [63, 3, 1, "", "restart_block"], [63, 3, 1, "", "run"], [63, 3, 1, "", "send_full"], [63, 3, 1, "", "spread"], [63, 3, 1, "", "wait_with_interrupt"]], "implementations.controller_classes.controller_nonMPI": [[64, 1, 1, "", "controller_nonMPI"]], "implementations.controller_classes.controller_nonMPI.controller_nonMPI": [[64, 3, 1, "", "default"], [64, 3, 1, "", "it_check"], [64, 3, 1, "", "it_coarse"], [64, 3, 1, "", "it_down"], [64, 3, 1, "", "it_fine"], [64, 3, 1, "", "it_up"], [64, 3, 1, "", "pfasst"], [64, 3, 1, "", "predict"], [64, 3, 1, "", "recv_full"], [64, 3, 1, "", "restart_block"], [64, 3, 1, "", "run"], [64, 3, 1, "", "send_full"], [64, 3, 1, "", "spread"]], "implementations.convergence_controller_classes": [[66, 0, 0, "-", "adaptive_collocation"], [67, 0, 0, "-", "adaptivity"], [68, 0, 0, "-", "basic_restarting"], [69, 0, 0, "-", "check_convergence"], [70, 0, 0, "-", "check_iteration_estimator"], [71, 0, 0, "-", "crash"], [72, 0, 0, "-", "estimate_contraction_factor"], [73, 0, 0, "-", "estimate_embedded_error"], [74, 0, 0, "-", "estimate_extrapolation_error"], [75, 0, 0, "-", "estimate_polynomial_error"], [76, 0, 0, "-", "hotrod"], [77, 0, 0, "-", "inexactness"], [78, 0, 0, "-", "interpolate_between_restarts"], [79, 0, 0, "-", "spread_step_sizes"], [80, 0, 0, "-", "step_size_limiter"], [81, 0, 0, "-", "store_uold"]], "implementations.convergence_controller_classes.adaptive_collocation": [[66, 1, 1, "", "AdaptiveCollocation"]], "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation": [[66, 3, 1, "", "check_parameters"], [66, 3, 1, "", "matmul"], [66, 3, 1, "", "post_iteration_processing"], [66, 3, 1, "", "post_spread_processing"], [66, 3, 1, "", "reset_status_variables"], [66, 3, 1, "", "setup"], [66, 3, 1, "", "setup_status_variables"], [66, 3, 1, "", "switch_sweeper"]], "implementations.convergence_controller_classes.adaptivity": [[67, 1, 1, "", "Adaptivity"], [67, 1, 1, "", "AdaptivityBase"], [67, 1, 1, "", "AdaptivityCollocation"], [67, 1, 1, "", "AdaptivityExtrapolationWithinQ"], [67, 1, 1, "", "AdaptivityForConvergedCollocationProblems"], [67, 1, 1, "", "AdaptivityPolynomialError"], [67, 1, 1, "", "AdaptivityRK"], [67, 1, 1, "", "AdaptivityResidual"]], "implementations.convergence_controller_classes.adaptivity.Adaptivity": [[67, 3, 1, "", "check_parameters"], [67, 3, 1, "", "dependencies"], [67, 3, 1, "", "get_local_error_estimate"], [67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityBase": [[67, 3, 1, "", "compute_optimal_step_size"], [67, 3, 1, "", "dependencies"], [67, 3, 1, "", "determine_restart"], [67, 3, 1, "", "get_local_error_estimate"], [67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation": [[67, 3, 1, "", "check_parameters"], [67, 3, 1, "", "dependencies"], [67, 3, 1, "", "determine_restart"], [67, 3, 1, "", "get_convergence"], [67, 3, 1, "", "get_local_error_estimate"], [67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "post_iteration_processing"], [67, 3, 1, "", "reset_status_variables"], [67, 3, 1, "", "setup"], [67, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ": [[67, 3, 1, "", "dependencies"], [67, 3, 1, "", "get_convergence"], [67, 3, 1, "", "get_local_error_estimate"], [67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems": [[67, 3, 1, "", "dependencies"], [67, 3, 1, "", "determine_restart"], [67, 3, 1, "", "get_convergence"], [67, 3, 1, "", "setup"], [67, 3, 1, "", "trigger_restart_upon_nonconvergence"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError": [[67, 3, 1, "", "dependencies"], [67, 3, 1, "", "get_convergence"], [67, 3, 1, "", "get_local_error_estimate"], [67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityRK": [[67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual": [[67, 3, 1, "", "check_parameters"], [67, 3, 1, "", "get_local_error_estimate"], [67, 3, 1, "", "get_new_step_size"], [67, 3, 1, "", "setup"], [67, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.basic_restarting": [[68, 1, 1, "", "BasicRestarting"], [68, 1, 1, "", "BasicRestartingMPI"], [68, 1, 1, "", "BasicRestartingNonMPI"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestarting": [[68, 3, 1, "", "dependencies"], [68, 3, 1, "", "determine_restart"], [68, 3, 1, "", "get_implementation"], [68, 3, 1, "", "reset_status_variables"], [68, 3, 1, "", "setup"], [68, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI": [[68, 3, 1, "", "determine_restart"], [68, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI": [[68, 3, 1, "", "determine_restart"], [68, 3, 1, "", "prepare_next_block"], [68, 3, 1, "", "reset_buffers_nonMPI"]], "implementations.convergence_controller_classes.check_convergence": [[69, 1, 1, "", "CheckConvergence"]], "implementations.convergence_controller_classes.check_convergence.CheckConvergence": [[69, 3, 1, "", "check_convergence"], [69, 3, 1, "", "check_iteration_status"], [69, 3, 1, "", "communicate_convergence"], [69, 3, 1, "", "dependencies"], [69, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.check_iteration_estimator": [[70, 1, 1, "", "CheckIterationEstimatorNonMPI"]], "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI": [[70, 3, 1, "", "check_iteration_status"], [70, 3, 1, "", "check_parameters"], [70, 3, 1, "", "dependencies"], [70, 3, 1, "", "reset_buffers_nonMPI"], [70, 3, 1, "", "setup"], [70, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.crash": [[71, 1, 1, "", "CrashBase"], [71, 1, 1, "", "StopAtMaxRuntime"], [71, 1, 1, "", "StopAtNan"]], "implementations.convergence_controller_classes.crash.CrashBase": [[71, 3, 1, "", "communicate_crash"]], "implementations.convergence_controller_classes.crash.StopAtMaxRuntime": [[71, 3, 1, "", "prepare_next_block"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.crash.StopAtNan": [[71, 3, 1, "", "prepare_next_block"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_contraction_factor": [[72, 1, 1, "", "EstimateContractionFactor"]], "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor": [[72, 3, 1, "", "dependencies"], [72, 3, 1, "", "post_iteration_processing"], [72, 3, 1, "", "pre_iteration_processing"], [72, 3, 1, "", "reset_status_variables"], [72, 3, 1, "", "setup"], [72, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error": [[73, 1, 1, "", "EstimateEmbeddedError"], [73, 1, 1, "", "EstimateEmbeddedErrorCollocation"], [73, 1, 1, "", "EstimateEmbeddedErrorLinearizedMPI"], [73, 1, 1, "", "EstimateEmbeddedErrorLinearizedNonMPI"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError": [[73, 3, 1, "", "dependencies"], [73, 3, 1, "", "estimate_embedded_error_serial"], [73, 3, 1, "", "get_implementation"], [73, 3, 1, "", "post_iteration_processing"], [73, 3, 1, "", "reset_status_variables"], [73, 3, 1, "", "setup"], [73, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation": [[73, 3, 1, "", "dependencies"], [73, 3, 1, "", "post_iteration_processing"], [73, 3, 1, "", "reset_status_variables"], [73, 3, 1, "", "setup"], [73, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI": [[73, 3, 1, "", "post_iteration_processing"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI": [[73, 3, 1, "", "post_iteration_processing"], [73, 3, 1, "", "reset_buffers_nonMPI"], [73, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_extrapolation_error": [[74, 1, 1, "", "EstimateExtrapolationErrorBase"], [74, 1, 1, "", "EstimateExtrapolationErrorNonMPI"], [74, 1, 1, "", "EstimateExtrapolationErrorWithinQ"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase": [[74, 3, 1, "", "check_parameters"], [74, 3, 1, "", "get_extrapolation_coefficients"], [74, 3, 1, "", "reset_status_variables"], [74, 3, 1, "", "setup"], [74, 3, 1, "", "setup_status_variables"], [74, 3, 1, "", "store_values"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI": [[74, 3, 1, "", "get_extrapolated_error"], [74, 3, 1, "", "get_extrapolated_solution"], [74, 3, 1, "", "post_iteration_processing"], [74, 3, 1, "", "prepare_next_block"], [74, 3, 1, "", "setup"], [74, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ": [[74, 3, 1, "", "post_iteration_processing"], [74, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_polynomial_error": [[75, 1, 1, "", "EstimatePolynomialError"]], "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError": [[75, 3, 1, "", "check_parameters"], [75, 3, 1, "", "matmul"], [75, 3, 1, "", "post_iteration_processing"], [75, 3, 1, "", "reset_status_variables"], [75, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.hotrod": [[76, 1, 1, "", "HotRod"]], "implementations.convergence_controller_classes.hotrod.HotRod": [[76, 3, 1, "", "check_parameters"], [76, 3, 1, "", "dependencies"], [76, 3, 1, "", "determine_restart"], [76, 3, 1, "", "post_iteration_processing"], [76, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.inexactness": [[77, 1, 1, "", "NewtonInexactness"]], "implementations.convergence_controller_classes.inexactness.NewtonInexactness": [[77, 3, 1, "", "dependencies"], [77, 3, 1, "", "post_iteration_processing"], [77, 3, 1, "", "set_maxiter"], [77, 3, 1, "", "set_tolerance"], [77, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.interpolate_between_restarts": [[78, 1, 1, "", "InterpolateBetweenRestarts"]], "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts": [[78, 3, 1, "", "post_iteration_processing"], [78, 3, 1, "", "post_spread_processing"], [78, 3, 1, "", "setup"], [78, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.spread_step_sizes": [[79, 1, 1, "", "SpreadStepSizesBlockwise"], [79, 1, 1, "", "SpreadStepSizesBlockwiseMPI"], [79, 1, 1, "", "SpreadStepSizesBlockwiseNonMPI"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise": [[79, 3, 1, "", "get_implementation"], [79, 3, 1, "", "get_step_from_which_to_spread"], [79, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI": [[79, 3, 1, "", "get_step_from_which_to_spread"], [79, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI": [[79, 3, 1, "", "get_step_from_which_to_spread"], [79, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.step_size_limiter": [[80, 1, 1, "", "StepSizeLimiter"], [80, 1, 1, "", "StepSizeSlopeLimiter"]], "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter": [[80, 3, 1, "", "dependencies"], [80, 3, 1, "", "get_new_step_size"], [80, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter": [[80, 3, 1, "", "get_new_step_size"], [80, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.store_uold": [[81, 1, 1, "", "StoreUOld"]], "implementations.convergence_controller_classes.store_uold.StoreUOld": [[81, 3, 1, "", "post_iteration_processing"], [81, 3, 1, "", "post_spread_processing"], [81, 3, 1, "", "setup"]], "implementations.datatype_classes": [[83, 0, 0, "-", "cupy_mesh"], [84, 0, 0, "-", "fenics_mesh"], [85, 0, 0, "-", "mesh"], [86, 0, 0, "-", "particles"], [87, 0, 0, "-", "petsc_vec"]], "implementations.datatype_classes.cupy_mesh": [[83, 1, 1, "", "comp2_cupy_mesh"], [83, 1, 1, "", "cupy_mesh"], [83, 1, 1, "", "imex_cupy_mesh"]], "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh": [[83, 2, 1, "", "comp1"], [83, 2, 1, "", "comp2"]], "implementations.datatype_classes.cupy_mesh.cupy_mesh": [[83, 3, 1, "", "bcast"], [83, 4, 1, "", "comm"], [83, 3, 1, "", "irecv"], [83, 3, 1, "", "isend"]], "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh": [[83, 2, 1, "", "expl"], [83, 2, 1, "", "impl"]], "implementations.datatype_classes.fenics_mesh": [[84, 1, 1, "", "fenics_mesh"], [84, 1, 1, "", "rhs_fenics_mesh"]], "implementations.datatype_classes.fenics_mesh.fenics_mesh": [[84, 2, 1, "", "values"]], "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh": [[84, 2, 1, "", "expl"], [84, 2, 1, "", "impl"]], "implementations.datatype_classes.mesh": [[85, 1, 1, "", "comp2_mesh"], [85, 1, 1, "", "imex_mesh"], [85, 1, 1, "", "mesh"]], "implementations.datatype_classes.mesh.comp2_mesh": [[85, 2, 1, "", "comp1"], [85, 2, 1, "", "comp2"]], "implementations.datatype_classes.mesh.imex_mesh": [[85, 2, 1, "", "expl"], [85, 2, 1, "", "impl"]], "implementations.datatype_classes.mesh.mesh": [[85, 2, 1, "", "_comm"], [85, 3, 1, "", "bcast"], [85, 4, 1, "", "comm"], [85, 3, 1, "", "irecv"], [85, 3, 1, "", "isend"]], "implementations.datatype_classes.particles": [[86, 1, 1, "", "acceleration"], [86, 1, 1, "", "fields"], [86, 1, 1, "", "particles"]], "implementations.datatype_classes.particles.fields": [[86, 2, 1, "", "elec"], [86, 1, 1, "", "electric"], [86, 2, 1, "", "magn"], [86, 1, 1, "", "magnetic"]], "implementations.datatype_classes.particles.particles": [[86, 3, 1, "", "isend"], [86, 2, 1, "", "pos"], [86, 1, 1, "", "position"], [86, 3, 1, "", "recv"], [86, 3, 1, "", "send"], [86, 2, 1, "", "vel"], [86, 1, 1, "", "velocity"]], "implementations.datatype_classes.petsc_vec": [[87, 1, 1, "", "petsc_vec"], [87, 1, 1, "", "petsc_vec_comp2"], [87, 1, 1, "", "petsc_vec_imex"]], "implementations.datatype_classes.petsc_vec.petsc_vec": [[87, 3, 1, "", "bcast"], [87, 3, 1, "", "irecv"], [87, 3, 1, "", "isend"]], "implementations.datatype_classes.petsc_vec.petsc_vec_comp2": [[87, 2, 1, "", "expl"], [87, 2, 1, "", "impl"]], "implementations.datatype_classes.petsc_vec.petsc_vec_imex": [[87, 2, 1, "", "expl"], [87, 2, 1, "", "impl"]], "implementations.problem_classes": [[89, 0, 0, "-", "AcousticAdvection_1D_FD_imex"], [90, 0, 0, "-", "AdvectionDiffusionEquation_1D_FFT"], [91, 0, 0, "-", "AdvectionEquation_ND_FD"], [92, 0, 0, "-", "AllenCahn_1D_FD"], [93, 0, 0, "-", "AllenCahn_2D_FD"], [95, 0, 0, "-", "AllenCahn_2D_FFT"], [96, 0, 0, "-", "AllenCahn_2D_FFT_gpu"], [97, 0, 0, "-", "AllenCahn_MPIFFT"], [98, 0, 0, "-", "AllenCahn_Temp_MPIFFT"], [99, 0, 0, "-", "Auzinger_implicit"], [100, 0, 0, "-", "Battery"], [101, 0, 0, "-", "Boussinesq_2D_FD_imex"], [102, 0, 0, "-", "BuckConverter"], [103, 0, 0, "-", "DiscontinuousTestODE"], [104, 0, 0, "-", "FastWaveSlowWave_0D"], [105, 0, 0, "-", "FermiPastaUlamTsingou"], [106, 0, 0, "-", "FullSolarSystem"], [107, 0, 0, "-", "GeneralizedFisher_1D_FD_implicit"], [108, 0, 0, "-", "GeneralizedFisher_1D_PETSc"], [109, 0, 0, "-", "GrayScott_1D_FEniCS_implicit"], [110, 0, 0, "-", "GrayScott_2D_PETSc_periodic"], [111, 0, 0, "-", "GrayScott_MPIFFT"], [112, 0, 0, "-", "HarmonicOscillator"], [113, 0, 0, "-", "HeatEquation_1D_FEniCS_matrix_forced"], [114, 0, 0, "-", "HeatEquation_2D_PETSc_forced"], [115, 0, 0, "-", "HeatEquation_ND_FD"], [117, 0, 0, "-", "HenonHeiles"], [118, 0, 0, "-", "LogisticEquation"], [119, 0, 0, "-", "Lorenz"], [120, 0, 0, "-", "NonlinearSchroedinger_MPIFFT"], [121, 0, 0, "-", "OuterSolarSystem"], [122, 0, 0, "-", "PenningTrap_3D"], [123, 0, 0, "-", "Piline"], [124, 0, 0, "-", "Quench"], [125, 0, 0, "-", "TestEquation_0D"], [126, 0, 0, "-", "Van_der_Pol_implicit"], [127, 0, 0, "-", "VorticityVelocity_2D_FEniCS_periodic"], [128, 0, 0, "-", "acoustic_helpers"], [132, 0, 0, "-", "boussinesq_helpers"], [139, 0, 0, "-", "generic_ND_FD"], [140, 0, 0, "-", "nonlinear_ODE_1"], [141, 0, 0, "-", "polynomial_test_problem"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex": [[89, 1, 1, "", "acoustic_1d_imex"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex": [[89, 2, 1, "", "A"], [89, 2, 1, "", "Dx"], [89, 2, 1, "", "Id"], [89, 2, 1, "", "dtype_f"], [89, 2, 1, "", "dtype_u"], [89, 2, 1, "", "dx"], [89, 3, 1, "", "eval_f"], [89, 2, 1, "", "mesh"], [89, 3, 1, "", "solve_system"], [89, 3, 1, "", "u_exact"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT": [[90, 1, 1, "", "advectiondiffusion1d_imex"], [90, 1, 1, "", "advectiondiffusion1d_implicit"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex": [[90, 2, 1, "", "ddx"], [90, 2, 1, "", "dtype_f"], [90, 2, 1, "", "dtype_u"], [90, 3, 1, "", "eval_f"], [90, 2, 1, "", "lap"], [90, 3, 1, "", "solve_system"], [90, 3, 1, "", "u_exact"], [90, 2, 1, "", "xvalues"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit": [[90, 2, 1, "", "dtype_f"], [90, 2, 1, "", "dtype_u"], [90, 3, 1, "", "eval_f"], [90, 3, 1, "", "solve_system"]], "implementations.problem_classes.AdvectionEquation_ND_FD": [[91, 1, 1, "", "advectionNd"]], "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd": [[91, 2, 1, "", "A"], [91, 2, 1, "", "Id"], [91, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_1D_FD": [[92, 1, 1, "", "allencahn_front_finel"], [92, 1, 1, "", "allencahn_front_fullyimplicit"], [92, 1, 1, "", "allencahn_front_semiimplicit"], [92, 1, 1, "", "allencahn_periodic_fullyimplicit"], [92, 1, 1, "", "allencahn_periodic_multiimplicit"], [92, 1, 1, "", "allencahn_periodic_semiimplicit"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel": [[92, 3, 1, "", "eval_f"], [92, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit": [[92, 2, 1, "", "A"], [92, 2, 1, "", "dtype_f"], [92, 2, 1, "", "dtype_u"], [92, 2, 1, "", "dx"], [92, 3, 1, "", "eval_f"], [92, 3, 1, "", "solve_system"], [92, 3, 1, "", "u_exact"], [92, 2, 1, "", "uext"], [92, 2, 1, "", "work_counters"], [92, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit": [[92, 2, 1, "", "dtype_f"], [92, 3, 1, "", "eval_f"], [92, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit": [[92, 2, 1, "", "A"], [92, 2, 1, "", "dtype_f"], [92, 2, 1, "", "dtype_u"], [92, 2, 1, "", "dx"], [92, 3, 1, "", "eval_f"], [92, 3, 1, "", "solve_system"], [92, 3, 1, "", "u_exact"], [92, 2, 1, "", "work_counters"], [92, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit": [[92, 2, 1, "", "dtype_f"], [92, 3, 1, "", "eval_f"], [92, 3, 1, "", "solve_system_1"], [92, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit": [[92, 2, 1, "", "dtype_f"], [92, 3, 1, "", "eval_f"], [92, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_2D_FD": [[93, 1, 1, "", "allencahn_fullyimplicit"], [93, 1, 1, "", "allencahn_multiimplicit"], [93, 1, 1, "", "allencahn_multiimplicit_v2"], [93, 1, 1, "", "allencahn_semiimplicit"], [93, 1, 1, "", "allencahn_semiimplicit_v2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit": [[93, 2, 1, "", "A"], [93, 2, 1, "", "dtype_f"], [93, 2, 1, "", "dtype_u"], [93, 2, 1, "", "dx"], [93, 3, 1, "", "eval_f"], [93, 2, 1, "", "lin_itercount"], [93, 2, 1, "", "lin_ncalls"], [93, 2, 1, "", "newton_itercount"], [93, 2, 1, "", "newton_ncalls"], [93, 3, 1, "", "solve_system"], [93, 3, 1, "", "u_exact"], [93, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit": [[93, 2, 1, "", "dtype_f"], [93, 3, 1, "", "eval_f"], [93, 3, 1, "", "solve_system_1"], [93, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2": [[93, 2, 1, "", "dtype_f"], [93, 3, 1, "", "eval_f"], [93, 3, 1, "", "solve_system_1"], [93, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit": [[93, 2, 1, "", "dtype_f"], [93, 3, 1, "", "eval_f"], [93, 3, 1, "", "solve_system"], [93, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2": [[93, 2, 1, "", "dtype_f"], [93, 3, 1, "", "eval_f"], [93, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_2D_FFT": [[95, 1, 1, "", "allencahn2d_imex"], [95, 1, 1, "", "allencahn2d_imex_stab"]], "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex": [[95, 2, 1, "", "dtype_f"], [95, 2, 1, "", "dtype_u"], [95, 2, 1, "", "dx"], [95, 3, 1, "", "eval_f"], [95, 2, 1, "", "lap"], [95, 3, 1, "", "solve_system"], [95, 3, 1, "", "u_exact"], [95, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab": [[95, 2, 1, "", "dx"], [95, 3, 1, "", "eval_f"], [95, 2, 1, "", "lap"], [95, 3, 1, "", "solve_system"], [95, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu": [[96, 1, 1, "", "allencahn2d_imex"], [96, 1, 1, "", "allencahn2d_imex_stab"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex": [[96, 2, 1, "", "dtype_f"], [96, 2, 1, "", "dtype_u"], [96, 2, 1, "", "dx"], [96, 3, 1, "", "eval_f"], [96, 2, 1, "", "lap"], [96, 3, 1, "", "solve_system"], [96, 3, 1, "", "u_exact"], [96, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab": [[96, 2, 1, "", "dx"], [96, 3, 1, "", "eval_f"], [96, 2, 1, "", "lap"], [96, 3, 1, "", "solve_system"], [96, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_MPIFFT": [[97, 1, 1, "", "allencahn_imex"], [97, 1, 1, "", "allencahn_imex_timeforcing"]], "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex": [[97, 2, 1, "", "K2"], [97, 2, 1, "", "X"], [97, 2, 1, "", "dtype_f"], [97, 2, 1, "", "dtype_u"], [97, 2, 1, "", "dx"], [97, 2, 1, "", "dy"], [97, 3, 1, "", "eval_f"], [97, 2, 1, "", "fft"], [97, 3, 1, "", "solve_system"], [97, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing": [[97, 3, 1, "", "eval_f"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT": [[98, 1, 1, "", "allencahn_temp_imex"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex": [[98, 2, 1, "", "D"], [98, 2, 1, "", "K2"], [98, 2, 1, "", "L"], [98, 2, 1, "", "TM"], [98, 2, 1, "", "X"], [98, 2, 1, "", "comm"], [98, 2, 1, "", "dtype_f"], [98, 2, 1, "", "dtype_u"], [98, 2, 1, "", "dw"], [98, 2, 1, "", "dx"], [98, 2, 1, "", "dy"], [98, 2, 1, "", "eps"], [98, 3, 1, "", "eval_f"], [98, 2, 1, "", "fft"], [98, 2, 1, "", "init_type"], [98, 2, 1, "", "nvars"], [98, 2, 1, "", "radius"], [98, 3, 1, "", "solve_system"], [98, 2, 1, "", "spectral"], [98, 3, 1, "", "u_exact"]], "implementations.problem_classes.Auzinger_implicit": [[99, 1, 1, "", "auzinger"]], "implementations.problem_classes.Auzinger_implicit.auzinger": [[99, 2, 1, "", "dtype_f"], [99, 2, 1, "", "dtype_u"], [99, 3, 1, "", "eval_f"], [99, 2, 1, "", "newton_maxiter"], [99, 2, 1, "", "newton_tol"], [99, 3, 1, "", "solve_system"], [99, 3, 1, "", "u_exact"]], "implementations.problem_classes.Battery": [[100, 1, 1, "", "battery"], [100, 1, 1, "", "battery_implicit"], [100, 1, 1, "", "battery_n_capacitors"]], "implementations.problem_classes.Battery.battery": [[100, 2, 1, "", "dtype_f"], [100, 3, 1, "", "eval_f"], [100, 3, 1, "", "solve_system"], [100, 3, 1, "", "u_exact"]], "implementations.problem_classes.Battery.battery_implicit": [[100, 2, 1, "", "dtype_f"], [100, 3, 1, "", "eval_f"], [100, 3, 1, "", "solve_system"], [100, 2, 1, "", "work_counters"]], "implementations.problem_classes.Battery.battery_n_capacitors": [[100, 2, 1, "", "A"], [100, 3, 1, "", "count_switches"], [100, 2, 1, "", "dtype_f"], [100, 2, 1, "", "dtype_u"], [100, 3, 1, "", "eval_f"], [100, 3, 1, "", "get_problem_dict"], [100, 3, 1, "", "get_switching_info"], [100, 2, 1, "", "nswitches"], [100, 3, 1, "", "solve_system"], [100, 2, 1, "", "switch_A"], [100, 2, 1, "", "switch_f"], [100, 2, 1, "", "t_switch"], [100, 3, 1, "", "u_exact"]], "implementations.problem_classes.Boussinesq_2D_FD_imex": [[101, 1, 1, "", "boussinesq_2d_imex"]], "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex": [[101, 2, 1, "", "D_upwind"], [101, 2, 1, "", "Id"], [101, 2, 1, "", "M"], [101, 2, 1, "", "N"], [101, 2, 1, "", "bc_hor"], [101, 2, 1, "", "bc_ver"], [101, 2, 1, "", "dtype_f"], [101, 2, 1, "", "dtype_u"], [101, 3, 1, "", "eval_f"], [101, 2, 1, "", "gmres_logger"], [101, 2, 1, "", "h"], [101, 3, 1, "", "solve_system"], [101, 3, 1, "", "u_exact"], [101, 2, 1, "", "xx"], [101, 2, 1, "", "zz"]], "implementations.problem_classes.BuckConverter": [[102, 1, 1, "", "buck_converter"]], "implementations.problem_classes.BuckConverter.buck_converter": [[102, 2, 1, "", "A"], [102, 2, 1, "", "dtype_f"], [102, 2, 1, "", "dtype_u"], [102, 3, 1, "", "eval_f"], [102, 3, 1, "", "solve_system"], [102, 3, 1, "", "u_exact"]], "implementations.problem_classes.DiscontinuousTestODE": [[103, 1, 1, "", "DiscontinuousTestODE"]], "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE": [[103, 3, 1, "", "count_switches"], [103, 2, 1, "", "dtype_f"], [103, 2, 1, "", "dtype_u"], [103, 3, 1, "", "eval_f"], [103, 3, 1, "", "get_switching_info"], [103, 2, 1, "", "nswitches"], [103, 3, 1, "", "solve_system"], [103, 2, 1, "", "t_switch"], [103, 2, 1, "", "t_switch_exact"], [103, 3, 1, "", "u_exact"], [103, 2, 1, "", "work_counters"]], "implementations.problem_classes.FastWaveSlowWave_0D": [[104, 1, 1, "", "swfw_scalar"]], "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar": [[104, 2, 1, "", "dtype_f"], [104, 2, 1, "", "dtype_u"], [104, 3, 1, "", "eval_f"], [104, 3, 1, "", "solve_system"], [104, 3, 1, "", "u_exact"]], "implementations.problem_classes.FermiPastaUlamTsingou": [[105, 1, 1, "", "fermi_pasta_ulam_tsingou"]], "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou": [[105, 2, 1, "", "dtype_f"], [105, 2, 1, "", "dtype_u"], [105, 2, 1, "", "dx"], [105, 3, 1, "", "eval_f"], [105, 3, 1, "", "eval_hamiltonian"], [105, 3, 1, "", "eval_mode_energy"], [105, 2, 1, "", "ones"], [105, 3, 1, "", "u_exact"], [105, 2, 1, "", "xvalues"]], "implementations.problem_classes.FullSolarSystem": [[106, 1, 1, "", "full_solar_system"]], "implementations.problem_classes.FullSolarSystem.full_solar_system": [[106, 2, 1, "", "G"], [106, 2, 1, "", "dtype_f"], [106, 2, 1, "", "dtype_u"], [106, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit": [[107, 1, 1, "", "generalized_fisher"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher": [[107, 2, 1, "", "A"], [107, 2, 1, "", "dtype_f"], [107, 2, 1, "", "dtype_u"], [107, 2, 1, "", "dx"], [107, 3, 1, "", "eval_f"], [107, 3, 1, "", "solve_system"], [107, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc": [[108, 1, 1, "", "Fisher_full"], [108, 1, 1, "", "Fisher_reaction"], [108, 1, 1, "", "petsc_fisher_fullyimplicit"], [108, 1, 1, "", "petsc_fisher_multiimplicit"], [108, 1, 1, "", "petsc_fisher_semiimplicit"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full": [[108, 2, 1, "", "col"], [108, 3, 1, "", "formFunction"], [108, 3, 1, "", "formJacobian"], [108, 2, 1, "", "localX"], [108, 2, 1, "", "mx"], [108, 2, 1, "", "row"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction": [[108, 3, 1, "", "formFunction"], [108, 3, 1, "", "formJacobian"], [108, 2, 1, "", "localX"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit": [[108, 2, 1, "", "dtype_f"], [108, 3, 1, "", "eval_f"], [108, 3, 1, "", "solve_system"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit": [[108, 2, 1, "", "A"], [108, 2, 1, "", "F"], [108, 2, 1, "", "J"], [108, 2, 1, "", "dtype_f"], [108, 2, 1, "", "dtype_u"], [108, 2, 1, "", "dx"], [108, 3, 1, "", "eval_f"], [108, 3, 1, "", "get_sys_mat"], [108, 2, 1, "", "ksp"], [108, 2, 1, "", "localX"], [108, 2, 1, "", "snes"], [108, 3, 1, "", "solve_system_1"], [108, 3, 1, "", "solve_system_2"], [108, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit": [[108, 2, 1, "", "dtype_f"], [108, 3, 1, "", "eval_f"], [108, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit": [[109, 1, 1, "", "fenics_grayscott"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott": [[109, 2, 1, "", "F"], [109, 2, 1, "", "F1"], [109, 2, 1, "", "F2"], [109, 2, 1, "", "M"], [109, 2, 1, "", "V"], [109, 2, 1, "", "dtype_f"], [109, 2, 1, "", "dtype_u"], [109, 3, 1, "", "eval_f"], [109, 3, 1, "", "solve_system"], [109, 3, 1, "", "u_exact"], [109, 2, 1, "", "w"], [109, 2, 1, "", "w1"], [109, 2, 1, "", "w2"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic": [[110, 1, 1, "", "GS_full"], [110, 1, 1, "", "GS_reaction"], [110, 1, 1, "", "petsc_grayscott_fullyimplicit"], [110, 1, 1, "", "petsc_grayscott_multiimplicit"], [110, 1, 1, "", "petsc_grayscott_semiimplicit"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full": [[110, 3, 1, "", "formFunction"], [110, 3, 1, "", "formJacobian"], [110, 2, 1, "", "localX"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction": [[110, 3, 1, "", "formFunction"], [110, 3, 1, "", "formJacobian"], [110, 2, 1, "", "localX"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit": [[110, 2, 1, "", "dtype_f"], [110, 3, 1, "", "eval_f"], [110, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit": [[110, 2, 1, "", "AMat"], [110, 2, 1, "", "Id"], [110, 2, 1, "", "dtype_f"], [110, 2, 1, "", "dtype_u"], [110, 2, 1, "", "dx"], [110, 2, 1, "", "dy"], [110, 3, 1, "", "eval_f"], [110, 2, 1, "", "ksp"], [110, 2, 1, "", "localX"], [110, 2, 1, "", "snes"], [110, 2, 1, "", "snes_itercount"], [110, 2, 1, "", "snes_ncalls"], [110, 3, 1, "", "solve_system_1"], [110, 3, 1, "", "solve_system_2"], [110, 3, 1, "", "u_exact"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit": [[110, 2, 1, "", "dtype_f"], [110, 3, 1, "", "eval_f"], [110, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_MPIFFT": [[111, 1, 1, "", "grayscott_imex_diffusion"], [111, 1, 1, "", "grayscott_imex_linear"], [111, 1, 1, "", "grayscott_mi_diffusion"], [111, 1, 1, "", "grayscott_mi_linear"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion": [[111, 2, 1, "", "Ku"], [111, 2, 1, "", "Kv"], [111, 2, 1, "", "X"], [111, 2, 1, "", "dtype_f"], [111, 2, 1, "", "dtype_u"], [111, 3, 1, "", "eval_f"], [111, 2, 1, "", "fft"], [111, 2, 1, "", "ndim"], [111, 3, 1, "", "solve_system"], [111, 3, 1, "", "u_exact"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear": [[111, 3, 1, "", "eval_f"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion": [[111, 2, 1, "", "Ku"], [111, 2, 1, "", "Kv"], [111, 2, 1, "", "X"], [111, 2, 1, "", "dtype_f"], [111, 3, 1, "", "eval_f"], [111, 2, 1, "", "fft"], [111, 2, 1, "", "ndim"], [111, 3, 1, "", "solve_system_1"], [111, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear": [[111, 2, 1, "", "dtype_f"], [111, 3, 1, "", "eval_f"], [111, 3, 1, "", "solve_system_1"], [111, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.HarmonicOscillator": [[112, 1, 1, "", "harmonic_oscillator"]], "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator": [[112, 2, 1, "", "dtype_f"], [112, 2, 1, "", "dtype_u"], [112, 3, 1, "", "eval_f"], [112, 3, 1, "", "eval_hamiltonian"], [112, 3, 1, "", "u_exact"], [112, 3, 1, "", "u_init"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced": [[113, 1, 1, "", "fenics_heat"], [113, 1, 1, "", "fenics_heat_mass"], [113, 1, 1, "", "fenics_heat_mass_timebc"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat": [[113, 2, 1, "", "K"], [113, 2, 1, "", "M"], [113, 2, 1, "", "V"], [113, 3, 1, "", "apply_mass_matrix"], [113, 2, 1, "", "bc"], [113, 2, 1, "", "dtype_f"], [113, 2, 1, "", "dtype_u"], [113, 3, 1, "", "eval_f"], [113, 2, 1, "", "g"], [113, 3, 1, "", "solve_system"], [113, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass": [[113, 2, 1, "", "K"], [113, 2, 1, "", "M"], [113, 2, 1, "", "V"], [113, 2, 1, "", "bc"], [113, 2, 1, "", "bc_hom"], [113, 3, 1, "", "eval_f"], [113, 2, 1, "", "fix_bc_for_residual"], [113, 3, 1, "", "fix_residual"], [113, 2, 1, "", "g"], [113, 3, 1, "", "solve_system"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc": [[113, 2, 1, "", "K"], [113, 2, 1, "", "M"], [113, 2, 1, "", "V"], [113, 2, 1, "", "bc"], [113, 2, 1, "", "bc_hom"], [113, 2, 1, "", "fix_bc_for_residual"], [113, 2, 1, "", "g"], [113, 3, 1, "", "solve_system"], [113, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced": [[114, 1, 1, "", "heat2d_petsc_forced"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced": [[114, 2, 1, "", "A"], [114, 2, 1, "", "Id"], [114, 2, 1, "", "dtype_f"], [114, 2, 1, "", "dtype_u"], [114, 2, 1, "", "dx"], [114, 2, 1, "", "dy"], [114, 3, 1, "", "eval_f"], [114, 2, 1, "", "ksp"], [114, 2, 1, "", "ksp_itercount"], [114, 2, 1, "", "ksp_ncalls"], [114, 3, 1, "", "solve_system"], [114, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_ND_FD": [[115, 1, 1, "", "heatNd_forced"], [115, 1, 1, "", "heatNd_unforced"]], "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced": [[115, 2, 1, "", "dtype_f"], [115, 3, 1, "", "eval_f"], [115, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced": [[115, 2, 1, "", "A"], [115, 2, 1, "", "Id"], [115, 3, 1, "", "u_exact"]], "implementations.problem_classes.HenonHeiles": [[117, 1, 1, "", "henon_heiles"]], "implementations.problem_classes.HenonHeiles.henon_heiles": [[117, 2, 1, "", "dtype_f"], [117, 2, 1, "", "dtype_u"], [117, 3, 1, "", "eval_f"], [117, 3, 1, "", "eval_hamiltonian"], [117, 3, 1, "", "u_exact"]], "implementations.problem_classes.LogisticEquation": [[118, 1, 1, "", "logistics_equation"]], "implementations.problem_classes.LogisticEquation.logistics_equation": [[118, 2, 1, "", "dtype_f"], [118, 2, 1, "", "dtype_u"], [118, 3, 1, "", "eval_f"], [118, 3, 1, "", "solve_system"], [118, 3, 1, "", "u_exact"]], "implementations.problem_classes.Lorenz": [[119, 1, 1, "", "LorenzAttractor"]], "implementations.problem_classes.Lorenz.LorenzAttractor": [[119, 2, 1, "", "dtype_f"], [119, 2, 1, "", "dtype_u"], [119, 3, 1, "", "eval_f"], [119, 3, 1, "", "solve_system"], [119, 3, 1, "", "u_exact"], [119, 2, 1, "", "work_counter"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT": [[120, 1, 1, "", "nonlinearschroedinger_fully_implicit"], [120, 1, 1, "", "nonlinearschroedinger_imex"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit": [[120, 2, 1, "", "dtype_f"], [120, 2, 1, "", "dtype_u"], [120, 3, 1, "", "eval_f"], [120, 3, 1, "", "solve_system"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex": [[120, 2, 1, "", "K2"], [120, 2, 1, "", "X"], [120, 2, 1, "", "dtype_f"], [120, 2, 1, "", "dtype_u"], [120, 3, 1, "", "eval_f"], [120, 2, 1, "", "fft"], [120, 3, 1, "", "solve_system"], [120, 3, 1, "", "u_exact"]], "implementations.problem_classes.OuterSolarSystem": [[121, 1, 1, "", "outer_solar_system"]], "implementations.problem_classes.OuterSolarSystem.outer_solar_system": [[121, 2, 1, "id0", "G"], [121, 2, 1, "", "dtype_f"], [121, 2, 1, "", "dtype_u"], [121, 3, 1, "", "eval_f"], [121, 3, 1, "", "eval_hamiltonian"], [121, 3, 1, "", "u_exact"]], "implementations.problem_classes.PenningTrap_3D": [[122, 1, 1, "", "penningtrap"]], "implementations.problem_classes.PenningTrap_3D.penningtrap": [[122, 3, 1, "", "boris_solver"], [122, 3, 1, "", "build_f"], [122, 2, 1, "", "dtype_f"], [122, 2, 1, "", "dtype_u"], [122, 3, 1, "", "eval_f"], [122, 3, 1, "", "fast_interactions"], [122, 3, 1, "", "get_interactions"], [122, 3, 1, "", "u_exact"], [122, 3, 1, "", "u_init"], [122, 2, 1, "", "work_counter"]], "implementations.problem_classes.Piline": [[123, 1, 1, "", "piline"]], "implementations.problem_classes.Piline.piline": [[123, 2, 1, "", "dtype_f"], [123, 2, 1, "", "dtype_u"], [123, 3, 1, "", "eval_f"], [123, 3, 1, "", "solve_system"], [123, 3, 1, "", "u_exact"]], "implementations.problem_classes.Quench": [[124, 1, 1, "", "Quench"], [124, 1, 1, "", "QuenchIMEX"]], "implementations.problem_classes.Quench.Quench": [[124, 2, 1, "", "A"], [124, 2, 1, "", "Id"], [124, 2, 1, "", "dtype_f"], [124, 2, 1, "", "dtype_u"], [124, 2, 1, "", "dx"], [124, 3, 1, "", "eval_f"], [124, 3, 1, "", "eval_f_non_linear"], [124, 3, 1, "", "get_non_linear_Jacobian"], [124, 2, 1, "", "leak"], [124, 3, 1, "", "solve_system"], [124, 3, 1, "", "u_exact"], [124, 2, 1, "", "xv"]], "implementations.problem_classes.Quench.QuenchIMEX": [[124, 2, 1, "", "dtype_f"], [124, 3, 1, "", "eval_f"], [124, 3, 1, "", "solve_system"], [124, 3, 1, "", "u_exact"]], "implementations.problem_classes.TestEquation_0D": [[125, 1, 1, "", "testequation0d"]], "implementations.problem_classes.TestEquation_0D.testequation0d": [[125, 2, 1, "", "A"], [125, 2, 1, "", "dtype_f"], [125, 2, 1, "", "dtype_u"], [125, 3, 1, "", "eval_f"], [125, 3, 1, "", "setup_GPU"], [125, 3, 1, "", "solve_system"], [125, 3, 1, "", "splu"], [125, 3, 1, "", "u_exact"], [125, 2, 1, "", "xp"], [125, 2, 1, "", "xsp"]], "implementations.problem_classes.Van_der_Pol_implicit": [[126, 1, 1, "", "vanderpol"]], "implementations.problem_classes.Van_der_Pol_implicit.vanderpol": [[126, 2, 1, "", "dtype_f"], [126, 2, 1, "", "dtype_u"], [126, 3, 1, "", "eval_f"], [126, 3, 1, "", "solve_system"], [126, 3, 1, "", "u_exact"], [126, 2, 1, "", "work_counters"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic": [[127, 1, 1, "", "fenics_vortex_2d"], [127, 1, 1, "", "fenics_vortex_2d_mass"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d": [[127, 2, 1, "", "K"], [127, 2, 1, "", "M"], [127, 2, 1, "", "V"], [127, 3, 1, "", "apply_mass_matrix"], [127, 2, 1, "", "dtype_f"], [127, 2, 1, "", "dtype_u"], [127, 3, 1, "", "eval_f"], [127, 3, 1, "", "solve_system"], [127, 3, 1, "", "u_exact"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass": [[127, 2, 1, "", "K"], [127, 2, 1, "", "M"], [127, 2, 1, "", "V"], [127, 3, 1, "", "eval_f"], [127, 3, 1, "", "solve_system"]], "implementations.problem_classes.acoustic_helpers": [[129, 0, 0, "-", "buildFDMatrix"], [130, 0, 0, "-", "buildWave1DMatrix"], [131, 0, 0, "-", "standard_integrators"]], "implementations.problem_classes.acoustic_helpers.buildFDMatrix": [[129, 6, 1, "", "getBCLeft"], [129, 6, 1, "", "getBCRight"], [129, 6, 1, "", "getHorizontalDx"], [129, 6, 1, "", "getMatrix"]], "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix": [[130, 6, 1, "", "getWave1DAdvectionMatrix"], [130, 6, 1, "", "getWave1DMatrix"], [130, 6, 1, "", "getWaveBCLeft"], [130, 6, 1, "", "getWaveBCRight"]], "implementations.problem_classes.acoustic_helpers.standard_integrators": [[131, 1, 1, "", "bdf2"], [131, 1, 1, "", "dirk"], [131, 1, 1, "", "rk_imex"], [131, 1, 1, "", "trapezoidal"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2": [[131, 3, 1, "", "firsttimestep"], [131, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk": [[131, 3, 1, "", "f"], [131, 3, 1, "", "f_solve"], [131, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex": [[131, 3, 1, "", "f_fast"], [131, 3, 1, "", "f_fast_solve"], [131, 3, 1, "", "f_slow"], [131, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal": [[131, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers": [[133, 0, 0, "-", "build2DFDMatrix"], [134, 0, 0, "-", "buildBoussinesq2DMatrix"], [135, 0, 0, "-", "buildFDMatrix"], [136, 0, 0, "-", "helper_classes"], [137, 0, 0, "-", "standard_integrators"], [138, 0, 0, "-", "unflatten"]], "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix": [[133, 6, 1, "", "get2DMatrix"], [133, 6, 1, "", "get2DMesh"], [133, 6, 1, "", "get2DUpwindMatrix"], [133, 6, 1, "", "getBCHorizontal"], [133, 6, 1, "", "getBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix": [[134, 6, 1, "", "getBoussinesq2DMatrix"], [134, 6, 1, "", "getBoussinesq2DUpwindMatrix"], [134, 6, 1, "", "getBoussinesqBCHorizontal"], [134, 6, 1, "", "getBoussinesqBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildFDMatrix": [[135, 6, 1, "", "getBCLeft"], [135, 6, 1, "", "getBCRight"], [135, 6, 1, "", "getMatrix"], [135, 6, 1, "", "getUpwindMatrix"]], "implementations.problem_classes.boussinesq_helpers.helper_classes": [[136, 1, 1, "", "Callback"], [136, 1, 1, "", "logging"]], "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback": [[136, 3, 1, "", "getcounter"], [136, 3, 1, "", "getresidual"]], "implementations.problem_classes.boussinesq_helpers.helper_classes.logging": [[136, 3, 1, "", "add"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators": [[137, 1, 1, "", "SplitExplicit"], [137, 1, 1, "", "bdf2"], [137, 1, 1, "", "dirk"], [137, 1, 1, "", "rk_imex"], [137, 1, 1, "", "trapezoidal"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit": [[137, 3, 1, "", "NumSmallTimeSteps"], [137, 3, 1, "", "RK3Lin"], [137, 3, 1, "", "VerletLin"], [137, 3, 1, "", "f_fast"], [137, 3, 1, "", "f_fastMom"], [137, 3, 1, "", "f_fastTher"], [137, 3, 1, "", "f_slow"], [137, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2": [[137, 3, 1, "", "f"], [137, 3, 1, "", "f_solve"], [137, 3, 1, "", "firsttimestep"], [137, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk": [[137, 3, 1, "", "f"], [137, 3, 1, "", "f_solve"], [137, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex": [[137, 3, 1, "", "f_fast"], [137, 3, 1, "", "f_fast_solve"], [137, 3, 1, "", "f_slow"], [137, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal": [[137, 3, 1, "", "f"], [137, 3, 1, "", "f_solve"], [137, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.unflatten": [[138, 6, 1, "", "unflatten"]], "implementations.problem_classes.generic_ND_FD": [[139, 1, 1, "", "GenericNDimFinDiff"]], "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff": [[139, 2, 1, "", "A"], [139, 2, 1, "", "Id"], [139, 2, 1, "", "dtype_f"], [139, 2, 1, "", "dtype_u"], [139, 4, 1, "", "dx"], [139, 3, 1, "", "eval_f"], [139, 3, 1, "", "get_default_sweeper_class"], [139, 4, 1, "", "grids"], [139, 4, 1, "", "ndim"], [139, 3, 1, "", "solve_system"], [139, 2, 1, "", "xvalues"]], "implementations.problem_classes.nonlinear_ODE_1": [[140, 1, 1, "", "nonlinear_ODE_1"]], "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1": [[140, 2, 1, "", "dtype_f"], [140, 2, 1, "", "dtype_u"], [140, 3, 1, "", "eval_f"], [140, 2, 1, "", "newton_itercount"], [140, 2, 1, "", "newton_ncalls"], [140, 3, 1, "", "solve_system"], [140, 3, 1, "", "u_exact"]], "implementations.problem_classes.polynomial_test_problem": [[141, 1, 1, "", "polynomial_testequation"], [141, 1, 1, "", "polynomial_testequation_IMEX"]], "implementations.problem_classes.polynomial_test_problem.polynomial_testequation": [[141, 2, 1, "", "dtype_f"], [141, 2, 1, "", "dtype_u"], [141, 3, 1, "", "eval_f"], [141, 3, 1, "", "solve_system"], [141, 3, 1, "", "u_exact"]], "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX": [[141, 2, 1, "", "dtype_f"], [141, 3, 1, "", "eval_f"]], "implementations.sweeper_classes": [[143, 0, 0, "-", "Multistep"], [144, 0, 0, "-", "Runge_Kutta"], [145, 0, 0, "-", "Runge_Kutta_Nystrom"], [146, 0, 0, "-", "boris_2nd_order"], [147, 0, 0, "-", "explicit"], [148, 0, 0, "-", "generic_implicit"], [149, 0, 0, "-", "generic_implicit_MPI"], [150, 0, 0, "-", "imex_1st_order"], [151, 0, 0, "-", "imex_1st_order_MPI"], [152, 0, 0, "-", "imex_1st_order_mass"], [153, 0, 0, "-", "multi_implicit"], [154, 0, 0, "-", "verlet"]], "implementations.sweeper_classes.Multistep": [[143, 1, 1, "", "AdamsBashforthExplicit1Step"], [143, 1, 1, "", "AdamsMoultonImplicit1Step"], [143, 1, 1, "", "AdamsMoultonImplicit2Step"], [143, 1, 1, "", "BackwardEuler"], [143, 1, 1, "", "Cache"], [143, 1, 1, "", "MultiStep"]], "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step": [[143, 2, 1, "", "alpha"], [143, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step": [[143, 2, 1, "", "alpha"], [143, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step": [[143, 2, 1, "", "alpha"], [143, 2, 1, "", "beta"], [143, 3, 1, "", "generate_starting_values"]], "implementations.sweeper_classes.Multistep.BackwardEuler": [[143, 2, 1, "", "alpha"], [143, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.Cache": [[143, 3, 1, "", "update"]], "implementations.sweeper_classes.Multistep.MultiStep": [[143, 2, 1, "", "alpha"], [143, 2, 1, "", "beta"], [143, 3, 1, "", "compute_end_point"], [143, 3, 1, "", "compute_residual"], [143, 3, 1, "", "generate_starting_values"], [143, 3, 1, "", "predict"], [143, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.Runge_Kutta": [[144, 1, 1, "", "ARK54"], [144, 1, 1, "", "ARK548L2SA"], [144, 1, 1, "", "ARK548L2SAERK"], [144, 1, 1, "", "ARK548L2SAERK2"], [144, 1, 1, "", "ARK548L2SAESDIRK"], [144, 1, 1, "", "ARK548L2SAESDIRK2"], [144, 1, 1, "", "BackwardEuler"], [144, 1, 1, "", "ButcherTableau"], [144, 1, 1, "", "ButcherTableauEmbedded"], [144, 1, 1, "", "Cash_Karp"], [144, 1, 1, "", "CrankNicholson"], [144, 1, 1, "", "DIRK43"], [144, 1, 1, "", "ESDIRK53"], [144, 1, 1, "", "ExplicitMidpointMethod"], [144, 1, 1, "", "ForwardEuler"], [144, 1, 1, "", "Heun_Euler"], [144, 1, 1, "", "ImplicitMidpointMethod"], [144, 1, 1, "", "RK4"], [144, 1, 1, "", "RungeKutta"], [144, 1, 1, "", "RungeKuttaIMEX"]], "implementations.sweeper_classes.Runge_Kutta.ARK54": [[144, 2, 1, "", "ButcherTableauClass"], [144, 2, 1, "", "ButcherTableauClass_explicit"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "matrix_explicit"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA": [[144, 2, 1, "", "ButcherTableauClass"], [144, 2, 1, "", "ButcherTableauClass_explicit"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "matrix_explicit"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK": [[144, 2, 1, "", "ButcherTableauClass"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2": [[144, 2, 1, "", "matrix"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK": [[144, 2, 1, "", "matrix"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2": [[144, 2, 1, "", "ButcherTableauClass"], [144, 2, 1, "", "gamma"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "i"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.BackwardEuler": [[144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.Cash_Karp": [[144, 2, 1, "", "ButcherTableauClass"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.CrankNicholson": [[144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.DIRK43": [[144, 2, 1, "", "ButcherTableauClass"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ESDIRK53": [[144, 2, 1, "", "ButcherTableauClass"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod": [[144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ForwardEuler": [[144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.Heun_Euler": [[144, 2, 1, "", "ButcherTableauClass"], [144, 3, 1, "", "get_update_order"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod": [[144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RK4": [[144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RungeKutta": [[144, 2, 1, "", "ButcherTableauClass"], [144, 3, 1, "", "compute_end_point"], [144, 3, 1, "", "get_Butcher_tableau"], [144, 3, 1, "", "get_Q_matrix"], [144, 3, 1, "", "get_full_f"], [144, 3, 1, "", "get_update_order"], [144, 3, 1, "", "integrate"], [144, 4, 1, "", "level"], [144, 2, 1, "", "matrix"], [144, 2, 1, "", "nodes"], [144, 3, 1, "", "predict"], [144, 3, 1, "", "update_nodes"], [144, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX": [[144, 2, 1, "", "ButcherTableauClass_explicit"], [144, 3, 1, "", "get_Butcher_tableau_explicit"], [144, 3, 1, "", "integrate"], [144, 2, 1, "", "matrix_explicit"], [144, 3, 1, "", "predict"], [144, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom": [[145, 1, 1, "", "RKN"], [145, 1, 1, "", "RungeKuttaNystrom"], [145, 1, 1, "", "Velocity_Verlet"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom": [[145, 3, 1, "", "compute_end_point"], [145, 3, 1, "", "get_full_f"], [145, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.boris_2nd_order": [[146, 1, 1, "", "boris_2nd_order"]], "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order": [[146, 2, 1, "", "S"], [146, 2, 1, "", "SQ"], [146, 2, 1, "", "ST"], [146, 2, 1, "", "Sx"], [146, 3, 1, "", "compute_end_point"], [146, 3, 1, "", "get_scalar_problems_manysweep_mats"], [146, 3, 1, "", "get_scalar_problems_picardsweep_mats"], [146, 3, 1, "", "get_scalar_problems_sweeper_mats"], [146, 3, 1, "", "get_sweeper_mats"], [146, 3, 1, "", "integrate"], [146, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.explicit": [[147, 1, 1, "", "explicit"]], "implementations.sweeper_classes.explicit.explicit": [[147, 2, 1, "", "QE"], [147, 3, 1, "", "compute_end_point"], [147, 3, 1, "", "integrate"], [147, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.generic_implicit": [[148, 1, 1, "", "generic_implicit"]], "implementations.sweeper_classes.generic_implicit.generic_implicit": [[148, 2, 1, "", "QI"], [148, 3, 1, "", "compute_end_point"], [148, 3, 1, "", "integrate"], [148, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.generic_implicit_MPI": [[149, 1, 1, "", "SweeperMPI"], [149, 1, 1, "", "generic_implicit_MPI"]], "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI": [[149, 4, 1, "", "comm"], [149, 3, 1, "", "compute_end_point"], [149, 3, 1, "", "compute_residual"], [149, 3, 1, "", "predict"], [149, 4, 1, "", "rank"]], "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI": [[149, 3, 1, "", "compute_end_point"], [149, 3, 1, "", "integrate"], [149, 2, 1, "", "rank"], [149, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order": [[150, 1, 1, "", "imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order.imex_1st_order": [[150, 2, 1, "", "QE"], [150, 2, 1, "", "QI"], [150, 3, 1, "", "compute_end_point"], [150, 3, 1, "", "get_scalar_problems_manysweep_mat"], [150, 3, 1, "", "get_scalar_problems_sweeper_mats"], [150, 3, 1, "", "get_sweeper_mats"], [150, 3, 1, "", "integrate"], [150, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order_MPI": [[151, 1, 1, "", "imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI": [[151, 3, 1, "", "compute_end_point"], [151, 3, 1, "", "integrate"], [151, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order_mass": [[152, 1, 1, "", "imex_1st_order_mass"]], "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass": [[152, 3, 1, "", "compute_end_point"], [152, 3, 1, "", "compute_residual"], [152, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.multi_implicit": [[153, 1, 1, "", "multi_implicit"]], "implementations.sweeper_classes.multi_implicit.multi_implicit": [[153, 2, 1, "", "Q1"], [153, 2, 1, "", "Q2"], [153, 3, 1, "", "compute_end_point"], [153, 3, 1, "", "integrate"], [153, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.verlet": [[154, 1, 1, "", "verlet"]], "implementations.sweeper_classes.verlet.verlet": [[154, 2, 1, "", "QQ"], [154, 2, 1, "", "QT"], [154, 2, 1, "", "Qx"], [154, 3, 1, "", "compute_end_point"], [154, 3, 1, "", "integrate"], [154, 2, 1, "", "qQ"], [154, 3, 1, "", "update_nodes"]], "implementations.transfer_classes": [[156, 0, 0, "-", "BaseTransfer_mass"], [157, 0, 0, "-", "TransferFenicsMesh"], [158, 0, 0, "-", "TransferMesh"], [159, 0, 0, "-", "TransferMesh_FFT"], [160, 0, 0, "-", "TransferMesh_FFT2D"], [161, 0, 0, "-", "TransferMesh_MPIFFT"], [162, 0, 0, "-", "TransferMesh_NoCoarse"], [163, 0, 0, "-", "TransferPETScDMDA"], [164, 0, 0, "-", "TransferParticles_NoCoarse"]], "implementations.transfer_classes.BaseTransfer_mass": [[156, 1, 1, "", "base_transfer_mass"]], "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass": [[156, 2, 1, "", "coarse"], [156, 2, 1, "", "fine"], [156, 2, 1, "", "logger"], [156, 2, 1, "", "params"], [156, 3, 1, "", "prolong"], [156, 3, 1, "", "prolong_f"], [156, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferFenicsMesh": [[157, 1, 1, "", "mesh_to_mesh_fenics"]], "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics": [[157, 3, 1, "", "project"], [157, 3, 1, "", "prolong"], [157, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh": [[158, 1, 1, "", "mesh_to_mesh"]], "implementations.transfer_classes.TransferMesh.mesh_to_mesh": [[158, 2, 1, "", "Pspace"], [158, 2, 1, "", "Rspace"], [158, 3, 1, "", "prolong"], [158, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_FFT": [[159, 1, 1, "", "mesh_to_mesh_fft"]], "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft": [[159, 2, 1, "", "irfft_object_fine"], [159, 3, 1, "", "prolong"], [159, 3, 1, "", "restrict"], [159, 2, 1, "", "rfft_object_coarse"]], "implementations.transfer_classes.TransferMesh_FFT2D": [[160, 1, 1, "", "mesh_to_mesh_fft2d"]], "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d": [[160, 2, 1, "", "Pspace"], [160, 2, 1, "", "Rspace"], [160, 3, 1, "", "prolong"], [160, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_MPIFFT": [[161, 1, 1, "", "fft_to_fft"]], "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft": [[161, 3, 1, "", "prolong"], [161, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_NoCoarse": [[162, 1, 1, "", "mesh_to_mesh"]], "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh": [[162, 2, 1, "", "Pspace"], [162, 2, 1, "", "Rspace"], [162, 3, 1, "", "prolong"], [162, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferPETScDMDA": [[163, 1, 1, "", "mesh_to_mesh_petsc_dmda"]], "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda": [[163, 3, 1, "", "prolong"], [163, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferParticles_NoCoarse": [[164, 1, 1, "", "particles_to_particles"]], "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles": [[164, 3, 1, "", "prolong"], [164, 3, 1, "", "restrict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "contributor": 1, "coven": 1, "code": [1, 5, 8, 36], "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": [1, 7], "1": [1, 191], "correct": [1, 14], "2": [1, 192], "warn": 1, "3": [1, 193], "temporari": 1, "ban": 1, "4": [1, 194], "perman": 1, "attribut": [1, 6], "how": [2, 3, 9], "contribut": [2, 3, 4, 9], "pysdc": [2, 3, 5, 6, 9, 18, 36, 192, 197], "welcom": [3, 9], "featur": [3, 4, 9], "get": [3, 9, 193], "start": [3, 9], "cite": [3, 9], "acknowledg": [3, 9], "recommend": 4, "pull": 4, "request": 4, "main": 4, "branch": 4, "releas": 4, "develop": 4, "continu": [5, 198], "integr": 5, "lint": 5, "test": [5, 9, 14, 15, 191], "coverag": 5, "except": 5, "document": [5, 8, 9], "gener": 5, "name": 6, "convent": 6, "first": [6, 191, 192, 195], "definit": 6, "packag": [6, 37, 52, 61, 62, 65, 82, 88, 128, 132, 142, 155], "modul": [6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "class": [6, 7, 74], "function": 6, "variabl": 6, "privat": 6, "public": 6, "constant": 6, "custom": 7, "implement": [7, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "problem": [7, 10, 12, 35, 48, 191], "user": 9, "guid": 9, "tutori": 9, "playground": 9, "project": [9, 11, 17], "api": 9, "allen": 10, "cahn": 10, "from": 10, "bayreuth": 10, "verif": 10, "benchmark": 10, "applic": 10, "further": 10, "relat": 10, "file": 10, "solv": 11, "differenti": 11, "algebra": 11, "equat": [11, 16], "sdc": [11, 15, 16, 33, 35, 194, 198], "overview": 11, "theoret": [11, 33], "detail": 11, "second": 12, "order": 12, "simpl": 12, "solar": 12, "system": [12, 13], "fermi": 12, "pasta": 12, "ulam": 12, "tsingou": 12, "parallel": [13, 35, 196, 197], "time": [13, 197], "simul": 13, "multi": [13, 14, 198], "modal": 13, "energi": 13, "what": [13, 16], "ar": 13, "switch": 13, "process": 13, "power": 13, "pi": 13, "line": 13, "buck": 13, "convert": 13, "batteri": [13, 100], "drain": 13, "model": 13, "rdc": 14, "ration": 14, "defer": 14, "converg": [14, 17], "level": [14, 46], "pfasst": [14, 17, 34, 195, 196], "resili": 15, "reproduct": 15, "plot": 15, "adapt": [15, 67], "paper": 15, "i": 16, "fastest": 16, "variant": 16, "fisher": 16, "grai": 16, "scott": 16, "asymptot": 17, "organis": 17, "compress": 18, "introduct": 18, "method": 18, "proof": 18, "concept": 18, "fast": 33, "wave": 33, "slow": 33, "result": [33, 36], "acoust": 33, "advect": [33, 195], "exampl": 33, "boussinesq": 33, "matrix": 34, "base": [34, 74], "version": 34, "propag": 34, "attempt": 35, "differ": 35, "precondition": 35, "node": [35, 47, 193], "mpi": [35, 196], "simplifi": 35, "newton": 35, "nonlinear": 35, "perform": 36, "analysi": 36, "python": 36, "jobscript": 36, "core": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "submodul": [37, 52, 62, 65, 82, 88, 128, 132, 142, 155], "content": [37, 52, 61, 62, 65, 82, 88, 128, 132, 142, 155], "basetransf": 38, "colloc": [39, 191, 193], "common": 40, "descript": [40, 48], "control": [41, 196], "convergencecontrol": 42, "error": [43, 74], "hook": 44, "lagrang": 45, "spacetransf": 49, "step": [50, 191, 192, 193, 194, 195, 196, 197, 198], "sweeper": [51, 192, 193], "helper": [52, 53, 54, 55, 56, 57, 58, 59, 60], "nccl_commun": 53, "plot_help": 54, "problem_help": 55, "pysdc_help": 56, "setup_help": 57, "stats_help": 58, "transfer_help": 59, "visualization_tool": 60, "subpackag": [61, 88], "controller_class": [62, 63, 64], "controller_mpi": 63, "controller_nonmpi": 64, "convergence_controller_class": [65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "adaptive_colloc": 66, "basic_restart": 68, "check_converg": 69, "check_iteration_estim": 70, "crash": 71, "estimate_contraction_factor": 72, "estimate_embedded_error": 73, "estimate_extrapolation_error": 74, "abstract": 74, "extrapol": 74, "estim": [74, 198], "estimate_polynomial_error": 75, "hotrod": 76, "inexact": 77, "interpolate_between_restart": 78, "spread_step_s": 79, "step_size_limit": 80, "store_uold": 81, "datatype_class": [82, 83, 84, 85, 86, 87], "cupy_mesh": 83, "fenics_mesh": 84, "mesh": 85, "particl": [86, 194], "petsc_vec": 87, "problem_class": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141], "acousticadvection_1d_fd_imex": 89, "advectiondiffusionequation_1d_fft": 90, "advectionequation_nd_fd": 91, "allencahn_1d_fd": 92, "allencahn_2d_fd": 93, "allencahn_2d_fd_gpu": 94, "allencahn_2d_fft": 95, "allencahn_2d_fft_gpu": 96, "allencahn_mpifft": 97, "allencahn_temp_mpifft": 98, "auzinger_implicit": 99, "boussinesq_2d_fd_imex": 101, "buckconvert": 102, "discontinuoustestod": 103, "fastwaveslowwave_0d": 104, "fermipastaulamtsing": 105, "fullsolarsystem": 106, "generalizedfisher_1d_fd_implicit": 107, "generalizedfisher_1d_petsc": 108, "grayscott_1d_fenics_implicit": 109, "grayscott_2d_petsc_period": 110, "grayscott_mpifft": 111, "harmonicoscil": 112, "heatequation_1d_fenics_matrix_forc": 113, "heatequation_2d_petsc_forc": 114, "heatequation_nd_fd": 115, "heatequation_nd_fd_cupi": 116, "henonheil": 117, "logisticequ": 118, "lorenz": 119, "nonlinearschroedinger_mpifft": 120, "outersolarsystem": 121, "penningtrap_3d": 122, "pilin": 123, "quench": 124, "testequation_0d": 125, "van_der_pol_implicit": 126, "vorticityvelocity_2d_fenics_period": 127, "acoustic_help": [128, 129, 130, 131], "buildfdmatrix": [129, 135], "buildwave1dmatrix": 130, "standard_integr": [131, 137], "boussinesq_help": [132, 133, 134, 135, 136, 137, 138], "build2dfdmatrix": 133, "buildboussinesq2dmatrix": 134, "helper_class": 136, "unflatten": 138, "generic_nd_fd": 139, "nonlinear_ode_1": 140, "polynomial_test_problem": 141, "sweeper_class": [142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "multistep": [143, 195], "runge_kutta": 144, "runge_kutta_nystrom": 145, "boris_2nd_ord": 146, "explicit": 147, "generic_implicit": 148, "generic_implicit_mpi": 149, "imex_1st_ord": 150, "imex_1st_order_mpi": 151, "imex_1st_order_mass": 152, "multi_implicit": 153, "verlet": 154, "transfer_class": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "basetransfer_mass": 156, "transferfenicsmesh": 157, "transfermesh": 158, "transfermesh_fft": 159, "transfermesh_fft2d": 160, "transfermesh_mpifft": 161, "transfermesh_nocoars": 162, "transferpetscdmda": 163, "transferparticles_nocoars": 164, "A": [191, 192, 193, 194, 195, 196, 197, 198], "spatial": [191, 194], "part": [191, 192, 193, 194, 195, 196, 197, 198], "setup": 191, "b": [191, 192, 193, 194, 195, 196, 197, 198], "accuraci": 191, "check": 191, "c": [191, 192, 193, 194, 195, 196, 197, 198], "d": [191, 194], "data": 192, "structur": 192, "my": [192, 195], "us": 192, "": 192, "frontend": 192, "statist": 193, "new": 193, "ad": 193, "studi": 193, "type": 193, "multilevel": [194, 195], "transfer": 194, "oper": 194, "hierarchi": [194, 195], "v": 194, "mlsdc": 194, "5": 195, "run": 195, "6": 196, "advanc": [196, 198], "The": 196, "nonmpi": 196, "odd": 196, "tempor": 196, "distribut": 196, "7": 197, "extern": 197, "librari": 197, "fenic": 197, "mpi4pi": 197, "fft": 197, "fourier": 197, "transform": 197, "space": 197, "petsc": 197, "8": 198, "topic": 198, "visual": 198, "residu": 198, "iter": 198, "x": 198, "To": 198}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Changelog": [[0, "changelog"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "How to contribute to pySDC": [[2, "how-to-contribute-to-pysdc"]], "Welcome to pySDC!": [[3, "welcome-to-pysdc"], [9, "welcome-to-pysdc"]], "Features": [[3, "features"], [9, "features"]], "Getting started": [[3, "getting-started"], [9, "getting-started"]], "How to cite": [[3, "how-to-cite"], [9, "how-to-cite"]], "Contributing": [[3, "contributing"], [9, "contributing"]], "Acknowledgements": [[3, "acknowledgements"], [9, "acknowledgements"]], "Recommendations for pull requests": [[4, "recommendations-for-pull-requests"]], "Contributing to the main branch": [[4, "contributing-to-the-main-branch"]], "Release development branches": [[4, "release-development-branches"]], "Feature development branches": [[4, "feature-development-branches"]], "Continuous Integration in pySDC": [[5, "continuous-integration-in-pysdc"]], "Code linting": [[5, "code-linting"]], "Code testing": [[5, "code-testing"]], "Code coverage": [[5, "code-coverage"]], "Coverage exceptions": [[5, "coverage-exceptions"]], "Documentation generation": [[5, "documentation-generation"]], "Naming conventions in pySDC": [[6, "naming-conventions-in-pysdc"]], "First definitions": [[6, "first-definitions"]], "Packages and modules names": [[6, "packages-and-modules-names"]], "Class names": [[6, "class-names"]], "Function and variables names": [[6, "function-and-variables-names"]], "Private and public attributes": [[6, "private-and-public-attributes"]], "Constants": [[6, "constants"]], "Custom implementation guidelines": [[7, "custom-implementation-guidelines"]], "Implementing a custom problem class": [[7, "implementing-a-custom-problem-class"]], "Documenting Code": [[8, "documenting-code"]], "Tests": [[9, "tests"], [15, "tests"]], "User Guide": [[9, "user-guide"]], "Tutorial": [[9, "tutorial"]], "Playgrounds": [[9, "playgrounds"]], "Projects": [[9, "projects"]], "API documentation": [[9, "api-documentation"]], "Allen-Cahn problems from Bayreuth": [[10, "allen-cahn-problems-from-bayreuth"]], "Verification": [[10, "verification"]], "Benchmark": [[10, "benchmark"]], "Application": [[10, "application"]], "Further/related files": [[10, "further-related-files"]], "Solving differential algebraic equations with SDC": [[11, "solving-differential-algebraic-equations-with-sdc"]], "Project overview": [[11, "project-overview"]], "Theoretical details": [[11, "theoretical-details"]], "Second-order Problems": [[12, "second-order-problems"]], "Simple problems": [[12, "simple-problems"]], "Solar system problem": [[12, "solar-system-problem"]], "Fermi-Pasta-Ulam-Tsingou problem": [[12, "fermi-pasta-ulam-tsingou-problem"]], "Parallel-in-time simulation for multi-modal energy systems": [[13, "parallel-in-time-simulation-for-multi-modal-energy-systems"]], "What are switching processes in power systems?": [[13, "what-are-switching-processes-in-power-systems"]], "Pi-line": [[13, "pi-line"]], "Buck converter": [[13, "buck-converter"]], "Battery drain model": [[13, "battery-drain-model"]], "RDC: Rational Deferred Corrections": [[14, "rdc-rational-deferred-corrections"]], "Testing RDC convergence": [[14, "testing-rdc-convergence"]], "Multi-level RDC and PFASST with RDC": [[14, "multi-level-rdc-and-pfasst-with-rdc"]], "Resilience in SDC": [[15, "resilience-in-sdc"]], "Reproduction of the plots in the adaptive SDC paper": [[15, "reproduction-of-the-plots-in-the-adaptive-sdc-paper"]], "What is the fastest SDC variant?": [[16, "what-is-the-fastest-sdc-variant"]], "Fisher and Gray-Scott equations": [[16, "fisher-and-gray-scott-equations"]], "Asymptotic convergence of PFASST": [[17, "asymptotic-convergence-of-pfasst"]], "Organisation of the project": [[17, "organisation-of-the-project"]], "Compression in pySDC": [[18, "compression-in-pysdc"]], "Introduction": [[18, "introduction"]], "Methods": [[18, "methods"]], "Proof of Concept": [[18, "proof-of-concept"]], "Fast-Wave-Slow-Wave SDC": [[33, "fast-wave-slow-wave-sdc"]], "Theoretical results": [[33, "theoretical-results"]], "Acoustic-advection example": [[33, "acoustic-advection-example"]], "Boussinesq example": [[33, "boussinesq-example"]], "Matrix-based versions of PFASST": [[34, "matrix-based-versions-of-pfasst"]], "Matrix-based PFASST": [[34, "matrix-based-pfasst"]], "Propagator-based PFASST": [[34, "propagator-based-pfasst"]], "Attempts to parallelize SDC": [[35, "attempts-to-parallelize-sdc"]], "Different preconditioners for SDC": [[35, "different-preconditioners-for-sdc"]], "Node-parallel SDC with MPI": [[35, "node-parallel-sdc-with-mpi"], [35, "id1"]], "Simplified Newton for nonlinear problems": [[35, "simplified-newton-for-nonlinear-problems"]], "Performance analysis of pySDC": [[36, "performance-analysis-of-pysdc"]], "Python codes": [[36, "python-codes"]], "Jobscripts": [[36, "jobscripts"]], "Results": [[36, "results"]], "core package": [[37, "core-package"]], "Submodules": [[37, "submodules"], [52, "submodules"], [62, "submodules"], [65, "submodules"], [82, "submodules"], [88, "submodules"], [128, "submodules"], [132, "submodules"], [142, "submodules"], [155, "submodules"]], "Module contents": [[37, "module-core"], [52, "module-helpers"], [61, "module-implementations"], [62, "module-implementations.controller_classes"], [65, "module-implementations.convergence_controller_classes"], [82, "module-implementations.datatype_classes"], [88, "module-implementations.problem_classes"], [128, "module-implementations.problem_classes.acoustic_helpers"], [132, "module-implementations.problem_classes.boussinesq_helpers"], [142, "module-implementations.sweeper_classes"], [155, "module-implementations.transfer_classes"]], "core.BaseTransfer module": [[38, "module-core.BaseTransfer"]], "core.Collocation module": [[39, "module-core.Collocation"]], "core.Common module": [[40, "module-core.Common"]], "Description": [[40, "description"], [48, "description"]], "core.Controller module": [[41, "module-core.Controller"]], "core.ConvergenceController module": [[42, "module-core.ConvergenceController"]], "core.Errors module": [[43, "module-core.Errors"]], "core.Hooks module": [[44, "module-core.Hooks"]], "core.Lagrange module": [[45, "module-core.Lagrange"]], "core.Level module": [[46, "module-core.Level"]], "core.Nodes module": [[47, "module-core.Nodes"]], "core.Problem module": [[48, "module-core.Problem"]], "core.SpaceTransfer module": [[49, "module-core.SpaceTransfer"]], "core.Step module": [[50, "module-core.Step"]], "core.Sweeper module": [[51, "module-core.Sweeper"]], "helpers package": [[52, "helpers-package"]], "helpers.NCCL_communicator module": [[53, "module-helpers.NCCL_communicator"]], "helpers.plot_helper module": [[54, "module-helpers.plot_helper"]], "helpers.problem_helper module": [[55, "module-helpers.problem_helper"]], "helpers.pysdc_helper module": [[56, "module-helpers.pysdc_helper"]], "helpers.setup_helper module": [[57, "module-helpers.setup_helper"]], "helpers.stats_helper module": [[58, "module-helpers.stats_helper"]], "helpers.transfer_helper module": [[59, "module-helpers.transfer_helper"]], "helpers.visualization_tools module": [[60, "module-helpers.visualization_tools"]], "implementations package": [[61, "implementations-package"]], "Subpackages": [[61, "subpackages"], [88, "subpackages"]], "implementations.controller_classes package": [[62, "implementations-controller-classes-package"]], "implementations.controller_classes.controller_MPI module": [[63, "module-implementations.controller_classes.controller_MPI"]], "implementations.controller_classes.controller_nonMPI module": [[64, "module-implementations.controller_classes.controller_nonMPI"]], "implementations.convergence_controller_classes package": [[65, "implementations-convergence-controller-classes-package"]], "implementations.convergence_controller_classes.adaptive_collocation module": [[66, "module-implementations.convergence_controller_classes.adaptive_collocation"]], "}": [[66, "id3"]], "implementations.convergence_controller_classes.adaptivity module": [[67, "module-implementations.convergence_controller_classes.adaptivity"]], "implementations.convergence_controller_classes.basic_restarting module": [[68, "module-implementations.convergence_controller_classes.basic_restarting"]], "implementations.convergence_controller_classes.check_convergence module": [[69, "module-implementations.convergence_controller_classes.check_convergence"]], "implementations.convergence_controller_classes.check_iteration_estimator module": [[70, "module-implementations.convergence_controller_classes.check_iteration_estimator"]], "implementations.convergence_controller_classes.crash module": [[71, "module-implementations.convergence_controller_classes.crash"]], "implementations.convergence_controller_classes.estimate_contraction_factor module": [[72, "module-implementations.convergence_controller_classes.estimate_contraction_factor"]], "implementations.convergence_controller_classes.estimate_embedded_error module": [[73, "module-implementations.convergence_controller_classes.estimate_embedded_error"]], "implementations.convergence_controller_classes.estimate_extrapolation_error module": [[74, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"]], "Abstract base class for extrapolated error estimates": [[74, "abstract-base-class-for-extrapolated-error-estimates"]], "implementations.convergence_controller_classes.estimate_polynomial_error module": [[75, "module-implementations.convergence_controller_classes.estimate_polynomial_error"]], "implementations.convergence_controller_classes.hotrod module": [[76, "module-implementations.convergence_controller_classes.hotrod"]], "implementations.convergence_controller_classes.inexactness module": [[77, "module-implementations.convergence_controller_classes.inexactness"]], "implementations.convergence_controller_classes.interpolate_between_restarts module": [[78, "module-implementations.convergence_controller_classes.interpolate_between_restarts"]], "implementations.convergence_controller_classes.spread_step_sizes module": [[79, "module-implementations.convergence_controller_classes.spread_step_sizes"]], "implementations.convergence_controller_classes.step_size_limiter module": [[80, "module-implementations.convergence_controller_classes.step_size_limiter"]], "implementations.convergence_controller_classes.store_uold module": [[81, "module-implementations.convergence_controller_classes.store_uold"]], "implementations.datatype_classes package": [[82, "implementations-datatype-classes-package"]], "implementations.datatype_classes.cupy_mesh module": [[83, "module-implementations.datatype_classes.cupy_mesh"]], "implementations.datatype_classes.fenics_mesh module": [[84, "module-implementations.datatype_classes.fenics_mesh"]], "implementations.datatype_classes.mesh module": [[85, "module-implementations.datatype_classes.mesh"]], "implementations.datatype_classes.particles module": [[86, "module-implementations.datatype_classes.particles"]], "implementations.datatype_classes.petsc_vec module": [[87, "module-implementations.datatype_classes.petsc_vec"]], "implementations.problem_classes package": [[88, "implementations-problem-classes-package"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex module": [[89, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT module": [[90, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"]], "implementations.problem_classes.AdvectionEquation_ND_FD module": [[91, "module-implementations.problem_classes.AdvectionEquation_ND_FD"]], "implementations.problem_classes.AllenCahn_1D_FD module": [[92, "module-implementations.problem_classes.AllenCahn_1D_FD"]], "implementations.problem_classes.AllenCahn_2D_FD module": [[93, "module-implementations.problem_classes.AllenCahn_2D_FD"]], "implementations.problem_classes.AllenCahn_2D_FD_gpu module": [[94, "implementations-problem-classes-allencahn-2d-fd-gpu-module"]], "implementations.problem_classes.AllenCahn_2D_FFT module": [[95, "module-implementations.problem_classes.AllenCahn_2D_FFT"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu module": [[96, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"]], "implementations.problem_classes.AllenCahn_MPIFFT module": [[97, "module-implementations.problem_classes.AllenCahn_MPIFFT"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT module": [[98, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"]], "implementations.problem_classes.Auzinger_implicit module": [[99, "module-implementations.problem_classes.Auzinger_implicit"]], "implementations.problem_classes.Battery module": [[100, "module-implementations.problem_classes.Battery"]], "implementations.problem_classes.Boussinesq_2D_FD_imex module": [[101, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"]], "implementations.problem_classes.BuckConverter module": [[102, "module-implementations.problem_classes.BuckConverter"]], "implementations.problem_classes.DiscontinuousTestODE module": [[103, "module-implementations.problem_classes.DiscontinuousTestODE"]], "implementations.problem_classes.FastWaveSlowWave_0D module": [[104, "module-implementations.problem_classes.FastWaveSlowWave_0D"]], "implementations.problem_classes.FermiPastaUlamTsingou module": [[105, "module-implementations.problem_classes.FermiPastaUlamTsingou"]], "implementations.problem_classes.FullSolarSystem module": [[106, "module-implementations.problem_classes.FullSolarSystem"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit module": [[107, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc module": [[108, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit module": [[109, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic module": [[110, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"]], "implementations.problem_classes.GrayScott_MPIFFT module": [[111, "module-implementations.problem_classes.GrayScott_MPIFFT"]], "implementations.problem_classes.HarmonicOscillator module": [[112, "module-implementations.problem_classes.HarmonicOscillator"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced module": [[113, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced module": [[114, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"]], "implementations.problem_classes.HeatEquation_ND_FD module": [[115, "module-implementations.problem_classes.HeatEquation_ND_FD"]], "implementations.problem_classes.HeatEquation_ND_FD_CuPy module": [[116, "implementations-problem-classes-heatequation-nd-fd-cupy-module"]], "implementations.problem_classes.HenonHeiles module": [[117, "module-implementations.problem_classes.HenonHeiles"]], "implementations.problem_classes.LogisticEquation module": [[118, "module-implementations.problem_classes.LogisticEquation"]], "implementations.problem_classes.Lorenz module": [[119, "module-implementations.problem_classes.Lorenz"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT module": [[120, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"]], "implementations.problem_classes.OuterSolarSystem module": [[121, "module-implementations.problem_classes.OuterSolarSystem"]], "implementations.problem_classes.PenningTrap_3D module": [[122, "module-implementations.problem_classes.PenningTrap_3D"]], "implementations.problem_classes.Piline module": [[123, "module-implementations.problem_classes.Piline"]], "implementations.problem_classes.Quench module": [[124, "module-implementations.problem_classes.Quench"]], "implementations.problem_classes.TestEquation_0D module": [[125, "module-implementations.problem_classes.TestEquation_0D"]], "implementations.problem_classes.Van_der_Pol_implicit module": [[126, "module-implementations.problem_classes.Van_der_Pol_implicit"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic module": [[127, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"]], "implementations.problem_classes.acoustic_helpers package": [[128, "implementations-problem-classes-acoustic-helpers-package"]], "implementations.problem_classes.acoustic_helpers.buildFDMatrix module": [[129, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"]], "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix module": [[130, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"]], "implementations.problem_classes.acoustic_helpers.standard_integrators module": [[131, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"]], "implementations.problem_classes.boussinesq_helpers package": [[132, "implementations-problem-classes-boussinesq-helpers-package"]], "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix module": [[133, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix module": [[134, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildFDMatrix module": [[135, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"]], "implementations.problem_classes.boussinesq_helpers.helper_classes module": [[136, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators module": [[137, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"]], "implementations.problem_classes.boussinesq_helpers.unflatten module": [[138, "module-implementations.problem_classes.boussinesq_helpers.unflatten"]], "implementations.problem_classes.generic_ND_FD module": [[139, "module-implementations.problem_classes.generic_ND_FD"]], "implementations.problem_classes.nonlinear_ODE_1 module": [[140, "module-implementations.problem_classes.nonlinear_ODE_1"]], "implementations.problem_classes.polynomial_test_problem module": [[141, "module-implementations.problem_classes.polynomial_test_problem"]], "implementations.sweeper_classes package": [[142, "implementations-sweeper-classes-package"]], "implementations.sweeper_classes.Multistep module": [[143, "module-implementations.sweeper_classes.Multistep"]], "implementations.sweeper_classes.Runge_Kutta module": [[144, "module-implementations.sweeper_classes.Runge_Kutta"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom module": [[145, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"]], "implementations.sweeper_classes.boris_2nd_order module": [[146, "module-implementations.sweeper_classes.boris_2nd_order"]], "implementations.sweeper_classes.explicit module": [[147, "module-implementations.sweeper_classes.explicit"]], "implementations.sweeper_classes.generic_implicit module": [[148, "module-implementations.sweeper_classes.generic_implicit"]], "implementations.sweeper_classes.generic_implicit_MPI module": [[149, "module-implementations.sweeper_classes.generic_implicit_MPI"]], "implementations.sweeper_classes.imex_1st_order module": [[150, "module-implementations.sweeper_classes.imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order_MPI module": [[151, "module-implementations.sweeper_classes.imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_mass module": [[152, "module-implementations.sweeper_classes.imex_1st_order_mass"]], "implementations.sweeper_classes.multi_implicit module": [[153, "module-implementations.sweeper_classes.multi_implicit"]], "implementations.sweeper_classes.verlet module": [[154, "module-implementations.sweeper_classes.verlet"]], "implementations.transfer_classes package": [[155, "implementations-transfer-classes-package"]], "implementations.transfer_classes.BaseTransfer_mass module": [[156, "module-implementations.transfer_classes.BaseTransfer_mass"]], "implementations.transfer_classes.TransferFenicsMesh module": [[157, "module-implementations.transfer_classes.TransferFenicsMesh"]], "implementations.transfer_classes.TransferMesh module": [[158, "module-implementations.transfer_classes.TransferMesh"]], "implementations.transfer_classes.TransferMesh_FFT module": [[159, "module-implementations.transfer_classes.TransferMesh_FFT"]], "implementations.transfer_classes.TransferMesh_FFT2D module": [[160, "module-implementations.transfer_classes.TransferMesh_FFT2D"]], "implementations.transfer_classes.TransferMesh_MPIFFT module": [[161, "module-implementations.transfer_classes.TransferMesh_MPIFFT"]], "implementations.transfer_classes.TransferMesh_NoCoarse module": [[162, "module-implementations.transfer_classes.TransferMesh_NoCoarse"]], "implementations.transfer_classes.TransferPETScDMDA module": [[163, "module-implementations.transfer_classes.TransferPETScDMDA"]], "implementations.transfer_classes.TransferParticles_NoCoarse module": [[164, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "Step-1: A first spatial problem": [[191, "step-1-a-first-spatial-problem"]], "Part A: Spatial problem setup": [[191, "part-a-spatial-problem-setup"]], "Part B: Spatial accuracy check": [[191, "part-b-spatial-accuracy-check"]], "Part C: Collocation problem setup": [[191, "part-c-collocation-problem-setup"]], "Part D: Collocation accuracy test": [[191, "part-d-collocation-accuracy-test"]], "Step-2: Data structures and my first sweeper": [[192, "step-2-data-structures-and-my-first-sweeper"]], "Part A: Step data structure": [[192, "part-a-step-data-structure"]], "Part B: My first sweeper": [[192, "part-b-my-first-sweeper"]], "Part C: Using pySDC\u2019s frontend": [[192, "part-c-using-pysdc-s-frontend"]], "Step-3: Statistics and a new sweeper": [[193, "step-3-statistics-and-a-new-sweeper"]], "Part A: Getting statistics": [[193, "part-a-getting-statistics"]], "Part B: Adding statistics": [[193, "part-b-adding-statistics"]], "Part C: Studying collocation node types": [[193, "part-c-studying-collocation-node-types"]], "Step-4: Multilevel SDC": [[194, "step-4-multilevel-sdc"]], "Part A: Spatial transfer operators": [[194, "part-a-spatial-transfer-operators"]], "Part B: Multilevel hierarchy": [[194, "part-b-multilevel-hierarchy"]], "Part C: SDC vs. MLSDC": [[194, "part-c-sdc-vs-mlsdc"]], "Part D: MLSDC with particles": [[194, "part-d-mlsdc-with-particles"]], "Step-5: PFASST": [[195, "step-5-pfasst"]], "Part A: Multistep multilevel hierarchy": [[195, "part-a-multistep-multilevel-hierarchy"]], "Part B: My first PFASST run": [[195, "part-b-my-first-pfasst-run"]], "Part C: Advection and PFASST": [[195, "part-c-advection-and-pfasst"]], "Step-6: Advanced PFASST controllers": [[196, "step-6-advanced-pfasst-controllers"]], "Part A: The nonMPI controller": [[196, "part-a-the-nonmpi-controller"]], "Part B: Odd temporal distribution": [[196, "part-b-odd-temporal-distribution"]], "Part C: MPI parallelization": [[196, "part-c-mpi-parallelization"]], "Step-7: pySDC with external libraries": [[197, "step-7-pysdc-with-external-libraries"]], "Part A: pySDC and FEniCS": [[197, "part-a-pysdc-and-fenics"]], "Part B: mpi4py-fft for parallel Fourier transforms": [[197, "part-b-mpi4py-fft-for-parallel-fourier-transforms"]], "Part C: Time-parallel pySDC with space-parallel PETSc": [[197, "part-c-time-parallel-pysdc-with-space-parallel-petsc"]], "Step-8: Advanced topics": [[198, "step-8-advanced-topics"]], "Part A: Visualizing Residuals": [[198, "part-a-visualizing-residuals"]], "Part B: Multi-step SDC": [[198, "part-b-multi-step-sdc"]], "Part C: Iteration estimator": [[198, "part-c-iteration-estimator"]], "Part X: To be continued\u2026": [[198, "part-x-to-be-continued"]]}, "indexentries": {"core": [[37, "module-core"]], "module": [[37, "module-core"], [38, "module-core.BaseTransfer"], [39, "module-core.Collocation"], [40, "module-core.Common"], [41, "module-core.Controller"], [42, "module-core.ConvergenceController"], [43, "module-core.Errors"], [44, "module-core.Hooks"], [45, "module-core.Lagrange"], [46, "module-core.Level"], [47, "module-core.Nodes"], [48, "module-core.Problem"], [49, "module-core.SpaceTransfer"], [50, "module-core.Step"], [51, "module-core.Sweeper"], [52, "module-helpers"], [53, "module-helpers.NCCL_communicator"], [54, "module-helpers.plot_helper"], [55, "module-helpers.problem_helper"], [56, "module-helpers.pysdc_helper"], [57, "module-helpers.setup_helper"], [58, "module-helpers.stats_helper"], [59, "module-helpers.transfer_helper"], [60, "module-helpers.visualization_tools"], [61, "module-implementations"], [62, "module-implementations.controller_classes"], [63, "module-implementations.controller_classes.controller_MPI"], [64, "module-implementations.controller_classes.controller_nonMPI"], [65, "module-implementations.convergence_controller_classes"], [66, "module-implementations.convergence_controller_classes.adaptive_collocation"], [67, "module-implementations.convergence_controller_classes.adaptivity"], [68, "module-implementations.convergence_controller_classes.basic_restarting"], [69, "module-implementations.convergence_controller_classes.check_convergence"], [70, "module-implementations.convergence_controller_classes.check_iteration_estimator"], [71, "module-implementations.convergence_controller_classes.crash"], [72, "module-implementations.convergence_controller_classes.estimate_contraction_factor"], [73, "module-implementations.convergence_controller_classes.estimate_embedded_error"], [74, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"], [75, "module-implementations.convergence_controller_classes.estimate_polynomial_error"], [76, "module-implementations.convergence_controller_classes.hotrod"], [77, "module-implementations.convergence_controller_classes.inexactness"], [78, "module-implementations.convergence_controller_classes.interpolate_between_restarts"], [79, "module-implementations.convergence_controller_classes.spread_step_sizes"], [80, "module-implementations.convergence_controller_classes.step_size_limiter"], [81, "module-implementations.convergence_controller_classes.store_uold"], [82, "module-implementations.datatype_classes"], [83, "module-implementations.datatype_classes.cupy_mesh"], [84, "module-implementations.datatype_classes.fenics_mesh"], [85, "module-implementations.datatype_classes.mesh"], [86, "module-implementations.datatype_classes.particles"], [87, "module-implementations.datatype_classes.petsc_vec"], [88, "module-implementations.problem_classes"], [89, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"], [90, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"], [91, "module-implementations.problem_classes.AdvectionEquation_ND_FD"], [92, "module-implementations.problem_classes.AllenCahn_1D_FD"], [93, "module-implementations.problem_classes.AllenCahn_2D_FD"], [95, "module-implementations.problem_classes.AllenCahn_2D_FFT"], [96, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"], [97, "module-implementations.problem_classes.AllenCahn_MPIFFT"], [98, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"], [99, "module-implementations.problem_classes.Auzinger_implicit"], [100, "module-implementations.problem_classes.Battery"], [101, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"], [102, "module-implementations.problem_classes.BuckConverter"], [103, "module-implementations.problem_classes.DiscontinuousTestODE"], [104, "module-implementations.problem_classes.FastWaveSlowWave_0D"], [105, "module-implementations.problem_classes.FermiPastaUlamTsingou"], [106, "module-implementations.problem_classes.FullSolarSystem"], [107, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"], [108, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"], [109, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"], [110, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"], [111, "module-implementations.problem_classes.GrayScott_MPIFFT"], [112, "module-implementations.problem_classes.HarmonicOscillator"], [113, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"], [114, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"], [115, "module-implementations.problem_classes.HeatEquation_ND_FD"], [117, "module-implementations.problem_classes.HenonHeiles"], [118, "module-implementations.problem_classes.LogisticEquation"], [119, "module-implementations.problem_classes.Lorenz"], [120, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"], [121, "module-implementations.problem_classes.OuterSolarSystem"], [122, "module-implementations.problem_classes.PenningTrap_3D"], [123, "module-implementations.problem_classes.Piline"], [124, "module-implementations.problem_classes.Quench"], [125, "module-implementations.problem_classes.TestEquation_0D"], [126, "module-implementations.problem_classes.Van_der_Pol_implicit"], [127, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"], [128, "module-implementations.problem_classes.acoustic_helpers"], [129, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"], [130, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"], [131, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"], [132, "module-implementations.problem_classes.boussinesq_helpers"], [133, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"], [134, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"], [135, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"], [136, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"], [137, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"], [138, "module-implementations.problem_classes.boussinesq_helpers.unflatten"], [139, "module-implementations.problem_classes.generic_ND_FD"], [140, "module-implementations.problem_classes.nonlinear_ODE_1"], [141, "module-implementations.problem_classes.polynomial_test_problem"], [142, "module-implementations.sweeper_classes"], [143, "module-implementations.sweeper_classes.Multistep"], [144, "module-implementations.sweeper_classes.Runge_Kutta"], [145, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"], [146, "module-implementations.sweeper_classes.boris_2nd_order"], [147, "module-implementations.sweeper_classes.explicit"], [148, "module-implementations.sweeper_classes.generic_implicit"], [149, "module-implementations.sweeper_classes.generic_implicit_MPI"], [150, "module-implementations.sweeper_classes.imex_1st_order"], [151, "module-implementations.sweeper_classes.imex_1st_order_MPI"], [152, "module-implementations.sweeper_classes.imex_1st_order_mass"], [153, "module-implementations.sweeper_classes.multi_implicit"], [154, "module-implementations.sweeper_classes.verlet"], [155, "module-implementations.transfer_classes"], [156, "module-implementations.transfer_classes.BaseTransfer_mass"], [157, "module-implementations.transfer_classes.TransferFenicsMesh"], [158, "module-implementations.transfer_classes.TransferMesh"], [159, "module-implementations.transfer_classes.TransferMesh_FFT"], [160, "module-implementations.transfer_classes.TransferMesh_FFT2D"], [161, "module-implementations.transfer_classes.TransferMesh_MPIFFT"], [162, "module-implementations.transfer_classes.TransferMesh_NoCoarse"], [163, "module-implementations.transfer_classes.TransferPETScDMDA"], [164, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "base_transfer (class in core.basetransfer)": [[38, "core.BaseTransfer.base_transfer"]], "coarse (base_transfer attribute)": [[38, "core.BaseTransfer.base_transfer.coarse"]], "core.basetransfer": [[38, "module-core.BaseTransfer"]], "fine (base_transfer attribute)": [[38, "core.BaseTransfer.base_transfer.fine"]], "get_transfer_matrix_q() (base_transfer static method)": [[38, "core.BaseTransfer.base_transfer.get_transfer_matrix_Q"]], "logger (base_transfer attribute)": [[38, "core.BaseTransfer.base_transfer.logger"]], "params (base_transfer attribute)": [[38, "core.BaseTransfer.base_transfer.params"]], "prolong() (base_transfer method)": [[38, "core.BaseTransfer.base_transfer.prolong"]], "prolong_f() (base_transfer method)": [[38, "core.BaseTransfer.base_transfer.prolong_f"]], "restrict() (base_transfer method)": [[38, "core.BaseTransfer.base_transfer.restrict"]], "collbase (class in core.collocation)": [[39, "core.Collocation.CollBase"]], "qmat (collbase attribute)": [[39, "core.Collocation.CollBase.Qmat"]], "smat (collbase attribute)": [[39, "core.Collocation.CollBase.Smat"]], "core.collocation": [[39, "module-core.Collocation"]], "delta_m (collbase attribute)": [[39, "core.Collocation.CollBase.delta_m"]], "evaluate() (collbase static method)": [[39, "core.Collocation.CollBase.evaluate"]], "left_is_node (collbase attribute)": [[39, "core.Collocation.CollBase.left_is_node"]], "nodes (collbase attribute)": [[39, "core.Collocation.CollBase.nodes"]], "num_nodes (collbase attribute)": [[39, "core.Collocation.CollBase.num_nodes"]], "right_is_node (collbase attribute)": [[39, "core.Collocation.CollBase.right_is_node"]], "tleft (collbase attribute)": [[39, "core.Collocation.CollBase.tleft"]], "tright (collbase attribute)": [[39, "core.Collocation.CollBase.tright"]], "weights (collbase attribute)": [[39, "core.Collocation.CollBase.weights"]], "registerparams (class in core.common)": [[40, "core.Common.RegisterParams"]], "_parnames (registerparams attribute)": [[40, "core.Common.RegisterParams._parNames"]], "_parnamesreadonly (registerparams attribute)": [[40, "core.Common.RegisterParams._parNamesReadOnly"]], "core.common": [[40, "module-core.Common"]], "params (registerparams attribute)": [[40, "core.Common.RegisterParams.params"]], "params (registerparams property)": [[40, "id0"]], "add_convergence_controller() (controller method)": [[41, "core.Controller.controller.add_convergence_controller"]], "add_hook() (controller method)": [[41, "core.Controller.controller.add_hook"]], "controller (class in core.controller)": [[41, "core.Controller.controller"]], "core.controller": [[41, "module-core.Controller"]], "dump_setup() (controller method)": [[41, "core.Controller.controller.dump_setup"]], "get_convergence_controllers_as_table() (controller method)": [[41, "core.Controller.controller.get_convergence_controllers_as_table"]], "hooks (controller property)": [[41, "core.Controller.controller.hooks"]], "return_stats() (controller method)": [[41, "core.Controller.controller.return_stats"]], "run() (controller method)": [[41, "core.Controller.controller.run"]], "setup_convergence_controllers() (controller method)": [[41, "core.Controller.controller.setup_convergence_controllers"]], "welcome_message() (controller method)": [[41, "core.Controller.controller.welcome_message"]], "convergencecontroller (class in core.convergencecontroller)": [[42, "core.ConvergenceController.ConvergenceController"]], "pars (class in core.convergencecontroller)": [[42, "core.ConvergenceController.Pars"]], "recv() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.Recv"], [42, "core.ConvergenceController.ConvergenceController.recv"]], "send() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.Send"], [42, "core.ConvergenceController.ConvergenceController.send"]], "status (class in core.convergencecontroller)": [[42, "core.ConvergenceController.Status"]], "add_variable() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.add_variable"]], "check_iteration_status() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.check_iteration_status"]], "check_parameters() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.check_parameters"]], "convergence_control() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.convergence_control"]], "core.convergencecontroller": [[42, "module-core.ConvergenceController"]], "debug() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.debug"]], "dependencies() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.dependencies"]], "determine_restart() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.determine_restart"]], "get_new_step_size() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.get_new_step_size"]], "log() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.log"]], "post_iteration_processing() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.post_iteration_processing"]], "post_spread_processing() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.post_spread_processing"]], "post_step_processing() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.post_step_processing"]], "pre_iteration_processing() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.pre_iteration_processing"]], "prepare_mpi_datatypes() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.prepare_MPI_datatypes"]], "prepare_mpi_logical_operations() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.prepare_MPI_logical_operations"]], "prepare_next_block() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.prepare_next_block"]], "reset_buffers_nonmpi() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.reset_buffers_nonMPI"]], "reset_status_variables() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.reset_status_variables"]], "reset_variable() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.reset_variable"]], "setup() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.setup"]], "setup_status_variables() (convergencecontroller method)": [[42, "core.ConvergenceController.ConvergenceController.setup_status_variables"]], "collocationerror": [[43, "core.Errors.CollocationError"]], "communicationerror": [[43, "core.Errors.CommunicationError"]], "controllererror": [[43, "core.Errors.ControllerError"]], "convergenceerror": [[43, "core.Errors.ConvergenceError"]], "dataerror": [[43, "core.Errors.DataError"]], "parametererror": [[43, "core.Errors.ParameterError"]], "problemerror": [[43, "core.Errors.ProblemError"]], "readonlyerror": [[43, "core.Errors.ReadOnlyError"]], "transfererror": [[43, "core.Errors.TransferError"]], "unlockerror": [[43, "core.Errors.UnlockError"]], "core.errors": [[43, "module-core.Errors"]], "entry (class in core.hooks)": [[44, "core.Hooks.Entry"]], "__num_restarts (hooks attribute)": [[44, "core.Hooks.hooks.__num_restarts"]], "__stats (hooks attribute)": [[44, "core.Hooks.hooks.__stats"]], "add_to_stats() (hooks method)": [[44, "core.Hooks.hooks.add_to_stats"]], "core.hooks": [[44, "module-core.Hooks"]], "entry (hooks attribute)": [[44, "core.Hooks.hooks.entry"], [44, "id0"]], "hooks (class in core.hooks)": [[44, "core.Hooks.hooks"]], "increment_stats() (hooks method)": [[44, "core.Hooks.hooks.increment_stats"]], "iter (entry attribute)": [[44, "core.Hooks.Entry.iter"]], "level (entry attribute)": [[44, "core.Hooks.Entry.level"]], "logger (hooks attribute)": [[44, "core.Hooks.hooks.logger"]], "meta_data (hooks attribute)": [[44, "core.Hooks.hooks.meta_data"]], "num_restarts (entry attribute)": [[44, "core.Hooks.Entry.num_restarts"]], "post_comm() (hooks method)": [[44, "core.Hooks.hooks.post_comm"]], "post_iteration() (hooks method)": [[44, "core.Hooks.hooks.post_iteration"]], "post_predict() (hooks method)": [[44, "core.Hooks.hooks.post_predict"]], "post_run() (hooks method)": [[44, "core.Hooks.hooks.post_run"]], "post_setup() (hooks method)": [[44, "core.Hooks.hooks.post_setup"]], "post_step() (hooks method)": [[44, "core.Hooks.hooks.post_step"]], "post_sweep() (hooks method)": [[44, "core.Hooks.hooks.post_sweep"]], "pre_comm() (hooks method)": [[44, "core.Hooks.hooks.pre_comm"]], "pre_iteration() (hooks method)": [[44, "core.Hooks.hooks.pre_iteration"]], "pre_predict() (hooks method)": [[44, "core.Hooks.hooks.pre_predict"]], "pre_run() (hooks method)": [[44, "core.Hooks.hooks.pre_run"]], "pre_setup() (hooks method)": [[44, "core.Hooks.hooks.pre_setup"]], "pre_step() (hooks method)": [[44, "core.Hooks.hooks.pre_step"]], "pre_sweep() (hooks method)": [[44, "core.Hooks.hooks.pre_sweep"]], "process (entry attribute)": [[44, "core.Hooks.Entry.process"]], "process_sweeper (entry attribute)": [[44, "core.Hooks.Entry.process_sweeper"]], "reset_stats() (hooks method)": [[44, "core.Hooks.hooks.reset_stats"]], "return_stats() (hooks method)": [[44, "core.Hooks.hooks.return_stats"]], "sweep (entry attribute)": [[44, "core.Hooks.Entry.sweep"]], "time (entry attribute)": [[44, "core.Hooks.Entry.time"]], "type (entry attribute)": [[44, "core.Hooks.Entry.type"]], "lagrangeapproximation (class in core.lagrange)": [[45, "core.Lagrange.LagrangeApproximation"]], "computefejerrule() (in module core.lagrange)": [[45, "core.Lagrange.computeFejerRule"]], "core.lagrange": [[45, "module-core.Lagrange"]], "getintegrationmatrix() (lagrangeapproximation method)": [[45, "core.Lagrange.LagrangeApproximation.getIntegrationMatrix"]], "getinterpolationmatrix() (lagrangeapproximation method)": [[45, "core.Lagrange.LagrangeApproximation.getInterpolationMatrix"]], "n (lagrangeapproximation property)": [[45, "core.Lagrange.LagrangeApproximation.n"]], "points (lagrangeapproximation attribute)": [[45, "core.Lagrange.LagrangeApproximation.points"]], "weights (lagrangeapproximation attribute)": [[45, "core.Lagrange.LagrangeApproximation.weights"]], "core.level": [[46, "module-core.Level"]], "dt (level property)": [[46, "core.Level.level.dt"]], "f (level attribute)": [[46, "core.Level.level.f"]], "fold (level attribute)": [[46, "core.Level.level.fold"]], "level (class in core.level)": [[46, "core.Level.level"]], "level_index (level attribute)": [[46, "core.Level.level.level_index"]], "params (level attribute)": [[46, "core.Level.level.params"]], "prob (level property)": [[46, "core.Level.level.prob"]], "reset_level() (level method)": [[46, "core.Level.level.reset_level"]], "status (level attribute)": [[46, "core.Level.level.status"]], "sweep (level property)": [[46, "core.Level.level.sweep"]], "tag (level property)": [[46, "core.Level.level.tag"]], "tau (level attribute)": [[46, "core.Level.level.tau"]], "time (level property)": [[46, "core.Level.level.time"]], "u (level attribute)": [[46, "core.Level.level.u"]], "uend (level attribute)": [[46, "core.Level.level.uend"]], "uold (level attribute)": [[46, "core.Level.level.uold"]], "nodeserror": [[47, "core.Nodes.NodesError"]], "nodesgenerator (class in core.nodes)": [[47, "core.Nodes.NodesGenerator"]], "core.nodes": [[47, "module-core.Nodes"]], "evalorthogpoly() (nodesgenerator method)": [[47, "core.Nodes.NodesGenerator.evalOrthogPoly"]], "getnodes() (nodesgenerator method)": [[47, "core.Nodes.NodesGenerator.getNodes"]], "getorthogpolycoefficients() (nodesgenerator method)": [[47, "core.Nodes.NodesGenerator.getOrthogPolyCoefficients"]], "gettridiagcoefficients() (nodesgenerator method)": [[47, "core.Nodes.NodesGenerator.getTridiagCoefficients"]], "node_type (nodesgenerator attribute)": [[47, "core.Nodes.NodesGenerator.node_type"]], "quad_type (nodesgenerator attribute)": [[47, "core.Nodes.NodesGenerator.quad_type"]], "workcounter (class in core.problem)": [[48, "core.Problem.WorkCounter"]], "apply_mass_matrix() (ptype method)": [[48, "core.Problem.ptype.apply_mass_matrix"]], "core.problem": [[48, "module-core.Problem"]], "decrement() (workcounter method)": [[48, "core.Problem.WorkCounter.decrement"]], "dtype_f (ptype attribute)": [[48, "core.Problem.ptype.dtype_f"]], "dtype_u (ptype attribute)": [[48, "core.Problem.ptype.dtype_u"]], "eval_f() (ptype method)": [[48, "core.Problem.ptype.eval_f"]], "f_init (ptype property)": [[48, "core.Problem.ptype.f_init"]], "generate_scipy_reference_solution() (ptype method)": [[48, "core.Problem.ptype.generate_scipy_reference_solution"]], "get_default_sweeper_class() (ptype class method)": [[48, "core.Problem.ptype.get_default_sweeper_class"]], "logger (ptype attribute)": [[48, "core.Problem.ptype.logger"], [48, "id0"]], "ptype (class in core.problem)": [[48, "core.Problem.ptype"]], "u_init (ptype property)": [[48, "core.Problem.ptype.u_init"]], "coarse_prob (space_transfer attribute)": [[49, "core.SpaceTransfer.space_transfer.coarse_prob"]], "core.spacetransfer": [[49, "module-core.SpaceTransfer"]], "fine_prob (space_transfer attribute)": [[49, "core.SpaceTransfer.space_transfer.fine_prob"]], "logger (space_transfer attribute)": [[49, "core.SpaceTransfer.space_transfer.logger"]], "params (space_transfer attribute)": [[49, "core.SpaceTransfer.space_transfer.params"]], "prolong() (space_transfer method)": [[49, "core.SpaceTransfer.space_transfer.prolong"]], "restrict() (space_transfer method)": [[49, "core.SpaceTransfer.space_transfer.restrict"]], "space_transfer (class in core.spacetransfer)": [[49, "core.SpaceTransfer.space_transfer"]], "connect_levels() (step method)": [[50, "core.Step.step.connect_levels"]], "core.step": [[50, "module-core.Step"]], "dt (step property)": [[50, "core.Step.step.dt"]], "init_step() (step method)": [[50, "core.Step.step.init_step"]], "levels (step attribute)": [[50, "core.Step.step.levels"]], "logger (step attribute)": [[50, "core.Step.step.logger"]], "next (step property)": [[50, "core.Step.step.next"]], "params (step attribute)": [[50, "core.Step.step.params"]], "prev (step property)": [[50, "core.Step.step.prev"]], "reset_step() (step method)": [[50, "core.Step.step.reset_step"]], "status (step attribute)": [[50, "core.Step.step.status"]], "step (class in core.step)": [[50, "core.Step.step"]], "time (step property)": [[50, "core.Step.step.time"]], "transfer() (step method)": [[50, "core.Step.step.transfer"]], "coll (sweeper attribute)": [[51, "core.Sweeper.sweeper.coll"]], "compute_end_point() (sweeper method)": [[51, "core.Sweeper.sweeper.compute_end_point"]], "compute_residual() (sweeper method)": [[51, "core.Sweeper.sweeper.compute_residual"]], "core.sweeper": [[51, "module-core.Sweeper"]], "get_qdelta_explicit() (sweeper method)": [[51, "core.Sweeper.sweeper.get_Qdelta_explicit"]], "get_qdelta_implicit() (sweeper method)": [[51, "core.Sweeper.sweeper.get_Qdelta_implicit"]], "integrate() (sweeper method)": [[51, "core.Sweeper.sweeper.integrate"]], "level (sweeper property)": [[51, "core.Sweeper.sweeper.level"]], "logger (sweeper attribute)": [[51, "core.Sweeper.sweeper.logger"]], "params (sweeper attribute)": [[51, "core.Sweeper.sweeper.params"]], "predict() (sweeper method)": [[51, "core.Sweeper.sweeper.predict"]], "rank (sweeper property)": [[51, "core.Sweeper.sweeper.rank"]], "sweeper (class in core.sweeper)": [[51, "core.Sweeper.sweeper"]], "update_nodes() (sweeper method)": [[51, "core.Sweeper.sweeper.update_nodes"]], "helpers": [[52, "module-helpers"]], "allreduce() (ncclcomm method)": [[53, "helpers.NCCL_communicator.NCCLComm.Allreduce"]], "ncclcomm (class in helpers.nccl_communicator)": [[53, "helpers.NCCL_communicator.NCCLComm"]], "reduce() (ncclcomm method)": [[53, "helpers.NCCL_communicator.NCCLComm.Reduce"]], "get_count() (ncclcomm static method)": [[53, "helpers.NCCL_communicator.NCCLComm.get_count"]], "get_dtype() (ncclcomm static method)": [[53, "helpers.NCCL_communicator.NCCLComm.get_dtype"]], "get_op() (ncclcomm method)": [[53, "helpers.NCCL_communicator.NCCLComm.get_op"]], "helpers.nccl_communicator": [[53, "module-helpers.NCCL_communicator"]], "figsize() (in module helpers.plot_helper)": [[54, "helpers.plot_helper.figsize"]], "figsize_by_journal() (in module helpers.plot_helper)": [[54, "helpers.plot_helper.figsize_by_journal"]], "helpers.plot_helper": [[54, "module-helpers.plot_helper"]], "newfig() (in module helpers.plot_helper)": [[54, "helpers.plot_helper.newfig"]], "savefig() (in module helpers.plot_helper)": [[54, "helpers.plot_helper.savefig"]], "setup_mpl() (in module helpers.plot_helper)": [[54, "helpers.plot_helper.setup_mpl"]], "get_1d_grid() (in module helpers.problem_helper)": [[55, "helpers.problem_helper.get_1d_grid"]], "get_finite_difference_matrix() (in module helpers.problem_helper)": [[55, "helpers.problem_helper.get_finite_difference_matrix"]], "get_finite_difference_stencil() (in module helpers.problem_helper)": [[55, "helpers.problem_helper.get_finite_difference_stencil"]], "get_steps() (in module helpers.problem_helper)": [[55, "helpers.problem_helper.get_steps"]], "helpers.problem_helper": [[55, "module-helpers.problem_helper"]], "frozenclass (class in helpers.pysdc_helper)": [[56, "helpers.pysdc_helper.FrozenClass"]], "__isfrozen (frozenclass attribute)": [[56, "helpers.pysdc_helper.FrozenClass.__isfrozen"]], "get() (frozenclass method)": [[56, "helpers.pysdc_helper.FrozenClass.get"]], "helpers.pysdc_helper": [[56, "module-helpers.pysdc_helper"]], "generate_description() (in module helpers.setup_helper)": [[57, "helpers.setup_helper.generate_description"]], "helpers.setup_helper": [[57, "module-helpers.setup_helper"]], "filter_stats() (in module helpers.stats_helper)": [[58, "helpers.stats_helper.filter_stats"]], "get_list_of_types() (in module helpers.stats_helper)": [[58, "helpers.stats_helper.get_list_of_types"]], "get_sorted() (in module helpers.stats_helper)": [[58, "helpers.stats_helper.get_sorted"]], "helpers.stats_helper": [[58, "module-helpers.stats_helper"]], "sort_stats() (in module helpers.stats_helper)": [[58, "helpers.stats_helper.sort_stats"]], "border_padding() (in module helpers.transfer_helper)": [[59, "helpers.transfer_helper.border_padding"]], "continue_periodic_array() (in module helpers.transfer_helper)": [[59, "helpers.transfer_helper.continue_periodic_array"]], "helpers.transfer_helper": [[59, "module-helpers.transfer_helper"]], "interpolation_matrix_1d() (in module helpers.transfer_helper)": [[59, "helpers.transfer_helper.interpolation_matrix_1d"]], "next_neighbors() (in module helpers.transfer_helper)": [[59, "helpers.transfer_helper.next_neighbors"]], "next_neighbors_periodic() (in module helpers.transfer_helper)": [[59, "helpers.transfer_helper.next_neighbors_periodic"]], "restriction_matrix_1d() (in module helpers.transfer_helper)": [[59, "helpers.transfer_helper.restriction_matrix_1d"]], "helpers.visualization_tools": [[60, "module-helpers.visualization_tools"]], "show_residual_across_simulation() (in module helpers.visualization_tools)": [[60, "helpers.visualization_tools.show_residual_across_simulation"]], "implementations": [[61, "module-implementations"]], "implementations.controller_classes": [[62, "module-implementations.controller_classes"]], "check_iteration_estimate() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.check_iteration_estimate"]], "controller_mpi (class in implementations.controller_classes.controller_mpi)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI"]], "default() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.default"]], "implementations.controller_classes.controller_mpi": [[63, "module-implementations.controller_classes.controller_MPI"]], "it_check() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.it_check"]], "it_coarse() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.it_coarse"]], "it_down() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.it_down"]], "it_fine() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.it_fine"]], "it_up() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.it_up"]], "pfasst() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.pfasst"]], "predict() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.predict"]], "recv() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.recv"]], "recv_full() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.recv_full"]], "restart_block() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.restart_block"]], "run() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.run"]], "send_full() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.send_full"]], "spread() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.spread"]], "wait_with_interrupt() (controller_mpi method)": [[63, "implementations.controller_classes.controller_MPI.controller_MPI.wait_with_interrupt"]], "controller_nonmpi (class in implementations.controller_classes.controller_nonmpi)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI"]], "default() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.default"]], "implementations.controller_classes.controller_nonmpi": [[64, "module-implementations.controller_classes.controller_nonMPI"]], "it_check() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_check"]], "it_coarse() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_coarse"]], "it_down() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_down"]], "it_fine() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_fine"]], "it_up() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_up"]], "pfasst() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.pfasst"]], "predict() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.predict"]], "recv_full() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.recv_full"]], "restart_block() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.restart_block"]], "run() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.run"]], "send_full() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.send_full"]], "spread() (controller_nonmpi method)": [[64, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.spread"]], "implementations.convergence_controller_classes": [[65, "module-implementations.convergence_controller_classes"]], "adaptivecollocation (class in implementations.convergence_controller_classes.adaptive_collocation)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation"]], "check_parameters() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.check_parameters"]], "implementations.convergence_controller_classes.adaptive_collocation": [[66, "module-implementations.convergence_controller_classes.adaptive_collocation"]], "matmul() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.matmul"]], "post_iteration_processing() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.post_iteration_processing"]], "post_spread_processing() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.post_spread_processing"]], "reset_status_variables() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.reset_status_variables"]], "setup() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.setup"]], "setup_status_variables() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.setup_status_variables"]], "switch_sweeper() (adaptivecollocation method)": [[66, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.switch_sweeper"]], "adaptivity (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.Adaptivity"]], "adaptivitybase (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase"]], "adaptivitycollocation (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation"]], "adaptivityextrapolationwithinq (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ"]], "adaptivityforconvergedcollocationproblems (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems"]], "adaptivitypolynomialerror (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError"]], "adaptivityrk (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK"]], "adaptivityresidual (class in implementations.convergence_controller_classes.adaptivity)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual"]], "check_parameters() (adaptivity method)": [[67, "implementations.convergence_controller_classes.adaptivity.Adaptivity.check_parameters"]], "check_parameters() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.check_parameters"]], "check_parameters() (adaptivityresidual method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.check_parameters"]], "compute_optimal_step_size() (adaptivitybase method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.compute_optimal_step_size"]], "dependencies() (adaptivity method)": [[67, "implementations.convergence_controller_classes.adaptivity.Adaptivity.dependencies"]], "dependencies() (adaptivitybase method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.dependencies"]], "dependencies() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.dependencies"]], "dependencies() (adaptivityextrapolationwithinq method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.dependencies"]], "dependencies() (adaptivityforconvergedcollocationproblems method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.dependencies"]], "dependencies() (adaptivitypolynomialerror method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.dependencies"]], "determine_restart() (adaptivitybase method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.determine_restart"]], "determine_restart() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.determine_restart"]], "determine_restart() (adaptivityforconvergedcollocationproblems method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.determine_restart"]], "get_convergence() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_convergence"]], "get_convergence() (adaptivityextrapolationwithinq method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_convergence"]], "get_convergence() (adaptivityforconvergedcollocationproblems method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.get_convergence"]], "get_convergence() (adaptivitypolynomialerror method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_convergence"]], "get_local_error_estimate() (adaptivity method)": [[67, "implementations.convergence_controller_classes.adaptivity.Adaptivity.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitybase method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_local_error_estimate"]], "get_local_error_estimate() (adaptivityextrapolationwithinq method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitypolynomialerror method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_local_error_estimate"]], "get_local_error_estimate() (adaptivityresidual method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.get_local_error_estimate"]], "get_new_step_size() (adaptivity method)": [[67, "implementations.convergence_controller_classes.adaptivity.Adaptivity.get_new_step_size"]], "get_new_step_size() (adaptivitybase method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.get_new_step_size"]], "get_new_step_size() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_new_step_size"]], "get_new_step_size() (adaptivityextrapolationwithinq method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_new_step_size"]], "get_new_step_size() (adaptivitypolynomialerror method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_new_step_size"]], "get_new_step_size() (adaptivityrk method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK.get_new_step_size"]], "get_new_step_size() (adaptivityresidual method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.get_new_step_size"]], "implementations.convergence_controller_classes.adaptivity": [[67, "module-implementations.convergence_controller_classes.adaptivity"]], "post_iteration_processing() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.post_iteration_processing"]], "reset_status_variables() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.reset_status_variables"]], "setup() (adaptivity method)": [[67, "implementations.convergence_controller_classes.adaptivity.Adaptivity.setup"]], "setup() (adaptivitybase method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.setup"]], "setup() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.setup"]], "setup() (adaptivityextrapolationwithinq method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.setup"]], "setup() (adaptivityforconvergedcollocationproblems method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.setup"]], "setup() (adaptivitypolynomialerror method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.setup"]], "setup() (adaptivityrk method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK.setup"]], "setup() (adaptivityresidual method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.setup"]], "setup_status_variables() (adaptivitycollocation method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.setup_status_variables"]], "setup_status_variables() (adaptivityresidual method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.setup_status_variables"]], "trigger_restart_upon_nonconvergence() (adaptivityforconvergedcollocationproblems method)": [[67, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.trigger_restart_upon_nonconvergence"]], "basicrestarting (class in implementations.convergence_controller_classes.basic_restarting)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting"]], "basicrestartingmpi (class in implementations.convergence_controller_classes.basic_restarting)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI"]], "basicrestartingnonmpi (class in implementations.convergence_controller_classes.basic_restarting)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI"]], "dependencies() (basicrestarting method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.dependencies"]], "determine_restart() (basicrestarting method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.determine_restart"]], "determine_restart() (basicrestartingmpi method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI.determine_restart"]], "determine_restart() (basicrestartingnonmpi method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.determine_restart"]], "get_implementation() (basicrestarting class method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.get_implementation"]], "implementations.convergence_controller_classes.basic_restarting": [[68, "module-implementations.convergence_controller_classes.basic_restarting"]], "prepare_next_block() (basicrestartingmpi method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI.prepare_next_block"]], "prepare_next_block() (basicrestartingnonmpi method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.prepare_next_block"]], "reset_buffers_nonmpi() (basicrestartingnonmpi method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.reset_buffers_nonMPI"]], "reset_status_variables() (basicrestarting method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.reset_status_variables"]], "setup() (basicrestarting method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.setup"]], "setup_status_variables() (basicrestarting method)": [[68, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.setup_status_variables"]], "checkconvergence (class in implementations.convergence_controller_classes.check_convergence)": [[69, "implementations.convergence_controller_classes.check_convergence.CheckConvergence"]], "check_convergence() (checkconvergence static method)": [[69, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.check_convergence"]], "check_iteration_status() (checkconvergence method)": [[69, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.check_iteration_status"]], "communicate_convergence() (checkconvergence method)": [[69, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.communicate_convergence"]], "dependencies() (checkconvergence method)": [[69, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.dependencies"]], "implementations.convergence_controller_classes.check_convergence": [[69, "module-implementations.convergence_controller_classes.check_convergence"]], "setup() (checkconvergence method)": [[69, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.setup"]], "checkiterationestimatornonmpi (class in implementations.convergence_controller_classes.check_iteration_estimator)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI"]], "check_iteration_status() (checkiterationestimatornonmpi method)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.check_iteration_status"]], "check_parameters() (checkiterationestimatornonmpi method)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.check_parameters"]], "dependencies() (checkiterationestimatornonmpi method)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.dependencies"]], "implementations.convergence_controller_classes.check_iteration_estimator": [[70, "module-implementations.convergence_controller_classes.check_iteration_estimator"]], "reset_buffers_nonmpi() (checkiterationestimatornonmpi method)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.reset_buffers_nonMPI"]], "setup() (checkiterationestimatornonmpi method)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.setup"]], "setup_status_variables() (checkiterationestimatornonmpi method)": [[70, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.setup_status_variables"]], "crashbase (class in implementations.convergence_controller_classes.crash)": [[71, "implementations.convergence_controller_classes.crash.CrashBase"]], "stopatmaxruntime (class in implementations.convergence_controller_classes.crash)": [[71, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime"]], "stopatnan (class in implementations.convergence_controller_classes.crash)": [[71, "implementations.convergence_controller_classes.crash.StopAtNan"]], "communicate_crash() (crashbase method)": [[71, "implementations.convergence_controller_classes.crash.CrashBase.communicate_crash"]], "implementations.convergence_controller_classes.crash": [[71, "module-implementations.convergence_controller_classes.crash"]], "prepare_next_block() (stopatmaxruntime method)": [[71, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime.prepare_next_block"]], "prepare_next_block() (stopatnan method)": [[71, "implementations.convergence_controller_classes.crash.StopAtNan.prepare_next_block"]], "setup() (stopatmaxruntime method)": [[71, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime.setup"]], "setup() (stopatnan method)": [[71, "implementations.convergence_controller_classes.crash.StopAtNan.setup"]], "estimatecontractionfactor (class in implementations.convergence_controller_classes.estimate_contraction_factor)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor"]], "dependencies() (estimatecontractionfactor method)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.dependencies"]], "implementations.convergence_controller_classes.estimate_contraction_factor": [[72, "module-implementations.convergence_controller_classes.estimate_contraction_factor"]], "post_iteration_processing() (estimatecontractionfactor method)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.post_iteration_processing"]], "pre_iteration_processing() (estimatecontractionfactor method)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.pre_iteration_processing"]], "reset_status_variables() (estimatecontractionfactor method)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.reset_status_variables"]], "setup() (estimatecontractionfactor method)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.setup"]], "setup_status_variables() (estimatecontractionfactor method)": [[72, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.setup_status_variables"]], "estimateembeddederror (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError"]], "estimateembeddederrorcollocation (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation"]], "estimateembeddederrorlinearizedmpi (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI"]], "estimateembeddederrorlinearizednonmpi (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI"]], "dependencies() (estimateembeddederror method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.dependencies"]], "dependencies() (estimateembeddederrorcollocation method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.dependencies"]], "estimate_embedded_error_serial() (estimateembeddederror method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.estimate_embedded_error_serial"]], "get_implementation() (estimateembeddederror class method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.get_implementation"]], "implementations.convergence_controller_classes.estimate_embedded_error": [[73, "module-implementations.convergence_controller_classes.estimate_embedded_error"]], "post_iteration_processing() (estimateembeddederror method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorcollocation method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorlinearizedmpi method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorlinearizednonmpi method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.post_iteration_processing"]], "reset_buffers_nonmpi() (estimateembeddederrorlinearizednonmpi method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.reset_buffers_nonMPI"]], "reset_status_variables() (estimateembeddederror method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.reset_status_variables"]], "reset_status_variables() (estimateembeddederrorcollocation method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.reset_status_variables"]], "setup() (estimateembeddederror method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.setup"]], "setup() (estimateembeddederrorcollocation method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.setup"]], "setup() (estimateembeddederrorlinearizednonmpi method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.setup"]], "setup_status_variables() (estimateembeddederror method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.setup_status_variables"]], "setup_status_variables() (estimateembeddederrorcollocation method)": [[73, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.setup_status_variables"]], "estimateextrapolationerrorbase (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase"]], "estimateextrapolationerrornonmpi (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI"]], "estimateextrapolationerrorwithinq (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ"]], "check_parameters() (estimateextrapolationerrorbase method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.check_parameters"]], "get_extrapolated_error() (estimateextrapolationerrornonmpi method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.get_extrapolated_error"]], "get_extrapolated_solution() (estimateextrapolationerrornonmpi method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.get_extrapolated_solution"]], "get_extrapolation_coefficients() (estimateextrapolationerrorbase method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.get_extrapolation_coefficients"]], "implementations.convergence_controller_classes.estimate_extrapolation_error": [[74, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"]], "post_iteration_processing() (estimateextrapolationerrornonmpi method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.post_iteration_processing"]], "post_iteration_processing() (estimateextrapolationerrorwithinq method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ.post_iteration_processing"]], "prepare_next_block() (estimateextrapolationerrornonmpi method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.prepare_next_block"]], "reset_status_variables() (estimateextrapolationerrorbase method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.reset_status_variables"]], "setup() (estimateextrapolationerrorbase method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.setup"]], "setup() (estimateextrapolationerrornonmpi method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.setup"]], "setup() (estimateextrapolationerrorwithinq method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ.setup"]], "setup_status_variables() (estimateextrapolationerrorbase method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.setup_status_variables"]], "setup_status_variables() (estimateextrapolationerrornonmpi method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.setup_status_variables"]], "store_values() (estimateextrapolationerrorbase method)": [[74, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.store_values"]], "estimatepolynomialerror (class in implementations.convergence_controller_classes.estimate_polynomial_error)": [[75, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError"]], "check_parameters() (estimatepolynomialerror method)": [[75, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.check_parameters"]], "implementations.convergence_controller_classes.estimate_polynomial_error": [[75, "module-implementations.convergence_controller_classes.estimate_polynomial_error"]], "matmul() (estimatepolynomialerror method)": [[75, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.matmul"]], "post_iteration_processing() (estimatepolynomialerror method)": [[75, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.post_iteration_processing"]], "reset_status_variables() (estimatepolynomialerror method)": [[75, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.reset_status_variables"]], "setup() (estimatepolynomialerror method)": [[75, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.setup"]], "hotrod (class in implementations.convergence_controller_classes.hotrod)": [[76, "implementations.convergence_controller_classes.hotrod.HotRod"]], "check_parameters() (hotrod method)": [[76, "implementations.convergence_controller_classes.hotrod.HotRod.check_parameters"]], "dependencies() (hotrod method)": [[76, "implementations.convergence_controller_classes.hotrod.HotRod.dependencies"]], "determine_restart() (hotrod method)": [[76, "implementations.convergence_controller_classes.hotrod.HotRod.determine_restart"]], "implementations.convergence_controller_classes.hotrod": [[76, "module-implementations.convergence_controller_classes.hotrod"]], "post_iteration_processing() (hotrod method)": [[76, "implementations.convergence_controller_classes.hotrod.HotRod.post_iteration_processing"]], "setup() (hotrod method)": [[76, "implementations.convergence_controller_classes.hotrod.HotRod.setup"]], "newtoninexactness (class in implementations.convergence_controller_classes.inexactness)": [[77, "implementations.convergence_controller_classes.inexactness.NewtonInexactness"]], "dependencies() (newtoninexactness method)": [[77, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.dependencies"]], "implementations.convergence_controller_classes.inexactness": [[77, "module-implementations.convergence_controller_classes.inexactness"]], "post_iteration_processing() (newtoninexactness method)": [[77, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.post_iteration_processing"]], "set_maxiter() (newtoninexactness method)": [[77, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.set_maxiter"]], "set_tolerance() (newtoninexactness method)": [[77, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.set_tolerance"]], "setup() (newtoninexactness method)": [[77, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.setup"]], "interpolatebetweenrestarts (class in implementations.convergence_controller_classes.interpolate_between_restarts)": [[78, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts"]], "implementations.convergence_controller_classes.interpolate_between_restarts": [[78, "module-implementations.convergence_controller_classes.interpolate_between_restarts"]], "post_iteration_processing() (interpolatebetweenrestarts method)": [[78, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.post_iteration_processing"]], "post_spread_processing() (interpolatebetweenrestarts method)": [[78, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.post_spread_processing"]], "setup() (interpolatebetweenrestarts method)": [[78, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.setup"]], "setup_status_variables() (interpolatebetweenrestarts method)": [[78, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.setup_status_variables"]], "spreadstepsizesblockwise (class in implementations.convergence_controller_classes.spread_step_sizes)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise"]], "spreadstepsizesblockwisempi (class in implementations.convergence_controller_classes.spread_step_sizes)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI"]], "spreadstepsizesblockwisenonmpi (class in implementations.convergence_controller_classes.spread_step_sizes)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI"]], "get_implementation() (spreadstepsizesblockwise class method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.get_implementation"]], "get_step_from_which_to_spread() (spreadstepsizesblockwise method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.get_step_from_which_to_spread"]], "get_step_from_which_to_spread() (spreadstepsizesblockwisempi method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI.get_step_from_which_to_spread"]], "get_step_from_which_to_spread() (spreadstepsizesblockwisenonmpi method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI.get_step_from_which_to_spread"]], "implementations.convergence_controller_classes.spread_step_sizes": [[79, "module-implementations.convergence_controller_classes.spread_step_sizes"]], "prepare_next_block() (spreadstepsizesblockwisempi method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI.prepare_next_block"]], "prepare_next_block() (spreadstepsizesblockwisenonmpi method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI.prepare_next_block"]], "setup() (spreadstepsizesblockwise method)": [[79, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.setup"]], "stepsizelimiter (class in implementations.convergence_controller_classes.step_size_limiter)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter"]], "stepsizeslopelimiter (class in implementations.convergence_controller_classes.step_size_limiter)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter"]], "dependencies() (stepsizelimiter method)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.dependencies"]], "get_new_step_size() (stepsizelimiter method)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.get_new_step_size"]], "get_new_step_size() (stepsizeslopelimiter method)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter.get_new_step_size"]], "implementations.convergence_controller_classes.step_size_limiter": [[80, "module-implementations.convergence_controller_classes.step_size_limiter"]], "setup() (stepsizelimiter method)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.setup"]], "setup() (stepsizeslopelimiter method)": [[80, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter.setup"]], "storeuold (class in implementations.convergence_controller_classes.store_uold)": [[81, "implementations.convergence_controller_classes.store_uold.StoreUOld"]], "implementations.convergence_controller_classes.store_uold": [[81, "module-implementations.convergence_controller_classes.store_uold"]], "post_iteration_processing() (storeuold method)": [[81, "implementations.convergence_controller_classes.store_uold.StoreUOld.post_iteration_processing"]], "post_spread_processing() (storeuold method)": [[81, "implementations.convergence_controller_classes.store_uold.StoreUOld.post_spread_processing"]], "setup() (storeuold method)": [[81, "implementations.convergence_controller_classes.store_uold.StoreUOld.setup"]], "implementations.datatype_classes": [[82, "module-implementations.datatype_classes"]], "bcast() (cupy_mesh method)": [[83, "implementations.datatype_classes.cupy_mesh.cupy_mesh.bcast"]], "comm (cupy_mesh property)": [[83, "implementations.datatype_classes.cupy_mesh.cupy_mesh.comm"]], "comp1 (comp2_cupy_mesh attribute)": [[83, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh.comp1"]], "comp2 (comp2_cupy_mesh attribute)": [[83, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh.comp2"]], "comp2_cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[83, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh"]], "cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[83, "implementations.datatype_classes.cupy_mesh.cupy_mesh"]], "expl (imex_cupy_mesh attribute)": [[83, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh.expl"]], "imex_cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[83, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh"]], "impl (imex_cupy_mesh attribute)": [[83, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh.impl"]], "implementations.datatype_classes.cupy_mesh": [[83, "module-implementations.datatype_classes.cupy_mesh"]], "irecv() (cupy_mesh method)": [[83, "implementations.datatype_classes.cupy_mesh.cupy_mesh.irecv"]], "isend() (cupy_mesh method)": [[83, "implementations.datatype_classes.cupy_mesh.cupy_mesh.isend"]], "expl (rhs_fenics_mesh attribute)": [[84, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh.expl"]], "fenics_mesh (class in implementations.datatype_classes.fenics_mesh)": [[84, "implementations.datatype_classes.fenics_mesh.fenics_mesh"]], "impl (rhs_fenics_mesh attribute)": [[84, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh.impl"]], "implementations.datatype_classes.fenics_mesh": [[84, "module-implementations.datatype_classes.fenics_mesh"]], "rhs_fenics_mesh (class in implementations.datatype_classes.fenics_mesh)": [[84, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh"]], "values (fenics_mesh attribute)": [[84, "implementations.datatype_classes.fenics_mesh.fenics_mesh.values"]], "_comm (mesh attribute)": [[85, "implementations.datatype_classes.mesh.mesh._comm"]], "bcast() (mesh method)": [[85, "implementations.datatype_classes.mesh.mesh.bcast"]], "comm (mesh property)": [[85, "implementations.datatype_classes.mesh.mesh.comm"]], "comp1 (comp2_mesh attribute)": [[85, "implementations.datatype_classes.mesh.comp2_mesh.comp1"]], "comp2 (comp2_mesh attribute)": [[85, "implementations.datatype_classes.mesh.comp2_mesh.comp2"]], "comp2_mesh (class in implementations.datatype_classes.mesh)": [[85, "implementations.datatype_classes.mesh.comp2_mesh"]], "expl (imex_mesh attribute)": [[85, "implementations.datatype_classes.mesh.imex_mesh.expl"]], "imex_mesh (class in implementations.datatype_classes.mesh)": [[85, "implementations.datatype_classes.mesh.imex_mesh"]], "impl (imex_mesh attribute)": [[85, "implementations.datatype_classes.mesh.imex_mesh.impl"]], "implementations.datatype_classes.mesh": [[85, "module-implementations.datatype_classes.mesh"]], "irecv() (mesh method)": [[85, "implementations.datatype_classes.mesh.mesh.irecv"]], "isend() (mesh method)": [[85, "implementations.datatype_classes.mesh.mesh.isend"]], "mesh (class in implementations.datatype_classes.mesh)": [[85, "implementations.datatype_classes.mesh.mesh"]], "acceleration (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.acceleration"]], "elec (fields attribute)": [[86, "implementations.datatype_classes.particles.fields.elec"]], "fields (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.fields"]], "fields.electric (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.fields.electric"]], "fields.magnetic (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.fields.magnetic"]], "implementations.datatype_classes.particles": [[86, "module-implementations.datatype_classes.particles"]], "isend() (particles method)": [[86, "implementations.datatype_classes.particles.particles.isend"]], "magn (fields attribute)": [[86, "implementations.datatype_classes.particles.fields.magn"]], "particles (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.particles"]], "particles.position (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.particles.position"]], "particles.velocity (class in implementations.datatype_classes.particles)": [[86, "implementations.datatype_classes.particles.particles.velocity"]], "pos (particles attribute)": [[86, "implementations.datatype_classes.particles.particles.pos"]], "recv() (particles method)": [[86, "implementations.datatype_classes.particles.particles.recv"]], "send() (particles method)": [[86, "implementations.datatype_classes.particles.particles.send"]], "vel (particles attribute)": [[86, "implementations.datatype_classes.particles.particles.vel"]], "bcast() (petsc_vec method)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec.bcast"]], "expl (petsc_vec_comp2 attribute)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2.expl"]], "expl (petsc_vec_imex attribute)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec_imex.expl"]], "impl (petsc_vec_comp2 attribute)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2.impl"]], "impl (petsc_vec_imex attribute)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec_imex.impl"]], "implementations.datatype_classes.petsc_vec": [[87, "module-implementations.datatype_classes.petsc_vec"]], "irecv() (petsc_vec method)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec.irecv"]], "isend() (petsc_vec method)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec.isend"]], "petsc_vec (class in implementations.datatype_classes.petsc_vec)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec"]], "petsc_vec_comp2 (class in implementations.datatype_classes.petsc_vec)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2"]], "petsc_vec_imex (class in implementations.datatype_classes.petsc_vec)": [[87, "implementations.datatype_classes.petsc_vec.petsc_vec_imex"]], "implementations.problem_classes": [[88, "module-implementations.problem_classes"]], "a (acoustic_1d_imex attribute)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.A"]], "dx (acoustic_1d_imex attribute)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.Dx"], [89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dx"]], "id (acoustic_1d_imex attribute)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.Id"]], "acoustic_1d_imex (class in implementations.problem_classes.acousticadvection_1d_fd_imex)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex"]], "dtype_f (acoustic_1d_imex attribute)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dtype_f"]], "dtype_u (acoustic_1d_imex attribute)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dtype_u"]], "eval_f() (acoustic_1d_imex method)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.eval_f"]], "implementations.problem_classes.acousticadvection_1d_fd_imex": [[89, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"]], "mesh (acoustic_1d_imex attribute)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.mesh"]], "solve_system() (acoustic_1d_imex method)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.solve_system"]], "u_exact() (acoustic_1d_imex method)": [[89, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.u_exact"]], "advectiondiffusion1d_imex (class in implementations.problem_classes.advectiondiffusionequation_1d_fft)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex"]], "advectiondiffusion1d_implicit (class in implementations.problem_classes.advectiondiffusionequation_1d_fft)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit"]], "ddx (advectiondiffusion1d_imex attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.ddx"]], "dtype_f (advectiondiffusion1d_imex attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.dtype_f"]], "dtype_f (advectiondiffusion1d_implicit attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.dtype_f"]], "dtype_u (advectiondiffusion1d_imex attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.dtype_u"]], "dtype_u (advectiondiffusion1d_implicit attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.dtype_u"]], "eval_f() (advectiondiffusion1d_imex method)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.eval_f"]], "eval_f() (advectiondiffusion1d_implicit method)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.eval_f"]], "implementations.problem_classes.advectiondiffusionequation_1d_fft": [[90, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"]], "lap (advectiondiffusion1d_imex attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.lap"]], "solve_system() (advectiondiffusion1d_imex method)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.solve_system"]], "solve_system() (advectiondiffusion1d_implicit method)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.solve_system"]], "u_exact() (advectiondiffusion1d_imex method)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.u_exact"]], "xvalues (advectiondiffusion1d_imex attribute)": [[90, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.xvalues"]], "a (advectionnd attribute)": [[91, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.A"]], "id (advectionnd attribute)": [[91, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.Id"]], "advectionnd (class in implementations.problem_classes.advectionequation_nd_fd)": [[91, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd"]], "implementations.problem_classes.advectionequation_nd_fd": [[91, "module-implementations.problem_classes.AdvectionEquation_ND_FD"]], "u_exact() (advectionnd method)": [[91, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.u_exact"]], "a (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.A"]], "a (allencahn_periodic_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.A"]], "allencahn_front_finel (class in implementations.problem_classes.allencahn_1d_fd)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel"]], "allencahn_front_fullyimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit"]], "allencahn_front_semiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit"]], "allencahn_periodic_fullyimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit"]], "allencahn_periodic_multiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit"]], "allencahn_periodic_semiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit"]], "dtype_f (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dtype_f"]], "dtype_f (allencahn_front_semiimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.dtype_f"]], "dtype_f (allencahn_periodic_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dtype_f"]], "dtype_f (allencahn_periodic_multiimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.dtype_f"]], "dtype_f (allencahn_periodic_semiimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.dtype_f"]], "dtype_u (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dtype_u"]], "dtype_u (allencahn_periodic_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dtype_u"]], "dx (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dx"]], "dx (allencahn_periodic_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dx"]], "eval_f() (allencahn_front_finel method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel.eval_f"]], "eval_f() (allencahn_front_fullyimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.eval_f"]], "eval_f() (allencahn_front_semiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.eval_f"]], "eval_f() (allencahn_periodic_fullyimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.eval_f"]], "eval_f() (allencahn_periodic_multiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.eval_f"]], "eval_f() (allencahn_periodic_semiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.eval_f"]], "implementations.problem_classes.allencahn_1d_fd": [[92, "module-implementations.problem_classes.AllenCahn_1D_FD"]], "solve_system() (allencahn_front_finel method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel.solve_system"]], "solve_system() (allencahn_front_fullyimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.solve_system"]], "solve_system() (allencahn_front_semiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.solve_system"]], "solve_system() (allencahn_periodic_fullyimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.solve_system"]], "solve_system() (allencahn_periodic_semiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.solve_system"]], "solve_system_1() (allencahn_periodic_multiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.solve_system_1"]], "solve_system_2() (allencahn_periodic_multiimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.solve_system_2"]], "u_exact() (allencahn_front_fullyimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.u_exact"]], "u_exact() (allencahn_periodic_fullyimplicit method)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.u_exact"]], "uext (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.uext"]], "work_counters (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.work_counters"]], "work_counters (allencahn_periodic_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.work_counters"]], "xvalues (allencahn_front_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.xvalues"]], "xvalues (allencahn_periodic_fullyimplicit attribute)": [[92, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.xvalues"]], "a (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.A"]], "allencahn_fullyimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit"]], "allencahn_multiimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit"]], "allencahn_multiimplicit_v2 (class in implementations.problem_classes.allencahn_2d_fd)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2"]], "allencahn_semiimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit"]], "allencahn_semiimplicit_v2 (class in implementations.problem_classes.allencahn_2d_fd)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2"]], "dtype_f (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dtype_f"]], "dtype_f (allencahn_multiimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.dtype_f"]], "dtype_f (allencahn_multiimplicit_v2 attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.dtype_f"]], "dtype_f (allencahn_semiimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.dtype_f"]], "dtype_f (allencahn_semiimplicit_v2 attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.dtype_f"]], "dtype_u (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dtype_u"]], "dx (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dx"]], "eval_f() (allencahn_fullyimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.eval_f"]], "eval_f() (allencahn_multiimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.eval_f"]], "eval_f() (allencahn_multiimplicit_v2 method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.eval_f"]], "eval_f() (allencahn_semiimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.eval_f"]], "eval_f() (allencahn_semiimplicit_v2 method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.eval_f"]], "implementations.problem_classes.allencahn_2d_fd": [[93, "module-implementations.problem_classes.AllenCahn_2D_FD"]], "lin_itercount (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.lin_itercount"]], "lin_ncalls (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.lin_ncalls"]], "newton_itercount (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.newton_itercount"]], "newton_ncalls (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.newton_ncalls"]], "solve_system() (allencahn_fullyimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.solve_system"]], "solve_system() (allencahn_semiimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.solve_system"]], "solve_system() (allencahn_semiimplicit_v2 method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.solve_system"]], "solve_system_1() (allencahn_multiimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.solve_system_1"]], "solve_system_1() (allencahn_multiimplicit_v2 method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.solve_system_1"]], "solve_system_2() (allencahn_multiimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.solve_system_2"]], "solve_system_2() (allencahn_multiimplicit_v2 method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.solve_system_2"]], "u_exact() (allencahn_fullyimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.u_exact"]], "u_exact() (allencahn_semiimplicit method)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.u_exact"]], "xvalues (allencahn_fullyimplicit attribute)": [[93, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.xvalues"]], "allencahn2d_imex (class in implementations.problem_classes.allencahn_2d_fft)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex"]], "allencahn2d_imex_stab (class in implementations.problem_classes.allencahn_2d_fft)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab"]], "dtype_f (allencahn2d_imex attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dtype_f"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dtype_f"]], "dtype_u (allencahn2d_imex attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dtype_u"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dtype_u"]], "dx (allencahn2d_imex attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dx"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dx"]], "dx (allencahn2d_imex_stab attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.dx"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.dx"]], "eval_f() (allencahn2d_imex method)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.eval_f"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.eval_f"]], "eval_f() (allencahn2d_imex_stab method)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.eval_f"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.eval_f"]], "implementations.problem_classes.allencahn_2d_fft": [[95, "module-implementations.problem_classes.AllenCahn_2D_FFT"]], "lap (allencahn2d_imex attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.lap"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.lap"]], "lap (allencahn2d_imex_stab attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.lap"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.lap"]], "solve_system() (allencahn2d_imex method)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.solve_system"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.solve_system"]], "solve_system() (allencahn2d_imex_stab method)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.solve_system"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.solve_system"]], "u_exact() (allencahn2d_imex method)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.u_exact"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.u_exact"]], "xvalues (allencahn2d_imex attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.xvalues"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.xvalues"]], "xvalues (allencahn2d_imex_stab attribute)": [[95, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.xvalues"], [96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.xvalues"]], "allencahn2d_imex (class in implementations.problem_classes.allencahn_2d_fft_gpu)": [[96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex"]], "allencahn2d_imex_stab (class in implementations.problem_classes.allencahn_2d_fft_gpu)": [[96, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab"]], "implementations.problem_classes.allencahn_2d_fft_gpu": [[96, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"]], "k2 (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.K2"]], "x (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.X"]], "allencahn_imex (class in implementations.problem_classes.allencahn_mpifft)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex"]], "allencahn_imex_timeforcing (class in implementations.problem_classes.allencahn_mpifft)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing"]], "dtype_f (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dtype_f"]], "dtype_u (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dtype_u"]], "dx (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dx"]], "dy (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dy"]], "eval_f() (allencahn_imex method)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.eval_f"]], "eval_f() (allencahn_imex_timeforcing method)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing.eval_f"]], "fft (allencahn_imex attribute)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.fft"]], "implementations.problem_classes.allencahn_mpifft": [[97, "module-implementations.problem_classes.AllenCahn_MPIFFT"]], "solve_system() (allencahn_imex method)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.solve_system"]], "u_exact() (allencahn_imex method)": [[97, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.u_exact"]], "d (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.D"]], "k2 (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.K2"]], "l (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.L"]], "tm (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.TM"]], "x (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.X"]], "allencahn_temp_imex (class in implementations.problem_classes.allencahn_temp_mpifft)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex"]], "comm (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.comm"]], "dtype_f (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dtype_f"]], "dtype_u (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dtype_u"]], "dw (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dw"]], "dx (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dx"]], "dy (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dy"]], "eps (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.eps"]], "eval_f() (allencahn_temp_imex method)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.eval_f"]], "fft (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.fft"]], "implementations.problem_classes.allencahn_temp_mpifft": [[98, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"]], "init_type (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.init_type"]], "nvars (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.nvars"]], "radius (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.radius"]], "solve_system() (allencahn_temp_imex method)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.solve_system"]], "spectral (allencahn_temp_imex attribute)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.spectral"]], "u_exact() (allencahn_temp_imex method)": [[98, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.u_exact"]], "auzinger (class in implementations.problem_classes.auzinger_implicit)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger"]], "dtype_f (auzinger attribute)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.dtype_f"]], "dtype_u (auzinger attribute)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.dtype_u"]], "eval_f() (auzinger method)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.eval_f"]], "implementations.problem_classes.auzinger_implicit": [[99, "module-implementations.problem_classes.Auzinger_implicit"]], "newton_maxiter (auzinger attribute)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.newton_maxiter"]], "newton_tol (auzinger attribute)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.newton_tol"]], "solve_system() (auzinger method)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.solve_system"]], "u_exact() (auzinger method)": [[99, "implementations.problem_classes.Auzinger_implicit.auzinger.u_exact"]], "a (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.A"]], "battery (class in implementations.problem_classes.battery)": [[100, "implementations.problem_classes.Battery.battery"]], "battery_implicit (class in implementations.problem_classes.battery)": [[100, "implementations.problem_classes.Battery.battery_implicit"]], "battery_n_capacitors (class in implementations.problem_classes.battery)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors"]], "count_switches() (battery_n_capacitors method)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.count_switches"]], "dtype_f (battery attribute)": [[100, "implementations.problem_classes.Battery.battery.dtype_f"]], "dtype_f (battery_implicit attribute)": [[100, "implementations.problem_classes.Battery.battery_implicit.dtype_f"]], "dtype_f (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.dtype_f"]], "dtype_u (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.dtype_u"]], "eval_f() (battery method)": [[100, "implementations.problem_classes.Battery.battery.eval_f"]], "eval_f() (battery_implicit method)": [[100, "implementations.problem_classes.Battery.battery_implicit.eval_f"]], "eval_f() (battery_n_capacitors method)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.eval_f"]], "get_problem_dict() (battery_n_capacitors method)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.get_problem_dict"]], "get_switching_info() (battery_n_capacitors method)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.get_switching_info"]], "implementations.problem_classes.battery": [[100, "module-implementations.problem_classes.Battery"]], "nswitches (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.nswitches"]], "solve_system() (battery method)": [[100, "implementations.problem_classes.Battery.battery.solve_system"]], "solve_system() (battery_implicit method)": [[100, "implementations.problem_classes.Battery.battery_implicit.solve_system"]], "solve_system() (battery_n_capacitors method)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.solve_system"]], "switch_a (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.switch_A"]], "switch_f (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.switch_f"]], "t_switch (battery_n_capacitors attribute)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.t_switch"]], "u_exact() (battery method)": [[100, "implementations.problem_classes.Battery.battery.u_exact"]], "u_exact() (battery_n_capacitors method)": [[100, "implementations.problem_classes.Battery.battery_n_capacitors.u_exact"]], "work_counters (battery_implicit attribute)": [[100, "implementations.problem_classes.Battery.battery_implicit.work_counters"]], "d_upwind (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.D_upwind"]], "id (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.Id"]], "m (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.M"]], "n (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.N"]], "bc_hor (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.bc_hor"]], "bc_ver (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.bc_ver"]], "boussinesq_2d_imex (class in implementations.problem_classes.boussinesq_2d_fd_imex)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex"]], "dtype_f (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.dtype_f"]], "dtype_u (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.dtype_u"]], "eval_f() (boussinesq_2d_imex method)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.eval_f"]], "gmres_logger (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.gmres_logger"]], "h (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.h"]], "implementations.problem_classes.boussinesq_2d_fd_imex": [[101, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"]], "solve_system() (boussinesq_2d_imex method)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.solve_system"]], "u_exact() (boussinesq_2d_imex method)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.u_exact"]], "xx (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.xx"]], "zz (boussinesq_2d_imex attribute)": [[101, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.zz"]], "a (buck_converter attribute)": [[102, "implementations.problem_classes.BuckConverter.buck_converter.A"]], "buck_converter (class in implementations.problem_classes.buckconverter)": [[102, "implementations.problem_classes.BuckConverter.buck_converter"]], "dtype_f (buck_converter attribute)": [[102, "implementations.problem_classes.BuckConverter.buck_converter.dtype_f"]], "dtype_u (buck_converter attribute)": [[102, "implementations.problem_classes.BuckConverter.buck_converter.dtype_u"]], "eval_f() (buck_converter method)": [[102, "implementations.problem_classes.BuckConverter.buck_converter.eval_f"]], "implementations.problem_classes.buckconverter": [[102, "module-implementations.problem_classes.BuckConverter"]], "solve_system() (buck_converter method)": [[102, "implementations.problem_classes.BuckConverter.buck_converter.solve_system"]], "u_exact() (buck_converter method)": [[102, "implementations.problem_classes.BuckConverter.buck_converter.u_exact"]], "discontinuoustestode (class in implementations.problem_classes.discontinuoustestode)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE"]], "count_switches() (discontinuoustestode method)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.count_switches"]], "dtype_f (discontinuoustestode attribute)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.dtype_f"]], "dtype_u (discontinuoustestode attribute)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.dtype_u"]], "eval_f() (discontinuoustestode method)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.eval_f"]], "get_switching_info() (discontinuoustestode method)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.get_switching_info"]], "implementations.problem_classes.discontinuoustestode": [[103, "module-implementations.problem_classes.DiscontinuousTestODE"]], "nswitches (discontinuoustestode attribute)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.nswitches"]], "solve_system() (discontinuoustestode method)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.solve_system"]], "t_switch (discontinuoustestode attribute)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.t_switch"]], "t_switch_exact (discontinuoustestode attribute)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.t_switch_exact"]], "u_exact() (discontinuoustestode method)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.u_exact"]], "work_counters (discontinuoustestode attribute)": [[103, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.work_counters"]], "dtype_f (swfw_scalar attribute)": [[104, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.dtype_f"]], "dtype_u (swfw_scalar attribute)": [[104, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.dtype_u"]], "eval_f() (swfw_scalar method)": [[104, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.eval_f"]], "implementations.problem_classes.fastwaveslowwave_0d": [[104, "module-implementations.problem_classes.FastWaveSlowWave_0D"]], "solve_system() (swfw_scalar method)": [[104, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.solve_system"]], "swfw_scalar (class in implementations.problem_classes.fastwaveslowwave_0d)": [[104, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar"]], "u_exact() (swfw_scalar method)": [[104, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.u_exact"]], "dtype_f (fermi_pasta_ulam_tsingou attribute)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dtype_f"]], "dtype_u (fermi_pasta_ulam_tsingou attribute)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dtype_u"]], "dx (fermi_pasta_ulam_tsingou attribute)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dx"]], "eval_f() (fermi_pasta_ulam_tsingou method)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_f"]], "eval_hamiltonian() (fermi_pasta_ulam_tsingou method)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_hamiltonian"]], "eval_mode_energy() (fermi_pasta_ulam_tsingou method)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_mode_energy"]], "fermi_pasta_ulam_tsingou (class in implementations.problem_classes.fermipastaulamtsingou)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou"]], "implementations.problem_classes.fermipastaulamtsingou": [[105, "module-implementations.problem_classes.FermiPastaUlamTsingou"]], "ones (fermi_pasta_ulam_tsingou attribute)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.ones"]], "u_exact() (fermi_pasta_ulam_tsingou method)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.u_exact"]], "xvalues (fermi_pasta_ulam_tsingou attribute)": [[105, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.xvalues"]], "g (full_solar_system attribute)": [[106, "implementations.problem_classes.FullSolarSystem.full_solar_system.G"]], "dtype_f (full_solar_system attribute)": [[106, "implementations.problem_classes.FullSolarSystem.full_solar_system.dtype_f"]], "dtype_u (full_solar_system attribute)": [[106, "implementations.problem_classes.FullSolarSystem.full_solar_system.dtype_u"]], "full_solar_system (class in implementations.problem_classes.fullsolarsystem)": [[106, "implementations.problem_classes.FullSolarSystem.full_solar_system"]], "implementations.problem_classes.fullsolarsystem": [[106, "module-implementations.problem_classes.FullSolarSystem"]], "u_exact() (full_solar_system method)": [[106, "implementations.problem_classes.FullSolarSystem.full_solar_system.u_exact"]], "a (generalized_fisher attribute)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.A"]], "dtype_f (generalized_fisher attribute)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dtype_f"]], "dtype_u (generalized_fisher attribute)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dtype_u"]], "dx (generalized_fisher attribute)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dx"]], "eval_f() (generalized_fisher method)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.eval_f"]], "generalized_fisher (class in implementations.problem_classes.generalizedfisher_1d_fd_implicit)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher"]], "implementations.problem_classes.generalizedfisher_1d_fd_implicit": [[107, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"]], "solve_system() (generalized_fisher method)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.solve_system"]], "u_exact() (generalized_fisher method)": [[107, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.u_exact"]], "a (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.A"]], "f (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.F"]], "fisher_full (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full"]], "fisher_reaction (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction"]], "j (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.J"]], "col (fisher_full attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.col"]], "dtype_f (petsc_fisher_fullyimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.dtype_f"]], "dtype_f (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dtype_f"]], "dtype_f (petsc_fisher_semiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.dtype_f"]], "dtype_u (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dtype_u"]], "dx (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dx"]], "eval_f() (petsc_fisher_fullyimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.eval_f"]], "eval_f() (petsc_fisher_multiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.eval_f"]], "eval_f() (petsc_fisher_semiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.eval_f"]], "formfunction() (fisher_full method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.formFunction"]], "formfunction() (fisher_reaction method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.formFunction"]], "formjacobian() (fisher_full method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.formJacobian"]], "formjacobian() (fisher_reaction method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.formJacobian"]], "get_sys_mat() (petsc_fisher_multiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.get_sys_mat"]], "implementations.problem_classes.generalizedfisher_1d_petsc": [[108, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"]], "ksp (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.ksp"]], "localx (fisher_full attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.localX"]], "localx (fisher_reaction attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.localX"]], "localx (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.localX"]], "mx (fisher_full attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.mx"]], "petsc_fisher_fullyimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit"]], "petsc_fisher_multiimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit"]], "petsc_fisher_semiimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit"]], "row (fisher_full attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.row"]], "snes (petsc_fisher_multiimplicit attribute)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.snes"]], "solve_system() (petsc_fisher_fullyimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.solve_system"]], "solve_system() (petsc_fisher_semiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.solve_system"]], "solve_system_1() (petsc_fisher_multiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.solve_system_1"]], "solve_system_2() (petsc_fisher_multiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.solve_system_2"]], "u_exact() (petsc_fisher_multiimplicit method)": [[108, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.u_exact"]], "f (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F"]], "f1 (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F1"]], "f2 (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F2"]], "m (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.M"]], "v (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.V"]], "dtype_f (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.dtype_f"]], "dtype_u (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.dtype_u"]], "eval_f() (fenics_grayscott method)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.eval_f"]], "fenics_grayscott (class in implementations.problem_classes.grayscott_1d_fenics_implicit)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott"]], "implementations.problem_classes.grayscott_1d_fenics_implicit": [[109, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"]], "solve_system() (fenics_grayscott method)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.solve_system"]], "u_exact() (fenics_grayscott method)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.u_exact"]], "w (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w"]], "w1 (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w1"]], "w2 (fenics_grayscott attribute)": [[109, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w2"]], "amat (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.AMat"]], "gs_full (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full"]], "gs_reaction (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction"]], "id (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.Id"]], "dtype_f (petsc_grayscott_fullyimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.dtype_f"]], "dtype_f (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dtype_f"]], "dtype_f (petsc_grayscott_semiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.dtype_f"]], "dtype_u (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dtype_u"]], "dx (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dx"]], "dy (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dy"]], "eval_f() (petsc_grayscott_fullyimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.eval_f"]], "eval_f() (petsc_grayscott_multiimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.eval_f"]], "eval_f() (petsc_grayscott_semiimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.eval_f"]], "formfunction() (gs_full method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.formFunction"]], "formfunction() (gs_reaction method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.formFunction"]], "formjacobian() (gs_full method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.formJacobian"]], "formjacobian() (gs_reaction method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.formJacobian"]], "implementations.problem_classes.grayscott_2d_petsc_periodic": [[110, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"]], "ksp (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.ksp"]], "localx (gs_full attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.localX"]], "localx (gs_reaction attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.localX"]], "localx (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.localX"]], "petsc_grayscott_fullyimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit"]], "petsc_grayscott_multiimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit"]], "petsc_grayscott_semiimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit"]], "snes (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes"]], "snes_itercount (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes_itercount"]], "snes_ncalls (petsc_grayscott_multiimplicit attribute)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes_ncalls"]], "solve_system() (petsc_grayscott_fullyimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.solve_system"]], "solve_system() (petsc_grayscott_semiimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.solve_system"]], "solve_system_1() (petsc_grayscott_multiimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.solve_system_1"]], "solve_system_2() (petsc_grayscott_multiimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.solve_system_2"]], "u_exact() (petsc_grayscott_multiimplicit method)": [[110, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.u_exact"]], "ku (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.Ku"]], "ku (grayscott_mi_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.Ku"]], "kv (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.Kv"]], "kv (grayscott_mi_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.Kv"]], "x (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.X"]], "x (grayscott_mi_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.X"]], "dtype_f (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.dtype_f"]], "dtype_f (grayscott_mi_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.dtype_f"]], "dtype_f (grayscott_mi_linear attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.dtype_f"]], "dtype_u (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.dtype_u"]], "eval_f() (grayscott_imex_diffusion method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.eval_f"]], "eval_f() (grayscott_imex_linear method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear.eval_f"]], "eval_f() (grayscott_mi_diffusion method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.eval_f"]], "eval_f() (grayscott_mi_linear method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.eval_f"]], "fft (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.fft"]], "fft (grayscott_mi_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.fft"]], "grayscott_imex_diffusion (class in implementations.problem_classes.grayscott_mpifft)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion"]], "grayscott_imex_linear (class in implementations.problem_classes.grayscott_mpifft)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear"]], "grayscott_mi_diffusion (class in implementations.problem_classes.grayscott_mpifft)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion"]], "grayscott_mi_linear (class in implementations.problem_classes.grayscott_mpifft)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear"]], "implementations.problem_classes.grayscott_mpifft": [[111, "module-implementations.problem_classes.GrayScott_MPIFFT"]], "ndim (grayscott_imex_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.ndim"]], "ndim (grayscott_mi_diffusion attribute)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.ndim"]], "solve_system() (grayscott_imex_diffusion method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.solve_system"]], "solve_system_1() (grayscott_mi_diffusion method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.solve_system_1"]], "solve_system_1() (grayscott_mi_linear method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.solve_system_1"]], "solve_system_2() (grayscott_mi_diffusion method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.solve_system_2"]], "solve_system_2() (grayscott_mi_linear method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.solve_system_2"]], "u_exact() (grayscott_imex_diffusion method)": [[111, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.u_exact"]], "dtype_f (harmonic_oscillator attribute)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.dtype_f"]], "dtype_u (harmonic_oscillator attribute)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.dtype_u"]], "eval_f() (harmonic_oscillator method)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.eval_f"]], "eval_hamiltonian() (harmonic_oscillator method)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.eval_hamiltonian"]], "harmonic_oscillator (class in implementations.problem_classes.harmonicoscillator)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator"]], "implementations.problem_classes.harmonicoscillator": [[112, "module-implementations.problem_classes.HarmonicOscillator"]], "u_exact() (harmonic_oscillator method)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.u_exact"]], "u_init() (harmonic_oscillator method)": [[112, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.u_init"]], "k (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.K"]], "k (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.K"]], "k (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.K"]], "m (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.M"]], "m (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.M"]], "m (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.M"]], "v (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.V"]], "v (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.V"]], "v (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.V"]], "apply_mass_matrix() (fenics_heat method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.apply_mass_matrix"]], "bc (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.bc"]], "bc (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.bc"]], "bc (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.bc"]], "bc_hom (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.bc_hom"]], "bc_hom (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.bc_hom"]], "dtype_f (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.dtype_f"]], "dtype_u (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.dtype_u"]], "eval_f() (fenics_heat method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.eval_f"]], "eval_f() (fenics_heat_mass method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.eval_f"]], "fenics_heat (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat"]], "fenics_heat_mass (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass"]], "fenics_heat_mass_timebc (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc"]], "fix_bc_for_residual (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.fix_bc_for_residual"]], "fix_bc_for_residual (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.fix_bc_for_residual"]], "fix_residual() (fenics_heat_mass method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.fix_residual"]], "g (fenics_heat attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.g"]], "g (fenics_heat_mass attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.g"]], "g (fenics_heat_mass_timebc attribute)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.g"]], "implementations.problem_classes.heatequation_1d_fenics_matrix_forced": [[113, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"]], "solve_system() (fenics_heat method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.solve_system"]], "solve_system() (fenics_heat_mass method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.solve_system"]], "solve_system() (fenics_heat_mass_timebc method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.solve_system"]], "u_exact() (fenics_heat method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.u_exact"]], "u_exact() (fenics_heat_mass_timebc method)": [[113, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.u_exact"]], "a (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.A"]], "id (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.Id"]], "dtype_f (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dtype_f"]], "dtype_u (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dtype_u"]], "dx (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dx"]], "dy (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dy"]], "eval_f() (heat2d_petsc_forced method)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.eval_f"]], "heat2d_petsc_forced (class in implementations.problem_classes.heatequation_2d_petsc_forced)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced"]], "implementations.problem_classes.heatequation_2d_petsc_forced": [[114, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"]], "ksp (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp"]], "ksp_itercount (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp_itercount"]], "ksp_ncalls (heat2d_petsc_forced attribute)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp_ncalls"]], "solve_system() (heat2d_petsc_forced method)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.solve_system"]], "u_exact() (heat2d_petsc_forced method)": [[114, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.u_exact"]], "a (heatnd_unforced attribute)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.A"]], "id (heatnd_unforced attribute)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.Id"]], "dtype_f (heatnd_forced attribute)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.dtype_f"]], "eval_f() (heatnd_forced method)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.eval_f"]], "heatnd_forced (class in implementations.problem_classes.heatequation_nd_fd)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced"]], "heatnd_unforced (class in implementations.problem_classes.heatequation_nd_fd)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced"]], "implementations.problem_classes.heatequation_nd_fd": [[115, "module-implementations.problem_classes.HeatEquation_ND_FD"]], "u_exact() (heatnd_forced method)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.u_exact"]], "u_exact() (heatnd_unforced method)": [[115, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.u_exact"]], "dtype_f (henon_heiles attribute)": [[117, "implementations.problem_classes.HenonHeiles.henon_heiles.dtype_f"]], "dtype_u (henon_heiles attribute)": [[117, "implementations.problem_classes.HenonHeiles.henon_heiles.dtype_u"]], "eval_f() (henon_heiles method)": [[117, "implementations.problem_classes.HenonHeiles.henon_heiles.eval_f"]], "eval_hamiltonian() (henon_heiles method)": [[117, "implementations.problem_classes.HenonHeiles.henon_heiles.eval_hamiltonian"]], "henon_heiles (class in implementations.problem_classes.henonheiles)": [[117, "implementations.problem_classes.HenonHeiles.henon_heiles"]], "implementations.problem_classes.henonheiles": [[117, "module-implementations.problem_classes.HenonHeiles"]], "u_exact() (henon_heiles method)": [[117, "implementations.problem_classes.HenonHeiles.henon_heiles.u_exact"]], "dtype_f (logistics_equation attribute)": [[118, "implementations.problem_classes.LogisticEquation.logistics_equation.dtype_f"]], "dtype_u (logistics_equation attribute)": [[118, "implementations.problem_classes.LogisticEquation.logistics_equation.dtype_u"]], "eval_f() (logistics_equation method)": [[118, "implementations.problem_classes.LogisticEquation.logistics_equation.eval_f"]], "implementations.problem_classes.logisticequation": [[118, "module-implementations.problem_classes.LogisticEquation"]], "logistics_equation (class in implementations.problem_classes.logisticequation)": [[118, "implementations.problem_classes.LogisticEquation.logistics_equation"]], "solve_system() (logistics_equation method)": [[118, "implementations.problem_classes.LogisticEquation.logistics_equation.solve_system"]], "u_exact() (logistics_equation method)": [[118, "implementations.problem_classes.LogisticEquation.logistics_equation.u_exact"]], "lorenzattractor (class in implementations.problem_classes.lorenz)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor"]], "dtype_f (lorenzattractor attribute)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor.dtype_f"]], "dtype_u (lorenzattractor attribute)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor.dtype_u"]], "eval_f() (lorenzattractor method)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor.eval_f"]], "implementations.problem_classes.lorenz": [[119, "module-implementations.problem_classes.Lorenz"]], "solve_system() (lorenzattractor method)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor.solve_system"]], "u_exact() (lorenzattractor method)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor.u_exact"]], "work_counter (lorenzattractor attribute)": [[119, "implementations.problem_classes.Lorenz.LorenzAttractor.work_counter"]], "k2 (nonlinearschroedinger_imex attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.K2"]], "x (nonlinearschroedinger_imex attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.X"]], "dtype_f (nonlinearschroedinger_fully_implicit attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.dtype_f"]], "dtype_f (nonlinearschroedinger_imex attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.dtype_f"]], "dtype_u (nonlinearschroedinger_fully_implicit attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.dtype_u"]], "dtype_u (nonlinearschroedinger_imex attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.dtype_u"]], "eval_f() (nonlinearschroedinger_fully_implicit method)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.eval_f"]], "eval_f() (nonlinearschroedinger_imex method)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.eval_f"]], "fft (nonlinearschroedinger_imex attribute)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.fft"]], "implementations.problem_classes.nonlinearschroedinger_mpifft": [[120, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"]], "nonlinearschroedinger_fully_implicit (class in implementations.problem_classes.nonlinearschroedinger_mpifft)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit"]], "nonlinearschroedinger_imex (class in implementations.problem_classes.nonlinearschroedinger_mpifft)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex"]], "solve_system() (nonlinearschroedinger_fully_implicit method)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.solve_system"]], "solve_system() (nonlinearschroedinger_imex method)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.solve_system"]], "u_exact() (nonlinearschroedinger_imex method)": [[120, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.u_exact"]], "g (outer_solar_system attribute)": [[121, "id0"], [121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.G"]], "dtype_f (outer_solar_system attribute)": [[121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.dtype_f"]], "dtype_u (outer_solar_system attribute)": [[121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.dtype_u"]], "eval_f() (outer_solar_system method)": [[121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.eval_f"]], "eval_hamiltonian() (outer_solar_system method)": [[121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.eval_hamiltonian"]], "implementations.problem_classes.outersolarsystem": [[121, "module-implementations.problem_classes.OuterSolarSystem"]], "outer_solar_system (class in implementations.problem_classes.outersolarsystem)": [[121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system"]], "u_exact() (outer_solar_system method)": [[121, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.u_exact"]], "boris_solver() (penningtrap method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.boris_solver"]], "build_f() (penningtrap method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.build_f"]], "dtype_f (penningtrap attribute)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.dtype_f"]], "dtype_u (penningtrap attribute)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.dtype_u"]], "eval_f() (penningtrap method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.eval_f"]], "fast_interactions() (penningtrap static method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.fast_interactions"]], "get_interactions() (penningtrap method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.get_interactions"]], "implementations.problem_classes.penningtrap_3d": [[122, "module-implementations.problem_classes.PenningTrap_3D"]], "penningtrap (class in implementations.problem_classes.penningtrap_3d)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap"]], "u_exact() (penningtrap method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.u_exact"]], "u_init() (penningtrap method)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.u_init"]], "work_counter (penningtrap attribute)": [[122, "implementations.problem_classes.PenningTrap_3D.penningtrap.work_counter"]], "dtype_f (piline attribute)": [[123, "implementations.problem_classes.Piline.piline.dtype_f"]], "dtype_u (piline attribute)": [[123, "implementations.problem_classes.Piline.piline.dtype_u"]], "eval_f() (piline method)": [[123, "implementations.problem_classes.Piline.piline.eval_f"]], "implementations.problem_classes.piline": [[123, "module-implementations.problem_classes.Piline"]], "piline (class in implementations.problem_classes.piline)": [[123, "implementations.problem_classes.Piline.piline"]], "solve_system() (piline method)": [[123, "implementations.problem_classes.Piline.piline.solve_system"]], "u_exact() (piline method)": [[123, "implementations.problem_classes.Piline.piline.u_exact"]], "a (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.A"]], "id (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.Id"]], "quench (class in implementations.problem_classes.quench)": [[124, "implementations.problem_classes.Quench.Quench"]], "quenchimex (class in implementations.problem_classes.quench)": [[124, "implementations.problem_classes.Quench.QuenchIMEX"]], "dtype_f (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.dtype_f"]], "dtype_f (quenchimex attribute)": [[124, "implementations.problem_classes.Quench.QuenchIMEX.dtype_f"]], "dtype_u (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.dtype_u"]], "dx (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.dx"]], "eval_f() (quench method)": [[124, "implementations.problem_classes.Quench.Quench.eval_f"]], "eval_f() (quenchimex method)": [[124, "implementations.problem_classes.Quench.QuenchIMEX.eval_f"]], "eval_f_non_linear() (quench method)": [[124, "implementations.problem_classes.Quench.Quench.eval_f_non_linear"]], "get_non_linear_jacobian() (quench method)": [[124, "implementations.problem_classes.Quench.Quench.get_non_linear_Jacobian"]], "implementations.problem_classes.quench": [[124, "module-implementations.problem_classes.Quench"]], "leak (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.leak"]], "solve_system() (quench method)": [[124, "implementations.problem_classes.Quench.Quench.solve_system"]], "solve_system() (quenchimex method)": [[124, "implementations.problem_classes.Quench.QuenchIMEX.solve_system"]], "u_exact() (quench method)": [[124, "implementations.problem_classes.Quench.Quench.u_exact"]], "u_exact() (quenchimex method)": [[124, "implementations.problem_classes.Quench.QuenchIMEX.u_exact"]], "xv (quench attribute)": [[124, "implementations.problem_classes.Quench.Quench.xv"]], "a (testequation0d attribute)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.A"]], "dtype_f (testequation0d attribute)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.dtype_f"]], "dtype_u (testequation0d attribute)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.dtype_u"]], "eval_f() (testequation0d method)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.eval_f"]], "implementations.problem_classes.testequation_0d": [[125, "module-implementations.problem_classes.TestEquation_0D"]], "setup_gpu() (testequation0d class method)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.setup_GPU"]], "solve_system() (testequation0d method)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.solve_system"]], "splu() (testequation0d static method)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.splu"]], "testequation0d (class in implementations.problem_classes.testequation_0d)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d"]], "u_exact() (testequation0d method)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.u_exact"]], "xp (testequation0d attribute)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.xp"]], "xsp (testequation0d attribute)": [[125, "implementations.problem_classes.TestEquation_0D.testequation0d.xsp"]], "dtype_f (vanderpol attribute)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.dtype_f"]], "dtype_u (vanderpol attribute)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.dtype_u"]], "eval_f() (vanderpol method)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.eval_f"]], "implementations.problem_classes.van_der_pol_implicit": [[126, "module-implementations.problem_classes.Van_der_Pol_implicit"]], "solve_system() (vanderpol method)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.solve_system"]], "u_exact() (vanderpol method)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.u_exact"]], "vanderpol (class in implementations.problem_classes.van_der_pol_implicit)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol"]], "work_counters (vanderpol attribute)": [[126, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.work_counters"]], "k (fenics_vortex_2d attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.K"]], "k (fenics_vortex_2d_mass attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.K"]], "m (fenics_vortex_2d attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.M"]], "m (fenics_vortex_2d_mass attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.M"]], "v (fenics_vortex_2d attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.V"]], "v (fenics_vortex_2d_mass attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.V"]], "apply_mass_matrix() (fenics_vortex_2d method)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.apply_mass_matrix"]], "dtype_f (fenics_vortex_2d attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.dtype_f"]], "dtype_u (fenics_vortex_2d attribute)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.dtype_u"]], "eval_f() (fenics_vortex_2d method)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.eval_f"]], "eval_f() (fenics_vortex_2d_mass method)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.eval_f"]], "fenics_vortex_2d (class in implementations.problem_classes.vorticityvelocity_2d_fenics_periodic)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d"]], "fenics_vortex_2d_mass (class in implementations.problem_classes.vorticityvelocity_2d_fenics_periodic)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass"]], "implementations.problem_classes.vorticityvelocity_2d_fenics_periodic": [[127, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"]], "solve_system() (fenics_vortex_2d method)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.solve_system"]], "solve_system() (fenics_vortex_2d_mass method)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.solve_system"]], "u_exact() (fenics_vortex_2d method)": [[127, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.u_exact"]], "implementations.problem_classes.acoustic_helpers": [[128, "module-implementations.problem_classes.acoustic_helpers"]], "getbcleft() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[129, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getBCLeft"]], "getbcright() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[129, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getBCRight"]], "gethorizontaldx() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[129, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getHorizontalDx"]], "getmatrix() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[129, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getMatrix"]], "implementations.problem_classes.acoustic_helpers.buildfdmatrix": [[129, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"]], "getwave1dadvectionmatrix() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[130, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWave1DAdvectionMatrix"]], "getwave1dmatrix() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[130, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWave1DMatrix"]], "getwavebcleft() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[130, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWaveBCLeft"]], "getwavebcright() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[130, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWaveBCRight"]], "implementations.problem_classes.acoustic_helpers.buildwave1dmatrix": [[130, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"]], "bdf2 (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2"]], "dirk (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk"]], "f() (dirk method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.f"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.f"]], "f_fast() (rk_imex method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_fast"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_fast"]], "f_fast_solve() (rk_imex method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_fast_solve"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_fast_solve"]], "f_slow() (rk_imex method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_slow"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_slow"]], "f_solve() (dirk method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.f_solve"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.f_solve"]], "firsttimestep() (bdf2 method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2.firsttimestep"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.firsttimestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators": [[131, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"]], "rk_imex (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex"]], "timestep() (bdf2 method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2.timestep"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.timestep"]], "timestep() (dirk method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.timestep"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.timestep"]], "timestep() (rk_imex method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.timestep"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.timestep"]], "timestep() (trapezoidal method)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal.timestep"], [137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.timestep"]], "trapezoidal (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[131, "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal"]], "implementations.problem_classes.boussinesq_helpers": [[132, "module-implementations.problem_classes.boussinesq_helpers"]], "get2dmatrix() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[133, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DMatrix"]], "get2dmesh() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[133, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DMesh"]], "get2dupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[133, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DUpwindMatrix"]], "getbchorizontal() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[133, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.getBCHorizontal"]], "getbcvertical() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[133, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.getBCVertical"]], "implementations.problem_classes.boussinesq_helpers.build2dfdmatrix": [[133, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"]], "getboussinesq2dmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[134, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesq2DMatrix"]], "getboussinesq2dupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[134, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesq2DUpwindMatrix"]], "getboussinesqbchorizontal() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[134, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesqBCHorizontal"]], "getboussinesqbcvertical() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[134, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesqBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix": [[134, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"]], "getbcleft() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[135, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getBCLeft"]], "getbcright() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[135, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getBCRight"]], "getmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[135, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getMatrix"]], "getupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[135, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getUpwindMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildfdmatrix": [[135, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"]], "callback (class in implementations.problem_classes.boussinesq_helpers.helper_classes)": [[136, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback"]], "add() (logging method)": [[136, "implementations.problem_classes.boussinesq_helpers.helper_classes.logging.add"]], "getcounter() (callback method)": [[136, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback.getcounter"]], "getresidual() (callback method)": [[136, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback.getresidual"]], "implementations.problem_classes.boussinesq_helpers.helper_classes": [[136, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"]], "logging (class in implementations.problem_classes.boussinesq_helpers.helper_classes)": [[136, "implementations.problem_classes.boussinesq_helpers.helper_classes.logging"]], "numsmalltimesteps() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.NumSmallTimeSteps"]], "rk3lin() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.RK3Lin"]], "splitexplicit (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit"]], "verletlin() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.VerletLin"]], "bdf2 (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2"]], "dirk (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk"]], "f() (bdf2 method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.f"]], "f() (trapezoidal method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.f"]], "f_fast() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fast"]], "f_fastmom() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fastMom"]], "f_fastther() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fastTher"]], "f_slow() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_slow"]], "f_solve() (bdf2 method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.f_solve"]], "f_solve() (trapezoidal method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.f_solve"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators": [[137, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"]], "rk_imex (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex"]], "timestep() (splitexplicit method)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.timestep"]], "trapezoidal (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[137, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal"]], "implementations.problem_classes.boussinesq_helpers.unflatten": [[138, "module-implementations.problem_classes.boussinesq_helpers.unflatten"]], "unflatten() (in module implementations.problem_classes.boussinesq_helpers.unflatten)": [[138, "implementations.problem_classes.boussinesq_helpers.unflatten.unflatten"]], "a (genericndimfindiff attribute)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.A"]], "genericndimfindiff (class in implementations.problem_classes.generic_nd_fd)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff"]], "id (genericndimfindiff attribute)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.Id"]], "dtype_f (genericndimfindiff attribute)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dtype_f"]], "dtype_u (genericndimfindiff attribute)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dtype_u"]], "dx (genericndimfindiff property)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dx"]], "eval_f() (genericndimfindiff method)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.eval_f"]], "get_default_sweeper_class() (genericndimfindiff class method)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.get_default_sweeper_class"]], "grids (genericndimfindiff property)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.grids"]], "implementations.problem_classes.generic_nd_fd": [[139, "module-implementations.problem_classes.generic_ND_FD"]], "ndim (genericndimfindiff property)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.ndim"]], "solve_system() (genericndimfindiff method)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.solve_system"]], "xvalues (genericndimfindiff attribute)": [[139, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.xvalues"]], "dtype_f (nonlinear_ode_1 attribute)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.dtype_f"]], "dtype_u (nonlinear_ode_1 attribute)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.dtype_u"]], "eval_f() (nonlinear_ode_1 method)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.eval_f"]], "implementations.problem_classes.nonlinear_ode_1": [[140, "module-implementations.problem_classes.nonlinear_ODE_1"]], "newton_itercount (nonlinear_ode_1 attribute)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.newton_itercount"]], "newton_ncalls (nonlinear_ode_1 attribute)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.newton_ncalls"]], "nonlinear_ode_1 (class in implementations.problem_classes.nonlinear_ode_1)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1"]], "solve_system() (nonlinear_ode_1 method)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.solve_system"]], "u_exact() (nonlinear_ode_1 method)": [[140, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.u_exact"]], "dtype_f (polynomial_testequation attribute)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.dtype_f"]], "dtype_f (polynomial_testequation_imex attribute)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX.dtype_f"]], "dtype_u (polynomial_testequation attribute)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.dtype_u"]], "eval_f() (polynomial_testequation method)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.eval_f"]], "eval_f() (polynomial_testequation_imex method)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX.eval_f"]], "implementations.problem_classes.polynomial_test_problem": [[141, "module-implementations.problem_classes.polynomial_test_problem"]], "polynomial_testequation (class in implementations.problem_classes.polynomial_test_problem)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation"]], "polynomial_testequation_imex (class in implementations.problem_classes.polynomial_test_problem)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX"]], "solve_system() (polynomial_testequation method)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.solve_system"]], "u_exact() (polynomial_testequation method)": [[141, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.u_exact"]], "implementations.sweeper_classes": [[142, "module-implementations.sweeper_classes"]], "adamsbashforthexplicit1step (class in implementations.sweeper_classes.multistep)": [[143, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step"]], "adamsmoultonimplicit1step (class in implementations.sweeper_classes.multistep)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step"]], "adamsmoultonimplicit2step (class in implementations.sweeper_classes.multistep)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step"]], "backwardeuler (class in implementations.sweeper_classes.multistep)": [[143, "implementations.sweeper_classes.Multistep.BackwardEuler"]], "cache (class in implementations.sweeper_classes.multistep)": [[143, "implementations.sweeper_classes.Multistep.Cache"]], "multistep (class in implementations.sweeper_classes.multistep)": [[143, "implementations.sweeper_classes.Multistep.MultiStep"]], "alpha (adamsbashforthexplicit1step attribute)": [[143, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step.alpha"]], "alpha (adamsmoultonimplicit1step attribute)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step.alpha"]], "alpha (adamsmoultonimplicit2step attribute)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.alpha"]], "alpha (backwardeuler attribute)": [[143, "implementations.sweeper_classes.Multistep.BackwardEuler.alpha"]], "alpha (multistep attribute)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.alpha"]], "beta (adamsbashforthexplicit1step attribute)": [[143, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step.beta"]], "beta (adamsmoultonimplicit1step attribute)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step.beta"]], "beta (adamsmoultonimplicit2step attribute)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.beta"]], "beta (backwardeuler attribute)": [[143, "implementations.sweeper_classes.Multistep.BackwardEuler.beta"]], "beta (multistep attribute)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.beta"]], "compute_end_point() (multistep method)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.compute_end_point"]], "compute_residual() (multistep method)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.compute_residual"]], "generate_starting_values() (adamsmoultonimplicit2step method)": [[143, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.generate_starting_values"]], "generate_starting_values() (multistep method)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.generate_starting_values"]], "implementations.sweeper_classes.multistep": [[143, "module-implementations.sweeper_classes.Multistep"]], "predict() (multistep method)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.predict"]], "update() (cache method)": [[143, "implementations.sweeper_classes.Multistep.Cache.update"]], "update_nodes() (multistep method)": [[143, "implementations.sweeper_classes.Multistep.MultiStep.update_nodes"]], "ark54 (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54"]], "ark548l2sa (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA"]], "ark548l2saerk (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK"]], "ark548l2saerk2 (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2"]], "ark548l2saesdirk (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK"]], "ark548l2saesdirk2 (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2"]], "backwardeuler (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler"]], "butchertableau (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ButcherTableau"]], "butchertableauclass (ark54 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.ButcherTableauClass"]], "butchertableauclass (ark548l2sa attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.ButcherTableauClass"]], "butchertableauclass (ark548l2saerk attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.ButcherTableauClass"]], "butchertableauclass (ark548l2saesdirk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.ButcherTableauClass"]], "butchertableauclass (cash_karp attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.ButcherTableauClass"]], "butchertableauclass (dirk43 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.DIRK43.ButcherTableauClass"]], "butchertableauclass (esdirk53 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.ButcherTableauClass"]], "butchertableauclass (heun_euler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.ButcherTableauClass"]], "butchertableauclass (rungekutta attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.ButcherTableauClass"]], "butchertableauclass_explicit (ark54 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.ButcherTableauClass_explicit"]], "butchertableauclass_explicit (ark548l2sa attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.ButcherTableauClass_explicit"]], "butchertableauclass_explicit (rungekuttaimex attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.ButcherTableauClass_explicit"]], "butchertableauembedded (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ButcherTableauEmbedded"]], "cash_karp (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp"]], "cranknicholson (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson"]], "dirk43 (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.DIRK43"]], "esdirk53 (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53"]], "explicitmidpointmethod (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod"]], "forwardeuler (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler"]], "heun_euler (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler"]], "implicitmidpointmethod (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod"]], "rk4 (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.RK4"]], "rungekutta (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta"]], "rungekuttaimex (class in implementations.sweeper_classes.runge_kutta)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX"]], "compute_end_point() (rungekutta method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.compute_end_point"]], "gamma (ark548l2saesdirk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.gamma"]], "get_butcher_tableau() (rungekutta class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_Butcher_tableau"]], "get_butcher_tableau_explicit() (rungekuttaimex class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.get_Butcher_tableau_explicit"]], "get_q_matrix() (rungekutta class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_Q_matrix"]], "get_full_f() (rungekutta method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_full_f"]], "get_update_order() (ark54 class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.get_update_order"]], "get_update_order() (ark548l2sa class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.get_update_order"]], "get_update_order() (ark548l2saerk class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.get_update_order"]], "get_update_order() (ark548l2saesdirk2 class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.get_update_order"]], "get_update_order() (cash_karp class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.get_update_order"]], "get_update_order() (dirk43 class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.DIRK43.get_update_order"]], "get_update_order() (esdirk53 class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.get_update_order"]], "get_update_order() (heun_euler class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.get_update_order"]], "get_update_order() (rungekutta class method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_update_order"]], "i (ark548l2saesdirk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.i"]], "implementations.sweeper_classes.runge_kutta": [[144, "module-implementations.sweeper_classes.Runge_Kutta"]], "integrate() (rungekutta method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.integrate"]], "integrate() (rungekuttaimex method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.integrate"]], "level (rungekutta property)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.level"]], "matrix (ark54 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.matrix"]], "matrix (ark548l2sa attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.matrix"]], "matrix (ark548l2saerk attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.matrix"]], "matrix (ark548l2saerk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2.matrix"]], "matrix (ark548l2saesdirk attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK.matrix"]], "matrix (ark548l2saesdirk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.matrix"]], "matrix (backwardeuler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.matrix"]], "matrix (cash_karp attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.matrix"]], "matrix (cranknicholson attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.matrix"]], "matrix (dirk43 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.DIRK43.matrix"]], "matrix (esdirk53 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.matrix"]], "matrix (explicitmidpointmethod attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.matrix"]], "matrix (forwardeuler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.matrix"]], "matrix (heun_euler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.matrix"]], "matrix (implicitmidpointmethod attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.matrix"]], "matrix (rk4 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RK4.matrix"]], "matrix (rungekutta attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.matrix"]], "matrix_explicit (ark54 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.matrix_explicit"]], "matrix_explicit (ark548l2sa attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.matrix_explicit"]], "matrix_explicit (rungekuttaimex attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.matrix_explicit"]], "nodes (ark54 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.nodes"]], "nodes (ark548l2sa attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.nodes"]], "nodes (ark548l2saerk attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.nodes"]], "nodes (ark548l2saesdirk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.nodes"]], "nodes (backwardeuler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.nodes"]], "nodes (cash_karp attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.nodes"]], "nodes (cranknicholson attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.nodes"]], "nodes (dirk43 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.DIRK43.nodes"]], "nodes (esdirk53 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.nodes"]], "nodes (explicitmidpointmethod attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.nodes"]], "nodes (forwardeuler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.nodes"]], "nodes (heun_euler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.nodes"]], "nodes (implicitmidpointmethod attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.nodes"]], "nodes (rk4 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RK4.nodes"]], "nodes (rungekutta attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.nodes"]], "predict() (rungekutta method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.predict"]], "predict() (rungekuttaimex method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.predict"]], "update_nodes() (rungekutta method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.update_nodes"]], "update_nodes() (rungekuttaimex method)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.update_nodes"]], "weights (ark54 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK54.weights"]], "weights (ark548l2sa attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.weights"]], "weights (ark548l2saerk attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.weights"]], "weights (ark548l2saesdirk2 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.weights"]], "weights (backwardeuler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.weights"]], "weights (cash_karp attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.weights"]], "weights (cranknicholson attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.weights"]], "weights (dirk43 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.DIRK43.weights"]], "weights (esdirk53 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.weights"]], "weights (explicitmidpointmethod attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.weights"]], "weights (forwardeuler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.weights"]], "weights (heun_euler attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.weights"]], "weights (implicitmidpointmethod attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.weights"]], "weights (rk4 attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RK4.weights"]], "weights (rungekutta attribute)": [[144, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.weights"]], "rkn (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[145, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RKN"]], "rungekuttanystrom (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[145, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom"]], "velocity_verlet (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[145, "implementations.sweeper_classes.Runge_Kutta_Nystrom.Velocity_Verlet"]], "compute_end_point() (rungekuttanystrom method)": [[145, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.compute_end_point"]], "get_full_f() (rungekuttanystrom method)": [[145, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.get_full_f"]], "implementations.sweeper_classes.runge_kutta_nystrom": [[145, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"]], "update_nodes() (rungekuttanystrom method)": [[145, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.update_nodes"]], "s (boris_2nd_order attribute)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.S"]], "sq (boris_2nd_order attribute)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.SQ"]], "st (boris_2nd_order attribute)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.ST"]], "sx (boris_2nd_order attribute)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.Sx"]], "boris_2nd_order (class in implementations.sweeper_classes.boris_2nd_order)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order"]], "compute_end_point() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.compute_end_point"]], "get_scalar_problems_manysweep_mats() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_manysweep_mats"]], "get_scalar_problems_picardsweep_mats() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_picardsweep_mats"]], "get_scalar_problems_sweeper_mats() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_sweeper_mats"]], "get_sweeper_mats() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_sweeper_mats"]], "implementations.sweeper_classes.boris_2nd_order": [[146, "module-implementations.sweeper_classes.boris_2nd_order"]], "integrate() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.integrate"]], "update_nodes() (boris_2nd_order method)": [[146, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.update_nodes"]], "qe (explicit attribute)": [[147, "implementations.sweeper_classes.explicit.explicit.QE"]], "compute_end_point() (explicit method)": [[147, "implementations.sweeper_classes.explicit.explicit.compute_end_point"]], "explicit (class in implementations.sweeper_classes.explicit)": [[147, "implementations.sweeper_classes.explicit.explicit"]], "implementations.sweeper_classes.explicit": [[147, "module-implementations.sweeper_classes.explicit"]], "integrate() (explicit method)": [[147, "implementations.sweeper_classes.explicit.explicit.integrate"]], "update_nodes() (explicit method)": [[147, "implementations.sweeper_classes.explicit.explicit.update_nodes"]], "qi (generic_implicit attribute)": [[148, "implementations.sweeper_classes.generic_implicit.generic_implicit.QI"]], "compute_end_point() (generic_implicit method)": [[148, "implementations.sweeper_classes.generic_implicit.generic_implicit.compute_end_point"]], "generic_implicit (class in implementations.sweeper_classes.generic_implicit)": [[148, "implementations.sweeper_classes.generic_implicit.generic_implicit"]], "implementations.sweeper_classes.generic_implicit": [[148, "module-implementations.sweeper_classes.generic_implicit"]], "integrate() (generic_implicit method)": [[148, "implementations.sweeper_classes.generic_implicit.generic_implicit.integrate"]], "update_nodes() (generic_implicit method)": [[148, "implementations.sweeper_classes.generic_implicit.generic_implicit.update_nodes"]], "sweepermpi (class in implementations.sweeper_classes.generic_implicit_mpi)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI"]], "comm (sweepermpi property)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.comm"]], "compute_end_point() (sweepermpi method)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.compute_end_point"]], "compute_end_point() (generic_implicit_mpi method)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.compute_end_point"]], "compute_residual() (sweepermpi method)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.compute_residual"]], "generic_implicit_mpi (class in implementations.sweeper_classes.generic_implicit_mpi)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI"]], "implementations.sweeper_classes.generic_implicit_mpi": [[149, "module-implementations.sweeper_classes.generic_implicit_MPI"]], "integrate() (generic_implicit_mpi method)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.integrate"]], "predict() (sweepermpi method)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.predict"]], "rank (sweepermpi property)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.rank"]], "rank (generic_implicit_mpi attribute)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.rank"]], "update_nodes() (generic_implicit_mpi method)": [[149, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.update_nodes"]], "qe (imex_1st_order attribute)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.QE"]], "qi (imex_1st_order attribute)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.QI"]], "compute_end_point() (imex_1st_order method)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.compute_end_point"]], "get_scalar_problems_manysweep_mat() (imex_1st_order method)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_scalar_problems_manysweep_mat"]], "get_scalar_problems_sweeper_mats() (imex_1st_order method)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_scalar_problems_sweeper_mats"]], "get_sweeper_mats() (imex_1st_order method)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_sweeper_mats"]], "imex_1st_order (class in implementations.sweeper_classes.imex_1st_order)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order": [[150, "module-implementations.sweeper_classes.imex_1st_order"]], "integrate() (imex_1st_order method)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.integrate"]], "update_nodes() (imex_1st_order method)": [[150, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.update_nodes"]], "compute_end_point() (imex_1st_order_mpi method)": [[151, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.compute_end_point"]], "imex_1st_order_mpi (class in implementations.sweeper_classes.imex_1st_order_mpi)": [[151, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_mpi": [[151, "module-implementations.sweeper_classes.imex_1st_order_MPI"]], "integrate() (imex_1st_order_mpi method)": [[151, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.integrate"]], "update_nodes() (imex_1st_order_mpi method)": [[151, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.update_nodes"]], "compute_end_point() (imex_1st_order_mass method)": [[152, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.compute_end_point"]], "compute_residual() (imex_1st_order_mass method)": [[152, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.compute_residual"]], "imex_1st_order_mass (class in implementations.sweeper_classes.imex_1st_order_mass)": [[152, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass"]], "implementations.sweeper_classes.imex_1st_order_mass": [[152, "module-implementations.sweeper_classes.imex_1st_order_mass"]], "update_nodes() (imex_1st_order_mass method)": [[152, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.update_nodes"]], "q1 (multi_implicit attribute)": [[153, "implementations.sweeper_classes.multi_implicit.multi_implicit.Q1"]], "q2 (multi_implicit attribute)": [[153, "implementations.sweeper_classes.multi_implicit.multi_implicit.Q2"]], "compute_end_point() (multi_implicit method)": [[153, "implementations.sweeper_classes.multi_implicit.multi_implicit.compute_end_point"]], "implementations.sweeper_classes.multi_implicit": [[153, "module-implementations.sweeper_classes.multi_implicit"]], "integrate() (multi_implicit method)": [[153, "implementations.sweeper_classes.multi_implicit.multi_implicit.integrate"]], "multi_implicit (class in implementations.sweeper_classes.multi_implicit)": [[153, "implementations.sweeper_classes.multi_implicit.multi_implicit"]], "update_nodes() (multi_implicit method)": [[153, "implementations.sweeper_classes.multi_implicit.multi_implicit.update_nodes"]], "qq (verlet attribute)": [[154, "implementations.sweeper_classes.verlet.verlet.QQ"], [154, "implementations.sweeper_classes.verlet.verlet.qQ"]], "qt (verlet attribute)": [[154, "implementations.sweeper_classes.verlet.verlet.QT"]], "qx (verlet attribute)": [[154, "implementations.sweeper_classes.verlet.verlet.Qx"]], "compute_end_point() (verlet method)": [[154, "implementations.sweeper_classes.verlet.verlet.compute_end_point"]], "implementations.sweeper_classes.verlet": [[154, "module-implementations.sweeper_classes.verlet"]], "integrate() (verlet method)": [[154, "implementations.sweeper_classes.verlet.verlet.integrate"]], "update_nodes() (verlet method)": [[154, "implementations.sweeper_classes.verlet.verlet.update_nodes"]], "verlet (class in implementations.sweeper_classes.verlet)": [[154, "implementations.sweeper_classes.verlet.verlet"]], "implementations.transfer_classes": [[155, "module-implementations.transfer_classes"]], "base_transfer_mass (class in implementations.transfer_classes.basetransfer_mass)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass"]], "coarse (base_transfer_mass attribute)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.coarse"]], "fine (base_transfer_mass attribute)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.fine"]], "implementations.transfer_classes.basetransfer_mass": [[156, "module-implementations.transfer_classes.BaseTransfer_mass"]], "logger (base_transfer_mass attribute)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.logger"]], "params (base_transfer_mass attribute)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.params"]], "prolong() (base_transfer_mass method)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.prolong"]], "prolong_f() (base_transfer_mass method)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.prolong_f"]], "restrict() (base_transfer_mass method)": [[156, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.restrict"]], "implementations.transfer_classes.transferfenicsmesh": [[157, "module-implementations.transfer_classes.TransferFenicsMesh"]], "mesh_to_mesh_fenics (class in implementations.transfer_classes.transferfenicsmesh)": [[157, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics"]], "project() (mesh_to_mesh_fenics method)": [[157, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.project"]], "prolong() (mesh_to_mesh_fenics method)": [[157, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.prolong"]], "restrict() (mesh_to_mesh_fenics method)": [[157, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.restrict"]], "pspace (mesh_to_mesh attribute)": [[158, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.Pspace"], [162, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.Pspace"]], "rspace (mesh_to_mesh attribute)": [[158, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.Rspace"], [162, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.Rspace"]], "implementations.transfer_classes.transfermesh": [[158, "module-implementations.transfer_classes.TransferMesh"]], "mesh_to_mesh (class in implementations.transfer_classes.transfermesh)": [[158, "implementations.transfer_classes.TransferMesh.mesh_to_mesh"]], "prolong() (mesh_to_mesh method)": [[158, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.prolong"], [162, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.prolong"]], "restrict() (mesh_to_mesh method)": [[158, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.restrict"], [162, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.restrict"]], "implementations.transfer_classes.transfermesh_fft": [[159, "module-implementations.transfer_classes.TransferMesh_FFT"]], "irfft_object_fine (mesh_to_mesh_fft attribute)": [[159, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.irfft_object_fine"]], "mesh_to_mesh_fft (class in implementations.transfer_classes.transfermesh_fft)": [[159, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft"]], "prolong() (mesh_to_mesh_fft method)": [[159, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.prolong"]], "restrict() (mesh_to_mesh_fft method)": [[159, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.restrict"]], "rfft_object_coarse (mesh_to_mesh_fft attribute)": [[159, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.rfft_object_coarse"]], "pspace (mesh_to_mesh_fft2d attribute)": [[160, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.Pspace"]], "rspace (mesh_to_mesh_fft2d attribute)": [[160, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.Rspace"]], "implementations.transfer_classes.transfermesh_fft2d": [[160, "module-implementations.transfer_classes.TransferMesh_FFT2D"]], "mesh_to_mesh_fft2d (class in implementations.transfer_classes.transfermesh_fft2d)": [[160, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d"]], "prolong() (mesh_to_mesh_fft2d method)": [[160, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.prolong"]], "restrict() (mesh_to_mesh_fft2d method)": [[160, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.restrict"]], "fft_to_fft (class in implementations.transfer_classes.transfermesh_mpifft)": [[161, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft"]], "implementations.transfer_classes.transfermesh_mpifft": [[161, "module-implementations.transfer_classes.TransferMesh_MPIFFT"]], "prolong() (fft_to_fft method)": [[161, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft.prolong"]], "restrict() (fft_to_fft method)": [[161, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft.restrict"]], "implementations.transfer_classes.transfermesh_nocoarse": [[162, "module-implementations.transfer_classes.TransferMesh_NoCoarse"]], "mesh_to_mesh (class in implementations.transfer_classes.transfermesh_nocoarse)": [[162, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh"]], "implementations.transfer_classes.transferpetscdmda": [[163, "module-implementations.transfer_classes.TransferPETScDMDA"]], "mesh_to_mesh_petsc_dmda (class in implementations.transfer_classes.transferpetscdmda)": [[163, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda"]], "prolong() (mesh_to_mesh_petsc_dmda method)": [[163, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda.prolong"]], "restrict() (mesh_to_mesh_petsc_dmda method)": [[163, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda.restrict"]], "implementations.transfer_classes.transferparticles_nocoarse": [[164, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "particles_to_particles (class in implementations.transfer_classes.transferparticles_nocoarse)": [[164, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles"]], "prolong() (particles_to_particles method)": [[164, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles.prolong"]], "restrict() (particles_to_particles method)": [[164, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles.restrict"]]}})