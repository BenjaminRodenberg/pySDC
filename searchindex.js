Search.setIndex({"docnames": ["CHANGELOG", "CODE_OF_CONDUCT", "CONTRIBUTING", "README", "docs/contrib/01_pull_requests", "docs/contrib/02_continuous_integration", "docs/contrib/03_naming_conventions", "docs/contrib/04_custom_implementations", "docs/contrib/05_documenting_code", "index", "projects/AllenCahn_Bayreuth", "projects/DAE", "projects/Hamiltonian", "projects/PinTSimE", "projects/RDC", "projects/Resilience", "projects/SDC_showdown", "projects/asymp_conv", "projects/compression", "projects/doc_SDC_showdown", "projects/doc_asympconv", "projects/doc_fput", "projects/doc_fwsw_acoustic", "projects/doc_fwsw_boussinesq", "projects/doc_fwsw_theory", "projects/doc_hamiltonian_simple", "projects/doc_matrixPFASST_matrix", "projects/doc_matrixPFASST_propagator", "projects/doc_parallelSDC_nonlinear", "projects/doc_parallelSDC_preconditioner", "projects/doc_parallelSDC_preconditioner_MPI", "projects/doc_performance", "projects/doc_solar_system", "projects/fwsw", "projects/matrixPFASST", "projects/monodomain", "projects/parallelSDC", "projects/parallelSDC_reloaded", "projects/performance", "projects/second_order", "pySDC/core", "pySDC/core.BaseTransfer", "pySDC/core.Collocation", "pySDC/core.Common", "pySDC/core.Controller", "pySDC/core.ConvergenceController", "pySDC/core.Errors", "pySDC/core.Hooks", "pySDC/core.Lagrange", "pySDC/core.Level", "pySDC/core.Nodes", "pySDC/core.Problem", "pySDC/core.SpaceTransfer", "pySDC/core.Step", "pySDC/core.Sweeper", "pySDC/helpers", "pySDC/helpers.NCCL_communicator", "pySDC/helpers.plot_helper", "pySDC/helpers.problem_helper", "pySDC/helpers.pysdc_helper", "pySDC/helpers.setup_helper", "pySDC/helpers.stats_helper", "pySDC/helpers.testing", "pySDC/helpers.transfer_helper", "pySDC/helpers.visualization_tools", "pySDC/implementations", "pySDC/implementations.controller_classes", "pySDC/implementations.controller_classes.controller_MPI", "pySDC/implementations.controller_classes.controller_nonMPI", "pySDC/implementations.convergence_controller_classes", "pySDC/implementations.convergence_controller_classes.adaptive_collocation", "pySDC/implementations.convergence_controller_classes.adaptivity", "pySDC/implementations.convergence_controller_classes.basic_restarting", "pySDC/implementations.convergence_controller_classes.check_convergence", "pySDC/implementations.convergence_controller_classes.check_iteration_estimator", "pySDC/implementations.convergence_controller_classes.crash", "pySDC/implementations.convergence_controller_classes.estimate_contraction_factor", "pySDC/implementations.convergence_controller_classes.estimate_embedded_error", "pySDC/implementations.convergence_controller_classes.estimate_extrapolation_error", "pySDC/implementations.convergence_controller_classes.estimate_polynomial_error", "pySDC/implementations.convergence_controller_classes.hotrod", "pySDC/implementations.convergence_controller_classes.inexactness", "pySDC/implementations.convergence_controller_classes.interpolate_between_restarts", "pySDC/implementations.convergence_controller_classes.spread_step_sizes", "pySDC/implementations.convergence_controller_classes.step_size_limiter", "pySDC/implementations.convergence_controller_classes.store_uold", "pySDC/implementations.datatype_classes", "pySDC/implementations.datatype_classes.cupy_mesh", "pySDC/implementations.datatype_classes.fenics_mesh", "pySDC/implementations.datatype_classes.mesh", "pySDC/implementations.datatype_classes.particles", "pySDC/implementations.datatype_classes.petsc_vec", "pySDC/implementations.problem_classes", "pySDC/implementations.problem_classes.AcousticAdvection_1D_FD_imex", "pySDC/implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT", "pySDC/implementations.problem_classes.AdvectionEquation_ND_FD", "pySDC/implementations.problem_classes.AllenCahn_1D_FD", "pySDC/implementations.problem_classes.AllenCahn_2D_FD", "pySDC/implementations.problem_classes.AllenCahn_2D_FD_gpu", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT_gpu", "pySDC/implementations.problem_classes.AllenCahn_MPIFFT", "pySDC/implementations.problem_classes.AllenCahn_Temp_MPIFFT", "pySDC/implementations.problem_classes.Auzinger_implicit", "pySDC/implementations.problem_classes.Battery", "pySDC/implementations.problem_classes.Boussinesq_2D_FD_imex", "pySDC/implementations.problem_classes.Brusselator", "pySDC/implementations.problem_classes.BuckConverter", "pySDC/implementations.problem_classes.DiscontinuousTestODE", "pySDC/implementations.problem_classes.FastWaveSlowWave_0D", "pySDC/implementations.problem_classes.FermiPastaUlamTsingou", "pySDC/implementations.problem_classes.FullSolarSystem", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_FD_implicit", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_PETSc", "pySDC/implementations.problem_classes.GrayScott_1D_FEniCS_implicit", "pySDC/implementations.problem_classes.GrayScott_2D_PETSc_periodic", "pySDC/implementations.problem_classes.GrayScott_MPIFFT", "pySDC/implementations.problem_classes.HarmonicOscillator", "pySDC/implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced", "pySDC/implementations.problem_classes.HeatEquation_2D_PETSc_forced", "pySDC/implementations.problem_classes.HeatEquation_ND_FD", "pySDC/implementations.problem_classes.HeatEquation_ND_FD_CuPy", "pySDC/implementations.problem_classes.HenonHeiles", "pySDC/implementations.problem_classes.LogisticEquation", "pySDC/implementations.problem_classes.Lorenz", "pySDC/implementations.problem_classes.NonlinearSchroedinger_MPIFFT", "pySDC/implementations.problem_classes.OuterSolarSystem", "pySDC/implementations.problem_classes.PenningTrap_3D", "pySDC/implementations.problem_classes.Piline", "pySDC/implementations.problem_classes.Quench", "pySDC/implementations.problem_classes.TestEquation_0D", "pySDC/implementations.problem_classes.Van_der_Pol_implicit", "pySDC/implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic", "pySDC/implementations.problem_classes.acoustic_helpers", "pySDC/implementations.problem_classes.acoustic_helpers.buildFDMatrix", "pySDC/implementations.problem_classes.acoustic_helpers.buildWave1DMatrix", "pySDC/implementations.problem_classes.acoustic_helpers.standard_integrators", "pySDC/implementations.problem_classes.boussinesq_helpers", "pySDC/implementations.problem_classes.boussinesq_helpers.build2DFDMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.buildFDMatrix", "pySDC/implementations.problem_classes.boussinesq_helpers.helper_classes", "pySDC/implementations.problem_classes.boussinesq_helpers.standard_integrators", "pySDC/implementations.problem_classes.boussinesq_helpers.unflatten", "pySDC/implementations.problem_classes.generic_ND_FD", "pySDC/implementations.problem_classes.nonlinear_ODE_1", "pySDC/implementations.problem_classes.odeScalar", "pySDC/implementations.problem_classes.odeSystem", "pySDC/implementations.problem_classes.polynomial_test_problem", "pySDC/implementations.sweeper_classes", "pySDC/implementations.sweeper_classes.Multistep", "pySDC/implementations.sweeper_classes.Runge_Kutta", "pySDC/implementations.sweeper_classes.Runge_Kutta_Nystrom", "pySDC/implementations.sweeper_classes.boris_2nd_order", "pySDC/implementations.sweeper_classes.explicit", "pySDC/implementations.sweeper_classes.generic_implicit", "pySDC/implementations.sweeper_classes.generic_implicit_MPI", "pySDC/implementations.sweeper_classes.imex_1st_order", "pySDC/implementations.sweeper_classes.imex_1st_order_MPI", "pySDC/implementations.sweeper_classes.imex_1st_order_mass", "pySDC/implementations.sweeper_classes.multi_implicit", "pySDC/implementations.sweeper_classes.verlet", "pySDC/implementations.transfer_classes", "pySDC/implementations.transfer_classes.BaseTransfer_mass", "pySDC/implementations.transfer_classes.TransferFenicsMesh", "pySDC/implementations.transfer_classes.TransferMesh", "pySDC/implementations.transfer_classes.TransferMesh_FFT", "pySDC/implementations.transfer_classes.TransferMesh_FFT2D", "pySDC/implementations.transfer_classes.TransferMesh_MPIFFT", "pySDC/implementations.transfer_classes.TransferMesh_NoCoarse", "pySDC/implementations.transfer_classes.TransferPETScDMDA", "pySDC/implementations.transfer_classes.TransferParticles_NoCoarse", "tutorial/doc_step_1_A", "tutorial/doc_step_1_B", "tutorial/doc_step_1_C", "tutorial/doc_step_1_D", "tutorial/doc_step_2_A", "tutorial/doc_step_2_B", "tutorial/doc_step_2_C", "tutorial/doc_step_3_A", "tutorial/doc_step_3_B", "tutorial/doc_step_3_C", "tutorial/doc_step_4_A", "tutorial/doc_step_4_B", "tutorial/doc_step_4_C", "tutorial/doc_step_4_D", "tutorial/doc_step_5_A", "tutorial/doc_step_5_B", "tutorial/doc_step_5_C", "tutorial/doc_step_6_A", "tutorial/doc_step_6_B", "tutorial/doc_step_6_C", "tutorial/doc_step_7_A", "tutorial/doc_step_7_B", "tutorial/doc_step_7_C", "tutorial/doc_step_8_A", "tutorial/doc_step_8_B", "tutorial/doc_step_8_C", "tutorial/step_1", "tutorial/step_2", "tutorial/step_3", "tutorial/step_4", "tutorial/step_5", "tutorial/step_6", "tutorial/step_7", "tutorial/step_8"], "filenames": ["CHANGELOG.rst", "CODE_OF_CONDUCT.rst", "CONTRIBUTING.rst", "README.rst", "docs/contrib/01_pull_requests.rst", "docs/contrib/02_continuous_integration.rst", "docs/contrib/03_naming_conventions.rst", "docs/contrib/04_custom_implementations.rst", "docs/contrib/05_documenting_code.rst", "index.rst", "projects/AllenCahn_Bayreuth.rst", "projects/DAE.rst", "projects/Hamiltonian.rst", "projects/PinTSimE.rst", "projects/RDC.rst", "projects/Resilience.rst", "projects/SDC_showdown.rst", "projects/asymp_conv.rst", "projects/compression.rst", "projects/doc_SDC_showdown.rst", "projects/doc_asympconv.rst", "projects/doc_fput.rst", "projects/doc_fwsw_acoustic.rst", "projects/doc_fwsw_boussinesq.rst", "projects/doc_fwsw_theory.rst", "projects/doc_hamiltonian_simple.rst", "projects/doc_matrixPFASST_matrix.rst", "projects/doc_matrixPFASST_propagator.rst", "projects/doc_parallelSDC_nonlinear.rst", "projects/doc_parallelSDC_preconditioner.rst", "projects/doc_parallelSDC_preconditioner_MPI.rst", "projects/doc_performance.rst", "projects/doc_solar_system.rst", "projects/fwsw.rst", "projects/matrixPFASST.rst", "projects/monodomain.rst", "projects/parallelSDC.rst", "projects/parallelSDC_reloaded.rst", "projects/performance.rst", "projects/second_order.rst", "pySDC/core.rst", "pySDC/core.BaseTransfer.rst", "pySDC/core.Collocation.rst", "pySDC/core.Common.rst", "pySDC/core.Controller.rst", "pySDC/core.ConvergenceController.rst", "pySDC/core.Errors.rst", "pySDC/core.Hooks.rst", "pySDC/core.Lagrange.rst", "pySDC/core.Level.rst", "pySDC/core.Nodes.rst", "pySDC/core.Problem.rst", "pySDC/core.SpaceTransfer.rst", "pySDC/core.Step.rst", "pySDC/core.Sweeper.rst", "pySDC/helpers.rst", "pySDC/helpers.NCCL_communicator.rst", "pySDC/helpers.plot_helper.rst", "pySDC/helpers.problem_helper.rst", "pySDC/helpers.pysdc_helper.rst", "pySDC/helpers.setup_helper.rst", "pySDC/helpers.stats_helper.rst", "pySDC/helpers.testing.rst", "pySDC/helpers.transfer_helper.rst", "pySDC/helpers.visualization_tools.rst", "pySDC/implementations.rst", "pySDC/implementations.controller_classes.rst", "pySDC/implementations.controller_classes.controller_MPI.rst", "pySDC/implementations.controller_classes.controller_nonMPI.rst", "pySDC/implementations.convergence_controller_classes.rst", "pySDC/implementations.convergence_controller_classes.adaptive_collocation.rst", "pySDC/implementations.convergence_controller_classes.adaptivity.rst", "pySDC/implementations.convergence_controller_classes.basic_restarting.rst", "pySDC/implementations.convergence_controller_classes.check_convergence.rst", "pySDC/implementations.convergence_controller_classes.check_iteration_estimator.rst", "pySDC/implementations.convergence_controller_classes.crash.rst", "pySDC/implementations.convergence_controller_classes.estimate_contraction_factor.rst", "pySDC/implementations.convergence_controller_classes.estimate_embedded_error.rst", "pySDC/implementations.convergence_controller_classes.estimate_extrapolation_error.rst", "pySDC/implementations.convergence_controller_classes.estimate_polynomial_error.rst", "pySDC/implementations.convergence_controller_classes.hotrod.rst", "pySDC/implementations.convergence_controller_classes.inexactness.rst", "pySDC/implementations.convergence_controller_classes.interpolate_between_restarts.rst", "pySDC/implementations.convergence_controller_classes.spread_step_sizes.rst", "pySDC/implementations.convergence_controller_classes.step_size_limiter.rst", "pySDC/implementations.convergence_controller_classes.store_uold.rst", "pySDC/implementations.datatype_classes.rst", "pySDC/implementations.datatype_classes.cupy_mesh.rst", "pySDC/implementations.datatype_classes.fenics_mesh.rst", "pySDC/implementations.datatype_classes.mesh.rst", "pySDC/implementations.datatype_classes.particles.rst", "pySDC/implementations.datatype_classes.petsc_vec.rst", "pySDC/implementations.problem_classes.rst", "pySDC/implementations.problem_classes.AcousticAdvection_1D_FD_imex.rst", "pySDC/implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.rst", "pySDC/implementations.problem_classes.AdvectionEquation_ND_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_1D_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FD.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FD_gpu.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT.rst", "pySDC/implementations.problem_classes.AllenCahn_2D_FFT_gpu.rst", "pySDC/implementations.problem_classes.AllenCahn_MPIFFT.rst", "pySDC/implementations.problem_classes.AllenCahn_Temp_MPIFFT.rst", "pySDC/implementations.problem_classes.Auzinger_implicit.rst", "pySDC/implementations.problem_classes.Battery.rst", "pySDC/implementations.problem_classes.Boussinesq_2D_FD_imex.rst", "pySDC/implementations.problem_classes.Brusselator.rst", "pySDC/implementations.problem_classes.BuckConverter.rst", "pySDC/implementations.problem_classes.DiscontinuousTestODE.rst", "pySDC/implementations.problem_classes.FastWaveSlowWave_0D.rst", "pySDC/implementations.problem_classes.FermiPastaUlamTsingou.rst", "pySDC/implementations.problem_classes.FullSolarSystem.rst", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.rst", "pySDC/implementations.problem_classes.GeneralizedFisher_1D_PETSc.rst", "pySDC/implementations.problem_classes.GrayScott_1D_FEniCS_implicit.rst", "pySDC/implementations.problem_classes.GrayScott_2D_PETSc_periodic.rst", "pySDC/implementations.problem_classes.GrayScott_MPIFFT.rst", "pySDC/implementations.problem_classes.HarmonicOscillator.rst", "pySDC/implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.rst", "pySDC/implementations.problem_classes.HeatEquation_2D_PETSc_forced.rst", "pySDC/implementations.problem_classes.HeatEquation_ND_FD.rst", "pySDC/implementations.problem_classes.HeatEquation_ND_FD_CuPy.rst", "pySDC/implementations.problem_classes.HenonHeiles.rst", "pySDC/implementations.problem_classes.LogisticEquation.rst", "pySDC/implementations.problem_classes.Lorenz.rst", "pySDC/implementations.problem_classes.NonlinearSchroedinger_MPIFFT.rst", "pySDC/implementations.problem_classes.OuterSolarSystem.rst", "pySDC/implementations.problem_classes.PenningTrap_3D.rst", "pySDC/implementations.problem_classes.Piline.rst", "pySDC/implementations.problem_classes.Quench.rst", "pySDC/implementations.problem_classes.TestEquation_0D.rst", "pySDC/implementations.problem_classes.Van_der_Pol_implicit.rst", "pySDC/implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.rst", "pySDC/implementations.problem_classes.acoustic_helpers.rst", "pySDC/implementations.problem_classes.acoustic_helpers.buildFDMatrix.rst", "pySDC/implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.rst", "pySDC/implementations.problem_classes.acoustic_helpers.standard_integrators.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.buildFDMatrix.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.helper_classes.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.standard_integrators.rst", "pySDC/implementations.problem_classes.boussinesq_helpers.unflatten.rst", "pySDC/implementations.problem_classes.generic_ND_FD.rst", "pySDC/implementations.problem_classes.nonlinear_ODE_1.rst", "pySDC/implementations.problem_classes.odeScalar.rst", "pySDC/implementations.problem_classes.odeSystem.rst", "pySDC/implementations.problem_classes.polynomial_test_problem.rst", "pySDC/implementations.sweeper_classes.rst", "pySDC/implementations.sweeper_classes.Multistep.rst", "pySDC/implementations.sweeper_classes.Runge_Kutta.rst", "pySDC/implementations.sweeper_classes.Runge_Kutta_Nystrom.rst", "pySDC/implementations.sweeper_classes.boris_2nd_order.rst", "pySDC/implementations.sweeper_classes.explicit.rst", "pySDC/implementations.sweeper_classes.generic_implicit.rst", "pySDC/implementations.sweeper_classes.generic_implicit_MPI.rst", "pySDC/implementations.sweeper_classes.imex_1st_order.rst", "pySDC/implementations.sweeper_classes.imex_1st_order_MPI.rst", "pySDC/implementations.sweeper_classes.imex_1st_order_mass.rst", "pySDC/implementations.sweeper_classes.multi_implicit.rst", "pySDC/implementations.sweeper_classes.verlet.rst", "pySDC/implementations.transfer_classes.rst", "pySDC/implementations.transfer_classes.BaseTransfer_mass.rst", "pySDC/implementations.transfer_classes.TransferFenicsMesh.rst", "pySDC/implementations.transfer_classes.TransferMesh.rst", "pySDC/implementations.transfer_classes.TransferMesh_FFT.rst", "pySDC/implementations.transfer_classes.TransferMesh_FFT2D.rst", "pySDC/implementations.transfer_classes.TransferMesh_MPIFFT.rst", "pySDC/implementations.transfer_classes.TransferMesh_NoCoarse.rst", "pySDC/implementations.transfer_classes.TransferPETScDMDA.rst", "pySDC/implementations.transfer_classes.TransferParticles_NoCoarse.rst", "tutorial/doc_step_1_A.rst", "tutorial/doc_step_1_B.rst", "tutorial/doc_step_1_C.rst", "tutorial/doc_step_1_D.rst", "tutorial/doc_step_2_A.rst", "tutorial/doc_step_2_B.rst", "tutorial/doc_step_2_C.rst", "tutorial/doc_step_3_A.rst", "tutorial/doc_step_3_B.rst", "tutorial/doc_step_3_C.rst", "tutorial/doc_step_4_A.rst", "tutorial/doc_step_4_B.rst", "tutorial/doc_step_4_C.rst", "tutorial/doc_step_4_D.rst", "tutorial/doc_step_5_A.rst", "tutorial/doc_step_5_B.rst", "tutorial/doc_step_5_C.rst", "tutorial/doc_step_6_A.rst", "tutorial/doc_step_6_B.rst", "tutorial/doc_step_6_C.rst", "tutorial/doc_step_7_A.rst", "tutorial/doc_step_7_B.rst", "tutorial/doc_step_7_C.rst", "tutorial/doc_step_8_A.rst", "tutorial/doc_step_8_B.rst", "tutorial/doc_step_8_C.rst", "tutorial/step_1.rst", "tutorial/step_2.rst", "tutorial/step_3.rst", "tutorial/step_4.rst", "tutorial/step_5.rst", "tutorial/step_6.rst", "tutorial/step_7.rst", "tutorial/step_8.rst"], "titles": ["Changelog", "Contributor Covenant Code of Conduct", "How to contribute to pySDC", "Welcome to pySDC!", "Recommendations for pull requests", "Continuous Integration in pySDC", "Naming conventions in pySDC", "Custom implementation guidelines", "Documenting Code", "Welcome to pySDC!", "Allen-Cahn problems from Bayreuth", "Solving differential algebraic equations with SDC", "Second-order Problems", "Parallel-in-time simulation for multi-modal energy systems", "RDC: Rational Deferred Corrections", "Resilience in SDC", "What is the fastest SDC variant?", "Asymptotic convergence of PFASST", "Compression in pySDC", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Fast-Wave-Slow-Wave SDC", "Matrix-based versions of PFASST", "Exponential SDC for the Monodomain Equation in Cardiac Electrophysiology", "Attempts to parallelize SDC", "&lt;no title&gt;", "Performance analysis of pySDC", "Spectral Deferred Correction Methods for Second-Order Problems", "core package", "core.BaseTransfer module", "core.Collocation module", "core.Common module", "core.Controller module", "core.ConvergenceController module", "core.Errors module", "core.Hooks module", "core.Lagrange module", "core.Level module", "core.Nodes module", "core.Problem module", "core.SpaceTransfer module", "core.Step module", "core.Sweeper module", "helpers package", "helpers.NCCL_communicator module", "helpers.plot_helper module", "helpers.problem_helper module", "helpers.pysdc_helper module", "helpers.setup_helper module", "helpers.stats_helper module", "helpers.testing module", "helpers.transfer_helper module", "helpers.visualization_tools module", "implementations package", "implementations.controller_classes package", "implementations.controller_classes.controller_MPI module", "implementations.controller_classes.controller_nonMPI module", "implementations.convergence_controller_classes package", "implementations.convergence_controller_classes.adaptive_collocation module", "implementations.convergence_controller_classes.adaptivity module", "implementations.convergence_controller_classes.basic_restarting module", "implementations.convergence_controller_classes.check_convergence module", "implementations.convergence_controller_classes.check_iteration_estimator module", "implementations.convergence_controller_classes.crash module", "implementations.convergence_controller_classes.estimate_contraction_factor module", "implementations.convergence_controller_classes.estimate_embedded_error module", "implementations.convergence_controller_classes.estimate_extrapolation_error module", "implementations.convergence_controller_classes.estimate_polynomial_error module", "implementations.convergence_controller_classes.hotrod module", "implementations.convergence_controller_classes.inexactness module", "implementations.convergence_controller_classes.interpolate_between_restarts module", "implementations.convergence_controller_classes.spread_step_sizes module", "implementations.convergence_controller_classes.step_size_limiter module", "implementations.convergence_controller_classes.store_uold module", "implementations.datatype_classes package", "implementations.datatype_classes.cupy_mesh module", "implementations.datatype_classes.fenics_mesh module", "implementations.datatype_classes.mesh module", "implementations.datatype_classes.particles module", "implementations.datatype_classes.petsc_vec module", "implementations.problem_classes package", "implementations.problem_classes.AcousticAdvection_1D_FD_imex module", "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT module", "implementations.problem_classes.AdvectionEquation_ND_FD module", "implementations.problem_classes.AllenCahn_1D_FD module", "implementations.problem_classes.AllenCahn_2D_FD module", "implementations.problem_classes.AllenCahn_2D_FD_gpu module", "implementations.problem_classes.AllenCahn_2D_FFT module", "implementations.problem_classes.AllenCahn_2D_FFT_gpu module", "implementations.problem_classes.AllenCahn_MPIFFT module", "implementations.problem_classes.AllenCahn_Temp_MPIFFT module", "implementations.problem_classes.Auzinger_implicit module", "implementations.problem_classes.Battery module", "implementations.problem_classes.Boussinesq_2D_FD_imex module", "implementations.problem_classes.Brusselator module", "implementations.problem_classes.BuckConverter module", "implementations.problem_classes.DiscontinuousTestODE module", "implementations.problem_classes.FastWaveSlowWave_0D module", "implementations.problem_classes.FermiPastaUlamTsingou module", "implementations.problem_classes.FullSolarSystem module", "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit module", "implementations.problem_classes.GeneralizedFisher_1D_PETSc module", "implementations.problem_classes.GrayScott_1D_FEniCS_implicit module", "implementations.problem_classes.GrayScott_2D_PETSc_periodic module", "implementations.problem_classes.GrayScott_MPIFFT module", "implementations.problem_classes.HarmonicOscillator module", "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced module", "implementations.problem_classes.HeatEquation_2D_PETSc_forced module", "implementations.problem_classes.HeatEquation_ND_FD module", "implementations.problem_classes.HeatEquation_ND_FD_CuPy module", "implementations.problem_classes.HenonHeiles module", "implementations.problem_classes.LogisticEquation module", "implementations.problem_classes.Lorenz module", "implementations.problem_classes.NonlinearSchroedinger_MPIFFT module", "implementations.problem_classes.OuterSolarSystem module", "implementations.problem_classes.PenningTrap_3D module", "implementations.problem_classes.Piline module", "implementations.problem_classes.Quench module", "implementations.problem_classes.TestEquation_0D module", "implementations.problem_classes.Van_der_Pol_implicit module", "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic module", "implementations.problem_classes.acoustic_helpers package", "implementations.problem_classes.acoustic_helpers.buildFDMatrix module", "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix module", "implementations.problem_classes.acoustic_helpers.standard_integrators module", "implementations.problem_classes.boussinesq_helpers package", "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix module", "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix module", "implementations.problem_classes.boussinesq_helpers.buildFDMatrix module", "implementations.problem_classes.boussinesq_helpers.helper_classes module", "implementations.problem_classes.boussinesq_helpers.standard_integrators module", "implementations.problem_classes.boussinesq_helpers.unflatten module", "implementations.problem_classes.generic_ND_FD module", "implementations.problem_classes.nonlinear_ODE_1 module", "implementations.problem_classes.odeScalar module", "implementations.problem_classes.odeSystem module", "implementations.problem_classes.polynomial_test_problem module", "implementations.sweeper_classes package", "implementations.sweeper_classes.Multistep module", "implementations.sweeper_classes.Runge_Kutta module", "implementations.sweeper_classes.Runge_Kutta_Nystrom module", "implementations.sweeper_classes.boris_2nd_order module", "implementations.sweeper_classes.explicit module", "implementations.sweeper_classes.generic_implicit module", "implementations.sweeper_classes.generic_implicit_MPI module", "implementations.sweeper_classes.imex_1st_order module", "implementations.sweeper_classes.imex_1st_order_MPI module", "implementations.sweeper_classes.imex_1st_order_mass module", "implementations.sweeper_classes.multi_implicit module", "implementations.sweeper_classes.verlet module", "implementations.transfer_classes package", "implementations.transfer_classes.BaseTransfer_mass module", "implementations.transfer_classes.TransferFenicsMesh module", "implementations.transfer_classes.TransferMesh module", "implementations.transfer_classes.TransferMesh_FFT module", "implementations.transfer_classes.TransferMesh_FFT2D module", "implementations.transfer_classes.TransferMesh_MPIFFT module", "implementations.transfer_classes.TransferMesh_NoCoarse module", "implementations.transfer_classes.TransferPETScDMDA module", "implementations.transfer_classes.TransferParticles_NoCoarse module", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "&lt;no title&gt;", "Step-1: A first spatial problem", "Step-2: Data structures and my first sweeper", "Step-3: Statistics and a new sweeper", "Step-4: Multilevel SDC", "Step-5: PFASST", "Step-6: Advanced PFASST controllers", "Step-7: pySDC with external libraries", "Step-8: Advanced topics"], "terms": {"back": [0, 1, 2, 4, 5, 6, 7, 8, 172, 198], "main": [0, 1, 2, 5, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 42, 67, 68, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "page": [0, 1, 2, 9, 18, 57, 113, 115, 119, 125, 152], "januari": 0, "24": [0, 12, 32, 35, 151, 187, 188, 202], "2024": [0, 62, 178, 180, 199, 200], "version": [0, 1, 3, 4, 5, 9, 11, 14, 15, 16, 18, 19, 26, 27, 35, 45, 51, 67, 68, 71, 72, 74, 78, 83, 114, 118, 127, 132, 148, 201], "5": [0, 9, 12, 14, 17, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 47, 93, 96, 101, 102, 104, 105, 106, 107, 108, 112, 114, 118, 122, 123, 128, 131, 132, 136, 142, 145, 146, 147, 150, 151, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205], "4": [0, 6, 9, 12, 14, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 42, 47, 93, 104, 105, 106, 108, 109, 114, 118, 132, 145, 151, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205], "0": [0, 1, 5, 7, 8, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 39, 42, 45, 47, 48, 50, 51, 53, 56, 57, 58, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 142, 144, 145, 146, 147, 150, 151, 161, 165, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "contain": [0, 5, 8, 9, 10, 11, 12, 16, 18, 19, 33, 36, 38, 41, 42, 43, 44, 45, 47, 48, 49, 51, 54, 58, 61, 63, 67, 68, 72, 75, 78, 82, 83, 88, 90, 94, 96, 97, 103, 104, 105, 110, 111, 113, 115, 116, 118, 123, 125, 127, 130, 131, 144, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 163, 173, 175, 176, 183, 189, 198, 199, 200, 201, 203], "code": [0, 2, 3, 4, 6, 7, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 75, 89, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "second": [0, 5, 9, 15, 21, 25, 32, 33, 34, 41, 50, 62, 71, 78, 79, 87, 96, 97, 110, 111, 112, 114, 116, 117, 119, 122, 124, 126, 151, 152, 153, 156, 157, 160, 161, 163, 197, 200, 205], "order": [0, 3, 5, 8, 9, 10, 11, 13, 15, 16, 18, 19, 21, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 44, 45, 48, 50, 58, 63, 70, 71, 72, 74, 76, 77, 78, 79, 80, 85, 87, 89, 90, 93, 95, 96, 97, 105, 110, 112, 114, 117, 118, 119, 120, 122, 127, 129, 132, 134, 135, 136, 138, 139, 140, 142, 144, 147, 150, 151, 152, 153, 157, 159, 160, 161, 173, 175, 178, 180, 182, 188, 192, 197, 198, 199, 200, 201, 202, 204, 205], "sdc": [0, 2, 3, 9, 12, 13, 14, 18, 19, 28, 34, 39, 53, 67, 68, 71, 73, 77, 78, 81, 83, 110, 129, 153, 157, 177, 178, 179, 180, 181, 184, 185, 188, 192, 193, 196, 197, 198, 199, 200, 202, 203, 204], "paper": [0, 3, 8, 9, 14, 17, 39, 48, 67, 68, 110, 200], "ikrom96git": 0, "It": [0, 3, 5, 9, 10, 13, 18, 35, 38, 42, 45, 49, 70, 71, 109, 124, 128, 151, 156, 198, 199, 201, 203, 204], "also": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 15, 16, 18, 36, 38, 44, 71, 72, 78, 83, 84, 107, 116, 127, 144, 146, 147, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205], "ha": [0, 3, 4, 9, 10, 18, 45, 62, 70, 71, 72, 75, 78, 79, 82, 83, 84, 94, 97, 104, 107, 129, 145, 156, 186, 195, 198, 199, 200, 201, 202, 203, 204, 205], "some": [0, 2, 4, 5, 6, 11, 12, 13, 15, 38, 43, 45, 56, 62, 70, 72, 75, 124, 129, 132, 173, 175, 198, 199, 200, 205], "chang": [0, 4, 5, 7, 13, 38, 68, 70, 71, 77, 78, 81, 89, 104, 107, 108, 199, 200, 202, 204], "fenic": [0, 3, 9, 88, 114, 118, 132, 164, 192], "part": [0, 3, 5, 9, 14, 16, 19, 26, 27, 29, 30, 34, 36, 38, 39, 41, 45, 87, 88, 91, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 114, 115, 116, 118, 125, 127, 128, 129, 132, 148, 151, 152, 163, 176, 186, 187, 188, 191, 193, 194, 195, 197], "includ": [0, 1, 34, 35, 67, 68, 89, 96, 97, 111, 132, 151, 152, 198, 204], "correct": [0, 3, 4, 9, 10, 11, 33, 34, 35, 41, 49, 51, 67, 68, 93, 106, 109, 110, 127, 132, 152, 157, 163, 183, 192, 201, 204], "treatment": [0, 97, 118], "boundari": [0, 26, 27, 29, 30, 34, 35, 36, 42, 58, 63, 94, 95, 96, 97, 99, 100, 101, 102, 105, 113, 114, 115, 118, 119, 120, 125, 129, 132, 144, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 196, 197, 198, 199, 200, 201, 202, 203, 205], "condit": [0, 5, 11, 18, 26, 27, 29, 30, 34, 35, 36, 51, 58, 70, 82, 85, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 150, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 192, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "first": [0, 3, 4, 5, 9, 12, 14, 15, 33, 39, 41, 44, 45, 48, 54, 62, 70, 72, 77, 78, 83, 87, 89, 104, 110, 114, 116, 124, 151, 153, 156, 157, 159, 160, 163, 173, 174, 175, 179, 200, 201], "step": [0, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 40, 44, 45, 47, 49, 54, 58, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 96, 97, 99, 100, 101, 102, 107, 108, 113, 115, 116, 125, 127, 129, 146, 147, 150, 151, 152, 153, 156, 159, 161, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197], "x": [0, 3, 5, 8, 9, 11, 12, 21, 25, 28, 29, 30, 32, 35, 36, 42, 45, 48, 58, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 125, 127, 165, 167, 169, 172, 173, 175, 198, 204], "juli": 0, "28": [0, 124, 146, 147], "2023": [0, 39, 113, 115, 119, 144], "For": [0, 1, 3, 4, 6, 8, 9, 12, 15, 18, 26, 33, 34, 35, 38, 39, 45, 48, 67, 68, 70, 71, 93, 96, 97, 99, 100, 101, 102, 104, 108, 112, 113, 115, 118, 125, 127, 144, 145, 146, 147, 151, 152, 153, 156, 157, 187, 193, 194, 197, 198, 200, 201, 202, 204, 205], "3": [0, 3, 6, 7, 9, 11, 12, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 42, 47, 70, 80, 90, 96, 101, 102, 103, 104, 105, 106, 110, 111, 113, 114, 115, 116, 120, 122, 124, 125, 126, 127, 146, 147, 151, 152, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 205], "lot": [0, 151, 152, 200, 203], "pull": [0, 2, 5], "request": [0, 1, 2, 5, 45, 67, 72, 87, 89, 90, 91, 178, 199], "got": [0, 7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "merg": [0, 4, 44], "thank": 0, "brownbaerchen": 0, "tlunet": 0, "lisawim": 0, "all": [0, 1, 3, 5, 6, 9, 10, 12, 14, 15, 16, 17, 18, 19, 26, 27, 29, 30, 33, 34, 35, 36, 43, 44, 45, 47, 48, 49, 54, 62, 67, 68, 70, 71, 72, 74, 75, 78, 79, 83, 89, 90, 95, 104, 111, 120, 127, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 173, 175, 179, 186, 189, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205], "contribut": [0, 1, 5, 6, 7, 8], "besid": 0, "usual": [0, 6, 18, 82, 146, 147, 202, 204], "bugfix": 0, "polish": 0, "pysdc": [0, 4, 7, 8, 10, 11, 12, 14, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 47, 49, 51, 52, 53, 54, 60, 62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 99, 104, 124, 128, 130, 131, 147, 148, 151, 163, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205], "now": [0, 3, 9, 10, 13, 18, 34, 36, 45, 72, 151, 176, 183, 198, 199, 200, 201, 202, 203, 205], "come": [0, 4, 5, 10, 15, 18, 28, 36, 45, 198, 203, 205], "linear": [0, 7, 11, 16, 17, 19, 28, 34, 35, 36, 78, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 132, 144, 146, 147, 148, 174, 175, 194, 198, 204], "multistep": [0, 149], "method": [0, 3, 6, 8, 9, 11, 12, 13, 14, 15, 33, 34, 36, 42, 44, 45, 47, 48, 51, 53, 62, 68, 70, 71, 77, 78, 79, 82, 96, 97, 103, 104, 105, 106, 114, 118, 123, 124, 125, 129, 131, 132, 142, 144, 145, 146, 147, 150, 151, 152, 173, 175, 198, 204, 205], "classic": [0, 2, 3, 9, 12, 16, 19, 21, 25, 28, 32, 36, 151], "rung": [0, 71, 77, 146, 147, 151, 152], "kutta": [0, 71, 77, 146, 147, 151, 152], "dae": 0, "sweeper": [0, 3, 6, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 40, 41, 49, 70, 75, 77, 82, 132, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205], "more": [0, 2, 3, 5, 7, 8, 9, 10, 12, 13, 16, 18, 19, 25, 32, 33, 36, 59, 71, 76, 77, 89, 127, 146, 147, 176, 180, 181, 183, 184, 185, 192, 198, 199, 200, 201, 202, 204, 205], "improv": [0, 4, 6, 8, 13, 18, 200, 201], "project": [0, 3, 4, 5, 10, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 62, 104, 114, 118, 132, 164, 205], "we": [0, 1, 3, 5, 8, 9, 12, 13, 14, 15, 16, 17, 18, 25, 33, 34, 35, 36, 38, 44, 45, 48, 56, 57, 67, 70, 71, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 104, 106, 124, 129, 150, 151, 152, 176, 177, 178, 182, 183, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205], "have": [0, 1, 4, 5, 6, 9, 12, 13, 15, 25, 27, 34, 35, 36, 38, 45, 51, 56, 70, 71, 72, 77, 78, 79, 82, 87, 88, 89, 91, 95, 97, 146, 147, 150, 151, 152, 176, 186, 192, 198, 199, 200, 201, 202, 203, 204, 205], "board": [0, 99, 100], "brand": 0, "new": [0, 3, 4, 5, 7, 8, 9, 11, 13, 34, 36, 53, 68, 70, 76, 82, 83, 84, 105, 113, 115, 150, 151, 152, 173, 175, 179, 191, 198, 203], "switch": [0, 70, 71, 77, 104, 107, 108, 130], "estim": [0, 13, 15, 67, 71, 73, 76, 77, 79, 80, 81, 104, 108, 189, 197, 203], "test": [0, 2, 3, 4, 10, 11, 12, 13, 16, 17, 18, 19, 26, 27, 33, 34, 35, 36, 38, 55, 73, 84, 108, 114, 118, 130, 132, 146, 147, 148, 152, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "ground": 0, "compress": [0, 9], "libpressio": [0, 18], "march": [0, 11, 78], "2": [0, 6, 7, 9, 11, 12, 14, 16, 17, 19, 21, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 42, 47, 51, 63, 70, 71, 78, 87, 88, 89, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 144, 145, 146, 147, 151, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 204, 205], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 50, 53, 59, 62, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 83, 84, 85, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "out": [0, 3, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 67, 68, 77, 127, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "multipl": [0, 13, 18, 44, 45, 47, 53, 70, 78, 79, 89, 156, 183, 188, 192, 193, 199, 200, 201, 202, 203, 204], "direct": [0, 18, 71, 84, 95, 97, 101, 102, 105, 113, 115, 119, 120, 123, 129, 144, 171, 178, 199], "The": [0, 1, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 26, 27, 33, 34, 36, 38, 41, 42, 44, 45, 48, 50, 51, 54, 57, 58, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 163, 198, 199, 201, 202, 204, 205], "problem": [0, 2, 3, 6, 9, 11, 15, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 40, 44, 46, 49, 52, 60, 70, 71, 75, 77, 78, 79, 81, 83, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 142, 144, 145, 146, 147, 148, 153, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "class": [0, 1, 2, 4, 8, 11, 12, 14, 16, 19, 25, 26, 27, 28, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 185, 186, 187, 188, 194, 197, 198, 199, 200, 201, 202, 204, 205], "can": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 18, 26, 33, 34, 35, 36, 38, 42, 45, 48, 50, 51, 53, 60, 62, 67, 70, 71, 77, 78, 79, 87, 88, 89, 90, 91, 95, 96, 99, 100, 101, 102, 104, 105, 107, 110, 112, 113, 114, 116, 120, 128, 144, 151, 152, 153, 157, 164, 165, 166, 167, 168, 169, 170, 176, 187, 189, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "defin": [0, 2, 3, 6, 7, 9, 34, 38, 41, 42, 51, 53, 71, 72, 73, 75, 81, 83, 84, 85, 107, 108, 109, 112, 113, 114, 117, 118, 119, 132, 144, 146, 147, 153, 157, 178, 180, 188, 199, 200, 201, 202, 204], "paramet": [0, 4, 7, 8, 10, 11, 12, 14, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 158, 159, 163, 164, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "explicitli": [0, 35, 94, 96, 99, 100, 101, 102, 106, 118, 204], "constructor": [0, 7], "dictionari": [0, 12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 36, 43, 45, 46, 47, 53, 61, 70, 71, 72, 73, 75, 79, 81, 83, 84, 85, 104, 156, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "param": [0, 6, 29, 30, 36, 41, 43, 44, 45, 49, 52, 53, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 177, 182, 198, 199, 201], "properti": [0, 8, 33, 43, 44, 48, 49, 51, 53, 54, 78, 87, 89, 144, 151, 156, 204], "return": [0, 7, 8, 12, 16, 19, 21, 25, 26, 27, 32, 34, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 57, 58, 59, 60, 61, 63, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 172, 173, 174, 175, 177, 179, 180, 181, 185, 189, 191, 192, 197, 198, 199, 200, 201, 203, 204, 205], "ar": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 33, 34, 35, 36, 38, 39, 41, 45, 48, 51, 53, 61, 63, 70, 71, 72, 74, 75, 77, 78, 79, 80, 89, 93, 94, 96, 97, 102, 104, 107, 111, 114, 115, 116, 118, 124, 127, 131, 132, 148, 150, 151, 152, 156, 157, 163, 174, 177, 178, 179, 185, 192, 198, 199, 200, 201, 202, 203, 204, 205], "automat": [0, 2, 5, 7, 9, 45, 77], "store": [0, 7, 8, 15, 16, 29, 30, 36, 45, 62, 70, 74, 76, 77, 78, 79, 82, 85, 150, 151, 152, 175, 182, 198, 200, 201], "attribut": [0, 4, 7, 8, 46, 51, 52, 59, 78, 89, 94, 104, 128, 151, 165, 166, 167, 168, 169, 198, 200, 202], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 32, 34, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56, 59, 60, 61, 62, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 128, 129, 131, 132, 144, 145, 146, 147, 148, 151, 152, 153, 156, 157, 159, 161, 163, 172, 173, 175, 177, 179, 180, 181, 182, 184, 185, 189, 192, 195, 197, 198, 200, 201, 202, 203, 204, 205], "_makeattributeandregist": [0, 7], "allow": [0, 1, 2, 5, 6, 10, 36, 44, 45, 62, 70, 71, 72, 73, 75, 78, 79, 80, 89, 95, 120, 200, 202, 204], "readonli": [0, 7], "paramt": [0, 16, 19, 26, 27, 34], "warn": [0, 5, 38, 51, 62, 174, 192, 197, 198, 204, 205], "backward": [0, 45, 151, 166], "compat": [0, 3, 4, 9, 45, 70, 71, 74, 77, 78, 79, 80], "resili": [0, 9, 18], "quench": [0, 92], "result": [0, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 45, 47, 70, 82, 89, 118, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "collabor": [0, 18], "between": [0, 6, 13, 18, 26, 27, 34, 35, 41, 42, 45, 53, 70, 71, 72, 74, 76, 77, 78, 80, 82, 96, 97, 105, 107, 112, 119, 124, 129, 163, 164, 165, 166, 167, 168, 169, 170, 172, 184, 185, 196, 198, 199, 201, 203, 205], "eschnaubelt": 0, "dure": [0, 1, 4, 5, 15, 18, 38, 47, 49, 51, 73, 84, 89, 114, 115, 116, 199, 200, 201], "time": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 41, 44, 45, 47, 48, 49, 51, 53, 61, 67, 68, 70, 71, 72, 78, 79, 83, 84, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 163, 174, 175, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "app": 0, "hackathon": 0, "usi": 0, "lugano": 0, "mani": [0, 2, 3, 5, 9, 10, 42, 72, 76, 177, 198, 199, 201, 203, 204], "other": [0, 1, 2, 5, 6, 13, 16, 18, 27, 34, 44, 45, 49, 61, 62, 71, 72, 78, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 151, 192, 198, 200, 201, 204], "under": [0, 3, 9, 10, 18, 33, 39, 202], "hood": 0, "prepar": [0, 5, 12, 21, 25, 32, 45, 201], "6": [0, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 47, 96, 101, 102, 106, 125, 126, 151, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205], "23": 0, "1": [0, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 42, 45, 47, 48, 50, 51, 58, 63, 78, 79, 80, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 144, 145, 147, 148, 150, 151, 152, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "bring": 0, "document": [0, 2, 3, 4, 7, 33, 77], "both": [0, 6, 12, 13, 14, 18, 26, 33, 34, 35, 39, 45, 58, 73, 93, 94, 97, 103, 104, 105, 109, 114, 116, 118, 119, 131, 132, 151, 156, 184, 189, 191, 196, 201, 203, 204, 205], "github": [0, 2, 3, 5, 9, 15, 48], "websit": [0, 5], "reviv": 0, "codecov": [0, 5], "connect": 0, "start": [0, 4, 5, 6, 15, 18, 44, 47, 51, 67, 68, 70, 99, 106, 108, 114, 118, 124, 127, 128, 131, 146, 147, 150, 157, 177, 189, 198, 199, 203], "opensff": 0, "best": [0, 1, 6, 18, 84, 199, 201], "practic": [0, 11, 35, 77], "guid": [0, 18, 173, 175, 198], "hook": [0, 5, 11, 12, 25, 32, 40, 44, 67, 68, 77, 178, 180, 181, 185, 197, 199, 200, 201, 205], "wai": [0, 1, 9, 11, 18, 34, 35, 70, 79, 93, 94, 96, 97, 108, 113, 115, 116, 118, 132, 151, 152, 188, 192, 199, 200, 201, 202, 204], "thei": [0, 1, 4, 5, 6, 9, 10, 13, 15, 18, 33, 45, 60, 71, 77, 82, 105, 107, 114, 115, 116, 198], "handl": [0, 13, 45, 46, 50, 83, 87, 89, 90, 91, 96, 97, 115, 125, 203], "without": [0, 1, 5, 15, 26, 27, 34, 89, 132, 200, 201, 203, 204], "break": [0, 4, 191, 198, 203], "api": [0, 4, 204], "hoorai": 0, "batteri": [0, 92], "model": [0, 11, 15, 35, 104, 107, 110, 114, 115, 116, 124, 128, 129, 147], "quit": [0, 5, 200], "an": [0, 1, 5, 11, 13, 15, 18, 33, 34, 35, 36, 44, 45, 51, 56, 62, 63, 70, 71, 75, 77, 78, 79, 84, 89, 94, 99, 100, 104, 106, 107, 108, 112, 113, 116, 118, 128, 132, 146, 147, 148, 151, 152, 153, 157, 177, 197, 198, 199, 201, 202, 203, 204, 205], "updat": [0, 3, 4, 5, 9, 11, 18, 44, 45, 54, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 108, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 173, 175, 177, 198, 199], "adapt": [0, 1, 35, 39, 69, 70, 78, 84, 151, 156, 203], "plai": [0, 10, 172, 198, 205], "promin": [0, 204], "role": 0, "octob": 0, "7": [0, 9, 12, 21, 26, 27, 28, 29, 34, 36, 39, 47, 106, 151, 177, 178, 179, 180, 183, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205], "2022": 0, "visibl": [0, 1], "invis": [0, 1], "ones": [0, 16, 110, 132, 151, 174, 175, 198], "those": [0, 1, 3, 4, 5, 6, 7, 9, 26, 27, 34, 50, 62, 144, 203], "exist": [0, 4, 33, 45, 47, 59, 62, 204], "you": [0, 2, 3, 5, 7, 9, 15, 35, 39, 45, 51, 57, 59, 60, 70, 71, 77, 82, 83, 84, 89, 144, 148, 152, 198, 199, 203, 205], "should": [0, 4, 5, 6, 7, 9, 10, 11, 18, 44, 45, 47, 48, 50, 51, 78, 79, 96, 108, 112, 113, 115, 116, 117, 123, 129, 131, 144, 202, 204, 205], "fine": [0, 14, 35, 38, 41, 52, 53, 63, 67, 68, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 185, 198, 201], "major": 0, "converg": [0, 9, 11, 12, 13, 18, 33, 39, 44, 45, 46, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 178, 180, 192, 198, 199, 200, 203, 204], "control": [0, 9, 12, 13, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 40, 45, 46, 47, 53, 61, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 107, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 204, 205], "check": [0, 3, 5, 7, 9, 10, 12, 15, 17, 25, 27, 28, 34, 36, 45, 62, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 108, 172, 173, 177, 181, 182, 183, 184, 186, 187, 190, 199, 200, 201, 202, 203, 204, 205], "whether": [0, 42, 45, 53, 70, 71, 72, 73, 74, 78, 79, 80, 108, 131, 204, 205], "tricki": 0, "so": [0, 12, 13, 18, 36, 38, 45, 53, 71, 75, 76, 78, 93, 94, 99, 100, 101, 102, 104, 105, 106, 108, 109, 114, 116, 118, 124, 125, 127, 132, 156, 198, 199, 200, 202, 203, 205], "made": [0, 5, 11, 15], "separ": [0, 5, 8, 18, 36, 45, 198], "modul": [0, 4, 7, 9], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 26, 27, 28, 33, 34, 35, 36, 38, 39, 41, 44, 45, 47, 48, 49, 51, 53, 60, 62, 63, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 122, 124, 126, 127, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 153, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 177, 179, 183, 192, 193, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "make": [0, 1, 5, 6, 12, 15, 45, 47, 51, 70, 71, 77, 78, 89, 146, 147, 176, 177, 199, 200, 202], "featur": [0, 14, 203, 205], "like": [0, 1, 3, 5, 6, 7, 8, 9, 26, 27, 33, 34, 36, 38, 45, 48, 53, 62, 70, 77, 78, 82, 89, 124, 200, 202, 204, 205], "easier": [0, 52, 165, 166, 167, 168, 169, 173, 175, 198, 199], "implement": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 38, 39, 42, 45, 48, 50, 51, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "been": [0, 4, 5, 9, 18, 36, 38, 45, 71, 72, 78, 84, 129, 195, 201, 202, 205], "streamlin": 0, "bit": [0, 156, 198, 199, 200, 201], "them": [0, 2, 4, 5, 6, 7, 13, 15, 16, 18, 36, 44, 82, 101, 102, 156, 158, 200], "readabl": [0, 2, 4, 6], "digest": 0, "error": [0, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 40, 45, 50, 62, 67, 70, 71, 73, 74, 75, 76, 77, 79, 80, 81, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "leverag": [0, 18], "box": [0, 36], "colloc": [0, 3, 9, 14, 18, 33, 34, 35, 36, 40, 46, 54, 70, 71, 77, 78, 79, 82, 83, 104, 108, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 174, 175, 177, 178, 180, 181, 197, 199, 201, 205], "complet": [0, 67, 202], "rewrot": 0, "node": [0, 5, 14, 18, 33, 35, 39, 40, 41, 42, 48, 49, 54, 63, 70, 71, 77, 78, 79, 82, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 112, 114, 116, 118, 119, 123, 125, 127, 129, 131, 132, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 177, 181, 183, 192, 199, 201, 202, 204], "weight": [0, 8, 10, 18, 41, 42, 48, 58, 151, 159], "comput": [0, 3, 7, 8, 9, 10, 12, 14, 16, 18, 19, 21, 25, 28, 32, 36, 39, 41, 45, 48, 50, 51, 54, 62, 67, 70, 71, 77, 78, 84, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 172, 173, 174, 175, 177, 178, 180, 182, 184, 187, 188, 189, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205], "faster": [0, 204], "reliabl": [0, 2], "shorter": [0, 6, 201], "better": [0, 3, 6, 9, 82, 151, 192, 198, 204], "But": [0, 4, 5, 6, 89], "sinc": [0, 3, 9, 11, 12, 13, 18, 33, 38, 45, 71, 77, 78, 124, 150, 192, 198, 199, 203, 204, 205], "old": [0, 9, 42, 70, 150], "do": [0, 4, 5, 6, 9, 11, 18, 26, 27, 34, 42, 45, 53, 70, 71, 77, 78, 82, 84, 89, 95, 150, 151, 173, 176, 177, 178, 182, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 204, 205], "anymor": [0, 205], "tutori": [0, 3, 4, 5, 12, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "most": [0, 3, 5, 6, 9, 11, 12, 53, 82, 198, 199, 201, 202, 204], "playground": [0, 3, 5, 18], "look": [0, 2, 5, 14, 15, 45, 124, 198, 201, 202, 205], "over": [0, 12, 13, 16, 19, 28, 29, 30, 34, 36, 41, 42, 47, 104, 114, 115, 116, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 173, 175, 181, 187, 188, 189, 198, 200, 202, 203, 205], "see": [0, 1, 3, 5, 9, 14, 15, 16, 17, 18, 19, 26, 27, 34, 35, 38, 45, 62, 80, 114, 116, 118, 124, 125, 127, 132, 151, 156, 157, 174, 186, 187, 188, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205], "what": [0, 1, 9, 12, 15, 25, 45, 70, 77, 82, 176, 182, 198, 199, 200, 201, 203, 205], "energi": [0, 9, 12, 21, 104, 110, 128, 180, 181, 185, 200, 201], "grid": [0, 28, 29, 30, 34, 36, 58, 63, 94, 96, 97, 99, 100, 101, 102, 110, 113, 114, 115, 116, 125, 128, 129, 144, 170, 173, 175, 198, 201], "simul": [0, 9, 10, 11, 12, 15, 18, 21, 25, 32, 64, 72, 83, 104, 107, 128, 129, 177, 179, 189, 199, 200, 203], "readi": [0, 4, 58, 202, 205], "wait": [0, 5, 67, 191, 203], "idea": [0, 3, 6, 9, 34, 36, 82, 151, 152, 200, 202, 203], "effort": 0, "condens": 0, "clean": [0, 9, 49, 53], "up": [0, 3, 5, 9, 10, 12, 15, 18, 21, 25, 28, 29, 30, 32, 36, 49, 53, 67, 68, 70, 71, 79, 114, 115, 116, 129, 150, 172, 173, 175, 182, 183, 187, 188, 191, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205], "reduc": [0, 18, 56, 70, 71, 79, 144, 171, 177, 178, 179, 181, 192, 199, 200, 201, 204], "number": [0, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 42, 45, 47, 48, 50, 56, 58, 63, 67, 68, 70, 71, 72, 73, 78, 79, 83, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 127, 129, 131, 132, 144, 145, 146, 147, 151, 152, 153, 157, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "file": [0, 3, 5, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 57, 62, 173, 191, 198, 199, 203], "onli": [0, 4, 5, 6, 10, 12, 14, 15, 18, 27, 33, 34, 35, 36, 42, 43, 44, 45, 46, 49, 54, 61, 71, 74, 77, 78, 79, 84, 96, 97, 107, 111, 114, 126, 127, 129, 148, 150, 151, 152, 156, 158, 172, 173, 176, 177, 178, 180, 185, 189, 191, 195, 198, 199, 200, 201, 202, 203, 204, 205], "margin": 0, "differ": [0, 1, 3, 6, 9, 10, 12, 15, 16, 17, 18, 26, 27, 28, 33, 34, 41, 44, 45, 48, 58, 62, 70, 71, 74, 76, 77, 78, 79, 80, 82, 95, 96, 97, 99, 100, 101, 102, 104, 105, 107, 108, 112, 119, 120, 124, 129, 131, 144, 150, 163, 180, 181, 184, 185, 187, 188, 189, 191, 192, 196, 198, 199, 200, 201, 202, 203, 204, 205], "significantli": [0, 18, 71, 202], "could": [0, 1, 4, 18, 70, 71, 79, 151, 152], "potenti": [0, 6, 35, 63, 118], "your": [0, 3, 4, 5, 9, 57, 77, 198, 200], "too": [0, 10, 12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 36, 83, 177, 180, 181, 185, 187, 188, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "reli": [0, 38, 45, 78, 201], "ani": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 34, 35, 48, 60, 70, 79, 84, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 198], "affect": [0, 1], "toward": [0, 1, 129], "gpu": [0, 58, 100, 130], "data": [0, 3, 9, 10, 11, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 42, 45, 46, 47, 49, 51, 52, 56, 61, 62, 67, 68, 80, 87, 88, 89, 90, 91, 93, 127, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205], "type": [0, 3, 5, 7, 9, 10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205], "base": [0, 2, 3, 5, 7, 9, 10, 11, 13, 14, 16, 18, 19, 26, 27, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 59, 60, 62, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 141, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 180, 181, 185, 198, 200, 201], "cupi": [0, 58, 87, 100], "possibl": [0, 6, 35, 41, 45, 63, 70, 71, 84, 129, 163, 198, 201], "timo2705": 0, "ci": [0, 2, 3, 4, 5, 9, 10, 12, 16, 17, 33, 38, 204], "pipelin": [0, 15, 71, 83], "overhaul": 0, "again": [0, 35, 36, 156, 199, 200, 201, 202, 203, 204, 205], "enabl": [0, 15, 71, 201], "simultan": [0, 103, 131], "earlier": [0, 151, 152], "lint": 0, "benchmark": [0, 5, 38], "least": [0, 3, 9, 14, 200, 203], "princip": 0, "environ": [0, 1, 3, 9, 12, 15, 129, 191, 203, 204], "ubuntu": [0, 3, 9], "maco": 0, "format": [0, 5, 6, 11, 62], "black": [0, 5, 36, 197, 205], "flakeheaven": [0, 5], "cleaner": 0, "sourc": [0, 5, 13, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 201], "after": [0, 5, 6, 7, 9, 10, 11, 13, 16, 18, 45, 47, 71, 72, 77, 78, 81, 82, 107, 177, 178, 180, 185, 197, 199, 200, 201, 202, 205], "complaint": [0, 1], "here": [0, 1, 5, 8, 9, 11, 12, 13, 14, 15, 18, 33, 35, 36, 42, 45, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 87, 88, 89, 91, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 116, 117, 118, 122, 124, 125, 127, 131, 132, 145, 146, 147, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 174, 175, 177, 178, 179, 180, 181, 184, 185, 188, 191, 192, 195, 198, 199, 200, 201, 202, 203, 204, 205], "about": [0, 1, 5, 12, 45, 49, 58, 77, 78, 104, 108, 201, 202, 203], "recommend": [0, 2, 3, 5, 9, 198, 201], "run": [0, 3, 5, 9, 10, 11, 12, 15, 16, 17, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 39, 44, 47, 60, 61, 62, 64, 67, 68, 75, 78, 84, 124, 172, 173, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205], "befor": [0, 5, 35, 45, 47, 54, 70, 71, 72, 108, 151, 156, 176, 194, 199, 204], "submiss": 0, "decemb": 0, "13": [0, 26, 34, 188, 196, 197, 202, 205], "2021": 0, "python": [0, 2, 3, 5, 6, 8, 9, 15, 18, 35, 39, 113, 115, 119, 191, 193, 203, 204], "9": [0, 16, 19, 26, 27, 34, 62, 151, 177, 178, 179, 180, 181, 185, 186, 188, 190, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 204, 205], "cleanup": 0, "suit": [0, 198], "seem": [0, 12, 14, 151], "sort": [0, 1, 12, 16, 19, 21, 25, 26, 32, 34, 61, 173, 175, 179, 181, 182, 185, 191, 196, 198, 200, 201, 203, 205], "depend": [0, 3, 9, 10, 13, 35, 45, 59, 71, 72, 73, 74, 76, 77, 80, 81, 84, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 113, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 144, 145, 146, 147, 148, 173, 175, 177, 178, 180, 194, 198, 199, 200, 201, 202, 204], "mamba": [0, 5], "which": [0, 1, 3, 4, 5, 9, 10, 11, 12, 13, 15, 16, 18, 29, 30, 33, 34, 35, 36, 38, 43, 44, 45, 51, 53, 61, 62, 63, 67, 70, 71, 72, 77, 78, 79, 80, 81, 83, 84, 93, 94, 95, 96, 99, 100, 104, 106, 107, 109, 110, 114, 117, 118, 119, 124, 125, 128, 129, 131, 132, 144, 146, 147, 151, 152, 153, 156, 157, 198, 199, 200, 201, 203, 204], "much": [0, 5, 71, 151, 152, 180, 181, 185, 199, 200, 201], "workflow": [0, 67, 68], "local": [0, 4, 5, 7, 18, 39, 71, 77, 78, 79, 80, 96, 97, 104, 107, 108, 113, 115, 119, 124, 128, 129, 130, 132, 144, 148, 192, 204], "act": [0, 1, 6, 56], "introduc": [0, 4, 5, 9, 18, 157, 200, 205], "marker": [0, 28, 29, 30, 36, 173, 175, 198], "soem": 0, "distribut": [0, 18, 42, 50, 60, 67, 68, 72, 82, 99, 100, 113, 115, 116, 119, 125], "platform": [0, 3, 9], "And": [0, 151], "final": [0, 2, 5, 9, 11, 18, 28, 34, 36, 41, 45, 62, 72, 78, 80, 83, 84, 161, 163, 181, 199, 200], "latex": [0, 3, 9, 57], "instal": [0, 3, 5, 9, 10, 11, 15, 18, 202, 203, 204], "longer": [0, 5, 13, 201], "need": [0, 3, 5, 9, 10, 15, 16, 18, 19, 27, 33, 34, 35, 36, 38, 44, 45, 51, 53, 67, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 84, 107, 110, 114, 119, 124, 132, 150, 161, 174, 175, 176, 183, 191, 192, 198, 199, 201, 203, 204, 205], "plot": [0, 3, 5, 9, 11, 12, 13, 16, 17, 18, 19, 21, 25, 28, 29, 30, 32, 36, 39, 51, 106, 173, 175, 195, 196, 198, 205], "august": [0, 3, 9], "11": [0, 26, 27, 34, 35, 104, 144, 145, 146, 147, 151, 177, 178, 179, 180, 184, 187, 192, 193, 196, 199, 200, 201, 202, 204, 205], "signific": [0, 204, 205], "impact": [0, 1, 17, 18], "user": [0, 4, 6, 8, 41, 45, 47, 49, 52, 53, 54, 74, 163, 178, 180, 199, 200, 201, 202], "rewritten": 0, "port": [0, 9], "action": [0, 1, 3, 5, 9], "awai": [0, 80, 89], "from": [0, 1, 3, 4, 6, 7, 8, 9, 11, 12, 14, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 58, 61, 62, 64, 67, 68, 70, 71, 77, 78, 79, 83, 89, 94, 104, 105, 106, 111, 118, 124, 127, 129, 130, 144, 145, 150, 151, 152, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "travi": 0, "flake8": [0, 5], "pytest": [0, 3, 5, 9], "nose": 0, "One": [0, 198, 201, 202, 205], "thing": [0, 6, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 36, 89, 104, 108, 131, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "mai": [0, 1, 2, 3, 4, 5, 6, 9, 16, 18, 47, 58, 77, 82, 151, 177, 199, 203, 205], "follow": [0, 1, 2, 5, 6, 7, 8, 10, 11, 15, 34, 35, 39, 42, 104, 107, 110, 112, 113, 127, 144, 146, 147, 189, 199, 200, 203, 204], "petsc": [0, 3, 9, 16, 19, 113, 115, 119, 170, 191, 194, 203], "structur": [0, 2, 4, 9, 35, 49, 51, 53, 106, 113, 115, 194, 198, 202, 204], "remov": [0, 1, 4, 5, 62, 150, 157], "unnecessari": [0, 18], "boilerpl": 0, "long": [0, 5, 6, 17, 33, 77, 78, 107, 192, 204], "releas": [0, 3, 9, 33], "mark": [0, 18], "mesh": [0, 7, 10, 35, 58, 86, 87, 90, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 151, 152, 164, 165, 166, 167, 168, 169, 172, 173, 178, 192, 198, 199, 204], "particl": [0, 86, 110, 111, 117, 122, 126, 127, 171, 180, 185, 200], "creation": [0, 12, 21, 25, 28, 32, 36, 177, 178, 179, 180, 181, 185, 192, 199, 200, 201, 204], "arrai": [0, 7, 12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 42, 51, 62, 63, 89, 104, 151, 172, 173, 180, 181, 182, 185, 187, 188, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205], "each": [0, 2, 5, 7, 9, 11, 13, 16, 18, 19, 26, 27, 29, 30, 33, 34, 35, 36, 38, 39, 45, 47, 67, 68, 70, 72, 77, 78, 83, 89, 96, 97, 104, 107, 127, 131, 144, 156, 176, 179, 181, 183, 184, 186, 187, 188, 189, 197, 198, 199, 200, 201, 202, 203, 205], "oper": [0, 5, 41, 45, 53, 70, 78, 79, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 112, 116, 119, 120, 125, 129, 144, 148, 163, 198, 199, 203], "avoid": [0, 1, 4, 5, 6, 59, 202], "directli": [0, 4, 5, 11, 34, 68, 95, 120, 123, 174, 175, 198], "subclass": 0, "numpi": [0, 6, 7, 8, 10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 42, 48, 51, 58, 89, 130, 153, 157, 172, 173, 174, 175, 180, 181, 182, 185, 187, 188, 192, 193, 194, 197, 198, 200, 201, 202, 204, 205], "": [0, 1, 3, 5, 6, 9, 10, 11, 12, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 39, 43, 45, 51, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 96, 97, 103, 104, 110, 111, 113, 114, 115, 116, 118, 119, 123, 124, 126, 127, 129, 131, 132, 145, 151, 153, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205], "ndarrai": [0, 42, 51, 58, 63, 70, 79, 87, 88, 89, 102, 105, 127, 153, 157], "somewhat": [0, 5, 203], "definit": [0, 7, 156, 200], "less": [0, 10, 77, 78, 176, 183, 192, 199, 201, 202, 204], "futur": 0, "proof": 0, "If": [0, 3, 4, 5, 7, 9, 13, 39, 45, 47, 51, 57, 62, 71, 75, 77, 78, 79, 82, 89, 95, 104, 107, 108, 111, 116, 120, 123, 125, 126, 144, 150, 192, 203, 204], "sure": [0, 5, 45, 47, 51, 70, 71, 77, 89, 200], "don": [0, 3, 4, 5, 8, 9, 45, 71, 78, 84, 151, 152, 177, 199, 203], "t": [0, 3, 4, 5, 7, 8, 9, 11, 12, 21, 25, 32, 35, 41, 45, 48, 50, 51, 56, 71, 76, 77, 78, 84, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 163, 173, 174, 175, 177, 182, 198, 199, 201, 203, 205], "upgrad": 0, "quadratur": [0, 39, 42, 48, 50, 70, 71, 77, 78, 82, 181, 200], "even": [0, 4, 5, 6, 33, 191, 200, 201, 203, 204], "No": [0, 1, 3, 9, 26, 27, 34, 93, 104, 109, 132, 198], "push": [0, 4, 5, 9], "abov": [0, 3, 4, 9, 11, 15, 18, 33, 45, 89, 104, 174, 198, 201], "routin": [0, 4, 9, 10, 12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 36, 41, 47, 49, 53, 64, 67, 68, 73, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 163, 171, 172, 173, 174, 175, 177, 189, 192, 193, 195, 196, 198, 199, 200, 203, 204, 205], "work": [0, 3, 4, 5, 8, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 62, 71, 78, 81, 156, 177, 182, 187, 188, 189, 190, 191, 192, 199, 200, 201, 202, 203, 204, 205], "recent": [0, 18], "matplotlib": [0, 38, 51, 57, 106, 173, 175, 198], "yet": [0, 10, 14, 18, 34, 36, 47, 198, 199, 200, 201, 202, 203, 205], "were": [0, 1, 15], "would": [0, 3, 4, 9, 13, 83, 151, 152, 200], "minor": 0, "30": [0, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 39, 144, 179, 181, 182, 184, 185, 187, 188, 189, 192, 193, 197, 200, 201, 202, 203, 204, 205], "2019": [0, 3, 9, 116, 125], "add": [0, 4, 5, 6, 7, 9, 16, 19, 36, 41, 44, 45, 47, 70, 71, 72, 76, 77, 78, 79, 82, 129, 132, 141, 150, 156, 163, 173, 175, 198, 200], "exampl": [0, 1, 3, 6, 7, 8, 9, 11, 12, 13, 14, 35, 36, 45, 62, 89, 94, 95, 96, 97, 99, 100, 101, 102, 104, 107, 112, 113, 116, 117, 118, 119, 125, 128, 156, 180, 198, 199, 200, 201, 202, 203, 204, 205], "nonlinear": [0, 16, 19, 35, 71, 96, 97, 99, 100, 101, 102, 103, 104, 105, 109, 110, 112, 113, 114, 115, 118, 123, 124, 125, 127, 131, 132, 145, 146, 147, 204], "schr\u00f6dinger": [0, 125, 204], "equat": [0, 9, 13, 15, 17, 26, 27, 33, 34, 36, 78, 80, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 151, 152, 187, 188, 192, 193, 197, 200, 201, 202, 204, 205], "grai": [0, 114, 115, 116], "scott": [0, 114, 115, 116], "particular": [0, 3, 4, 5, 8, 9, 10, 16, 18, 19, 33, 35, 49, 70, 78, 148, 151, 152, 198, 201, 203, 204], "allen": [0, 9, 38, 96, 97, 99, 100, 101, 102], "cahn": [0, 9, 38, 96, 97, 99, 100, 101, 102], "parallel": [0, 3, 4, 5, 9, 10, 12, 15, 18, 35, 38, 67, 68, 70, 77, 79, 83, 87, 89, 101, 113, 115, 116, 119, 125, 146, 147, 156, 187, 188, 191, 193, 194, 196, 199, 202, 205], "fft": [0, 3, 9, 10, 38, 94, 99, 100, 101, 102, 106, 116, 125, 166, 167, 168], "librari": [0, 2, 5, 9, 18, 203], "mpi4pi": [0, 3, 9, 10, 15, 30, 36, 45, 56, 61, 72, 73, 75, 83, 101, 102, 106, 116, 125, 191, 193, 194, 199, 202, 203], "There": [0, 6, 13, 38, 71, 89], "8": [0, 3, 5, 6, 9, 27, 34, 57, 124, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "where": [0, 3, 7, 8, 9, 13, 14, 18, 26, 27, 33, 34, 35, 36, 38, 45, 48, 50, 60, 78, 82, 94, 97, 99, 100, 101, 102, 104, 108, 109, 110, 111, 114, 115, 116, 118, 120, 126, 127, 129, 144, 151, 152, 156, 177, 198, 199, 200, 201, 203, 205], "show": [0, 5, 13, 14, 15, 17, 33, 38, 83, 180, 181, 185, 200, 201, 202, 203, 204], "usag": [0, 4, 11, 38, 194, 198, 204], "three": [0, 5, 29, 35, 36, 50, 78, 124, 128, 147, 157, 200, 201, 205], "extern": [0, 1, 9, 15, 96, 127, 201], "petsc4pi": [0, 3, 9, 16, 19, 113, 115, 119], "mpi": [0, 3, 9, 10, 15, 18, 30, 38, 45, 56, 61, 70, 71, 72, 73, 74, 75, 78, 79, 83, 89, 101, 106, 116, 125, 156, 191, 193, 194, 202, 204], "performan": 0, "detail": [0, 2, 3, 5, 8, 9, 10, 13, 71, 125, 127, 200, 203, 204], "perform": [0, 3, 4, 5, 9, 18, 31, 33, 35, 39, 49, 56, 67, 68, 70, 73, 78, 79, 148, 151, 152, 202, 203, 205], "analysi": [0, 5, 9], "score": [0, 38], "p": [0, 8, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 38, 48, 63, 93, 105, 113, 114, 115, 116, 146, 147, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "extra": 0, "iter": [0, 11, 12, 14, 16, 17, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 39, 44, 45, 47, 51, 67, 68, 70, 71, 73, 74, 76, 77, 78, 81, 82, 85, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 141, 144, 145, 146, 147, 148, 151, 152, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204], "taken": [0, 4, 15, 38, 111, 126, 145, 146, 147, 151], "februari": 0, "14": [0, 12, 27, 32, 34, 62, 151, 152, 188, 193, 196, 202, 204, 205], "accompani": [0, 9, 200], "acm": [0, 3, 9], "tom": [0, 3, 9], "prototyp": [0, 3, 9, 18, 51, 199], "spectral": [0, 3, 9, 11, 17, 33, 35, 36, 93, 94, 99, 100, 101, 102, 106, 109, 116, 125, 157, 193, 204], "defer": [0, 3, 9, 11, 33, 35, 93, 109, 157], "In": [0, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 18, 33, 34, 35, 36, 38, 70, 74, 77, 78, 104, 118, 124, 132, 148, 151, 152, 198, 199, 200, 201, 202, 204, 205], "drop": [0, 13, 104], "support": [0, 3, 9, 56, 151, 152, 201], "variou": [0, 9, 10, 42, 45, 60, 70, 71, 197, 205], "incomp": 0, "led": 0, "inconsist": [0, 192, 204], "had": 0, "while": [0, 2, 3, 5, 9, 12, 15, 18, 33, 35, 36, 39, 70, 77, 78, 79, 177, 191, 199, 200, 201, 202, 203, 204], "A": [0, 1, 4, 6, 8, 9, 11, 13, 16, 18, 19, 26, 27, 34, 35, 36, 44, 48, 49, 60, 70, 72, 78, 79, 93, 95, 96, 97, 104, 105, 107, 108, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 130, 132, 144, 146, 147, 151, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197], "pledg": 0, "migrat": 0, "decis": [0, 1], "alreadi": [0, 2, 3, 5, 9, 38, 44, 45, 47, 82, 89, 177, 199, 200, 203], "unifi": 0, "instead": [0, 11, 34, 45, 56, 57, 71, 82, 99, 100, 148, 191, 197, 199, 203, 205], "provid": [0, 1, 2, 7, 10, 13, 18, 26, 27, 34, 39, 42, 58, 62, 96, 97, 104, 108, 116, 185, 199, 200, 201, 204], "maintain": [0, 3, 6, 9, 18], "four": [0, 30, 36], "one": [0, 4, 5, 7, 12, 14, 15, 16, 18, 29, 30, 35, 36, 38, 44, 45, 51, 58, 62, 63, 64, 67, 68, 70, 71, 72, 73, 77, 79, 89, 93, 94, 96, 104, 107, 108, 110, 112, 113, 114, 115, 118, 123, 132, 145, 146, 147, 150, 151, 156, 172, 176, 178, 180, 185, 191, 198, 199, 200, 201, 203], "emul": [0, 13, 129, 202], "controller_nonmpi": [0, 12, 16, 19, 21, 25, 26, 28, 29, 30, 32, 34, 36, 66, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "controller_mpi": [0, 66, 191, 194, 203, 204, 205], "further": [0, 6, 9, 53, 58, 84, 104, 200, 205], "confus": [0, 5, 156], "multigrid": [0, 3, 9, 34, 205], "perspect": [0, 3, 9], "algorithm": [0, 3, 9, 18, 202, 203, 204, 205], "exchang": 0, "than": [0, 5, 6, 15, 16, 18, 19, 52, 61, 71, 82, 104, 165, 166, 167, 168, 169, 172, 176, 184, 192, 198, 199, 201, 203, 204], "determin": [0, 1, 10, 39, 45, 71, 73, 78, 84, 104, 107, 151, 152], "when": [0, 1, 3, 4, 5, 6, 8, 9, 11, 13, 18, 34, 45, 46, 47, 59, 62, 70, 71, 75, 77, 78, 82, 84, 104, 108, 123, 129, 131, 146, 147, 150, 151, 152, 194, 200, 201, 204, 205], "stop": [0, 44, 71, 73, 82, 96, 112, 123, 131, 145, 146, 147, 205], "previou": [0, 5, 11, 53, 62, 70, 74, 77, 78, 127, 150], "behavior": [0, 1, 13, 110, 112, 113, 202], "restor": 0, "flag": [0, 16, 19, 42, 59, 63, 67, 68, 118, 199, 205], "front": [0, 107], "end": [0, 5, 6, 11, 13, 35, 44, 45, 49, 54, 62, 67, 68, 70, 78, 79, 124, 127, 147, 178, 180, 189, 199, 200, 201, 203], "redund": 0, "specif": [0, 2, 4, 5, 8, 10, 39, 45, 48, 57, 58, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 89, 123], "descript": [0, 5, 9, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 40, 44, 45, 53, 60, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "declar": 0, "within": [0, 1, 5, 6, 9, 36, 46, 71, 75, 77, 78, 197, 198, 200, 205], "precis": [0, 16, 18, 36, 203], "header": [0, 29, 30, 36, 173, 198], "__init__": [0, 6, 7, 8, 45, 130, 156], "inherti": 0, "renew": 0, "deprec": [0, 9], "requir": [0, 3, 5, 9, 12, 18, 29, 30, 35, 36, 58, 71, 78, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 151, 152, 184, 199, 201, 204, 205], "2018": [0, 151], "integr": [0, 2, 3, 4, 6, 9, 11, 12, 14, 15, 18, 33, 35, 38, 41, 42, 48, 54, 127, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 176, 199], "consist": [0, 2, 4, 6, 108, 126, 127, 128, 198], "initi": [0, 7, 11, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 44, 45, 47, 51, 53, 67, 68, 70, 78, 82, 84, 85, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "u": [0, 1, 3, 5, 7, 9, 11, 49, 51, 53, 71, 78, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 172, 173, 177, 178, 180, 198, 199, 200], "f": [0, 3, 5, 6, 7, 8, 9, 11, 12, 21, 25, 26, 27, 28, 32, 34, 36, 41, 42, 48, 49, 51, 52, 78, 89, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 142, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "fix": [0, 4, 5, 13, 15, 33, 35, 36, 102, 118, 125, 202, 205], "throughout": [0, 89, 198], "As": [0, 5, 13, 18, 35, 56, 192, 198, 201, 202, 204], "bug": [0, 4, 45, 47, 178, 180, 199, 200], "discov": 0, "3018": 0, "ship": [0, 3, 9], "dmda": [0, 113, 115, 170], "solver": [0, 12, 16, 18, 33, 36, 80, 81, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 194, 197, 200, 201, 204, 205], "right": [0, 1, 5, 6, 7, 11, 12, 16, 18, 19, 26, 27, 28, 29, 30, 33, 34, 35, 36, 42, 48, 49, 51, 54, 58, 63, 70, 82, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "c": [0, 3, 7, 9, 26, 27, 29, 30, 34, 35, 36, 93, 94, 95, 104, 105, 107, 114, 118, 125, 127, 132, 188, 192, 197], "commun": [0, 1, 3, 9, 10, 18, 45, 46, 47, 56, 61, 67, 70, 72, 73, 74, 75, 77, 79, 83, 87, 89, 90, 91, 101, 102, 113, 115, 116, 119, 125, 156, 191, 194, 203, 204], "split": [0, 33, 35, 93, 97, 99, 100, 109, 114, 151, 157, 191, 194, 203, 204], "space": [0, 1, 5, 10, 16, 18, 19, 26, 27, 34, 36, 38, 41, 52, 53, 58, 75, 94, 96, 99, 100, 101, 102, 112, 113, 114, 115, 116, 118, 125, 129, 132, 163, 173, 175, 182, 183, 184, 186, 187, 188, 189, 193, 194, 196, 197, 198, 199, 201, 202, 203, 205], "get": [0, 5, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 51, 57, 58, 59, 61, 70, 71, 72, 76, 78, 79, 83, 89, 97, 99, 106, 108, 113, 124, 128, 129, 131, 146, 147, 151, 152, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205], "mpich3": 0, "bind": [0, 204], "download": [0, 5], "pypi": [0, 3, 9], "doe": [0, 5, 6, 12, 14, 36, 47, 49, 53, 59, 60, 71, 75, 151, 152, 192, 198, 199, 200, 201, 202, 203, 204, 205], "packag": [0, 5, 9, 15, 130], "ever": 0, "annoi": 0, "incredibli": 0, "slow": [0, 9, 10, 15, 93, 109, 157], "setup": [0, 9, 10, 12, 26, 27, 28, 29, 30, 34, 36, 44, 45, 47, 63, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 110, 127, 173, 175, 176, 178, 180, 182, 186, 192, 197, 199, 200, 201, 202, 204, 205], "phase": [0, 12, 25, 67, 68, 85, 117], "copi": [0, 7, 49, 54, 150, 156, 191, 196, 203, 205], "dill": [0, 12, 21, 25, 32], "90": [0, 16, 19, 85], "certain": [0, 10, 11, 18, 33, 129, 202], "increas": [0, 8, 18, 48, 50, 95, 192, 201, 202, 204, 205], "speed": [0, 10, 18, 93, 94, 95, 105], "calcul": 0, "pen": [0, 12, 21, 25, 32, 127, 180, 185, 200, 201], "trap": [0, 12, 21, 25, 32, 127, 180, 185, 200, 201], "novemb": 0, "2017": 0, "matrix": [0, 8, 9, 11, 17, 26, 27, 29, 30, 33, 35, 36, 41, 42, 48, 50, 51, 54, 58, 63, 70, 78, 79, 93, 95, 96, 97, 104, 105, 107, 112, 113, 114, 115, 116, 118, 119, 120, 125, 127, 128, 129, 130, 132, 144, 151, 153, 154, 155, 156, 157, 159, 160, 161, 165, 167, 169, 174, 175, 192, 198, 204], "pfasst": [0, 3, 9, 10, 12, 26, 27, 35, 36, 64, 67, 68, 187, 188, 189, 190, 191, 193, 196, 199, 201, 204, 205], "matrixpfasst": [0, 26, 27, 34], "involv": [0, 1], "few": [0, 2, 4, 6, 9, 12, 15, 203, 204, 205], "unexpect": 0, "place": [0, 5, 45, 76, 77], "e": [0, 1, 3, 4, 5, 6, 9, 12, 35, 36, 47, 51, 53, 59, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 171, 173, 175, 176, 180, 185, 198, 199, 200, 201, 202, 203, 204, 205], "g": [0, 3, 4, 5, 6, 9, 12, 28, 29, 30, 36, 47, 51, 52, 53, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 164, 165, 166, 167, 168, 169, 170, 171, 176, 198, 199, 200, 201, 202, 203, 204, 205], "transfer": [0, 16, 19, 26, 27, 34, 36, 38, 41, 46, 52, 53, 165, 166, 167, 168, 169, 171, 182, 183, 184, 186, 187, 188, 189, 194, 196, 197, 199, 202, 203, 204, 205], "neglig": 0, "though": [0, 5, 10], "25": [0, 12, 16, 19, 21, 25, 26, 27, 28, 34, 36, 96, 97, 99, 100, 101, 102, 107, 110, 151, 180, 181, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205], "6th": 0, "workshop": 0, "avail": [0, 1, 5, 9, 14, 18, 38, 42, 45, 71, 77, 78, 150, 151], "index": [0, 5, 9, 11, 29, 30, 36, 70, 77, 78, 83, 104, 108], "http": [0, 1, 3, 5, 8, 9, 12, 21, 48, 80, 101, 102, 105, 106, 110, 111, 113, 115, 116, 117, 119, 125, 145, 151, 152], "org": [0, 1, 3, 5, 8, 9, 12, 21, 80, 103, 105, 110, 111, 113, 115, 116, 119, 124, 125, 151, 152], "simpli": [0, 5, 16, 62, 199, 200, 201, 202, 205], "pip": [0, 3, 5, 9, 10], "natur": [0, 1, 11, 124, 200], "notabl": [0, 44, 71], "meet": 0, "standard": [0, 2, 11, 14, 16, 33, 34, 35, 36, 41, 77, 78, 127, 163, 198, 200, 201, 202, 203], "2016": [0, 3, 9, 80, 93, 109, 157], "its": [0, 3, 5, 6, 9, 12, 57, 71, 78, 108, 129, 172, 173, 198, 199, 200, 201, 202], "redesign": 0, "core": [0, 3, 4, 5, 7, 9, 12, 156, 174, 175, 176, 177, 178, 180, 183, 198, 199, 200, 201, 204], "actual": [0, 13, 14, 47, 104, 127, 129, 151, 152, 177, 192, 198, 199, 200, 202, 203, 204, 205], "necessari": [0, 5, 16, 19, 49, 62, 70, 192, 200, 204], "someth": [0, 44, 45, 51, 70, 71, 89], "well": [0, 1, 10, 12, 14, 17, 18, 34, 36, 38, 41, 44, 45, 71, 72, 73, 78, 114, 118, 124, 129, 132, 163, 173, 175, 192, 198, 199, 200, 202, 204, 205], "collect": [0, 5, 12, 21, 25, 29, 30, 32, 36, 110, 173, 175, 182, 198, 201], "either": [0, 18, 35, 39, 71, 84, 95, 120, 151, 152, 177, 192, 198, 199, 204], "introduct": 0, "ad": [0, 4, 8, 44, 45, 59, 77, 89, 150, 156, 205], "below": [0, 8, 12, 13, 15, 17, 18, 45, 62, 71, 84, 104, 199, 200, 204, 205], "explain": [0, 9], "fashion": [0, 96, 97, 116], "simpl": [0, 6, 9, 10, 11, 13, 26, 27, 34, 36, 73, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 116, 123, 124, 125, 128, 129, 130, 131, 144, 145, 146, 147, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "spatial": [0, 9, 16, 18, 19, 26, 27, 34, 35, 41, 53, 58, 94, 95, 96, 97, 99, 100, 101, 102, 110, 112, 113, 114, 115, 116, 118, 119, 120, 125, 129, 132, 144, 163, 165, 167, 169, 172, 173, 176, 182, 186, 187, 188, 194, 197, 199, 200, 202, 204, 205], "discret": [0, 8, 13, 18, 35, 48, 58, 93, 94, 95, 96, 97, 104, 105, 106, 108, 112, 113, 115, 116, 119, 120, 125, 129, 144, 172, 173, 197, 198, 204, 205], "formul": [0, 11, 34, 111, 114, 118, 126, 132, 153, 154, 155, 156, 157, 159, 160, 161, 198], "move": [0, 71, 72, 200], "mlsdc": [0, 3, 9, 12, 34, 53, 67, 68, 184, 185, 192, 193, 202, 203, 204, 205], "inclus": [0, 1, 42], "two": [0, 10, 11, 12, 13, 16, 33, 34, 38, 42, 50, 53, 56, 71, 73, 77, 79, 80, 93, 96, 97, 99, 100, 103, 105, 106, 107, 109, 112, 114, 115, 116, 118, 119, 129, 132, 144, 151, 152, 160, 173, 175, 185, 198, 201, 202, 203, 205], "gener": [0, 6, 7, 9, 11, 15, 17, 23, 33, 35, 36, 42, 50, 51, 58, 60, 62, 89, 99, 100, 112, 113, 115, 125, 144, 150, 155, 156, 192, 200, 201, 204], "input": [0, 10, 13, 51, 60, 63, 113, 115, 155, 199], "nonmpi": [0, 45], "real": [0, 11, 36, 56, 101, 102, 116, 123, 125, 166, 193, 198, 202, 204], "virtual": [0, 3, 9, 12, 68, 202], "parallelisim": 0, "simplifi": [0, 6, 8, 28], "coarsen": [0, 12, 14, 192, 201, 204, 205], "libpfasst": 0, "offer": [0, 199], "plugin": [0, 202, 205], "subpackag": 0, "fulli": [0, 3, 9, 11, 16, 19, 41, 45, 50, 71, 93, 94, 96, 97, 104, 109, 113, 115, 125, 127, 129, 198], "sphinx": [0, 5, 9], "apidoc": [0, 9], "mainli": [0, 9], "realiz": [0, 9, 26, 27, 34, 114, 115, 119, 203], "clearli": [0, 9], "stabl": [0, 35, 151, 198], "barycentr": [0, 8, 48, 63], "interpol": [0, 8, 13, 41, 48, 63, 70, 71, 77, 79, 82, 104, 118, 182, 185, 201, 202], "equidistantspline_right": 0, "spline": 0, "multi": [0, 3, 9, 15, 16, 19, 71, 89, 96, 97, 113, 116, 160, 186, 189, 196, 198, 199, 202, 203], "aka": [0, 16], "singl": [0, 1, 5, 18, 26, 27, 34, 49, 61, 73, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 176, 177, 178, 179, 180, 181, 185, 189, 192, 193, 199, 200, 201, 203, 204, 205], "level": [0, 1, 3, 6, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 40, 41, 45, 46, 47, 52, 53, 54, 67, 68, 70, 71, 76, 77, 78, 83, 85, 150, 151, 156, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "expect": [0, 4, 9, 13, 28, 35, 36, 39, 78, 89, 155, 172, 173, 174, 175, 176, 179, 180, 181, 182, 184, 195, 197, 198, 199, 200, 201, 203, 204, 205], "rework": 0, "intern": [0, 13, 127, 199], "simplic": [0, 35], "member": 1, "leader": 1, "particip": 1, "harass": 1, "free": [1, 26, 27, 34, 36, 70, 178, 180, 194, 199, 200, 204], "experi": [1, 9, 13, 15, 35, 110, 173, 175, 198, 200], "everyon": 1, "regardless": 1, "ag": 1, "bodi": [1, 111, 126], "size": [1, 7, 8, 13, 15, 18, 41, 45, 48, 49, 53, 58, 67, 71, 72, 74, 78, 80, 82, 83, 84, 93, 105, 110, 113, 127, 144, 174, 175, 191, 197, 198, 203, 205], "disabl": [1, 9], "ethnic": 1, "sex": 1, "characterist": [1, 202], "gender": 1, "ident": [1, 51, 93, 95, 105, 115, 119, 120, 129, 144], "express": [1, 104, 107, 118, 128], "educ": [1, 3, 9], "socio": 1, "econom": 1, "statu": [1, 40, 45, 49, 53, 67, 68, 70, 71, 72, 73, 76, 77, 113, 115, 177, 199], "nation": [1, 18], "person": [1, 4], "appear": [1, 11], "race": 1, "religion": 1, "sexual": 1, "orient": [1, 2], "interact": [1, 26, 27, 34, 127, 201], "open": [1, 5, 12, 13, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "welcom": [1, 39, 178, 180, 199, 200], "divers": 1, "healthi": 1, "posit": [1, 12, 16, 19, 21, 25, 28, 32, 36, 90, 110, 111, 117, 122, 126, 127, 153, 161, 180, 185, 187, 188, 192, 193, 194, 200, 201, 202, 204], "demonstr": [1, 9, 10, 18, 194, 195, 199, 200, 201, 202, 203, 204, 205], "empathi": 1, "kind": [1, 42, 48, 89, 97, 200, 202], "peopl": 1, "Being": 1, "respect": [1, 18, 26, 27, 33, 34, 35], "opinion": 1, "viewpoint": [1, 33], "give": [1, 3, 5, 9, 45, 63, 71, 74, 79, 84, 131, 202, 203], "gracefulli": 1, "accept": [1, 5, 11, 70, 89], "construct": [1, 58, 200], "feedback": 1, "apolog": 1, "mistak": 1, "learn": [1, 9], "focus": 1, "just": [1, 5, 9, 29, 30, 34, 36, 45, 51, 62, 72, 77, 78, 82, 89, 116, 146, 147, 148, 150, 171, 179, 192, 200, 204], "individu": [1, 16, 18, 19, 39, 44], "overal": [1, 114, 115, 116, 203], "unaccept": 1, "languag": 1, "imageri": 1, "attent": 1, "advanc": [1, 3, 9, 113, 115, 116, 119, 125, 201], "troll": 1, "insult": 1, "derogatori": 1, "comment": [1, 4, 5], "polit": 1, "attack": 1, "public": [1, 4, 9, 33, 36, 38, 124], "privat": 1, "publish": 1, "inform": [1, 13, 45, 47, 58, 71, 104, 108, 113, 115, 198, 200, 205], "physic": [1, 12, 127], "email": 1, "address": 1, "explicit": [1, 3, 9, 35, 87, 88, 91, 116, 125, 132, 148, 149, 151, 152, 157, 159, 199], "permiss": 1, "reason": [1, 45, 151, 152, 198, 201], "consid": [1, 5, 11, 13, 33, 35, 51, 95, 120], "inappropri": 1, "profession": 1, "set": [1, 2, 3, 4, 7, 8, 9, 10, 12, 16, 18, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 36, 38, 39, 41, 43, 45, 46, 47, 48, 53, 60, 61, 70, 71, 82, 84, 95, 127, 144, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "clarifi": [1, 13], "take": [1, 3, 9, 10, 11, 18, 29, 30, 34, 36, 44, 50, 51, 72, 83, 95, 144, 173, 175, 192, 198, 201, 204, 205], "appropri": [1, 89, 105, 148, 198], "fair": 1, "deem": 1, "threaten": 1, "offens": 1, "harm": 1, "edit": 1, "reject": 1, "commit": [1, 2, 4, 5, 15], "wiki": [1, 111, 152], "issu": [1, 3, 4, 5, 9, 151], "align": [1, 16, 19, 35], "moder": 1, "appli": [1, 5, 11, 13, 18, 35, 36, 41, 89, 118, 132, 147, 151, 163], "offici": 1, "repres": [1, 7, 35, 177, 198, 199, 202], "mail": 1, "post": [1, 5, 30, 36, 47, 199], "via": [1, 3, 9, 10, 17, 26, 27, 33, 34, 36, 41, 49, 52, 53, 71, 73, 99, 100, 118, 163, 164, 165, 166, 167, 168, 169, 202], "social": 1, "media": 1, "account": [1, 4, 50, 111, 126, 201], "appoint": 1, "onlin": 1, "offlin": 1, "event": [1, 13, 104, 108], "instanc": [1, 4, 5, 6, 8, 18, 26, 27, 34, 44, 45, 47, 48, 70, 71, 78, 79, 113, 115, 144, 146, 147, 156, 172, 173, 174, 175, 176, 177, 198, 199], "abus": 1, "otherwis": [1, 5, 45, 47, 78, 83, 107, 132, 192, 198, 204], "report": [1, 5, 9, 110], "review": [1, 18, 33], "investig": [1, 11, 13, 17, 33, 93, 109, 110, 127, 129], "promptli": 1, "fairli": 1, "oblig": 1, "privaci": 1, "secur": 1, "incid": 1, "consequ": 1, "violat": 1, "unprofession": 1, "unwelcom": 1, "written": [1, 4, 5, 6, 11, 34, 35, 39, 96, 153, 157], "clariti": 1, "around": [1, 78, 198, 199, 205], "explan": [1, 13, 15], "why": 1, "wa": [1, 3, 9, 15, 45, 71, 104, 110, 200], "apologi": 1, "through": [1, 2, 3, 4, 9, 45, 68, 84], "seri": 1, "continu": [1, 2, 3, 4, 6, 7, 9, 15, 63, 71, 73, 82, 89, 114, 115, 116, 118, 132], "unsolicit": 1, "specifi": [1, 5, 7, 11, 16, 19, 38, 53, 61, 192, 201, 202, 204], "period": [1, 26, 27, 29, 30, 34, 36, 63, 93, 94, 95, 96, 97, 99, 100, 101, 102, 106, 107, 113, 115, 116, 120, 125, 132, 144, 165, 166, 167, 168, 169, 188, 194, 197, 202, 204, 205], "channel": [1, 5], "term": [1, 10, 35, 39, 50, 78, 97, 99, 100, 106, 110, 118, 119, 120, 127, 129, 199], "lead": [1, 45, 89, 129, 151, 152, 201, 205], "seriou": [1, 205], "sustain": 1, "pattern": 1, "aggress": [1, 14, 192, 204], "disparag": 1, "www": [1, 3, 9, 12, 21, 110, 111, 116, 145], "code_of_conduct": 1, "html": [1, 5, 111, 116, 125], "inspir": [1, 6, 8, 48, 50], "mozilla": 1, "ladder": 1, "answer": [1, 18], "common": [1, 11, 13, 40], "question": [1, 18, 205], "faq": 1, "translat": 1, "develop": [2, 3, 5, 6, 8, 9, 13, 100, 124], "approach": [2, 3, 5, 9, 34, 35, 36, 144, 192, 202, 204], "fork": [2, 4, 5], "extend": [2, 127, 200], "skip": 2, "furthermor": 2, "branch": [2, 5, 15], "pre": [2, 4, 5, 29, 30, 36, 185, 199, 201], "To": [2, 3, 5, 9, 11, 15, 39, 62, 89, 144, 146, 147, 200, 201, 202, 203, 204], "pleas": [2, 3, 5, 9, 15, 39, 47, 51, 61, 71, 77, 84, 106, 151, 152, 156, 199, 200], "addition": [2, 96], "rule": [2, 5, 6, 48, 50, 70, 71, 77, 150, 151, 152, 161, 200], "enforc": [2, 5, 6, 45, 84], "summar": 2, "convent": [2, 5, 7], "chosen": [2, 201], "name": [2, 3, 4, 5, 7, 9, 12, 16, 19, 25, 32, 43, 45, 46, 49, 57, 59, 89, 127, 191, 198, 199, 200, 202, 203], "function": [2, 4, 5, 7, 8, 11, 12, 13, 16, 19, 21, 25, 28, 29, 30, 32, 36, 44, 45, 47, 48, 49, 51, 53, 56, 60, 61, 63, 67, 68, 71, 72, 74, 77, 78, 80, 82, 88, 89, 94, 99, 100, 101, 102, 104, 107, 108, 113, 114, 115, 116, 117, 118, 125, 127, 132, 148, 153, 156, 157, 171, 172, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "flavor": [2, 3, 9, 72, 77, 83, 185, 201, 203], "applic": [2, 4, 9, 13, 35, 47, 61, 70, 75, 107, 198, 205], "object": [2, 6, 8, 18, 36, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 59, 60, 62, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 101, 102, 105, 113, 115, 116, 119, 125, 136, 141, 142, 150, 151, 163, 180, 181, 185, 199, 200, 201, 205], "program": [2, 5, 26, 27, 34, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "oop": 2, "custom": [2, 6, 8, 14, 41, 47, 49, 51, 52, 53, 54, 153, 154, 157, 159, 160, 161, 163, 166, 200], "inherit": [2, 7, 43, 94, 104, 156], "framework": [2, 204], "addit": [2, 4, 6, 38, 44, 60, 95, 200, 203], "guidelin": [2, 3, 5, 6, 9], "given": [2, 5, 7, 8, 35, 38, 39, 42, 48, 50, 52, 53, 62, 70, 93, 94, 96, 103, 104, 109, 118, 123, 124, 127, 131, 145, 146, 147, 172, 198, 202, 203, 205], "esp": [3, 9], "multilevel": [3, 9, 35, 53], "extens": [3, 9, 35], "intend": [3, 9, 13], "rapid": [3, 9], "purpos": [3, 9, 44, 191, 195, 199, 201, 203, 205], "predictor": [3, 9, 47, 54, 67, 68, 151, 156, 201], "toi": [3, 9, 129], "easili": [3, 6, 9, 12, 18], "variant": [3, 9, 12, 14, 19, 192, 204], "implicit": [3, 9, 11, 16, 19, 26, 29, 30, 33, 34, 35, 36, 87, 88, 91, 94, 96, 97, 104, 113, 115, 116, 118, 132, 148, 150, 151, 155, 156, 157, 159, 160, 187, 188, 193, 194, 197, 199, 202, 204, 205], "imex": [3, 9, 26, 33, 34, 93, 106, 132, 148, 151, 157, 159, 177, 178, 179, 180, 181, 185, 187, 193, 194, 197, 199, 200, 201, 202, 204, 205], "verlet": [3, 9, 12, 21, 25, 32, 149, 152, 153], "diagon": [3, 9, 26, 27, 34, 35, 36, 130, 151], "topic": [3, 9, 18], "outcom": [3, 9, 18], "gitlab": [3, 9], "10": [3, 8, 9, 12, 14, 16, 19, 21, 25, 28, 29, 30, 32, 36, 39, 80, 102, 103, 105, 106, 107, 111, 113, 115, 119, 124, 129, 151, 152, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "host": [3, 4, 9], "com": [3, 9, 48, 106, 152], "often": [3, 9, 18, 71], "choic": [3, 5, 9, 35, 151, 152, 202], "thu": [3, 9, 11, 13, 198, 201], "checkout": [3, 9], "conda": [3, 5, 9, 10], "found": [3, 9, 12, 13, 14, 29, 30, 33, 36, 45, 63, 89, 104, 108, 200, 204], "folder": [3, 5, 9, 10, 35, 39, 204], "etc": [3, 5, 9, 38, 45, 71, 74, 78, 80, 201, 202], "env": [3, 9, 130, 191, 203], "creat": [3, 9, 10, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 36, 39, 47, 62, 104, 114, 118, 132, 144, 172, 173, 174, 175, 176, 183, 194, 195, 198, 199, 200, 201, 202, 204, 205], "yml": [3, 9], "m": [3, 5, 8, 9, 11, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 39, 45, 48, 68, 72, 78, 79, 80, 83, 105, 114, 118, 127, 129, 132, 136, 174, 175, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "correspond": [3, 5, 9, 12, 18, 25, 26, 27, 33, 34, 45, 50, 53, 61, 70, 153, 154, 155, 156, 157, 158, 159, 160, 161, 201, 203, 205], "chose": [3, 9, 124], "pythonpath": [3, 9, 191, 203], "export": [3, 5, 9, 35], "path": [3, 5, 9, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 45, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "root": [3, 5, 9, 11, 13, 35, 56, 87, 89, 91, 108, 191, 203], "want": [3, 5, 9, 18, 45, 70, 71, 72, 75, 77, 78, 83, 89, 152, 199, 203, 205], "import": [3, 5, 6, 7, 8, 9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 45, 62, 78, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "statement": [3, 5, 9], "assum": [3, 9, 127, 202], "directori": [3, 5, 9, 12, 15, 16, 19, 21, 25, 28, 32, 36, 62, 191, 203], "decent": [3, 9], "compil": [3, 9, 35], "although": [3, 6, 9, 10, 198, 199, 201], "go": [3, 5, 9, 14, 47, 67, 68, 82, 84, 177, 191, 199, 202, 203], "great": [3, 9], "let": [3, 8, 9, 48, 82, 96, 104, 109], "know": [3, 9, 49, 71, 78, 79, 82, 180, 199, 200, 202], "help": [3, 6, 8, 9, 38, 192, 200, 204], "greatli": [3, 9, 18], "appreci": [3, 9], "citat": [3, 9, 39, 151], "robert": [3, 9, 18, 39, 127], "speck": [3, 9, 39, 93, 109, 127, 157], "997": [3, 9, 173, 198], "transact": [3, 9], "mathemat": [3, 9, 146, 147], "softwar": [3, 9, 114, 118, 132], "volum": [3, 9], "45": [3, 9, 129, 193, 204], "doi": [3, 8, 9, 80, 103, 105, 124, 129, 151], "1145": [3, 9, 151], "3310410": [3, 9], "current": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 18, 19, 21, 25, 28, 32, 36, 42, 45, 47, 49, 51, 53, 54, 63, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 156, 159, 191, 199, 203, 205], "zenodo": [3, 9], "origin": [3, 9, 14, 33, 42, 116, 124, 127], "pancetta": [3, 9], "small": [3, 9, 10, 16, 18, 19, 35, 51, 177, 198, 199], "scientist": [3, 9], "interest": [3, 9, 18, 33, 38, 200, 202, 203, 205], "changelog": [3, 9], "evolut": [3, 9, 76], "dearli": [3, 9], "read": [3, 6, 8, 9, 11, 12, 16, 19, 21, 25, 28, 32, 36, 43, 46, 59], "our": [3, 9, 67, 68, 198, 199, 200, 202, 204], "forget": [3, 5, 9], "peek": [3, 9], "nice": [3, 9, 11, 18, 78, 198, 202], "conduct": [3, 5, 9, 129], "receiv": [3, 9, 45, 49, 67, 87, 89, 90, 91], "fund": [3, 9], "european": [3, 9], "high": [3, 9, 12, 14, 16, 19, 21, 25, 28, 32, 36, 78, 127, 147, 187, 188, 192, 193, 194, 197, 201, 202, 204, 205], "joint": [3, 9], "undertak": [3, 9], "ju": [3, 9], "grant": [3, 9], "agreement": [3, 9], "955701": [3, 9], "union": [3, 9], "horizon": [3, 9], "2020": [3, 9], "research": [3, 9], "innov": [3, 9], "programm": [3, 9], "belgium": [3, 9], "franc": [3, 9], "germani": [3, 9], "switzerland": [3, 9], "german": [3, 9], "feder": [3, 9], "ministri": [3, 9], "bmbf": [3, 9], "16hpc047": [3, 9], "helmholtz": [3, 9], "engin": [3, 9], "preparatori": [3, 9], "studi": [3, 9, 33, 36, 71, 110], "hirse_p": [3, 9], "nbsp": [3, 9], "done": [4, 5, 9, 10, 12, 13, 14, 16, 19, 21, 25, 28, 29, 30, 32, 36, 45, 71, 108, 112, 115, 116, 119, 129, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "repositori": [4, 5], "eventu": [4, 6, 9, 62], "mainten": 4, "howev": [4, 5, 6, 18, 35, 45, 78, 95, 129, 151, 152, 201, 205], "highli": [4, 201], "trough": 4, "dedic": [4, 107], "master": [4, 5, 9, 11, 15], "contributor": 4, "propos": [4, 35], "solv": [4, 7, 9, 16, 18, 19, 51, 70, 71, 78, 79, 83, 94, 95, 96, 97, 99, 100, 101, 102, 104, 106, 112, 113, 114, 115, 116, 118, 120, 123, 124, 125, 127, 132, 146, 147, 148, 151, 152, 174, 175, 198, 204], "accuraci": [4, 10, 13, 18, 35, 58, 70, 77, 78, 144, 146, 147, 172, 173, 175, 176, 197, 199, 203, 205], "issue214": 4, "214": 4, "awesome_new_project": 4, "some_featur": 4, "favor": [4, 6], "short": [4, 6, 203], "lower": [4, 5, 18, 36, 71, 77, 79, 84, 151, 152, 155, 200], "case": [4, 5, 6, 11, 13, 35, 36, 39, 74, 104, 108, 112, 113, 198, 201, 202, 203, 205], "underscor": [4, 6], "eas": [4, 6, 53], "interfac": [4, 18, 44, 51, 52, 54, 151, 152, 199], "modifi": [4, 5, 11, 36, 38, 50, 77], "default": [4, 5, 16, 19, 45, 47, 48, 51, 54, 59, 60, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 114, 118, 124, 129, 132, 144, 146, 147, 150, 156, 199, 201], "valu": [4, 6, 7, 8, 10, 11, 12, 13, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 49, 51, 53, 54, 58, 59, 60, 61, 63, 67, 68, 70, 71, 74, 76, 77, 78, 80, 82, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "revis": 4, "happen": [4, 26, 27, 34, 44, 45, 70, 71, 77, 82, 205], "upstream": 4, "repo": 4, "hesit": 4, "regularli": [4, 5, 13], "conflict": 4, "On": [4, 146, 147], "my_featur": 4, "git": [4, 5], "fetch": 4, "synchron": [4, 11], "v": [4, 5, 12, 16, 19, 21, 25, 26, 27, 30, 32, 34, 35, 36, 96, 104, 106, 107, 110, 114, 115, 116, 118, 127, 128, 132, 147, 172, 173, 177, 181, 184, 189, 190, 191, 194, 196, 198, 199, 200, 203, 204, 205], "next": [4, 5, 6, 7, 8, 11, 14, 18, 35, 49, 53, 63, 70, 71, 77, 83, 104, 200, 201, 202, 203, 205], "v5": 4, "v6": 4, "forc": [4, 10, 12, 96, 101, 102, 110, 118, 119, 120, 180, 185, 200, 201, 204], "re": [4, 56, 62, 118, 177, 199, 201], "write": [4, 5, 12, 21, 26, 27, 28, 29, 30, 32, 34, 36, 45, 62, 82, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "script": [4, 9, 10, 11, 16, 38, 39, 62, 124, 203], "anyon": 4, "onc": [4, 5, 26, 27, 34, 45, 70, 78, 79, 191, 203], "roadmap": 4, "mileston": 4, "associ": [4, 8, 48, 49, 144], "down": [4, 13, 15, 67, 68, 107], "Such": 4, "same": [4, 6, 7, 15, 18, 27, 34, 44, 45, 51, 62, 70, 78, 83, 89, 94, 95, 97, 104, 106, 120, 129, 144, 179, 186, 198, 199, 200, 201, 202, 203], "never": [4, 70, 79], "modif": [4, 58], "own": [4, 5, 18, 200], "prefix": [4, 6], "dev": 4, "cannot": [4, 7, 11, 45, 71, 89, 148, 201], "sever": [4, 12, 35, 36, 62, 95, 120], "solut": [4, 6, 7, 10, 11, 13, 15, 16, 18, 19, 26, 27, 28, 33, 34, 36, 49, 51, 62, 70, 71, 74, 75, 77, 78, 79, 82, 85, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 172, 173, 174, 175, 177, 178, 180, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205], "summari": [4, 5, 6, 7, 8], "panel": 5, "divid": [5, 93, 105, 109, 114, 118, 132, 203], "categori": 5, "build": [5, 27, 34, 58, 174, 175, 191, 198, 203], "artifact": 5, "section": 5, "style": [5, 8, 12, 16, 19, 21, 25, 28, 32, 36, 67, 68, 78], "syntax": [5, 6], "complianc": 5, "pep": [5, 6], "comprehens": [5, 70], "bugbear": 5, "diff": [5, 26, 34, 184, 196, 201, 205], "color": [5, 18, 28, 29, 30, 36, 173, 175, 194, 198, 204], "reformat": 5, "command": [5, 15, 35], "line": [5, 6, 11, 18, 39, 70, 128, 144, 173, 174, 175, 191, 198, 203], "120": 5, "charact": [5, 6], "arithmet": 5, "variabl": [5, 7, 12, 25, 35, 44, 45, 51, 53, 59, 62, 70, 71, 72, 74, 76, 77, 78, 79, 82, 85, 105, 151, 152, 191, 200, 202, 203], "empti": [5, 191, 203], "autom": [5, 114, 118, 132], "possibli": [5, 10, 15, 70, 79, 82], "bin": 5, "sh": 5, "stage": [5, 45, 54, 67, 68, 78, 150, 151, 152, 156, 159, 178, 180, 199, 200, 205], "head": 5, "grep": [5, 29, 30, 36], "py": [5, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 104, 130, 153, 154, 157, 159, 160, 161, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "sed": 5, "rev": 5, "pars": 5, "toplevel": 5, "delet": [5, 78], "becaus": [5, 18, 78, 82, 89, 124, 132, 156, 192, 204], "fail": [5, 191, 203], "fi": 5, "chmod": 5, "execut": [5, 39, 62, 203], "Be": [5, 71, 81, 84, 151], "awar": [5, 71, 81, 84, 151, 152], "alter": 5, "editor": 5, "whenev": [5, 44, 70, 198], "r": [5, 8, 16, 19, 28, 29, 30, 35, 36, 41, 63, 93, 96, 97, 99, 100, 101, 102, 104, 105, 107, 109, 111, 112, 113, 115, 119, 126, 127, 128, 129, 144, 163, 205], "messag": [5, 45, 67, 70, 71, 74, 78, 79, 80], "detect": [5, 18, 80], "abort": [5, 26, 27, 34, 75], "ahead": 5, "worri": [5, 203], "obtain": [5, 8, 34, 36, 48, 58, 70, 71, 77, 78, 114], "msg": [5, 45, 75], "commit_msg_fil": 5, "flakeheaven_output": 5, "interpret": 5, "trailer": 5, "echo": 5, "assign": [5, 29, 30, 36, 89, 148], "note": [5, 6, 8, 12, 14, 16, 17, 19, 26, 27, 33, 34, 39, 48, 77, 89, 132, 178, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205], "relat": [5, 33, 41, 45, 51, 52, 53, 54, 163, 200], "constantli": [5, 129], "pep8": [5, 9], "might": [5, 18, 59, 82, 84, 203], "caus": [5, 15, 151, 203], "date": 5, "forg": 5, "pass": [5, 6, 8, 16, 19, 26, 27, 29, 30, 34, 36, 41, 45, 49, 51, 53, 54, 57, 61, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84, 85, 163, 186, 187, 188, 193, 194, 197, 198, 199, 201, 202, 204, 205], "timeout": 5, "toml": [5, 191, 203], "compon": [5, 10, 11, 13, 35, 87, 88, 89, 91, 103, 116, 123, 124, 131, 145, 146, 147, 160, 205], "test_nod": 5, "test_nodesgener": 5, "legendr": [5, 6, 42, 48, 50, 174, 175, 184, 198, 200, 201], "how": [5, 8, 12, 13, 17, 18, 72, 76, 77, 78, 107, 129, 179, 198, 199, 200, 201, 202, 203, 204, 205], "compar": [5, 10, 13, 16, 19, 26, 27, 28, 33, 34, 35, 36, 62, 70, 71, 78, 79, 80, 99, 100, 172, 173, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205], "indic": [5, 6, 9, 42, 46, 63, 67, 96, 99, 100, 101, 102, 104, 107, 108, 112, 114, 118, 123, 129, 131, 132, 145, 199], "print": [5, 6, 7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "load": [5, 12, 15, 16, 19, 21, 25, 28, 29, 30, 32, 36, 45, 71, 72, 73, 76, 77, 80, 81, 84, 104, 128], "sitecustom": 5, "process_startup": 5, "durat": 5, "analyz": [5, 33, 34, 38, 198], "henc": [5, 15, 18, 45, 71, 79, 118, 129, 132], "finish": [5, 178, 180, 199, 200], "process": [5, 10, 15, 18, 26, 34, 38, 46, 47, 67, 78, 87, 89, 91, 114, 115, 116, 178, 180, 186, 187, 188, 189, 190, 191, 195, 196, 199, 200, 202, 203, 205], "combin": [5, 11, 12, 35, 78, 191, 194, 201, 203, 204], "htmlcov": 5, "favorit": [5, 151], "browser": 5, "did": [5, 12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 78, 173, 174, 175, 176, 177, 178, 182, 191, 194, 198, 199, 201, 203, 204], "ignor": [5, 151, 152, 205], "rais": [5, 6, 7, 12, 16, 19, 25, 26, 27, 32, 34, 45, 62, 75, 191, 192, 203, 204], "tool": [5, 38, 199], "pyproject": [5, 191, 203], "conditionali": 5, "loop": [5, 13, 16, 19, 28, 29, 30, 36, 47, 173, 175, 181, 187, 188, 189, 198, 200, 202, 203], "pragma": 5, "cover": 5, "def": [5, 6, 7, 8, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 146, 147, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "preced": 5, "think": 5, "justifi": 5, "built": [5, 6, 62, 151, 152, 199, 205], "task": [5, 203], "doc": [5, 125], "unzip": 5, "rst": 5, "update_apidoc": 5, "b": [5, 16, 19, 26, 27, 28, 29, 30, 34, 36, 70, 78, 79, 105, 114, 115, 116, 118, 127, 132, 136, 142, 146, 147, 180, 185, 186, 187, 188, 194, 197], "Then": [5, 8, 13, 14, 15, 35, 48, 62, 198, 200], "graph": [5, 28, 36], "imag": 5, "still": [5, 35, 36, 45, 70, 79, 148, 151], "miss": [5, 205], "concern": [5, 35], "mostli": [6, 46], "Of": [6, 201], "cours": [6, 45, 201], "strictli": [6, 151, 152], "alwai": [6, 15, 47, 71, 83, 107, 151, 152, 153, 161, 198, 201, 203], "guido": 6, "von": 6, "rossum": 6, "kei": [6, 12, 16, 19, 21, 25, 29, 30, 32, 36, 59, 61, 62, 67, 68, 78, 104, 144, 181, 191, 199, 200, 202, 203], "insight": 6, "state": [6, 13, 35, 36, 101, 102, 104, 107, 108], "foolish": 6, "hobgoblin": 6, "littl": [6, 193, 198, 200, 204], "mind": [6, 51, 58, 79, 89, 148], "find": [6, 9, 13, 15, 18, 29, 30, 36, 45, 63, 173, 175, 198], "optim": [6, 11, 36, 71, 125, 173, 175, 198], "compromis": 6, "someon": [6, 9], "els": [6, 12, 16, 19, 25, 26, 27, 29, 30, 32, 34, 36, 71, 104, 106, 108, 132, 156, 185, 189, 191, 192, 193, 194, 197, 201, 203, 204, 205], "understand": [6, 8, 38], "my": [6, 9], "effect": [6, 71, 124, 129], "kilomet": 6, "aspect": [6, 18], "interdepend": 6, "attract": 6, "lowercas": 6, "variablenamelikethi": 6, "snake_cas": 6, "variable_name_like_thi": 6, "pascalcas": 6, "camelcas": 6, "uppercas": 6, "minu": 6, "try": [6, 14, 15, 70, 71, 77, 191, 198, 203], "stick": 6, "discourag": 6, "advectiondiffus": 6, "except": [6, 15, 45, 46, 50, 129, 191, 203], "suffix": [6, 35, 202], "parametererror": [6, 40, 46], "goe": [6, 45], "argument": [6, 45, 47, 51, 61, 62, 95, 179, 200], "tleft": [6, 42, 174, 175, 198], "quadtyp": 6, "computefejerrul": [6, 40, 48], "nnode": [6, 183, 201], "nodegener": 6, "getorthogpolycoeff": 6, "self": [6, 7, 8, 45, 51, 68, 73, 78, 104, 106, 146, 147, 156], "ncoeff": 6, "abbrevi": 6, "deterior": [6, 13], "rather": [6, 8, 12, 13, 18, 33, 89, 192, 199, 203, 204], "getorthogonalpolynomialcoeffici": 6, "plural": 6, "acronym": 6, "jacobimssdc": 6, "multistepsdcjacobi": 6, "mssdcjacobi": 6, "put": [6, 173, 198, 200, 205], "exception": 6, "special": [6, 9, 11, 12, 25, 32, 34, 97, 112, 113, 118, 180, 181, 185, 200, 201, 205], "mysweep": 6, "initsweep": 6, "getattr": 6, "_initsweep_": 6, "attributeerror": 6, "notimplementederror": [6, 12, 16, 19, 25, 32, 192, 204], "_initsweep_copi": 6, "_initsweep_spread": 6, "_": [6, 8, 11, 12, 21, 25, 32, 48, 106, 116, 118, 125, 132, 178, 180, 197, 199, 200, 205], "chucknorri": 6, "_think": 6, "doubt": 6, "doubl": [6, 71], "__": [6, 178, 180, 199, 200], "left": [6, 11, 12, 14, 21, 25, 32, 33, 42, 48, 58, 63, 95, 96, 97, 99, 100, 101, 102, 112, 113, 118, 119, 120, 122, 127, 144, 157, 173, 175, 198], "__dict__": [6, 59], "node_typ": [6, 42, 50, 174, 175, 184, 198, 201], "equid": [6, 42], "chebi": [6, 42], "quad_typ": [6, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 42, 50, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "gauss": [6, 15, 18, 36, 42, 48, 50, 71, 77, 181, 200, 202, 205], "radau": [6, 16, 19, 26, 27, 28, 29, 30, 34, 36, 42, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "lobatto": [6, 12, 21, 25, 32, 42, 50, 181, 200], "string": [6, 16, 19, 44, 45, 49, 61, 89, 144], "distinguish": 6, "select": [6, 71, 79], "probabl": [6, 127, 204], "keep": [6, 10, 44, 45, 51, 58, 79, 89, 148, 189, 203], "replac": [6, 14, 16, 19, 200, 201], "_initsweep_copy_past": 6, "_initsweep_spread_out": 6, "non": [7, 17, 35, 36, 45, 63, 67, 71, 72, 74, 78, 83, 87, 89, 90, 91, 106, 124, 129, 146, 147, 203], "od": [7, 9, 35, 51, 54, 103, 104, 107, 124, 128, 145, 146, 147, 150, 156, 201, 204], "form": [7, 9, 11, 35, 95, 97, 99, 100, 101, 102, 114, 115, 116, 120, 123, 130, 146, 147, 153, 157, 192, 198, 202, 204], "frac": [7, 8, 35, 48, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 144, 145, 146, 147], "du": [7, 16, 19, 114, 115, 116, 123, 145, 146, 147], "dt": [7, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 39, 48, 49, 53, 71, 78, 103, 104, 107, 108, 109, 117, 122, 123, 124, 127, 128, 130, 131, 136, 142, 144, 145, 146, 147, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "quad": [7, 35, 146, 147], "u_0": [7, 11, 109, 124], "vector": [7, 8, 11, 35, 48, 58, 63, 70, 78, 79, 110, 111, 113, 114, 115, 118, 126, 132, 165, 169, 174, 175, 198, 199], "scalar": [7, 8, 33, 48, 109, 114, 118, 132, 146, 153, 157], "hand": [7, 18, 35, 45, 51, 54, 58, 70, 78, 82, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 174, 175, 198, 199, 201, 204], "side": [7, 18, 35, 51, 54, 58, 70, 82, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 174, 175, 198, 199, 201, 204], "ptype": [7, 40, 49, 51, 52, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148], "templat": [7, 38], "lambda": [7, 12, 16, 19, 21, 25, 26, 27, 32, 34, 109, 123, 127, 130, 153, 157, 191, 203], "ct": 7, "complex": [7, 9, 12, 33, 35, 56, 89, 200], "np": [7, 8, 12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 48, 50, 63, 70, 79, 88, 93, 94, 96, 97, 99, 101, 102, 104, 105, 107, 109, 110, 127, 128, 129, 144, 146, 147, 172, 173, 174, 175, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205], "problemerror": [7, 40, 46], "datatype_class": [7, 10, 65, 173, 178, 180, 198, 199, 200, 204], "mycustomproblem": 7, "datatyp": [7, 10, 45, 87, 89, 168], "dtype_u": [7, 49, 51, 53, 77, 78, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 172, 173, 182, 198, 201], "dtype_f": [7, 49, 51, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 151, 152], "lam": [7, 123], "len": [7, 12, 16, 19, 21, 27, 29, 30, 32, 34, 36, 173, 175, 182, 183, 186, 191, 194, 198, 201, 202, 203, 204], "shape": [7, 41, 89], "must": [7, 8, 48, 51, 62, 89, 104, 201], "1d": [7, 16, 17, 33, 58, 63, 93, 96, 112, 129, 166, 198], "call": [7, 12, 13, 16, 19, 21, 25, 28, 29, 30, 32, 36, 44, 45, 47, 51, 53, 56, 61, 62, 71, 72, 77, 81, 82, 85, 89, 96, 97, 104, 107, 115, 116, 119, 127, 131, 132, 145, 156, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "super": [7, 45, 47, 116, 200], "init": [7, 8, 45, 51, 87, 88, 89, 90, 91, 172, 173, 182, 188, 198, 201, 202], "none": [7, 10, 12, 16, 19, 25, 26, 27, 28, 29, 30, 32, 34, 36, 42, 44, 45, 47, 48, 49, 51, 58, 59, 61, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 97, 99, 100, 101, 102, 104, 105, 106, 108, 110, 113, 114, 115, 116, 119, 124, 125, 128, 129, 130, 131, 132, 144, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 173, 175, 178, 180, 189, 192, 193, 197, 198, 199, 200, 203, 204, 205], "dtype": [7, 89, 180, 181, 185, 200, 201], "regist": [7, 43, 61, 179, 200], "localvar": 7, "true": [7, 12, 16, 19, 26, 27, 32, 34, 39, 45, 49, 57, 63, 78, 96, 104, 108, 112, 116, 123, 124, 125, 129, 131, 144, 145, 146, 147, 151, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "rh": [7, 10, 41, 49, 51, 54, 78, 87, 88, 91, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 142, 144, 145, 146, 147, 148, 150, 156, 163], "eval_f": [7, 51, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 172, 173, 198], "f_init": [7, 51], "list": [7, 8, 9, 10, 12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 36, 44, 45, 48, 49, 51, 53, 57, 58, 61, 62, 63, 68, 70, 72, 78, 79, 80, 83, 89, 96, 99, 100, 101, 102, 104, 105, 108, 110, 114, 130, 132, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 173, 175, 179, 180, 181, 182, 185, 187, 188, 189, 191, 196, 198, 200, 201, 202, 203, 205], "output": [7, 12, 13, 25, 32, 38, 47, 51, 62, 70, 113, 115, 166, 180, 181, 185, 189, 191, 194, 200, 201, 203, 204], "fals": [7, 12, 16, 19, 32, 44, 45, 47, 57, 58, 63, 67, 68, 72, 77, 89, 96, 111, 123, 125, 126, 130, 144, 146, 147, 154, 155, 156, 157, 158, 159, 160, 178, 180, 185, 189, 192, 193, 194, 196, 197, 199, 200, 201, 203, 204, 205], "docstr": 8, "itself": [8, 13, 45, 78, 129, 201, 205], "describ": [8, 9, 11, 16, 17, 19, 38, 104, 111, 114, 115, 116, 126, 179, 200], "lagrangeapproxim": [8, 40, 48], "approxim": [8, 11, 18, 39, 48, 78, 79, 94, 96, 99, 100, 101, 102, 116, 123, 124, 125, 128, 129, 131, 147], "point": [8, 13, 18, 39, 42, 48, 49, 50, 57, 63, 70, 77, 78, 79, 94, 96, 97, 99, 100, 101, 102, 104, 108, 111, 113, 126, 129, 153, 154, 155, 156, 157, 158, 159, 160, 161, 172, 173, 198], "lagrang": [8, 40, 114, 118, 132, 201], "math": [8, 39, 105, 113, 118, 132], "t_j": [8, 48], "leq": [8, 48, 104, 107, 108, 120, 145], "j": [8, 48, 93, 97, 99, 100, 101, 102, 107, 109, 110, 111, 113, 114, 115, 118, 126, 132, 146, 147, 151], "n": [8, 12, 16, 19, 21, 26, 27, 28, 32, 34, 35, 36, 48, 95, 97, 99, 100, 101, 102, 104, 105, 110, 111, 112, 114, 116, 118, 120, 125, 126, 127, 132, 134, 135, 138, 139, 140, 142, 144, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "formula": [8, 48, 177, 199], "displaystyl": [8, 48, 95, 120], "sum_": [8, 11, 48, 110, 111, 120, 126, 127], "w_j": [8, 48], "x_j": [8, 48], "f_j": [8, 48], "prod_": [8, 48, 95, 120], "k": [8, 11, 12, 21, 25, 28, 29, 30, 32, 33, 35, 36, 39, 48, 63, 78, 94, 104, 107, 110, 114, 115, 116, 117, 118, 127, 129, 132, 153, 157, 173, 175, 181, 198, 200], "neq": [8, 48, 111, 126, 127], "x_k": [8, 48], "theori": [8, 48], "dx": [8, 28, 36, 58, 93, 96, 97, 99, 100, 101, 102, 105, 110, 112, 113, 114, 115, 118, 119, 127, 129, 132, 134, 135, 138, 139, 140, 142, 144, 172, 173, 182, 198, 201], "1137": 8, "s0036144502417715": 8, "tupl": [8, 47, 48, 61, 77, 95, 97, 99, 100, 101, 102, 105, 112, 113, 114, 115, 116, 117, 119, 120, 124, 125, 129, 132, 144, 197, 200, 205], "1darrai": [8, 48, 50, 51, 93, 94, 96, 97, 99, 100, 101, 104, 109, 110, 127, 129, 144], "scale": [8, 10, 12, 15, 16, 18, 19, 21, 25, 28, 29, 30, 32, 36, 48, 57, 96, 97, 99, 100, 101, 102, 127, 198, 204], "getinterpolationmatrix": [8, 48], "vec": [8, 16, 19, 48, 91, 93, 96, 97, 104, 105, 107, 108, 109, 113, 114, 115, 118, 119, 125, 128, 129, 130, 132, 144], "tau_m": [8, 48], "p_": [8, 48], "inter": [8, 48, 127], "pinter": [8, 48], "2darrai": [8, 48, 107, 127, 128], "row": [8, 48, 70, 72, 78, 79, 113, 157], "column": [8, 48, 78, 113, 157, 174, 175, 198], "cute": 8, "pictur": [8, 12, 18, 21, 38], "cat": 8, "coverag": 9, "flatten": [9, 51], "steep": 9, "curv": 9, "eight": 9, "briefli": [9, 205], "discuss": [9, 203], "along": [9, 13, 89, 127], "highlight": 9, "shown": [9, 12, 16], "ye": [9, 58], "jupyt": [9, 15], "notebook": [9, 15], "awesom": [9, 42], "statist": [9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 47, 61, 64, 67, 68, 96, 146, 147, 179, 180, 181, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 201, 202, 203, 204, 205], "gather": [9, 16, 47, 127, 173, 175, 181, 182, 191, 198, 200, 201, 203, 205], "medium": 9, "group": 9, "bori": [9, 12, 127, 153, 200, 201], "becom": [9, 11, 18, 70, 78, 111, 126, 203], "evolv": 9, "proper": [9, 39], "suppos": [9, 203, 205], "focuss": 9, "beyond": [9, 36, 201], "basi": [9, 12, 107], "present": [9, 44, 185, 201], "readm": 9, "intent": 9, "content": 9, "conform": 9, "attempt": 9, "fast": [9, 93, 94, 99, 100, 101, 102, 109, 116, 125, 127, 157], "wave": [9, 93, 94, 109, 112, 113, 157, 172, 173, 198], "rdc": 9, "ration": 9, "asymptot": 9, "fastest": 9, "bayreuth": 9, "modal": 9, "system": [9, 11, 15, 18, 32, 35, 38, 78, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 151, 152, 174, 175, 198, 200, 204], "differenti": [9, 13, 15, 35, 80, 103, 104, 107, 108, 114, 118, 123, 124, 128, 132, 144, 146, 147, 152], "algebra": 9, "exponenti": [9, 129], "monodomain": 9, "cardiac": 9, "electrophysiologi": 9, "helper": [9, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 41, 44, 47, 67, 68, 104, 113, 115, 117, 127, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "tabl": [9, 39, 42, 44], "search": 9, "materi": 10, "scienc": [10, 205], "paraphas": 10, "partner": 10, "flexibl": 10, "run_simple_forcing_verif": 10, "2d": [10, 11, 16, 33, 70, 79, 95, 97, 105, 119, 120, 167, 193, 204], "against": [10, 34], "known": [10, 11, 13, 45, 99, 100, 124, 127], "circl": [10, 96, 97, 99, 100, 101, 102], "shrink": [10, 174, 175, 198], "drive": [10, 96, 101, 102, 205], "vanish": [10, 78], "numer": [10, 11, 12, 18, 33, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 132, 145, 146, 147, 148, 152], "scheme": [10, 11, 33, 34, 35, 36, 70, 71, 78, 79, 105, 106, 150, 151, 152, 153, 202, 205], "constant": [10, 78, 97, 99, 100, 111, 117, 118, 126, 127, 153, 202, 205], "dw": [10, 96, 101, 102, 147], "radiu": [10, 17, 33, 36, 96, 97, 99, 100, 101, 102], "stai": [10, 107], "run_temp_forcing_verif": 10, "temperatur": [10, 124, 129], "run_temp_forcing_refer": 10, "These": [10, 15, 36, 38, 45, 151, 152], "serial": [10, 15, 18, 35, 68, 77, 87, 89, 196, 202, 203, 204, 205], "mimick": 10, "larger": [10, 198, 204], "hpc": [10, 38], "machin": [10, 11, 16, 18, 203], "allencahn_monitor_and_dump": 10, "radii": 10, "dump": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 44], "o": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 36, 173, 175, 191, 195, 196, 198, 203, 205], "allencahn_monitor": 10, "allencahn_dump": 10, "visual": [10, 16, 19, 28, 29, 30, 33, 36, 38, 64, 173, 175, 195, 198], "turn": [10, 201], "field": [10, 13, 47, 86, 90, 127, 180, 185, 200, 201], "png": [10, 12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 64, 173, 175, 195, 196, 198, 205], "visualize_temp": 10, "movi": 10, "run_pysc_ac": 10, "ex": [10, 38], "jobscript": 10, "jureca": [10, 38], "allencahn_mpifft": [10, 92], "problem_class": [10, 12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 49, 51, 60, 65, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "allencahn_temp_mpifft": [10, 92], "thesi": 11, "suffic": [11, 71], "misc": [11, 39], "hookclass_da": 11, "linear_plot": 11, "previous": 11, "npy": 11, "axi": [11, 39, 127, 173, 175, 198], "loglog_plot": 11, "logarithm": 11, "commonli": 11, "semilogy_plot": 11, "y": [11, 35, 39, 101, 102, 103, 106, 115, 119, 122, 173, 175, 198], "simple_da": 11, "analyt": [11, 50, 93, 123, 172, 173, 174, 175, 198], "pendulum": 11, "veri": [11, 12, 13, 14, 16, 19, 34, 51, 108, 151, 178, 180, 198, 199, 200, 202], "solvabl": 11, "synchronous_machin": 11, "attach": [11, 200], "infinit": 11, "bu": 11, "undergo": 11, "torqu": 11, "disturb": 11, "transistor_amplifi": 11, "transistor": 11, "amplifi": 11, "world": [11, 194, 204], "situat": [11, 201], "run_convergence_test": 11, "mention": [11, 15, 33], "run_iteration_test": 11, "behaviour": [11, 71, 124, 150], "residu": [11, 33, 35, 44, 54, 64, 70, 71, 73, 78, 81, 113, 115, 118, 129, 156, 158, 159, 177, 178, 179, 180, 192, 195, 196, 199, 200, 201, 204], "fully_implicit_dae_playground": 11, "arena": 11, "synchronous_machine_playground": 11, "fully_implicit_da": 11, "represent": 11, "aris": [11, 13, 47, 96, 112, 123, 131, 144, 145], "jacobian": [11, 36, 50, 51, 113, 115, 129], "partial_": 11, "singular": [11, 145], "impli": [11, 62, 204], "deriv": [11, 14, 34, 44, 47, 50, 58, 78, 89, 93, 96, 105, 117, 129, 132, 144, 145, 146, 147, 148, 157], "denot": [11, 35, 77, 94, 96, 99, 100, 101, 102, 104, 109, 116, 117, 118, 120, 125, 132], "isol": 11, "picard": [11, 39, 153, 154, 155, 156, 157, 159, 160, 161], "ordinari": [11, 13, 15, 35, 80, 103, 104, 107, 108, 124, 128, 146, 147], "henceforth": 11, "cast": 11, "unknown": [11, 35, 78, 96, 97, 99, 100, 101, 102, 105, 117], "int_0": 11, "tu": 11, "tau": [11, 41, 49, 163, 192, 204], "d": [11, 14, 28, 29, 35, 36, 89, 93, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 115, 116, 117, 118, 119, 122, 124, 126, 128, 130, 131, 144, 147, 191, 203], "tild": 11, "delta": [11, 29, 30, 36, 48, 96, 97, 99, 100, 101, 102, 106, 109, 112, 113, 114, 115, 116, 125, 132], "t_": [11, 107, 124, 127], "t_m": [11, 102], "int_": [11, 48, 114, 118, 132], "discretis": [11, 129, 144], "obviou": [11, 14], "mathbf": [11, 35], "q": [11, 29, 30, 36, 54, 114, 127, 151, 152, 153, 156, 157, 159, 174, 175, 198], "l": [11, 28, 29, 30, 36, 63, 77, 94, 99, 100, 101, 102, 104, 116, 125, 151, 173, 175, 176, 177, 183, 198, 199, 201], "_l": 11, "low": 11, "euler": [11, 35, 36, 105, 150, 151, 153, 154, 157, 159, 161, 188, 202], "_0": 11, "begin": [11, 35, 45, 127, 147, 178, 180, 199, 200, 203], "pmatrix": [11, 147], "t_1": 11, "dot": [11, 27, 34], "t_2": 11, "clear": [11, 200], "repeatedli": 11, "recalcul": [11, 13], "reformul": [11, 118, 132], "carri": [11, 45], "u_": [11, 110], "familiar": 11, "scipi": [11, 14, 48, 51, 93, 96, 97, 99, 100, 124, 125, 128, 129, 130, 131, 147, 174, 175, 198], "3rd": 12, "harmon": [12, 25, 117], "oscil": [12, 14, 25, 117, 131], "henon": [12, 25], "heil": [12, 25, 122], "hamiltonian_output": [12, 25, 32], "monitor": [12, 13, 203], "deviat": [12, 180, 181, 182, 185, 200, 201], "exact": [12, 16, 19, 26, 27, 28, 34, 36, 51, 77, 78, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 145, 146, 147, 148, 174, 175, 177, 178, 180, 182, 184, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "hamiltonian": [12, 21, 25, 32, 110, 117, 122, 126], "100": [12, 16, 19, 25, 29, 30, 32, 36, 89, 96, 97, 103, 104, 108, 112, 114, 115, 116, 123, 124, 128, 131, 178, 180, 181, 182, 185, 199, 200, 201], "processor": [12, 18, 21, 32, 35, 189, 192, 193, 194, 203, 204], "full": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 42, 51, 111, 114, 115, 125, 129, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "simple_problem": [12, 25], "defaultdict": [12, 21, 25, 32], "plot_help": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 55], "plt_helper": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36], "stats_help": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 55, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "get_sort": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 55, 61, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "filter_stat": [12, 21, 25, 32, 55, 61, 179, 200], "controller_class": [12, 16, 19, 21, 25, 26, 28, 29, 30, 32, 34, 36, 65, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "harmonicoscil": [12, 25, 92], "harmonic_oscil": [12, 25, 92, 117], "henonheil": [12, 25, 92], "henon_heil": [12, 25, 92, 122], "sweeper_class": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 49, 65, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "transfer_class": [12, 21, 25, 26, 27, 32, 34, 65, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205], "transferparticles_nocoars": [12, 21, 25, 32, 162, 185, 201], "particles_to_particl": [12, 21, 25, 32, 162, 171, 185, 201], "setup_harmon": [12, 25], "everyth": [12, 21, 25, 32, 42, 132, 176, 183, 199, 201], "dict": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 43, 44, 45, 47, 53, 60, 61, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 95, 104, 110, 124, 127, 144, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "controller_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 44, 67, 68, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "level_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 49, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "restol": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "1e": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 62, 95, 96, 97, 103, 104, 105, 108, 112, 113, 115, 116, 119, 120, 123, 124, 125, 129, 131, 144, 146, 147, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "sweeper_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 49, 70, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "num_nod": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 39, 42, 50, 70, 151, 152, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "initial_guess": [12, 16, 19, 21, 25, 26, 27, 32, 34, 151, 152, 178, 180, 193, 194, 197, 199, 200, 204, 205], "zero": [12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 36, 51, 78, 104, 107, 129, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "problem_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 49, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "amp": [12, 25, 117], "step_param": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "maxit": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 39, 81, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "50": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 35, 36, 132, 179, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "hook_class": [12, 21, 25, 28, 32, 36, 178, 180, 181, 185, 197, 199, 200, 201, 205], "logger_level": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 70, 178, 179, 180, 181, 184, 185, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "fill": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 54, 127, 150, 151, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "easi": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 36, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "hierarchi": [12, 21, 25, 28, 32, 36, 67, 68, 156, 177, 178, 179, 180, 181, 183, 185, 186, 192, 199, 200, 204], "space_transfer_class": [12, 16, 19, 21, 25, 26, 27, 32, 34, 41, 53, 163, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 197, 201, 202, 203, 204, 205], "setup_henonheil": [12, 25], "run_simul": [12, 21, 25, 32, 179, 181, 193, 197, 200, 204, 205], "prob": [12, 15, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 49, 113, 115, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "arg": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 36, 51, 75, 89, 95, 172, 173, 174, 175, 177, 189, 191, 192, 193, 198, 199, 203, 204], "str": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 43, 44, 45, 48, 50, 54, 57, 58, 59, 61, 62, 64, 70, 71, 74, 77, 78, 79, 80, 95, 99, 100, 101, 102, 114, 118, 120, 129, 132, 144, 150, 156, 159, 182, 191, 192, 194, 201, 203, 204], "t0": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 44, 67, 68, 114, 118, 174, 175, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "tend": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 44, 45, 67, 68, 72, 78, 83, 84, 174, 175, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "num_proc": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 67, 68, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "maxmeanit": [12, 25, 32], "elif": [12, 16, 19, 25, 26, 27, 28, 29, 30, 32, 34, 36, 192, 197, 204, 205], "instanti": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 44, 45, 51, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "finest": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 53, 67, 68, 71, 77, 78, 83, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "uinit": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "u_exact": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 145, 146, 147, 148, 173, 174, 175, 177, 178, 179, 180, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "uend": [12, 16, 19, 21, 25, 28, 29, 30, 32, 34, 36, 49, 153, 154, 155, 156, 157, 159, 160, 161, 174, 175, 177, 178, 179, 180, 181, 185, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205], "stat": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 44, 47, 61, 64, 67, 68, 178, 179, 180, 181, 185, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205], "u0": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 44, 53, 67, 68, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 123, 124, 125, 127, 128, 129, 130, 131, 132, 136, 142, 144, 145, 146, 147, 148, 174, 175, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "filter": [12, 16, 19, 21, 25, 27, 28, 29, 30, 32, 34, 36, 61, 179, 180, 181, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 205], "iter_count": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 179, 187, 188, 189, 191, 192, 193, 194, 195, 197, 200, 202, 203, 204, 205], "niter": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 51, 177, 179, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "sortbi": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 61, 179, 180, 181, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "item": [12, 16, 19, 21, 25, 27, 28, 32, 34, 36, 61, 179, 180, 181, 185, 187, 188, 189, 191, 192, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205], "2f": [12, 16, 19, 21, 25, 28, 32, 36, 177, 179, 182, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205], "2i": [12, 16, 19, 21, 25, 28, 32, 36, 173, 175, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205], "mean": [12, 13, 14, 15, 16, 18, 19, 21, 25, 28, 32, 36, 77, 78, 84, 89, 104, 107, 119, 129, 156, 187, 188, 192, 193, 194, 197, 202, 204, 205], "rang": [12, 16, 19, 21, 25, 28, 29, 30, 32, 35, 36, 104, 113, 129, 172, 173, 175, 182, 183, 186, 187, 188, 192, 193, 194, 197, 198, 201, 202, 204, 205], "ptp": [12, 16, 19, 21, 25, 28, 32, 36, 187, 188, 192, 193, 194, 202, 204], "max": [12, 16, 19, 21, 25, 28, 32, 36, 73, 95, 120, 173, 175, 187, 188, 192, 193, 194, 195, 198, 202, 204, 205], "min": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 173, 175, 183, 187, 188, 192, 193, 194, 195, 198, 201, 202, 204, 205], "int": [12, 16, 19, 21, 25, 28, 32, 36, 42, 45, 47, 48, 49, 50, 58, 63, 67, 71, 72, 78, 83, 87, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 127, 129, 131, 132, 144, 145, 146, 147, 153, 156, 157, 182, 187, 188, 192, 193, 194, 201, 202, 204], "argmax": [12, 16, 19, 21, 25, 28, 32, 36, 187, 188, 192, 193, 194, 202, 204], "argmin": [12, 16, 19, 21, 25, 28, 32, 36, 187, 188, 192, 193, 194, 202, 204], "std": [12, 16, 19, 21, 25, 28, 32, 35, 36, 187, 188, 192, 193, 194, 202, 204], "var": [12, 16, 19, 21, 25, 28, 32, 36, 187, 188, 192, 193, 194, 202, 204], "float": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 36, 42, 44, 45, 49, 50, 51, 53, 57, 58, 62, 71, 72, 75, 78, 83, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 187, 188, 189, 192, 193, 194, 202, 203, 204], "assert": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "fname": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 64, 173, 175, 178, 180, 189, 190, 191, 194, 195, 198, 199, 200, 203, 204, 205], "dat": [12, 16, 19, 21, 25, 32], "wb": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36], "close": [12, 16, 19, 21, 25, 26, 27, 28, 32, 34, 36, 71, 83, 144, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "isfil": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 173, 175, 195, 196, 198, 205], "show_result": [12, 16, 19, 21, 25, 32], "cwd": [12, 16, 19, 21, 25, 28, 32, 36, 191, 203], "rb": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36], "extract": [12, 21, 25, 32, 61], "extract_stat": [12, 21, 25, 32], "err_hamiltonian": [12, 21, 25, 32], "append": [12, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 63, 173, 175, 198], "mpl": [12, 16, 19, 21, 25, 28, 32, 36], "setup_mpl": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 55, 57], "newfig": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 55, 57], "textwidth": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 57], "238": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36], "96": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36], "89": [12, 21, 25, 28, 29, 30, 32, 36], "rearrang": [12, 21, 25, 32], "err_ham": [12, 21, 25, 32], "ham": [12, 21, 25, 32, 110, 117, 122, 126], "plt": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 173, 175, 198], "semilogi": [12, 21, 25, 32], "lw": [12, 21, 25, 28, 29, 30, 32, 36], "label": [12, 21, 25, 28, 29, 30, 32, 36, 173, 175, 198], "7e": [12, 25], "08": [12, 16, 19, 25, 26, 27, 29, 30, 34, 36, 62, 97, 108, 111, 129, 177, 178, 179, 180, 182, 184, 192, 193, 194, 197, 199, 200, 201, 204, 205], "larg": [12, 13, 18, 21, 25, 26, 27, 32, 33, 34, 83, 195, 196, 198, 205], "xlabel": [12, 21, 25, 28, 29, 30, 32, 36, 173, 175, 198], "ylabel": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 173, 175, 198], "legend": [12, 21, 25, 28, 29, 30, 32, 36, 173, 175, 198], "loc": [12, 21, 25, 28, 29, 30, 32, 36, 173, 175, 198], "center": [12, 16, 19, 21, 25, 26, 27, 29, 30, 32, 34, 36, 95, 96, 112, 120, 129, 144, 178, 180, 185, 188, 197, 199, 200, 201, 202, 205], "bbox_to_anchor": [12, 21, 25, 32], "_hamiltonian": [12, 25, 32], "savefig": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 55, 57, 173, 175, 198], "pdf": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36, 125, 173, 175, 198], "pgf": [12, 16, 19, 21, 25, 28, 29, 30, 32, 36], "__name__": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "__main__": [12, 16, 19, 21, 25, 26, 27, 28, 29, 30, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "slightli": [12, 33, 124, 200, 201], "movement": 12, "planet": [12, 111, 126], "acceler": [12, 51, 70, 86, 90, 110, 111, 117, 122, 126, 127], "due": [12, 17, 18, 33, 35, 118, 201, 203, 204], "gravit": [12, 111, 126], "outersolarsystem": [12, 32, 92], "six": [12, 126], "outer": [12, 32, 36, 126], "sun": [12, 107, 111, 126], "mass": [12, 51, 111, 114, 117, 118, 126, 127, 132, 159, 192, 204], "inner": [12, 42, 172, 173, 198], "jupit": [12, 126], "saturn": [12, 126], "uranu": [12, 126], "neptun": [12, 126], "pluto": [12, 126], "fullsolarsystem": [12, 32, 92], "earth": [12, 111], "moon": [12, 111], "15": [12, 14, 26, 27, 34, 45, 70, 173, 180, 181, 183, 186, 188, 193, 196, 198, 200, 201, 202, 204, 205], "per": [12, 16, 19, 29, 30, 35, 36, 58, 90, 144], "solar_system": [12, 32], "mpl_toolkit": [12, 32], "mplot3d": [12, 32], "axes3d": [12, 32], "full_solar_system": [12, 32, 92, 111], "outer_solar_system": [12, 32, 92, 111, 126], "setup_outer_solar_system": [12, 32], "spread": [12, 26, 27, 32, 34, 45, 67, 68, 72, 82, 83, 85, 178, 180, 199, 200], "sun_onli": [12, 32, 111, 126], "setup_full_solar_system": [12, 32], "10000": [12, 21, 32, 95, 120, 144, 178, 199], "1000": [12, 21, 32, 107, 109, 129, 146, 147], "19": [12, 32, 151, 187, 193, 202, 204], "_out": [12, 32], "txt": [12, 21, 26, 27, 28, 32, 34, 36, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "w": [12, 16, 19, 21, 26, 27, 28, 32, 34, 36, 41, 50, 105, 114, 129, 132, 147, 163, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 185, 186, 187, 188, 189, 191, 195, 196, 198, 199, 200, 201, 202, 203, 205], "4e": [12, 16, 19, 26, 27, 28, 32, 34, 36, 174, 179, 193, 194, 197, 198, 200, 204, 205], "fig": [12, 32, 33, 39, 51, 106], "figur": [12, 14, 17, 18, 28, 29, 30, 32, 35, 36, 51, 57, 62, 106, 173, 175, 198, 205], "ax": [12, 28, 32, 36, 39, 173, 175, 198], "add_subplot": [12, 32], "111": [12, 32], "3d": [12, 32], "npart": [12, 21, 32, 110, 127, 180, 181, 185, 200, 201], "ndim": [12, 32, 95, 116, 120, 144, 197, 205], "nstep": [12, 21, 32, 187, 188, 197, 202, 205], "po": [12, 21, 32, 90, 127, 180, 200], "idx": [12, 21, 32], "enumer": [12, 21, 32], "wrong": [12, 16, 19, 32, 67, 68, 191, 203], "dimens": [12, 32, 58, 88, 89, 90, 95, 97, 105, 116, 119, 120, 125, 129, 132, 144, 197, 201, 205], "_posit": [12, 32], "06": [12, 16, 19, 26, 27, 32, 34, 95, 120, 129, 151, 173, 177, 178, 179, 180, 181, 187, 193, 198, 199, 200, 202, 204], "74": [12, 32], "75": [12, 26, 27, 32, 34, 187, 188, 189, 190, 191, 195, 196, 197, 202, 203, 205], "56": [12, 32, 178, 199], "18": [12, 26, 27, 32, 34, 39, 193, 196, 204, 205], "02": [12, 26, 27, 32, 34, 94, 105, 151, 180, 193, 200, 204], "37": [12, 32], "40": [12, 32, 80, 179, 193, 196, 200, 204, 205], "54": [12, 32], "famou": 12, "fput": [12, 21, 110], "fermipastaulamtsing": [12, 21, 92], "limit": [12, 17, 36, 39, 71, 72, 75, 83, 84, 173, 175, 194, 198, 204], "until": [12, 17, 33, 70, 107, 177, 189, 199, 203], "refer": [12, 13, 14, 15, 16, 19, 41, 45, 51, 52, 62, 77, 80, 83, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 125, 127, 128, 129, 132, 146, 147, 151, 163], "fermi_pasta_ulam_tsing": [12, 21, 92, 110], "hamiltonian_and_energy_output": [12, 21], "setup_fput": [12, 21], "12": [12, 21, 27, 28, 34, 36, 95, 96, 97, 103, 112, 116, 120, 123, 129, 130, 144, 146, 147, 151, 173, 175, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2048": [12, 21, 110], "alpha": [12, 21, 50, 104, 106, 110, 127, 136, 142, 150], "energy_mod": [12, 21, 110], "reproduc": [12, 14, 15, 21, 38], "scholarpedia": [12, 21, 110], "articl": [12, 21, 110, 111], "ulam_nonlinear_lattice_oscil": [12, 21, 110], "fput_out": [12, 21], "runtim": [12, 17, 21, 33, 75, 201], "timing_run": [12, 16, 19, 21, 179, 192, 193, 194, 197, 200, 204, 205], "took": [12, 21, 177, 197, 199, 205], "4f": [12, 16, 19, 21, 192, 193, 194, 197, 204, 205], "46": [12, 21], "6e": [12, 21, 172, 174, 176, 178, 184, 185, 198, 199, 201], "fput_hamiltonian": [12, 21], "energy_step": [12, 21], "mode": [12, 21, 77, 110], "th": [12, 21, 95, 104, 110, 111, 120, 126, 127], "fput_energi": [12, 21], "16": [12, 21, 26, 27, 34, 95, 119, 120, 144, 173, 175, 180, 181, 187, 188, 193, 196, 197, 198, 200, 202, 204, 205], "fput_posit": [12, 21], "83": [12, 21], "475": [12, 21], "42": [12, 21], "47": [12, 21], "5941": [12, 21], "deal": [13, 174, 175, 191, 198, 199, 200, 201, 203], "dc": 13, "microgrid": 13, "techniqu": 13, "dynam": [13, 33, 104, 105, 108, 185, 201], "discontinu": [13, 104], "prove": [13, 18], "sign": [13, 104, 108, 132], "restart": [13, 18, 45, 47, 67, 68, 71, 72, 82, 83, 105, 179, 200], "occur": [13, 15, 18, 108], "subinterv": [13, 104], "inher": 13, "restrict": [13, 41, 49, 52, 53, 63, 163, 164, 165, 166, 167, 168, 169, 170, 171, 192, 201, 204], "regard": 13, "consumpt": 13, "household": 13, "voltag": [13, 104, 107, 128], "smaller": [13, 14, 146, 147], "target": [13, 18, 45, 53, 67, 87, 89, 90, 91], "duti": [13, 107], "cycl": [13, 107], "typic": [13, 18, 35, 108, 202], "behav": 13, "seen": [13, 15, 35, 107, 112, 113, 201], "capacitor": [13, 104, 107, 128], "coil": 13, "settl": 13, "background": 13, "serv": [13, 104, 128], "transmiss": [13, 128], "transport": 13, "domain": [13, 18, 33, 35, 93, 96, 99, 100, 101, 102, 105, 106, 107, 112, 113, 129, 198], "illustr": [13, 104], "circuit": [13, 104], "guettel": 14, "klein": 14, "equidist": [14, 36, 42, 63], "barycentricinterpol": 14, "mybarycentricinterpol": 14, "blend": 14, "rest": [14, 96, 97, 199], "resolut": [14, 95, 112, 113, 114, 115, 116, 118, 119, 120, 125, 129, 132, 144, 201], "van": [14, 15, 131, 146, 147], "der": [14, 15, 131, 146, 147], "pol": [14, 15, 131], "vanderpol_refer": 14, "vari": [14, 35, 70, 200, 203], "maximum": [14, 44, 71, 72, 73, 75, 96, 97, 103, 104, 105, 112, 113, 115, 119, 123, 124, 129, 131, 144, 145, 146, 147, 151, 152, 177, 199], "vanderpol_error_test": 14, "straightforward": [14, 199, 200, 205], "vanderpol_mlsdc_pfasst_test": 14, "20": [14, 28, 29, 30, 36, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 192, 194, 198, 199, 200, 201, 202, 204], "bitflip": 15, "factor": [15, 18, 71, 76, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148], "radiat": 15, "conveni": [15, 49, 198], "latest": [15, 101, 102, 116], "strategi": [15, 36, 201, 205], "adjust": [15, 39, 82, 84, 173, 175, 198], "product": [15, 36, 118, 132, 165, 169, 198], "hot": [15, 71, 80], "rod": [15, 71, 80], "design": 15, "pure": 15, "detector": [15, 80], "soft": [15, 18, 80], "fault": [15, 18, 80], "tri": 15, "recov": 15, "lorenz": [15, 51, 92, 147], "attractor": [15, 124], "thorough": [15, 198], "duplic": 15, "pilin": [15, 92], "electr": [15, 35, 90, 127], "good": [15, 18, 202, 204], "sweep": [15, 18, 34, 35, 38, 47, 49, 54, 67, 68, 71, 74, 77, 78, 80, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 178, 180, 183, 199, 200, 201, 205], "last": [15, 45, 71, 77, 78, 79, 83, 85, 151, 152, 156, 158, 201, 202], "higher": [15, 50, 51, 78, 114, 118, 132, 151, 172, 176, 184, 192, 198, 199, 201, 204], "embed": [15, 71, 73, 76, 77, 79, 81, 151], "extrapol": [15, 71, 79], "li": 15, "top": [15, 18, 51, 106, 124], "fewer": [15, 71, 201], "block": [15, 18, 26, 27, 34, 45, 47, 64, 67, 68, 71, 72, 77, 83, 87, 89, 90, 91, 192, 203, 204, 205], "seidel": [15, 18, 71, 77], "nake": 15, "ey": [15, 105, 174, 175, 198], "navig": 15, "mpirun": [15, 35, 191, 193, 203, 204], "work_precis": 15, "fault_stat": 15, "run_vdp": 15, "run_quench": 15, "run_ac": 15, "run_schroeding": 15, "paper_plot": 15, "semi": [16, 19, 33, 77, 96, 97, 99, 100, 101, 102, 113, 115, 116, 125, 129], "inexact": [16, 18, 19, 28, 36, 69, 70], "isdc": 16, "comparison": 16, "win": 16, "sdc_showdown": [16, 19], "sdc_timing_fish": [16, 19], "pickl": [16, 19, 28, 29, 30, 36], "generalizedfisher_1d_petsc": [16, 19, 92], "petsc_fisher_multiimplicit": [16, 19, 92, 113], "petsc_fisher_fullyimplicit": [16, 19, 92, 113], "petsc_fisher_semiimplicit": [16, 19, 92, 113], "generic_implicit": [16, 19, 26, 27, 28, 29, 34, 36, 149, 156, 176, 183, 184, 188, 189, 196, 197, 199, 201, 202, 203, 205], "imex_1st_ord": [16, 19, 149, 158, 159, 177, 178, 179, 186, 187, 192, 193, 194, 197, 199, 200, 202, 204, 205], "multi_implicit": [16, 19, 149], "setup_paramet": [16, 19], "relev": [16, 19, 45, 199, 200], "nsweep": [16, 19, 26, 27, 34, 153, 157, 178, 180, 193, 194, 197, 199, 200, 204, 205], "q1": [16, 19, 160], "lu": [16, 19, 26, 27, 28, 29, 34, 36, 176, 183, 184, 187, 188, 189, 193, 194, 196, 197, 199, 201, 202, 203, 204, 205], "q2": [16, 19, 160], "qi": [16, 19, 26, 27, 28, 29, 30, 34, 36, 151, 152, 155, 157, 176, 178, 180, 183, 184, 187, 188, 189, 193, 194, 196, 197, 199, 200, 201, 202, 203, 204, 205], "nu": [16, 19, 26, 27, 28, 29, 30, 34, 36, 94, 97, 99, 100, 112, 113, 118, 119, 120, 132, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "nvar": [16, 19, 26, 27, 28, 29, 30, 34, 36, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 112, 113, 115, 116, 120, 125, 129, 144, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "2049": [16, 19], "lambda0": [16, 19, 28, 29, 30, 36, 112, 113], "interv": [16, 19, 28, 29, 30, 36, 42, 48, 49, 78, 96, 112, 113, 127, 153, 154, 155, 156, 157, 158, 159, 160, 161, 174, 175, 177, 179, 198, 199, 200], "nlsol_tol": [16, 19, 113, 115], "nlsol_maxit": [16, 19, 113, 115], "lsol_tol": [16, 19, 113, 115], "lsol_maxit": [16, 19, 113, 115], "space_transfer_param": [16, 19, 26, 27, 34, 41, 52, 53, 163, 182, 183, 184, 186, 187, 188, 189, 194, 196, 197, 201, 202, 203, 204, 205], "finter": [16, 19, 185, 192, 201, 204], "mesh_to_mesh_petsc_dmda": [16, 19, 162, 170, 194, 204], "run_sdc_vari": [16, 19], "bool": [16, 19, 42, 44, 45, 47, 49, 58, 61, 63, 70, 71, 72, 73, 74, 75, 78, 79, 80, 83, 96, 101, 102, 104, 108, 111, 112, 116, 123, 125, 126, 129, 131, 145, 146, 147, 156, 158, 189, 192, 193, 203, 204], "nor": [16, 19], "incomplet": [16, 19], "stuff": [16, 19, 45, 78], "uex": [16, 19, 26, 27, 28, 34, 36, 177, 178, 180, 184, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205], "err": [16, 19, 28, 36, 172, 173, 174, 175, 176, 177, 178, 180, 187, 188, 189, 191, 192, 193, 194, 195, 198, 199, 200, 202, 203, 204, 205], "ab": [16, 19, 26, 28, 34, 36, 172, 173, 175, 177, 178, 180, 181, 182, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205], "count": [16, 17, 19, 26, 27, 29, 30, 34, 36, 44, 45, 51, 96, 104, 108, 124, 127, 131, 145, 179, 188, 189, 191, 196, 199, 200, 201, 202, 203, 205], "snes_itercount": [16, 19, 115], "ksp_itercount": [16, 19, 119], "snes_ncal": [16, 19, 115], "ksp_ncall": [16, 19, 119], "sec": [16, 19, 192, 193, 194, 204], "pde": [16, 18, 19, 116, 132, 194, 204], "2e": [16, 19, 172, 176, 178, 194, 198, 199, 204], "05": [16, 19, 27, 28, 34, 35, 36, 62, 105, 132, 177, 178, 179, 180, 181, 182, 189, 193, 195, 199, 200, 201, 203, 204, 205], "match": [16, 19, 80, 194, 204], "toler": [16, 19, 33, 35, 51, 62, 70, 71, 73, 74, 80, 81, 95, 96, 97, 103, 104, 105, 112, 113, 115, 119, 120, 123, 124, 129, 131, 144, 145, 146, 147, 192, 194, 200, 201, 204, 205], "pkl": [16, 19, 28, 29, 30, 36], "xcoord": [16, 19], "sorted_data": [16, 19], "revers": [16, 19, 175, 198], "tup": [16, 19, 191, 203], "height": [16, 19, 57], "bar": [16, 19], "xtick": [16, 19, 28, 36, 173, 175, 198], "rotat": [16, 19], "save": [16, 19, 28, 29, 30, 36, 39, 49, 62, 173, 175, 198], "beautifi": [16, 19, 28, 36, 173, 175, 198], "driver": [16, 19, 67, 68], "timings_sdc_variants_fish": [16, 19], "sdc_timing_grayscott": [16, 19], "grayscott_2d_petsc_period": [16, 19, 92], "petsc_grayscott_multiimplicit": [16, 19, 92, 115], "petsc_grayscott_fullyimplicit": [16, 19, 92, 115], "petsc_grayscott_semiimplicit": [16, 19, 92, 115], "dv": [16, 19, 114, 115, 116, 127, 147], "01": [16, 19, 26, 28, 29, 30, 34, 36, 105, 107, 114, 116, 132, 151, 178, 180, 181, 193, 199, 200, 204], "09": [16, 19, 29, 30, 36, 114, 116, 124, 125, 131, 177, 178, 179, 180, 184, 188, 197, 199, 200, 201, 202, 205], "086": [16, 19, 114, 116, 180, 200], "128": [16, 19, 26, 27, 34, 96, 97, 99, 100, 101, 102, 118, 129, 132, 188, 192, 193, 202, 204], "gs_refer": [16, 19], "viewer": [16, 19], "createbinari": [16, 19], "3e": [16, 19, 26, 34, 181, 200], "run_refer": [16, 19], "view": [16, 19, 77, 89], "timings_sdc_variants_grayscott": [16, 19], "heat": [17, 29, 30, 34, 36, 118, 119, 120, 129, 144, 151, 187, 192, 197, 200, 201, 202, 204, 205], "advect": [17, 18, 26, 27, 29, 30, 34, 36, 93, 94, 95, 105, 144, 188, 197, 205], "stiff": [17, 26, 27, 33, 34, 35, 36, 51, 131, 132, 146, 147, 202], "conv_test_to0": 17, "conv_test_toinf": 17, "smoother": [17, 205], "eigenvalu": 17, "smoother_specrad_heatmap": 17, "heatmap": 17, "pfasst_conv_test": 17, "pfasst_conv_linf": 17, "diffus": [17, 26, 27, 34, 35, 94, 99, 100, 101, 102, 106, 112, 113, 114, 115, 116, 118, 119, 120, 125, 132, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "teh": [17, 163], "aim": 18, "whatev": [18, 45, 51, 70, 71, 72, 74, 78, 80, 82, 198, 199], "clemson": 18, "univers": [18, 110], "argonn": 18, "laboratori": 18, "forschungszentrum": 18, "juelich": 18, "umbrella": 18, "jlesc": 18, "web": [18, 113, 115, 119], "ampl": 18, "opportun": 18, "sebastian": [18, 39], "goetschel": 18, "martin": 18, "weiser": 18, "hardwar": 18, "trend": 18, "memori": [18, 78], "bound": 18, "resourc": [18, 113, 115, 119], "perhap": 18, "wise": 18, "spent": 18, "access": [18, 52, 68, 89, 165, 166, 167, 168, 169, 173, 175, 177, 198, 199, 200, 202], "interconnect": 18, "slower": 18, "pint": 18, "concurr": 18, "effici": [18, 71, 82], "ideal": 18, "candid": 18, "benefit": 18, "sum": [18, 36, 56], "evalu": [18, 42, 50, 51, 54, 78, 93, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 201], "intermedi": [18, 78, 108], "substanti": 18, "random": [18, 99, 100], "decomposit": [18, 36], "allot": 18, "expens": [18, 201], "lossi": 18, "greater": [18, 104], "lossless": 18, "abl": 18, "afford": 18, "desir": [18, 71, 72, 77, 83], "earli": 18, "trigger": 18, "costli": [18, 201], "notic": [18, 71], "endless": 18, "progress": 18, "accordingli": [18, 82], "measur": [18, 200], "reduct": [18, 28, 36], "footprint": 18, "manag": [18, 49, 150], "underwood": 18, "sz3": 18, "compressor": 18, "docker": 18, "togeth": [18, 192, 199, 204], "immedi": [18, 77, 205], "decompress": 18, "everi": [18, 45, 70, 78, 79, 81, 82, 83], "captur": 18, "downsid": 18, "verifi": [18, 35, 38], "stall": 18, "dash": 18, "repeat": 18, "showcas": 18, "suffer": 18, "establish": 18, "remain": [18, 198], "manner": 18, "benefici": 18, "fermi": [21, 110], "pasta": [21, 110], "ulam": [21, 110], "tsingou": [21, 110], "plotgmrescounter_boussinesq": [23, 33], "compare_to_matrixbas": [26, 34], "pathlib": [26, 27, 34, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "advectionequation_nd_fd": [26, 27, 29, 30, 34, 36, 92, 188, 197, 202, 205], "advectionnd": [26, 27, 29, 30, 34, 36, 92, 95, 188, 197, 202, 205], "heatequation_nd_fd": [26, 27, 29, 30, 34, 36, 92, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 196, 197, 198, 199, 200, 201, 202, 203, 205], "heatnd_unforc": [26, 27, 29, 30, 34, 36, 92, 120, 172, 173, 174, 175, 176, 182, 183, 184, 189, 196, 198, 199, 201, 203, 205], "testequation_0d": [26, 27, 34, 92], "testequation0d": [26, 27, 34, 92, 130, 148], "transfermesh": [26, 27, 34, 162, 182, 183, 184, 186, 187, 188, 189, 196, 197, 201, 202, 203, 205], "mesh_to_mesh": [26, 27, 34, 162, 165, 169, 182, 183, 184, 186, 187, 188, 189, 196, 197, 201, 202, 203, 205], "transfermesh_nocoars": [26, 27, 34, 162, 197, 205], "mesh_to_mesh_nocoars": [26, 27, 34], "controller_matrix_nonmpi": [26, 27, 34], "diffusion_setup": [26, 27, 34], "par": [26, 27, 34, 40, 45], "trick": [26, 34, 36, 96, 127, 187, 193, 194, 197, 202, 204, 205], "activ": [26, 34, 35, 67, 68, 70, 72, 78, 83, 178, 180, 187, 189, 193, 194, 197, 199, 200, 202, 203, 204, 205], "coeffici": [26, 27, 34, 50, 78, 94, 104, 107, 118, 119, 120, 123, 128, 132, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "freq": [26, 27, 29, 30, 34, 36, 94, 95, 119, 120, 144, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "frequenc": [26, 27, 34, 95, 105, 107, 119, 120, 144, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "127": [26, 27, 34, 96, 112, 116], "63": [26, 29, 30, 34, 36, 189, 196, 203, 205], "degre": [26, 27, 29, 30, 34, 36, 58, 93, 112, 114, 115, 116, 118, 132, 144, 148, 172, 174, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 194, 198, 199, 200, 201, 202, 203, 204], "freedom": [26, 27, 29, 30, 34, 36, 58, 93, 112, 114, 115, 116, 118, 132, 144, 172, 174, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 194, 198, 199, 200, 201, 202, 203, 204], "bc": [26, 27, 29, 30, 34, 36, 58, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 116, 118, 119, 120, 123, 124, 125, 128, 129, 130, 131, 144, 145, 146, 147, 148, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 196, 197, 198, 199, 200, 201, 202, 203, 205], "dirichlet": [26, 27, 29, 30, 34, 36, 95, 96, 105, 114, 118, 119, 120, 144, 165, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 189, 196, 198, 199, 200, 201, 202, 203, 205], "rorder": [26, 27, 34, 182, 183, 184, 186, 187, 188, 189, 194, 196, 197, 201, 202, 203, 204, 205], "iorder": [26, 27, 34, 182, 183, 184, 186, 187, 188, 189, 194, 196, 197, 201, 202, 203, 204, 205], "all_to_don": [26, 34, 178, 180, 189, 199, 200, 203], "advection_setup": [26, 27, 34], "64": [26, 27, 29, 30, 34, 36, 102, 188, 192, 197, 202, 204, 205], "stencil_typ": [26, 27, 29, 30, 34, 36, 58, 95, 120, 129, 144, 178, 188, 197, 199, 202, 205], "testequation_setup": [26, 34], "1j": [26, 27, 34], "whole": [26, 27, 34, 39, 193, 199, 200, 204], "ilim_left": [26, 27, 34], "ilim_right": [26, 27, 34], "rlim_left": [26, 27, 34], "rlim_right": [26, 27, 34], "ilam": [26, 27, 34], "logspac": [26, 27, 34], "rlam": [26, 27, 34], "rl": [26, 27, 34, 107, 128], "il": [26, 27, 34], "propag": [26, 27, 33, 129], "compare_control": [26, 27, 34], "handler": [26, 27, 34], "testequ": [26, 27, 34], "valueerror": [26, 27, 34], "vali": [26, 27, 34], "nwork": [26, 27, 34], "controller_mat": [26, 34], "controller_nomat": [26, 34], "uend_mat": [26, 27, 34], "stats_mat": [26, 27, 34], "uend_nomat": [26, 34], "stats_nomat": [26, 34], "err_mat": [26, 34], "err_nomat": [26, 34], "mat": [26, 27, 34, 113, 115], "nomat": [26, 34], "convert": [26, 34, 107, 179, 181, 185, 196, 200, 201, 205], "iter_counts_mat": [26, 27, 34], "iter_counts_nomat": [26, 34], "par_list": [26, 27, 34], "1e02": [26, 27, 34], "mkdir": [26, 27, 34, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "parent": [26, 27, 34, 47, 132, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "exist_ok": [26, 27, 34, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "comparison_matrix_vs_nomat_detail": [26, 34], "0e": [26, 27, 34], "0681e": [26, 34], "07": [26, 34, 177, 178, 179, 180, 185, 189, 190, 191, 192, 193, 196, 197, 199, 200, 201, 203, 204, 205], "1102e": [26, 34], "0169e": [26, 34], "04": [26, 34, 96, 97, 99, 100, 101, 102, 151, 172, 174, 176, 177, 178, 179, 180, 187, 188, 193, 194, 198, 199, 200, 202, 204], "4409e": [26, 34, 197, 205], "00": [26, 27, 28, 34, 36, 180, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205], "8573e": [26, 34], "1781e": [26, 34], "9363e": [26, 34], "4433e": [26, 34], "2887e": [26, 34], "7511e": [26, 34], "22": [26, 34, 144], "0000e": [26, 27, 34, 197, 205], "3996e": [26, 34], "17": [26, 34, 36, 188, 193, 202, 204], "7992e": [26, 34], "0019e": [26, 34], "compare_to_propag": [27, 34], "scalar_equation_setup": [27, 34], "equal": [27, 34, 78, 104, 113, 115, 119], "prescrib": [27, 33, 34, 199], "prop": [27, 34], "build_propagation_matrix": [27, 34], "err_prop_ex": [27, 34], "linalg": [27, 34, 174, 175, 180, 198, 200], "norm": [27, 33, 34, 75, 174, 175, 180, 198, 200], "err_mat_ex": [27, 34], "err_mat_prop": [27, 34], "comparison_matrix_vs_propagator_detail": [27, 34], "2542e": [27, 34], "0509e": [27, 34], "6141e": [27, 34], "03": [27, 28, 34, 36, 129, 177, 178, 179, 180, 185, 193, 199, 200, 201, 204], "7400e": [27, 34], "6858e": [27, 34], "2878e": [27, 34], "3515e": [27, 34], "8462e": [27, 34], "6312e": [27, 34], "8449e": [27, 34], "21": [27, 34, 188, 202], "4603e": [27, 34], "0384e": [27, 34], "4674e": [27, 34], "parallelsdc": [28, 29, 30, 36], "nonlinear_playground": [28, 36], "generalizedfisher_1d_fd_implicit_jac": [28, 36], "generalized_fisher_jac": [28, 36], "linearized_implicit_fixed_parallel": [28, 36], "linearized_implicit_fixed_parallel_prec": [28, 36], "linearized_implicit_parallel": [28, 36], "option": [28, 36, 48, 71, 77, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 129, 130, 131, 132, 144, 145, 146, 147, 205], "255": [28, 36, 184, 187, 201, 202], "newton_maxit": [28, 29, 30, 36, 96, 97, 103, 104, 108, 112, 116, 123, 124, 129, 131, 145, 146, 147, 197, 205], "newton_tol": [28, 29, 30, 36, 81, 96, 97, 103, 104, 108, 112, 116, 123, 124, 129, 131, 145, 146, 147, 197, 205], "fixed_time_in_jacobian": [28, 36], "sweeper_list": [28, 36], "parallelsdc_nonlinear_out": [28, 36], "686e": [28, 36], "xvalu": [28, 29, 30, 36, 94, 96, 97, 99, 100, 110, 144, 172, 173, 198], "later": [28, 29, 30, 36, 173, 198, 199, 200], "parallelsdc_results_graph": [28, 36], "plot_graph": [28, 36], "338": [28, 36], "xlim": [28, 36, 173, 175, 198], "ylim": [28, 29, 30, 36, 173, 175, 198], "markeredgecolor": [28, 29, 30, 36], "ncol": [28, 29, 30, 36, 173, 175, 198], "parallelsdc_fish": [28, 36], "newton_vs_sdc": [28, 36], "errreductionhook": [28, 36], "err_reduction_hook": [28, 36], "2047": [28, 36], "dt_list": [28, 36, 175, 198], "error_reduct": [28, 36], "error_pr": [28, 36], "error_pre_iter": [28, 36], "error_post": [28, 36], "error_post_iter": [28, 36], "rate": [28, 33, 36, 114, 115, 116], "error_reduction_data": [28, 36], "color_list": [28, 29, 30, 36], "red": [28, 36], "blue": [28, 36], "green": [28, 36], "marker_list": [28, 29, 30, 36], "label_list": [28, 36], "newton": [28, 81, 96, 97, 103, 104, 108, 111, 112, 113, 115, 116, 123, 124, 125, 126, 129, 131, 145, 146, 147], "zip": [28, 29, 30, 36, 196, 197, 205], "loglog": [28, 36, 173, 175, 198], "quadrat": [28, 36, 110], "set_xtick": [28, 36], "gca": [28, 36], "invert_xaxi": [28, 36], "1e0": [28, 36], "parallelsdc_fisher_newton": [28, 36], "preconditioner_playground": [29, 36], "namedtupl": [29, 30, 36, 47, 173, 175, 182, 198, 201], "generalizedfisher_1d_fd_implicit": [29, 30, 36, 92], "generalized_fish": [29, 30, 36, 92, 112], "van_der_pol_implicit": [29, 30, 36, 92], "vanderpol": [29, 30, 36, 92, 131], "id": [29, 30, 36, 93, 95, 105, 115, 119, 120, 129, 144, 173, 175, 182, 198, 201], "qd_type": [29, 30, 36, 54], "qd_list": [29, 30, 36], "ie": [29, 36, 178, 180, 188, 192, 199, 200, 202, 204], "iepar": [29, 30, 36], "qpar": [29, 30, 36], "min3": [29, 30, 36], "min_gt": [29, 30, 36], "setup_list": [29, 30, 36], "fisher": [29, 30, 36, 112, 113], "param_list": [29, 30, 36], "decid": [29, 30, 36, 78, 82, 104, 204], "mu": [29, 30, 36, 39, 117, 131, 153], "exit": [29, 30, 36], "parallelsdc_iterations_precond": [29, 36], "plot_iter": [29, 30, 36], "qd_type_list": [29, 30, 36], "isinst": [29, 30, 36], "precondition": [29, 30, 35, 77, 151, 152, 156, 188, 202], "five": [29, 36], "qd": [29, 30, 36], "semilogx": [29, 30, 36], "linestyl": [29, 30, 36], "lambda_0": [29, 30, 36, 112, 113], "60": [29, 30, 36, 147, 179, 192, 193, 200, 204], "parallelsdc_preconditioner_": [29, 36], "preconditioner_playground_mpi": [30, 36], "generic_implicit_mpi": [30, 36, 149], "basetransfer_mpi": [30, 36], "base_transfer_mpi": [30, 36], "comm": [30, 36, 45, 56, 61, 67, 72, 73, 75, 83, 87, 89, 90, 91, 101, 102, 106, 113, 115, 116, 119, 125, 156, 191, 193, 194, 203, 204], "get_siz": [30, 36, 191, 194, 203, 204], "base_transfer_class": [30, 36, 53, 201], "get_rank": [30, 36, 191, 193, 194, 203, 204], "parallelsdc_iterations_precond_mpi": [30, 36], "parallelsdc_preconditioner_mpi_": [30, 36], "comm_world": [30, 36, 101, 106, 113, 115, 116, 119, 125, 191, 193, 194, 203, 204], "solar": [32, 111, 126], "explor": [33, 199, 205], "sisdc": 33, "rk": [33, 151, 152], "dirk": [33, 129, 133, 136, 137, 142], "v2": 33, "therefor": [33, 35, 111, 126, 199, 200, 202], "omit": [33, 89, 201], "fwsw": 33, "suffici": [33, 71, 129], "reach": [33, 35, 71, 84, 131, 177, 199, 205], "stabil": [33, 39, 99, 100, 105, 146, 147, 205], "configur": [33, 39, 59, 205], "dispers": 33, "versu": 33, "multiscal": 33, "gmre": [33, 95, 105, 125, 144, 197, 200, 205], "achiev": [33, 78, 200, 201, 203, 204], "twogrid": 34, "propagaton": 34, "composit": [34, 45, 83], "compactli": 34, "smooth": [34, 127, 180, 185, 200, 201], "coars": [34, 35, 38, 41, 52, 53, 63, 67, 68, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 185, 192, 201, 204, 205], "allinclusive_matrix_nonmpi": 34, "concept": 34, "exploit": 34, "resembl": 34, "notat": [34, 124, 157, 203], "produc": [34, 36, 42, 50, 114, 115, 116, 195, 196, 201, 205], "anoth": [34, 97, 203, 205], "excit": 34, "buvoli": 35, "rush": 35, "larsen": 35, "moreov": 35, "hybrid": 35, "heart": 35, "reaction": [35, 106, 112, 113, 114, 115, 116, 147], "coupl": [35, 53, 89, 198, 204], "ionic": 35, "chi": 35, "c_m": 35, "partial": [35, 93, 94, 95, 96, 97, 99, 100, 101, 102, 105, 106, 112, 113, 114, 115, 116, 119, 120, 125, 132, 144], "i_": [35, 107, 128], "ion": 35, "z_e": 35, "nabla": [35, 118, 132], "cdot": [35, 93, 96, 97, 104, 105, 107, 108, 109, 113, 114, 115, 118, 119, 125, 127, 128, 129, 130, 132, 144], "text": [35, 57, 70, 105], "omega": [35, 94, 114, 115, 116, 118, 132], "g_e": 35, "lambda_": [35, 109], "z_": 35, "infti": 35, "plu": [35, 78, 182, 185, 201], "mathbb": [35, 112, 113, 127, 144], "transmembran": 35, "yield": [35, 71, 202, 203], "compact": 35, "f_i": 35, "f_e": 35, "implicitli": [35, 96, 97, 99, 100, 101, 102, 106, 113, 115, 116, 125, 129], "inexpens": 35, "imexexp": 35, "emploi": [35, 71], "unstabl": 35, "correctt": 35, "wrap": [35, 56], "ionic_models_path": 35, "ionicmodel": 35, "cpp": 35, "o3": 35, "wall": 35, "share": [35, 78, 151], "fpic": 35, "fvisibl": 35, "hidden": [35, 53, 199], "python3": [35, 130], "pybind11": 35, "bindings_definit": 35, "config": 35, "cd": [35, 38], "run_script": 35, "run_monodomainode_cli": 35, "end_tim": [35, 185, 201], "domain_nam": 35, "cube_1d": 35, "refin": [35, 81, 114, 118, 119, 132, 192, 194, 204], "ionic_model_nam": 35, "ttp": 35, "truly_time_parallel": 35, "n_time_rank": 35, "displai": [35, 51, 106], "lambda_i": 35, "ten": 35, "tusscher": 35, "panfilov": 35, "gain": 35, "mlesdc": 35, "reasonalbli": 35, "counterpart": [35, 203], "goal": [36, 38], "robust": 36, "across": [36, 45, 62, 64, 67, 68, 75, 76, 78, 147, 156], "easiest": [36, 204], "far": [36, 71, 93, 94, 99, 100, 101, 102, 105, 106, 109, 114, 116, 118, 125, 132, 198, 201, 202, 203, 205], "triangular": [36, 151, 152, 155], "jacobi": [36, 71, 77, 113, 147, 205], "minimz": 36, "minim": [36, 129], "map": 36, "aforement": 36, "indi": 36, "commerci": 36, "aggreg": 36, "art": 36, "academ": 36, "subscript": 36, "plan": [36, 166], "lamdt": 36, "imaginari": 36, "surprisingli": 36, "symmetri": 36, "kroneck": [36, 198], "naiv": 36, "decoupl": [36, 198], "incl": 36, "nonetheless": 36, "jube": 38, "vampir": 38, "cube": 38, "jsc": 38, "run_simple_forcing_benchmark": 38, "trace": 38, "manual": [38, 39, 45], "instrument": 38, "region": 38, "primarili": 38, "xml": 38, "jube_run_pysdc_ac_spac": 38, "jube_run_pysdc_ac_spacetim": 38, "run_pysdc_ac": 38, "tmpl": 38, "stand": 38, "alon": 38, "run_pysdc_ac_scorep": 38, "howto": 38, "bsd": 39, "licens": 39, "util": [39, 43, 45, 51, 61, 62, 72], "akramov2023spectr": 39, "titl": 39, "author": 39, "ikrom": 39, "akramov": 39, "g\u00f6tschel": 39, "michael": 39, "minion": 39, "daniel": [39, 127], "ruprecht": [39, 93, 109, 127, 157], "year": 39, "eprint": 39, "2310": 39, "08352": 39, "archiveprefix": 39, "arxiv": [39, 125], "primaryclass": 39, "na": 39, "harmonic_oscillator_run_st": 39, "kappa_max": 39, "mu_max": 39, "harmonic_oscillator_run_stab_interv": 39, "save_interval_fil": 39, "harmonic_oscillator_run_point": 39, "kappa": 39, "assist": 39, "suitabl": [39, 51, 106], "ensur": [39, 70, 203, 205], "save_points_fil": 39, "penningtrap_run_error": 39, "conv": 39, "run_local_error": 39, "015625": 39, "global": [39, 77, 113], "run_global_error": 39, "147": 39, "148": 39, "global_order_vs_approx_ord": 39, "csv": 39, "k_iter": 39, "horizont": 39, "vertic": [39, 124], "penningtrap_run_hamiltonian_error": 39, "crash": [39, 69], "penningtrap_run_work_precis": 39, "dt_cont": 39, "basetransf": [40, 204], "base_transf": [40, 41, 53, 163, 165, 166, 167, 168, 169, 201], "collbas": [40, 42, 54, 174, 175, 178, 180, 198, 199, 200], "registerparam": [40, 43, 51], "convergencecontrol": [40, 44, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "collocationerror": [40, 46], "communicationerror": [40, 46], "controllererror": [40, 46], "convergenceerror": [40, 46, 75], "dataerror": [40, 46], "readonlyerror": [40, 46], "transfererror": [40, 46], "unlockerror": [40, 46], "entri": [40, 47, 61, 78, 151, 153, 157, 173, 175, 198, 200, 201], "nodeserror": [40, 50], "nodesgener": [40, 50], "workcount": [40, 51, 96, 104, 108, 131], "spacetransf": [40, 171], "space_transf": [40, 52, 53, 164, 165, 166, 167, 168, 169, 170, 171], "fine_level": [41, 53, 163], "coarse_level": [41, 53, 163], "base_transfer_param": [41, 53, 163, 185, 192, 201, 204], "logger": [41, 45, 47, 51, 52, 53, 54, 105, 163, 194, 204], "log": [41, 45, 51, 52, 53, 54, 67, 68, 108, 137, 141, 163, 173, 175, 198, 199, 200, 205], "__par": [41, 49, 52, 53, 54, 163], "static": [41, 42, 56, 73, 127], "get_transfer_matrix_q": 41, "f_node": 41, "c_node": 41, "quickli": [41, 62, 192, 199, 204], "matric": [41, 153, 157, 174, 198], "lagrangian": 41, "nf": [41, 165, 167, 169], "nc": [41, 165, 167, 169], "prolong": [41, 52, 53, 67, 68, 163, 164, 165, 166, 167, 168, 169, 170, 171, 182, 201], "prolong_f": [41, 163], "reevalu": [41, 70, 163], "fa": [41, 49, 163], "tright": [42, 174, 175, 198], "kwarg": [42, 45, 47, 51, 60, 61, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 95, 120, 125, 148], "polynomi": [42, 48, 50, 78, 79, 148], "chebyshev": 42, "cann": 42, "equival": [42, 45], "equidistantinn": 42, "equidistantnoleft": 42, "collgausslegendr": 42, "collgausslobatto": 42, "collgaussradau_left": 42, "collgaussradau_right": 42, "qmat": [42, 174, 175, 198], "smat": 42, "delta_m": 42, "distanc": [42, 96, 97, 112, 119, 129], "right_is_nod": 42, "left_is_nod": 42, "_parnam": 43, "_parnamesreadonli": 43, "usempi": [44, 72, 77, 83], "abstract": [44, 45, 51, 52, 54, 71], "add_convergence_control": 44, "convergence_control": [44, 45, 197, 205], "allow_doubl": 44, "afterward": [44, 70], "add_hook": 44, "dump_setup": [44, 178, 180, 194, 199, 200, 204], "get_convergence_controllers_as_t": 44, "debug": [44, 45, 203], "track": 44, "getter": [44, 47, 49, 53, 87, 89], "return_stat": [44, 47], "setup_convergence_control": 44, "checkconverg": [44, 69, 73, 178, 180, 199, 200], "care": [44, 72, 78, 95, 151, 203], "criterion": [44, 71], "welcome_messag": [44, 178, 180, 199, 200], "plug": 45, "recv": [45, 67, 68, 90], "buffer": [45, 74, 77, 87, 89, 90], "intracomm": [45, 61, 72, 75, 83], "send": [45, 49, 56, 67, 68, 87, 89, 90, 91], "dest": [45, 87, 89, 90, 91], "rank": [45, 54, 70, 72, 75, 78, 79, 83, 87, 89, 90, 91, 114, 118, 132, 156, 191, 193, 194, 203, 204], "add_vari": 45, "allow_overwrit": 45, "frozen": 45, "destin": 45, "recurs": 45, "By": [45, 79, 83, 199, 203], "overwrit": [45, 70, 113, 115], "outsid": [45, 84], "hard": 45, "forgo": 45, "reset": [45, 47, 49, 57, 67, 68, 70, 71, 72, 74, 77, 177, 199, 200], "check_iteration_statu": [45, 73, 74], "check_paramet": [45, 70, 71, 74, 78, 79, 80], "assumpt": [45, 71, 74, 78, 80], "went": [45, 71, 74, 78, 80, 188, 202], "it_check": [45, 67, 68], "post_iteration_process": [45, 70, 71, 76, 77, 78, 79, 80, 81, 82, 85], "shortcut": [45, 63, 176, 177, 179, 199, 200], "determine_restart": [45, 71, 72, 80], "get_new_step_s": [45, 71, 84], "arbitrari": [45, 71, 88, 104], "criteria": [45, 73], "control_ord": [45, 71, 72], "integ": [45, 48, 104], "print_convergence_control": 45, "info": [45, 178, 180, 199, 200], "post_spread_process": [45, 70, 82, 85], "post_step_process": 45, "pre_iteration_process": [45, 76], "prepare_mpi_datatyp": 45, "prepare_mpi_logical_oper": 45, "logic": [45, 199], "prepare_next_block": [45, 72, 75, 78, 83], "reset_buffers_nonmpi": [45, 72, 74, 77], "imit": [45, 77], "replic": 45, "somebodi": 45, "sent": [45, 205], "reset_status_vari": [45, 70, 71, 72, 76, 77, 78, 79], "restart_block": [45, 67, 68, 71, 77], "reset_vari": 45, "suppli": [45, 47, 51, 57, 61, 70, 74, 84, 104, 106, 156], "overrid": [45, 58, 70, 71, 73, 82, 129], "scan": 45, "being": [45, 129, 132, 181, 200], "prioriti": 45, "noth": [45, 68, 150, 156], "children": 45, "overload": [45, 146, 147], "child": [45, 72, 77, 78, 83, 132], "setup_status_vari": [45, 70, 71, 72, 74, 76, 77, 78, 82], "frozenclass": [45, 49, 53, 55, 59], "status_variab": 45, "thrown": 46, "unlock": 46, "process_sweep": 47, "num_restart": 47, "alia": [47, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 151], "post_step": 47, "level_numb": 47, "filer_recomput": 47, "__num_restart": 47, "__stat": 47, "identifi": [47, 67], "add_to_stat": [47, 67, 68], "metadata": [47, 61], "keyword": [47, 51, 61], "accord": [47, 151, 177, 199], "increment_stat": 47, "increment": [47, 51, 177, 199], "meta_data": 47, "post_comm": 47, "post_iter": 47, "post_predict": 47, "post_run": [47, 178, 180, 199, 200], "post_setup": 47, "post_sweep": [47, 178, 180, 199, 200], "pre_comm": 47, "pre_iter": 47, "pre_predict": 47, "pre_run": 47, "pre_setup": 47, "pre_step": 47, "pre_sweep": 47, "reset_stat": 47, "fvalu": 48, "getintegrationmatrix": 48, "numquad": 48, "legendre_numpi": 48, "tau_": 48, "pair": [48, 151, 173, 175, 198], "legendre_scipi": 48, "fejer": 48, "internali": 48, "dft": 48, "waldvogel": 48, "2006": 48, "quadpi": 48, "nschloe": 48, "nico_schl\u00f6m": 48, "level_index": [49, 177, 199], "__statu": [49, 53], "dof": [49, 175, 182, 183, 197, 198, 201, 205], "uold": [49, 85], "fold": 49, "alloc": 49, "meta": [49, 198, 200], "referenc": [49, 53], "reset_level": 49, "reset_statu": 49, "tag": [49, 67, 87, 89, 90, 91], "Its": [50, 123], "book": [50, 106, 152], "gautschi": 50, "evalorthogpoli": 50, "beta": [50, 71, 110, 124, 150], "orthogon": 50, "recurr": 50, "pi": [50, 94, 95, 99, 100, 107, 118, 119, 120, 128, 172, 173, 182, 198, 201], "oder": 50, "getnod": 50, "locat": 50, "getorthogpolycoeffici": 50, "num_coeff": 50, "gettridiagcoeffici": 50, "tridiagon": 50, "decrement": 51, "essenti": 51, "apply_mass_matrix": [51, 118, 132], "generate_scipy_reference_solut": 51, "eval_rh": 51, "u_init": [51, 97, 99, 106, 108, 117, 124, 127, 128, 129, 130, 131, 146, 147, 148, 180, 181, 185, 200, 201], "t_init": [51, 97, 99, 106, 108, 124, 128, 129, 130, 131, 146, 147, 148], "solve_ivp": 51, "dimension": [51, 63, 93, 94, 96, 97, 99, 100, 101, 102, 105, 106, 112, 113, 114, 115, 116, 118, 119, 120, 125], "reshap": 51, "bdf": 51, "jac": [51, 146], "signatur": 51, "classmethod": [51, 72, 77, 83, 130, 144, 151], "get_default_sweeper_class": [51, 144], "get_fig": [51, 106], "pyplot": [51, 106], "fine_prob": [52, 164, 165, 166, 167, 168, 169, 170, 171, 182, 201], "coarse_prob": [52, 164, 165, 166, 167, 168, 169, 170, 171, 182, 201], "bundl": [53, 202], "setter": [53, 108], "connect_level": 53, "init_step": 53, "prev": 53, "reset_step": 53, "corresp": 53, "wrapper": [53, 59, 67, 204], "stepper": 53, "coll": [54, 174, 175, 183, 198, 201], "compute_end_point": [54, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 199], "compute_residu": [54, 150, 156, 159, 177, 199], "belong": [54, 60, 77, 150, 156, 159, 201], "get_qdelta_explicit": 54, "get_qdelta_implicit": 54, "predict": [54, 67, 68, 82, 150, 151, 156, 177, 199, 201], "update_nod": [54, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 199], "nccl_commun": 55, "ncclcomm": [55, 56], "figsiz": [55, 57, 173, 175, 198], "figsize_by_journ": [55, 57], "problem_help": 55, "get_1d_grid": [55, 58], "get_finite_difference_matrix": [55, 58], "get_finite_difference_stencil": [55, 58], "get_step": [55, 58], "pysdc_help": 55, "setup_help": 55, "generate_descript": [55, 60], "get_list_of_typ": [55, 61, 179, 200], "sort_stat": [55, 61, 179, 200], "datacheck": [55, 62], "transfer_help": 55, "border_pad": [55, 63], "continue_periodic_arrai": [55, 63], "interpolation_matrix_1d": [55, 63], "next_neighbor": [55, 63], "next_neighbors_period": [55, 63], "restriction_matrix_1d": [55, 63], "visualization_tool": [55, 195, 196, 205], "show_residual_across_simul": [55, 64, 195, 196, 205], "nccl": 56, "allreduc": 56, "sendbuf": 56, "recvbuf": 56, "op": 56, "get_count": 56, "doesn": [56, 76, 78], "get_dtyp": 56, "get_op": 56, "mpi_op": 56, "ratio": [57, 76, 127, 129], "textwdith": 57, "width": [57, 58, 99, 100, 101, 102, 107, 113, 115], "rel": [57, 62, 71, 72, 111, 174, 175, 185, 198, 201], "journal": [57, 116, 125, 127, 146, 147], "rescal": 57, "fit": [57, 151, 152], "6180339887": 57, "filenam": [57, 64, 189, 203], "save_pdf": 57, "save_pgf": 57, "save_png": 57, "font_siz": 57, "left_boundari": 58, "right_boundari": 58, "finit": [58, 78, 95, 96, 97, 112, 114, 118, 119, 120, 129, 132, 144, 198, 204], "dim": [58, 143, 165, 167, 169], "bc_param": 58, "fd": [58, 95, 96, 97, 112, 119, 120, 129, 144, 172, 173, 197, 198, 205], "stencil": [58, 95, 113, 120, 129, 144, 198], "spars": [58, 93, 95, 105, 112, 120, 129, 130, 144, 174, 175, 198], "taylor": [58, 78], "expans": [58, 78], "offset": [58, 87, 89, 90], "element": [58, 114, 118, 129, 132, 198, 204], "freez": 59, "__isfrozen": 59, "wish": 59, "recomput": [61, 78], "raw": 61, "anyth": [61, 71], "transform": [61, 94, 99, 100, 101, 102, 105, 116, 125, 166, 201], "fri": 62, "feb": [62, 144], "41": [62, 151, 193, 204], "43": [62, 187, 188, 202], "filepath": 62, "__file__": 62, "storeandcheck": 62, "plote": 62, "writetojson": 62, "uniqu": 62, "cach": [62, 149, 150], "_dataref": 62, "json": 62, "_data": 62, "tell": [62, 72], "properli": 62, "renam": 62, "newli": 62, "independ": 62, "overwritten": [62, 76, 156, 204], "ref": [62, 104], "rtol": [62, 173, 175, 198], "atol": [62, 197, 205], "wide": 62, "absolut": [62, 71], "pad_typ": 63, "mirror": 63, "pad": 63, "emb": 63, "npdarrai": 63, "arr": 63, "nn": [63, 144], "neighbor": 63, "fine_grid": 63, "coarse_grid": 63, "equidist_nest": 63, "contruct": 63, "nest": 63, "spr": 63, "csc_matrix": [63, 93, 105, 130], "submodul": 65, "convergence_controller_class": [65, 197, 205], "mg": [67, 68], "check_iteration_estim": [67, 69, 197, 205], "catch": [67, 68], "termin": [67, 68, 73, 96, 97, 103, 105, 112, 113, 115, 119, 123, 124, 129, 131, 145], "it_coars": [67, 68], "it_down": [67, 68], "coarsest": [67, 68, 194, 204], "it_fin": [67, 68, 178, 180, 199, 200], "it_up": [67, 68], "talk": [67, 68], "realli": [67, 89, 148, 178, 180, 199, 200, 204], "me": [67, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 145, 147, 148], "recv_ful": [67, 68], "bookkeep": [67, 68], "record": [67, 68, 70, 77], "mssdc": [67, 68, 77, 196, 205], "send_ful": [67, 68], "wait_with_interrupt": 67, "interrupt": [67, 205], "local_ms_run": 68, "local_ms_act": 68, "active_slot": 68, "adaptive_colloc": 69, "adaptivecolloc": [69, 70, 77], "adaptivitybas": [69, 71], "adaptivitycolloc": [69, 71], "adaptivityextrapolationwithinq": [69, 71], "adaptivityforconvergedcollocationproblem": [69, 71], "adaptivitypolynomialerror": [69, 71], "adaptivityrk": [69, 71], "adaptivityresidu": [69, 71], "basic_restart": 69, "basicrestart": [69, 72], "basicrestartingmpi": [69, 72], "basicrestartingnonmpi": [69, 72, 178, 180, 199, 200], "check_converg": 69, "checkiterationestimatornonmpi": [69, 74, 197, 205], "crashbas": [69, 75], "stopatmaxruntim": [69, 75], "stopatnan": [69, 75], "estimate_contraction_factor": 69, "estimatecontractionfactor": [69, 76], "estimate_embedded_error": 69, "estimateembeddederror": [69, 77], "estimateembeddederrorcolloc": [69, 71, 77], "estimateembeddederrorlinearizedmpi": [69, 77], "estimateembeddederrorlinearizednonmpi": [69, 77], "estimate_extrapolation_error": 69, "estimateextrapolationerrorbas": [69, 78], "estimateextrapolationerrornonmpi": [69, 78], "estimateextrapolationerrorwithinq": [69, 78], "estimate_polynomial_error": 69, "estimatepolynomialerror": [69, 79], "hotrod": 69, "newtoninexact": [69, 81], "interpolate_between_restart": 69, "interpolatebetweenrestart": [69, 82], "spread_step_s": 69, "spreadstepsizesblockwis": [69, 83], "spreadstepsizesblockwisempi": [69, 83], "spreadstepsizesblockwisenonmpi": [69, 83, 178, 180, 199, 200], "step_size_limit": 69, "stepsizelimit": [69, 84], "stepsizeslopelimit": [69, 84], "store_uold": 69, "storeuold": [69, 85], "underli": [70, 77], "soon": [70, 82], "length": [70, 104, 106, 201], "feel": 70, "exactli": [70, 71, 202], "speedup": [70, 201], "ware": 70, "matmul": [70, 79], "entir": [70, 79, 89, 129], "axb": [70, 79], "switch_sweep": 70, "contract": [71, 76], "boost": 71, "boolean": [71, 83, 118], "avoid_restart": 71, "unclear": 71, "get_local_error_estim": 71, "safeti": [71, 205], "compute_optimal_step_s": 71, "e_tol": 71, "e_est": 71, "preset": 71, "subtract": [71, 77, 151, 152], "get_converg": 71, "trigger_restart_upon_nonconverg": 71, "basic": [71, 72, 198, 199, 201, 202, 203, 205], "correl": 71, "simpler": [71, 201], "hit": 71, "threshold": [71, 75, 129, 205], "exce": [71, 75, 80, 129], "upper": [71, 84], "fall": [71, 75], "e_tol_low": 71, "halv": [71, 192, 201, 204], "use_restol": 71, "max_restart": [71, 72], "reutrn": 71, "anywai": [72, 192, 204], "95": [72, 178, 180, 182, 193, 199, 200, 201, 204], "lost": 72, "patienc": 72, "get_implement": [72, 77, 83], "retriev": [72, 77, 173, 175, 180, 198, 200], "cl": [72, 77, 83], "step_size_spread": 72, "communicate_converg": 73, "immit": 74, "storag": [74, 78, 104], "communicate_crash": 75, "exceed": 75, "max_runtim": 75, "nan": [75, 96, 112, 123, 131, 145, 146, 147], "thresh": 75, "reiniti": 76, "pretend": [77, 78], "accur": [77, 80, 151], "consecut": [77, 173, 175, 198, 205], "unless": [77, 154, 155, 156, 157, 159, 160], "estimate_embedded_error_seri": 77, "haven": 77, "thought": 77, "error_embedded_estimate_colloc": 77, "adaptive_coll_param": 77, "averag": 77, "get_extrapolation_coeffici": 78, "t_eval": 78, "reflect": [78, 199], "elsewher": 78, "squar": 78, "amount": 78, "overhead": 78, "enough": [78, 150, 177, 178, 199], "prefactor": 78, "accumul": 78, "lte": 78, "use_adapt": 78, "dens": 78, "cheap": 78, "coeff": [78, 144], "store_valu": 78, "moment": 78, "get_extrapolated_error": 78, "get_extrapolated_solut": 78, "shouldn": 78, "no_storag": 78, "That": [78, 79, 84], "cancel": 78, "matter": 78, "arriv": [78, 199], "sai": [79, 107], "2m": 79, "incorpor": 80, "lightweight": 80, "silent": 80, "corrupt": 80, "guhur": 80, "et": [80, 113, 115, 119], "al": [80, 113, 115, 119], "springer": [80, 105, 106, 107, 114, 118, 132, 152], "1007": [80, 105, 106, 151, 152], "978": [80, 105, 106, 152], "319": 80, "43659": 80, "3_47": 80, "throw": 80, "crucial": [80, 201], "gradual": 81, "set_maxit": 81, "set_toler": 81, "lvl": 81, "tol": 81, "guess": [82, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148, 205], "choos": [82, 129, 151, 152, 202], "thibaut": 82, "magic": [82, 197, 205], "overrul": 83, "get_step_from_which_to_spread": 83, "new_step": 83, "predecessor": 83, "dt_min": 84, "dt_max": 84, "slope": 84, "u_old": 85, "cupy_mesh": [86, 100], "comp2_cupy_mesh": [86, 87], "imex_cupy_mesh": [86, 87, 100], "fenics_mesh": [86, 114, 118, 132], "rhs_fenics_mesh": [86, 88, 118, 132], "multicomponentmesh": [86, 89], "comp2_mesh": [86, 89, 96, 97, 116], "imex_mesh": [86, 89, 93, 94, 96, 97, 99, 101, 102, 104, 105, 106, 107, 109, 116, 120, 125, 128, 129, 148, 178, 199], "petsc_vec": [86, 113, 115, 119], "petsc_vec_comp2": [86, 91, 113, 115], "petsc_vec_imex": [86, 91, 113, 115, 119], "val": [87, 88, 89, 90, 91, 144], "comp1": [87, 89], "comp2": [87, 89], "stride": [87, 89, 90], "bcast": [87, 89, 91], "broadcast": [87, 89, 91], "irecv": [87, 89, 91], "isend": [87, 89, 90, 91], "forward": [87, 89, 90, 91, 150, 151, 152, 166, 205], "impl": [87, 88, 89, 91, 157, 158], "expl": [87, 88, 89, 91, 129, 157, 158], "expand": 89, "dir": 89, "__getattr__": 89, "importantli": 89, "troubl": 89, "_comm": 89, "magnet": [90, 127, 129], "elec": 90, "magn": 90, "veloc": [90, 93, 105, 110, 111, 117, 122, 126, 127, 132, 152, 153, 161], "vel": [90, 127], "acoustic_help": 92, "boussinesq_help": 92, "acousticadvection_1d_fd_imex": 92, "acoustic_1d_imex": [92, 93], "advectiondiffusionequation_1d_fft": 92, "advectiondiffusion1d_imex": [92, 94], "advectiondiffusion1d_implicit": [92, 94], "allencahn_1d_fd": 92, "allencahn_front_finel": [92, 96], "allencahn_front_fullyimplicit": [92, 96], "allencahn_front_semiimplicit": [92, 96], "allencahn_periodic_fullyimplicit": [92, 96], "allencahn_periodic_multiimplicit": [92, 96], "allencahn_periodic_semiimplicit": [92, 96], "allencahn_2d_fd": 92, "allencahn_fullyimplicit": [92, 97], "allencahn_multiimplicit": [92, 97], "allencahn_multiimplicit_v2": [92, 97], "allencahn_semiimplicit": [92, 97], "allencahn_semiimplicit_v2": [92, 97], "allencahn_2d_fd_gpu": 92, "allencahn_2d_fft": 92, "allencahn2d_imex": [92, 99, 100], "allencahn2d_imex_stab": [92, 99, 100], "allencahn_2d_fft_gpu": 92, "allencahn_imex": [92, 101], "allencahn_imex_timeforc": [92, 101], "allencahn_temp_imex": [92, 102], "auzinger_implicit": [92, 197, 205], "auzing": [92, 103, 197, 205], "battery_implicit": [92, 104], "battery_n_capacitor": [92, 104], "boussinesq_2d_fd_imex": 92, "boussinesq_2d_imex": [92, 105], "brussel": 92, "buckconvert": 92, "buck_convert": [92, 107], "discontinuoustestod": 92, "fastwaveslowwave_0d": 92, "swfw_scalar": [92, 109], "fisher_ful": [92, 113], "fisher_react": [92, 113], "grayscott_1d_fenics_implicit": 92, "fenics_grayscott": [92, 114], "gs_full": [92, 115], "gs_reaction": [92, 115], "grayscott_mpifft": 92, "grayscott_imex_diffus": [92, 116], "grayscott_imex_linear": [92, 116], "grayscott_mi_diffus": [92, 116], "grayscott_mi_linear": [92, 116], "heatequation_1d_fenics_matrix_forc": [92, 192, 204], "fenics_heat": [92, 118, 192, 204], "fenics_heat_mass": [92, 118, 192, 204], "fenics_heat_mass_timebc": [92, 118, 192, 204], "heatequation_2d_petsc_forc": [92, 194, 204], "heat2d_petsc_forc": [92, 119, 194, 204], "heatnd_forc": [92, 120, 177, 178, 179, 186, 187, 197, 199, 200, 202, 205], "heatequation_nd_fd_cupi": 92, "logisticequ": 92, "logistics_equ": [92, 123], "lorenzattractor": [92, 124], "nonlinearschroedinger_mpifft": [92, 193, 204], "nonlinearschroedinger_fully_implicit": [92, 125], "nonlinearschroedinger_imex": [92, 125, 193, 204], "penningtrap_3d": [92, 180, 181, 185, 200, 201], "penningtrap": [92, 127, 180, 181, 185, 200, 201], "quenchimex": [92, 129], "vorticityvelocity_2d_fenics_period": 92, "fenics_vortex_2d": [92, 132], "fenics_vortex_2d_mass": [92, 132], "generic_nd_fd": 92, "genericndimfindiff": [92, 95, 120, 144], "nonlinear_ode_1": 92, "odescalar": 92, "protherorobinson": [92, 146], "odesystem": 92, "chemicalreaction3var": [92, 147], "jacobiellipt": [92, 147], "kap": [92, 147], "protherorobinsonautonom": [92, 147], "polynomial_test_problem": 92, "polynomial_testequ": [92, 148], "polynomial_testequation_imex": [92, 148], "cadv": 93, "order_adv": 93, "waveno": 93, "acoust": [93, 105], "c_": [93, 105, 139], "equiv": 93, "p_0": 93, "sound": 93, "siam": [93, 109, 146, 147], "sci": [93, 109, 114, 115, 116, 129], "vol": [93, 109, 127], "38": [93, 109, 112, 113, 114, 115, 116, 189, 190, 191, 195, 196, 203, 205], "solve_system": [93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148], "abbrev": [93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148], "stepsiz": [93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 118, 119, 123, 124, 125, 128, 129, 130, 131, 132, 144, 145, 146, 147, 148], "256": [94, 114, 115], "unforc": [94, 95, 120, 201], "treat": [94, 96, 97, 99, 100, 101, 102, 106, 113, 115, 116, 118, 129, 132, 204], "wherea": [94, 114, 115, 116], "sin": [94, 95, 99, 100, 103, 118, 119, 120, 172, 173, 182, 198, 201], "exp": [94, 108, 109, 112, 113, 146, 147], "fourier": [94, 99, 100, 101, 102, 116, 125], "ddx": 94, "gradient": [94, 97], "lap": [94, 99, 100], "laplacian": [94, 96, 97, 99, 100, 106, 125, 172, 173, 198], "512": [95, 120, 144], "lintol": [95, 120, 125, 129, 144, 178, 199], "linit": [95, 120, 125, 129, 144, 178, 197, 199, 205], "solver_typ": [95, 120, 144, 178, 197, 199, 205], "sigma": [95, 120, 124, 178, 199], "nd": [95, 120, 129, 144, 165, 169], "bf": [95, 97, 99, 100, 101, 102, 111, 120, 126, 147], "x_i": [95, 97, 99, 100, 101, 102, 120], "coordin": [95, 101, 102, 116, 125], "central": [95, 119, 199], "cg": [95, 114, 118, 120, 132, 144, 192, 197, 204, 205], "gaussian": [95, 120, 129], "grad": [95, 129], "csc": [95, 112, 120, 129, 144], "won": 95, "sol": [95, 120, 144], "ep": [96, 97, 99, 100, 101, 102], "stop_at_nan": [96, 108, 112, 123, 124, 131, 145, 146, 147], "stop_at_maxit": 96, "inhomogen": 96, "varepsilon": [96, 97, 99, 100, 101, 102], "2u": [96, 101, 102], "d_w": [96, 101, 102], "tanh": [96, 97, 99, 100, 101, 102], "vt": 96, "sqrt": [96, 97, 99, 100, 101, 102, 112, 113, 145], "finel": 96, "laplac": [96, 97, 101, 102, 112, 116, 119, 125], "diag": [96, 130], "uext": 96, "work_count": [96, 104, 108, 124, 127, 131], "counter": [96, 177, 199], "solve_system_1": [96, 97, 113, 115, 116], "solve_system_2": [96, 97, 113, 115, 116], "200": [97, 145, 146, 147, 178, 180, 199, 200], "lin_tol": 97, "lin_maxit": 97, "inexact_linear_ratio": [97, 129], "y_j": [97, 99, 100, 101, 102], "spdiag": 97, "newton_itercount": [97, 145], "lin_itercount": 97, "newton_ncal": [97, 145], "lin_ncal": 97, "conjug": 97, "ac": 97, "init_typ": [99, 100, 101, 102], "checker": [99, 100], "uniform": [99, 100], "tranform": [99, 100, 101, 102], "especi": 100, "cp": 100, "initialis": [101, 102], "ogrid": [101, 102], "k2": [101, 102, 125], "dy": [101, 102, 115, 119], "readthedoc": [101, 102, 116], "io": [101, 102, 116], "en": [101, 102, 111, 116, 117], "tm": 102, "y_1": [103, 124], "y_2": [103, 124], "2_1": [103, 120], "2_2": 103, "co": [103, 118, 119, 120, 124, 146, 147], "2140": 103, "camco": 103, "2015": [103, 114, 118, 127, 132], "ncapacitor": 104, "v_ref": 104, "drain": 104, "h": [104, 105, 108, 122, 138, 139], "v_1": 104, "v_": [104, 107, 128], "i_l": 104, "cr": 104, "r_": [104, 107, 128], "resist": [104, 107, 128], "resistor": [104, 107, 128], "capacit": [104, 107, 128], "ell": [104, 107, 128], "induct": [104, 107, 128], "inductor": [104, 107, 128], "c_n": 104, "nonhomogen": [104, 107, 128], "a_k": [104, 107], "f_k": [104, 107], "n_": [104, 127], "switch_a": 104, "switch_f": 104, "t_switch": [104, 108], "nswitch": [104, 108], "count_switch": [104, 108], "insid": [104, 129], "pintsim": 104, "switch_estim": 104, "v_k": 104, "c_k": 104, "c_1": [104, 107, 128], "v_2": 104, "v_3": 104, "c_2": [104, 107, 128], "c_3": 104, "max_": 104, "satisfi": [104, 119, 192, 204], "geq": [104, 108], "get_problem_dict": 104, "coeffic": 104, "get_switching_info": [104, 108], "switch_detect": [104, 108], "m_guess": [104, 108], "state_funct": [104, 108], "u_adv": [105, 139], "nfreq": [105, 139], "x_bound": 105, "z_bound": 105, "order_upw": 105, "gmres_maxit": 105, "500": [105, 192, 204], "gmres_restart": 105, "gmres_tol_limit": 105, "boussinesq": 105, "z": [105, 112, 113, 127], "300": 105, "order_upwind": 105, "upwind": 105, "bc_hor": [105, 138, 139], "bc_ver": [105, 138, 139], "dimems": 105, "neumann": [105, 129, 144], "xx": 105, "zz": 105, "sp": [105, 174, 175, 198], "d_upwind": 105, "gmres_logg": 105, "durran": 105, "fluid": [105, 124], "appl": 105, "32": [105, 193, 197, 204, 205], "verlag": 105, "york": 105, "2010": 105, "4419": 105, "6412": 105, "autonom": [106, 147], "varalpha": 106, "4u": 106, "invert": [106, 204], "link": [106, 152], "642": 106, "05221": 106, "fsw": 107, "c1": [107, 128], "001": [107, 146, 147], "rp": 107, "l1": 107, "c2": [107, 128], "buck": 107, "sw": 107, "f_": [107, 129], "roughli": 107, "percentag": 107, "bmod": 107, "l_1": 107, "puls": 107, "61": 107, "2012": [107, 114, 118, 132], "gyselinck": 107, "marti": 107, "sabariego": 107, "devic": 107, "steadi": [107, 124], "regim": 107, "electromot": 107, "2013": 107, "approx": 108, "6094379": 108, "t_switch_exact": 108, "theorem": 108, "lambda_f": 109, "gg": 109, "im": 109, "nversion": 109, "vibrat": 110, "spring": [110, 117, 153], "weak": [110, 114, 118, 132, 192, 204], "fpu": 110, "cubic": 110, "u_j": 110, "2_": 110, "v_j": 110, "1955": 110, "lo": 110, "alamo": 110, "la": [110, 203], "1940": 110, "enrico": 110, "segr\u00e9": 110, "ed": 110, "chicago": 110, "press": 110, "1965": 110, "eval_hamiltonian": [110, 117, 122, 126], "eval_mode_energi": 110, "trajectori": [110, 111, 117, 122, 126, 127], "mutual": [111, 126], "influenc": [111, 126], "motion": [111, 124, 126, 127], "law": [111, 126], "m_i": [111, 126], "_i": [111, 126], "m_j": [111, 126], "_j": [111, 126], "gravitation": [111, 126], "m_1": [111, 126], "_1": [111, 126], "aanda": 111, "aa": 111, "2002": 111, "aa1405": 111, "wikipedia": [111, 152], "planetary_mass": 111, "values_from_the_de405_ephemeri": 111, "travel": [112, 113], "kolmogorov": [112, 113], "petrovskii": [112, 113], "piskunov": [112, 113], "lambda_1": [112, 113, 130], "feng": [112, 113], "chao": [112, 113], "soliton": [112, 113], "fractal": [112, 113], "481": [112, 113], "488": [112, 113], "2008": [112, 113], "urrent": 112, "da": [113, 115], "sne": [113, 115], "tempor": [113, 115, 125, 198], "q_": [113, 115, 127], "localx": [113, 115], "xe": 113, "mx": 113, "col": 113, "formfunct": [113, 115], "formjacobian": [113, 115], "same_nonzero_pattern": [113, 115], "sigma_1": 113, "ksp": [113, 115, 119], "satish": [113, 115, 119], "balai": [113, 115, 119], "lisandro": [113, 115, 116, 119, 125], "dalcin": [113, 115, 116, 119, 125], "rodrigo": [113, 115, 119], "paz": [113, 115, 119], "pablo": [113, 115, 119], "kler": [113, 115, 119], "alejandro": [113, 115, 119], "cosimo": [113, 115, 119], "water": [113, 115, 119], "2011": [113, 115, 119], "get_sys_mat": 113, "assembl": [113, 127, 173, 175, 181, 198, 200], "c_nvar": [114, 118, 132, 192, 204], "famili": [114, 118, 132, 192, 204], "substanc": [114, 115, 116], "decai": [114, 115, 116], "feed": [114, 115, 116], "d_u": [114, 115, 116], "d_v": [114, 115, 116], "multipli": 114, "u_t": [114, 118], "v_t": 114, "trail": [114, 118, 132], "galerkin": [114, 118, 132], "synonym": [114, 118, 132], "trial": [114, 118, 132], "functionspac": [114, 118, 132], "w1": 114, "w2": 114, "f1": 114, "tensor": [114, 118, 132], "f2": 114, "autocatalyt": [114, 115, 116], "isotherm": [114, 115, 116], "stir": [114, 115, 116], "tank": [114, 115, 116], "reactor": [114, 115, 116], "isola": [114, 115, 116], "multist": [114, 115, 116], "chem": [114, 115, 116], "eng": [114, 115, 116], "1983": [114, 115, 116], "alna": [114, 118, 132], "blechta": [114, 118, 132], "hake": [114, 118, 132], "johansson": [114, 118, 132], "kehlet": [114, 118, 132], "logg": [114, 118, 132], "richardson": [114, 118, 132], "ring": [114, 118, 132], "rogn": [114, 118, 132], "archiv": [114, 118, 132], "mardal": [114, 118, 132], "dolfin": [114, 118, 132], "t_0": 114, "amat": 115, "pfft": [116, 125], "ku": 116, "kv": 116, "mikael": [116, 125], "mortensen": [116, 125], "david": [116, 125], "key": [116, 125], "multidimension": [116, 125], "chebfun": 116, "grayscott": 116, "kx": 117, "damp": 117, "amplitud": [117, 127], "beltoforion": 117, "de": [117, 152], "dirichletbc": 118, "bc_hom": 118, "homogen": 118, "fix_bc_for_residu": 118, "fix_residu": 118, "cnvar": [119, 194, 204], "sol_tol": [119, 194, 204], "sol_maxit": 119, "2_n": 120, "x_1": 120, "x_n": 120, "k_i": 120, "h\u00e9non": 122, "logist": 123, "rho": [124, 132], "6666666666666665": 124, "99": [124, 125, 129, 182, 188, 193, 194, 195, 201, 202, 204, 205], "exhibit": 124, "chaotic": 124, "butterfli": 124, "convect": 124, "layer": 124, "bottom": 124, "surfac": 124, "kept": 124, "proport": 124, "third": [124, 150, 201], "distort": 124, "profil": 124, "1175": 124, "1520": 124, "0469": 124, "1963": 124, "020": 124, "0130": 124, "dnf": 124, "y_3": 124, "reynold": 124, "supercrit": 124, "provok": 124, "instabl": 124, "nfev": 124, "newton_krylov": 125, "krylov": 125, "283185307179586": 125, "parallelis": 125, "nlin": 125, "0702010": 125, "000295912208286": 126, "omega_b": [127, 180, 181, 185, 200, 201], "omega_": [127, 180, 181, 185, 200, 201], "sig": [127, 180, 181, 185, 200, 201], "hat": 127, "e_": 127, "charg": 127, "x_": 127, "ext": 127, "epsilon": [127, 146, 147], "coulomb": 127, "die": 127, "glimmentladung": 127, "bei": 127, "niedrigem": 127, "druck": 127, "zwischen": 127, "koaxialen": 127, "zylindern": 127, "einem": 127, "axialen": 127, "magnetfeld": 127, "physica": 127, "1936": 127, "mathia": 127, "winkel": 127, "boris_solv": 127, "old_field": 127, "new_field": 127, "old_part": 127, "build_f": 127, "pepc": 127, "fast_interact": 127, "efield": 127, "get_interact": 127, "rpi": 128, "lpi": 128, "l_": 128, "cv": 129, "u_thresh": 129, "u_max": 129, "q_max": 129, "leak_rang": 129, "55": [129, 178, 180, 199, 200], "leak_typ": 129, "leak_transit": 129, "direct_solv": 129, "min_lintol": 129, "reference_sol_typ": 129, "cool": 129, "superconduct": 129, "leak": 129, "runawai": 129, "huge": 129, "destroi": 129, "cern": 129, "past": 129, "warrant": 129, "total": [129, 180, 185, 200, 201], "insul": 129, "volumetr": 129, "capac": 129, "thermal": 129, "power": 129, "densiti": 129, "xv": 129, "thin": 129, "shell": 129, "schnaubelt": 129, "wozniak": 129, "sch\u00f6p": 129, "supercond": 129, "technol": 129, "36": 129, "044004": 129, "1088": 129, "1361": 129, "6668": 129, "acbeea": 129, "eval_f_non_linear": 129, "get_non_linear_jacobian": 129, "usegpu": 130, "lambda_n": 130, "sequenc": [130, 131], "array_lik": [130, 131], "setup_gpu": 130, "xp": 130, "home": 130, "runner": 130, "micromamba": 130, "lib": 130, "site": 130, "xsp": 130, "crash_at_maxit": 131, "vortic": 132, "w_t": 132, "invers": [132, 192, 204], "mvec": 132, "imex_1st_order_mass": [132, 149, 192, 204], "__eval_": 132, "buildfdmatrix": [133, 137], "getbcleft": [133, 134, 137, 140], "getbcright": [133, 134, 137, 140], "gethorizontaldx": [133, 134], "getmatrix": [133, 134, 137, 140], "buildwave1dmatrix": 133, "getwave1dadvectionmatrix": [133, 135], "getwave1dmatrix": [133, 135], "getwavebcleft": [133, 135], "getwavebcright": [133, 135], "standard_integr": [133, 137], "bdf2": [133, 136, 137, 142], "rk_imex": [133, 136, 137, 142], "trapezoid": [133, 136, 137, 142, 150, 153, 161], "bc_left": [134, 135, 140], "bc_right": [134, 135, 140], "firsttimestep": [136, 142], "timestep": [136, 142], "um1": [136, 142], "f_solv": [136, 142], "m_fast": 136, "m_slow": 136, "f_fast": [136, 142], "f_fast_solv": [136, 142], "f_slow": [136, 142], "build2dfdmatrix": 137, "get2dmatrix": [137, 138], "get2dmesh": [137, 138], "get2dupwindmatrix": [137, 138], "getbchorizont": [137, 138], "getbcvert": [137, 138], "buildboussinesq2dmatrix": 137, "getboussinesq2dmatrix": [137, 139], "getboussinesq2dupwindmatrix": [137, 139], "getboussinesqbchorizont": [137, 139], "getboussinesqbcvert": [137, 139], "getupwindmatrix": [137, 140], "helper_class": 137, "callback": [137, 141], "splitexplicit": [137, 142], "unflatten": 137, "x_b": 138, "z_b": 138, "dz": [138, 142], "getcount": 141, "getresidu": 141, "pparam": 142, "numsmalltimestep": 142, "rk3lin": 142, "fslow": 142, "dtau": 142, "verletlin": 142, "f_fastmom": 142, "f_fastther": 142, "uin": 143, "nx": 143, "nz": 143, "sat": 144, "39": 144, "bcparam": 144, "mol": 144, "shift": 144, "neumann_bc_ord": 144, "5e": [145, 146, 147, 180, 189, 192, 196, 200, 203, 204, 205], "osti": 145, "gov": [145, 151], "servlet": 145, "purl": 145, "6111421": 145, "houwen": [146, 147], "sommeij": [146, 147], "1991": [146, 147], "scientif": [146, 147], "1028": [146, 147], "prothero": [146, 147], "robinson": [146, 147], "dg": [146, 147], "myprotherorobinson": [146, 147], "wether": [146, 147], "residuum": [146, 147], "wheter": [146, 147], "1974": [146, 147], "pp": [146, 147], "145": [146, 147], "162": [146, 147], "f_lin": [146, 147], "f_nonlin": [146, 147], "jac_lin": 146, "jac_nonlin": 146, "chemic": 147, "013": 147, "1000u_3": 147, "2500u_3": 147, "1000u_1": 147, "2500u_2": 147, "990731920827": 147, "009264413846": 147, "366532612659e": 147, "ellipt": 147, "eqnarrai": 147, "vw": 147, "uw": 147, "51uv": 147, "veen": 147, "1995": 147, "nonstiff": 147, "309": 147, "329": 147, "2t": 147, "dg2": 147, "dginv": 147, "dginv_lin": 147, "dginv_nonlin": 147, "seed": 148, "26266": 148, "dummi": [148, 171], "indent": 148, "half": [148, 153, 161, 182, 201], "adamsbashforthexplicit1step": [149, 150], "adamsmoultonimplicit1step": [149, 150], "adamsmoultonimplicit2step": [149, 150], "backwardeul": [149, 150, 151], "runge_kutta": 149, "ark54": [149, 151], "ark548l2sa": [149, 151], "ark548l2saerk": [149, 151], "ark548l2saerk2": [149, 151], "ark548l2saesdirk": [149, 151], "ark548l2saesdirk2": [149, 151], "butchertableau": [149, 151, 152], "butchertableauembed": [149, 151], "cash_karp": [149, 151], "cranknicholson": [149, 151], "dirk43": [149, 151], "esdirk43": [149, 151], "esdirk53": [149, 151], "explicitmidpointmethod": [149, 151], "forwardeul": [149, 151], "heun_eul": [149, 151], "implicitmidpointmethod": [149, 151], "rk4": [149, 151], "rungekutta": [149, 151, 152], "rungekuttaimex": [149, 151], "runge_kutta_nystrom": 149, "rkn": [149, 152], "rungekuttanystrom": [149, 152], "velocity_verlet": [149, 152], "boris_2nd_ord": [149, 180, 181, 185, 200, 201], "sweepermpi": [149, 156, 158], "imex_1st_order_mpi": 149, "dress": 150, "08333333333333333": 150, "6666666666666666": 150, "4166666666666667": 150, "generate_starting_valu": 150, "almost": 150, "impress": 150, "belov": 150, "koelner": 150, "dom": 150, "num_step": 150, "oldest": 150, "bespok": 150, "provision": 150, "ark5": 151, "8l": 151, "sa": 151, "erk": 151, "esdirk": 151, "1016": 151, "s0168": 151, "9274": 151, "00138": 151, "butchertableauclass": 151, "butchertableauclass_explicit": 151, "get_update_ord": 151, "205": 151, "1025": 151, "04757042": 151, "07389944": 151, "08074895": 151, "29921812": 151, "46382067": 151, "04803878": 151, "14689238": 151, "11740333": 151, "22170197": 151, "00759375": 151, "1784573": 151, "01974675": 151, "22154535": 151, "03612492": 151, "54553377": 151, "09554859": 151, "3386928": 151, "14043176": 151, "07058771": 151, "76287525": 151, "matrix_explicit": 151, "17753521": 151, "08239438": 151, "12262308": 151, "07552741": 151, "29017765": 151, "24492577": 151, "61510341": 151, "40294452": 151, "35401238": 151, "4857009": 151, "031256": 151, "46413844": 151, "23046868": 151, "84460712": 151, "125": [151, 189, 194, 196, 197, 203, 204, 205], "674808": 151, "38943865": 151, "69220068": 151, "09466623": 151, "21115733": 151, "48853707": 151, "25992958": 151, "19815049": 151, "92": 151, "09957696": 151, "40716288": 151, "16014818": 151, "1442366": 151, "77956562": 151, "21723324": 151, "apnum": 151, "007": 151, "kennedi": 151, "carpent": 151, "newer": 151, "appar": 151, "22222222": 151, "26824595": 151, "05794559": 151, "0089384": 151, "04330529": 151, "03401389": 151, "25515937": 151, "13179599": 151, "03237673": 151, "12385474": 151, "14270778": 151, "30932282": 151, "68291993": 151, "05882276": 151, "04130861": 151, "89718343": 151, "17366254": 151, "25479166": 151, "24190177": 151, "30740486": 151, "19998305": 151, "44444444": 151, "11111111": 151, "64760301": 151, "09182987": 151, "03544857": 151, "012009": 151, "34252355": 151, "26767786": 151, "11056894": 151, "85638959": 151, "00977228": 151, "21070865": 151, "07592412": 151, "20765519": 151, "23548432": 151, "46686371": 151, "29035988": 151, "37840597": 151, "56345584": 151, "28832383": 151, "32884988": 151, "61439672": 151, "3174778": 151, "71215206": 151, "11498708": 151, "09139032": 151, "04049657": 151, "75871412": 151, "11526943": 151, "35675713": 151, "72": 151, "955": 151, "06272422": 151, "25523316": 151, "23902755": 151, "39907952": 151, "14315725": 151, "18709281": 151, "oppos": 151, "claim": 151, "stiffli": 151, "singli": 151, "gamma": 151, "2222222222222222": 151, "among": 151, "connoisseur": 151, "fifth": 151, "79505": 151, "79507": 151, "075": 151, "225": 151, "2037037": 151, "59259259": 151, "2962963": 151, "0294958": 151, "34179688": 151, "04159433": 151, "40034541": 151, "06176758": 151, "875": 151, "0978836": 151, "40257649": 151, "21043771": 151, "2891022": 151, "10217737": 151, "3839079": 151, "24459274": 151, "01932199": 151, "bf01934920": 151, "83333333": 151, "57692308": 151, "98148148": 151, "81481481": 151, "65958848": 151, "27699588": 151, "04925926": 151, "25641026": 151, "16666667": 151, "40666667": 151, "04619048": 151, "64285714": 151, "42666667": 151, "56333333": 151, "esdirk4": 151, "6l": 151, "ntr": 151, "nasa": 151, "20160005923": 151, "0517767": 151, "07655461": 151, "52810922": 151, "72740635": 151, "58499506": 151, "65981763": 151, "01558764": 151, "38765767": 151, "50177262": 151, "10825502": 151, "14644661": 151, "625": 151, "s2": 151, "4142135623730951": 151, "09651334": 151, "52281995": 151, "52056786": 151, "08255805": 151, "23219692": 151, "esdirk5": 151, "27805384": 151, "31357496": 151, "43697244": 151, "09456105": 151, "13349473": 151, "05000194": 151, "22208425": 151, "09710432": 151, "03123381": 151, "06990092": 151, "89887281": 151, "61640883": 151, "12228335": 151, "5666084": 151, "69330188": 151, "55610768": 151, "02860124": 151, "44739556": 151, "70955276": 151, "11977427": 151, "38199341": 151, "99233927": 151, "24727121": 151, "Not": [151, 201], "fourth": 151, "everybodi": 151, "darl": 151, "33333333": 151, "success": [151, 152, 202], "realis": [151, 152], "q_delta": [151, 152], "butcher": [151, 152], "tableau": [151, 152], "wast": [151, 152], "flop": [151, 152], "tableaux": [151, 152], "substitut": [151, 152], "cheaper": [151, 152], "fundament": [151, 152], "collocation_class": [151, 152, 198], "get_butcher_tableau": 151, "get_q_matrix": 151, "get_full_f": [151, 152], "get_butcher_tableau_explicit": 151, "nystrom": 152, "540": 152, "78862": 152, "284": 152, "chapter": 152, "ii": 152, "attribu": 152, "butcher_tableau": 152, "funtion": 152, "algorithmu": 152, "sq": 153, "st": 153, "sx": 153, "get_scalar_problems_manysweep_mat": [153, 157], "friction": 153, "get_scalar_problems_picardsweep_mat": 153, "get_scalar_problems_sweeper_mat": [153, 157], "narrai": 153, "get_sweeper_mat": [153, 157], "qq": [153, 161], "qx": [153, 161], "qt": [153, 161], "qe": [154, 157, 178, 180, 199, 200], "do_full_upd": [154, 155, 156, 157, 159, 160], "administ": 156, "last_onli": [156, 158], "lambda_fast": 157, "lambda_slow": 157, "basetransfer_mass": 162, "base_transfer_mass": [162, 163], "transferfenicsmesh": [162, 192, 204], "mesh_to_mesh_fen": [162, 164, 192, 204], "transfermesh_fft": 162, "mesh_to_mesh_fft": [162, 166], "transfermesh_fft2d": 162, "mesh_to_mesh_fft2d": [162, 167], "transfermesh_mpifft": [162, 193, 204], "fft_to_fft": [162, 168, 193, 204], "transferpetscdmda": [162, 194, 204], "custon": [165, 167, 168, 169, 171], "rspace": [165, 167, 169], "pspace": [165, 167, 169], "irfft_object_fin": 166, "rfft_object_coars": 166, "pmesh": 168, "step_1": [172, 173, 174, 175, 176, 182, 198, 199, 201], "a_spatial_problem_setup": [172, 176, 198, 199], "1023": [172, 174, 176, 177, 178, 179, 184, 198, 199, 200, 201], "run_accuracy_check": [172, 173, 175, 176, 198, 199], "step_1_a_out": [172, 198], "sine": [172, 173, 198], "u_lap": [172, 173, 198], "981783e": [172, 176, 198, 199], "b_spatial_accuracy_check": [173, 182, 198, 201], "agg": [173, 175, 198], "pylab": [173, 175, 198], "nvars_list": [173, 175, 182, 198, 201], "get_accuracy_ord": [173, 175, 182, 198, 201], "step_1_b_out": [173, 198], "3f": [173, 175, 198], "plot_accuraci": [173, 175, 198], "step_1_accuracy_test_spac": [173, 198], "isclos": [173, 175, 197, 198, 205], "id_prev": [173, 175, 198], "prev_error": [173, 175, 198], "this_error": [173, 175, 198], "this_nvar": [173, 198], "old_nvar": [173, 198], "tmp": [173, 175, 198], "fontsiz": [173, 175, 198], "labels": [173, 175, 198], "titles": [173, 175, 198], "ytick": [173, 175, 198], "linewidth": [173, 175, 198], "rcparam": [173, 175, 198], "base_error": [173, 175, 198], "2nd": [173, 198], "order_guide_spac": [173, 175, 198], "min_err": [173, 175, 198], "1e99": [173, 175, 198], "max_err": [173, 175, 198], "0e00": [173, 175, 198], "err_list": [173, 175, 198], "markers": [173, 175, 198], "numpoint": [173, 175, 198], "bbox_inch": [173, 175, 198], "tight": [173, 175, 198], "888": [173, 198], "949": [173, 198], "976": [173, 198], "988": [173, 198], "994": [173, 198], "999": [173, 198], "982": [173, 198], "c_collocation_problem_setup": [174, 198], "solve_collocation_problem": [174, 198], "step_1_c_out": [174, 198], "kron": [174, 175, 198], "u0_col": [174, 175, 198], "u_col": [174, 175, 198], "spsolv": [174, 175, 198], "inf": [174, 175, 180, 198, 200], "803471e": [174, 198], "d_collocation_accuracy_check": [175, 198], "16383": [175, 198], "step_1_d_out": [175, 198], "step_1_accuracy_test_col": [175, 198], "this_dt": [175, 198], "old_dt": [175, 198], "spacn": [175, 198], "5th": [175, 198], "791": [175, 198], "364": [175, 198], "671": [175, 198], "step_2": [176, 177, 178, 199], "a_step_data_structur": [176, 199], "step_2_a_out": [176, 199], "b_my_first_sweep": [177, 199], "run_imex_sdc": [177, 199], "8e": [177, 180, 181, 184, 185, 189, 191, 196, 199, 200, 201, 203, 205], "step_2_b_out": [177, 199], "endpoint": [177, 199], "11190756e": [177, 178, 199], "68442667e": [177, 178, 199], "80377591e": [177, 178, 199], "21707909e": [177, 178, 199], "38272147e": [177, 178, 199], "36445413e": [177, 178, 199], "68953216e": [177, 178, 199], "52601840e": [177, 178, 199], "07249025e": [177, 178, 199], "27343378e": [177, 178, 199], "18931339e": [177, 178, 199], "48499772e": [177, 178, 199], "c_using_pysdcs_frontend": [178, 199], "log_to_fil": [178, 180, 199, 200], "step_2_c_out": [178, 199], "662": [178, 199], "146": [178, 180, 199, 200], "astonish": [178, 180, 199, 200], "87": [178, 180, 199, 200], "_____": [178, 180, 199, 200], "____": [178, 180, 199, 200], "___": [178, 180, 199, 200], "160": [178, 180, 199, 200], "overview": [178, 180, 199, 200], "227": [178, 180, 199, 200], "default_hook": [178, 180, 199, 200], "defaulthook": [178, 199], "mssdc_jac": [178, 180, 196, 199, 200, 205], "predict_typ": [178, 180, 187, 188, 189, 193, 199, 200, 202, 203, 204], "use_iteration_estim": [178, 180, 199, 200], "dt_initi": [178, 180, 199, 200], "residual_typ": [178, 180, 199, 200], "full_ab": [178, 180, 199, 200], "ee": [178, 180, 199, 200], "do_coll_upd": [178, 180, 199, 200], "skip_residual_comput": [178, 180, 199, 200], "230": [178, 180, 199, 200], "232": [178, 180, 199, 200], "666": [178, 199], "170": [178, 180, 199, 200], "100000": [178, 199], "669": [178, 199], "673": [178, 199], "676": [178, 199], "680": [178, 199], "683": [178, 199], "686": [178, 199], "690": [178, 199], "693": [178, 199], "696": [178, 199], "700": [178, 199], "703": [178, 199], "708": [178, 199], "200000": [178, 199], "69984764e": [178, 199], "711": [178, 199], "05518433e": [178, 199], "714": [178, 199], "40642621e": [178, 199], "718": [178, 199], "85982063e": [178, 199], "721": [178, 199], "79216702e": [178, 199], "724": [178, 199], "12278839e": [178, 199], "728": [178, 199], "85495353e": [178, 199], "731": [178, 199], "78947003e": [178, 199], "734": [178, 199], "68230621e": [178, 199], "738": [178, 199], "26313315e": [178, 199], "741": [178, 199], "82951499e": [178, 199], "744": [178, 199], "99691114e": [178, 199], "745": [178, 199], "340": [178, 180, 199, 200], "166689e": [178, 199], "step_3": [179, 180, 181, 185, 200, 201], "a_getting_statist": [179, 200], "step_3_a_out": [179, 200], "residual_post_iter": [179, 200], "verbos": [179, 181, 200], "timing_setup": [179, 200], "timing_comm": [179, 200], "residual_post_sweep": [179, 200], "timing_sweep": [179, 200], "timing_iter": [179, 200], "timing_step": [179, 200], "residual_post_step": [179, 200], "_recomput": [179, 200], "1119e": [179, 200], "6844e": [179, 200], "8038e": [179, 200], "2171e": [179, 200], "3827e": [179, 200], "3645e": [179, 200], "6895e": [179, 200], "5260e": [179, 200], "0725e": [179, 200], "2734e": [179, 200], "1893e": [179, 200], "4850e": [179, 200], "70": [179, 193, 200, 204], "80": [179, 200], "b_adding_statist": [180, 200], "hookclass_particl": [180, 181, 185, 200, 201], "particle_hook": [180, 181, 185, 200, 201], "run_penning_trap_simul": [180, 185, 200, 201], "etot": [180, 181, 185, 200, 201], "base_energi": [180, 181, 185, 200, 201], "step_3_b_out": [180, 200], "10f": [180, 185, 200, 201], "57": [180, 200], "080": [180, 200], "0625": [180, 188, 200, 202], "000000": [180, 200], "53203678e": [180, 200], "092": [180, 200], "09852117e": [180, 200], "097": [180, 200], "50301513e": [180, 200], "103": [180, 200], "67724741e": [180, 200], "108": [180, 200], "95583202e": [180, 200], "113": [180, 200], "11405073e": [180, 200], "119": [180, 200], "26902403e": [180, 200], "124": [180, 200], "16534547e": [180, 200], "130": [180, 200], "66968022e": [180, 200], "135": [180, 200], "09408171e": [180, 200], "141": [180, 200], "17123386e": [180, 200], "143": [180, 200], "8799": [180, 200], "5000000000": [180, 200], "00000000e": [180, 185, 200, 201], "8785": [180, 200], "0038936088": [180, 200], "44961064e": [180, 200], "c_study_colloc": [181, 200], "stats_dict": [181, 200], "ediff": [181, 200], "step_3_c_out": [181, 200], "cclass": [181, 200], "final_energi": [181, 200], "ediff_expect": [181, 200], "qtype": [181, 200], "44960920e": [181, 200], "33862938e": [181, 200], "32710645e": [181, 200], "step_4": [182, 183, 184, 185, 201], "a_spatial_transfer_oper": [182, 201], "nvars_fin": [182, 201], "nvars_fine_list": [182, 201], "4i": [182, 183, 201], "pfine": [182, 201], "pcoars": [182, 201], "xvalues_fin": [182, 201], "uexact_fin": [182, 201], "xvalues_coars": [182, 201], "uexact_coars": [182, 201], "uinter": [182, 201], "step_4_a_out": [182, 201], "91": [182, 201], "35": [182, 201], "98": [182, 201], "62": [182, 189, 190, 191, 195, 196, 197, 201, 203, 205], "b_multilevel_hierarchi": [183, 201], "31": [183, 186, 189, 196, 201, 202, 203, 205], "step_4_b_out": [183, 201], "c_sdc_vs_mlsdc": [184, 201], "sweeper_params_sdc": [184, 201], "sweeper_params_mlsdc": [184, 201], "problem_params_sdc": [184, 201], "problem_params_mlsdc": [184, 201], "511": [184, 187, 201, 202], "description_sdc": [184, 201], "description_mlsdc": [184, 201], "controller_sdc": [184, 201], "controller_mlsdc": [184, 201], "uend_sdc": [184, 201], "stats_sdc": [184, 185, 201], "uend_mlsdc": [184, 201], "stats_mlsdc": [184, 185, 201], "niter_sdc": [184, 201], "niter_mlsdc": [184, 201], "err_sdc": [184, 201], "err_mlsdc": [184, 201], "step_4_c_out": [184, 201], "96232037e": [184, 201], "95409337e": [184, 201], "22700796e": [184, 201], "d_mlsdc_with_particl": [185, 201], "penningtrap_3d_coars": [185, 201], "penningtrap_coars": [185, 201], "time_sdc": [185, 201], "time_mlsdc": [185, 201], "stats_mlsdc_fint": [185, 201], "time_mlsdc_fint": [185, 201], "step_4_d_out": [185, 201], "8f": [185, 201], "energy_sdc": [185, 201], "energy_mlsdc": [185, 201], "energy_mlsdc_fint": [185, 201], "transfer_param": [185, 201], "start_tim": [185, 201], "perf_count": [185, 201], "58912385": [185, 201], "03606646": [185, 201], "66120638": [185, 201], "407936": [185, 201], "7556966486": [185, 201], "406977": [185, 201], "9425667246": [185, 201], "35039652e": [185, 201], "9425660003": [185, 201], "9428639794": [185, 201], "35039579e": [185, 201], "step_5": [186, 187, 188, 202], "a_multistep_multilevel_hierarchi": [186, 202], "step_5_a_out": [186, 202], "b_my_first_pfasst_run": [187, 202], "pfasst_burnin": [187, 188, 189, 202, 203], "num_proc_list": [187, 188, 189, 190, 202, 203], "log2": [187, 188, 202], "step_5_b_out": [187, 202], "3505e": [187, 202], "94": [187, 188, 202], "88": [187, 189, 190, 191, 195, 196, 202, 203, 205], "33": [187, 202], "c_advection_and_pfasst": [188, 202], "qi_list": [188, 202], "niters_min_al": [188, 202], "niters_max_al": [188, 202], "step_5_c_out": [188, 202], "1365e": [188, 202], "82": [188, 202], "93": [188, 202], "59": [188, 202], "44": [188, 202], "29": [188, 202], "27": [188, 202], "48": [188, 202], "step_6": [189, 190, 191, 195, 203, 205], "a_run_non_mpi_control": [189, 190, 191, 195, 203, 205], "multi_level": [189, 190, 203], "set_parameters_ml": [189, 191, 195, 203, 205], "set_parameters_sl": [189, 203], "1i": [189, 191, 195, 203, 205], "weird": [189, 191, 203], "errtol": [189, 197, 203, 205], "ask": [189, 203, 205], "step_6_a_sl_out": [189, 203], "step_6_a_ml_out": [189, 203], "87627033e": [189, 203], "87300679e": [189, 191, 203], "87272106e": [189, 191, 203], "87294206e": [189, 191, 203], "87290945e": [189, 190, 191, 203], "b_odd_temporal_distribut": [190, 203], "main_a": [190, 203], "odd": [190, 191], "step_6_b_out": [190, 191, 203], "87358935e": [190, 191, 203], "87358097e": [190, 191, 203], "87271747e": [190, 191, 203], "c_mpi_parallel": [191, 203], "playground_parallel": [191, 203], "subprocess": [191, 203], "del": [191, 203], "importerror": [191, 203], "my_env": [191, 203], "coverage_process_start": [191, 203], "num_procs_list": [191, 203], "step_6_c1_out": [191, 203], "cmd": [191, 203], "popen": [191, 203], "stdout": [191, 203], "pipe": [191, 203], "stderr": [191, 203], "readlin": [191, 203], "returncod": [191, 203], "step_6_c2_out": [191, 203], "sy": [191, 194, 203, 204], "iter_counts_list": [191, 203], "argv": [191, 194, 203, 204], "iter_counts_gath": [191, 203], "sublist": [191, 203], "step_7": [192, 193, 194, 204], "a_pysdc_with_fen": [192, 204], "ml": [192, 193, 197, 204, 205], "ugli": [192, 204], "problemclass": [192, 204], "run_vari": [192, 204], "mass_inv": [192, 204], "mass_timebc": [192, 204], "step_7_a_out": [192, 204], "14e": [192, 204], "25e": [192, 204], "NOT": [192, 204], "permut": [192, 204], "run_pfasst_vari": [192, 204], "1387407230222816e": [192, 204], "6454": [192, 204], "1387594756569534e": [192, 204], "2230": [192, 204], "2473562155116167e": [192, 204], "2194": [192, 204], "138768636885694e": [192, 204], "2923": [192, 204], "1387216566052821e": [192, 204], "9028": [192, 204], "2473561574763597e": [192, 204], "8893": [192, 204], "1150087179536389e": [192, 204], "26": [192, 204], "6842": [192, 204], "b_pysdc_with_mpi4pyfft": [193, 204], "nl": [193, 204], "fine_onli": [193, 204], "step_7_b_out": [193, 204], "133e": [193, 204], "maxmean": [193, 204], "1321e": [193, 204], "2589": [193, 204], "1749e": [193, 204], "9988": [193, 204], "1316e": [193, 204], "2568": [193, 204], "1744e": [193, 204], "1563": [193, 204], "65": [193, 194, 204], "1306e": [193, 204], "6345": [193, 204], "1688e": [193, 204], "4791": [193, 204], "c_pysdc_with_petsc": [194, 204], "world_rank": [194, 204], "world_siz": [194, 204], "space_comm": [194, 204], "space_rank": [194, 204], "time_comm": [194, 204], "time_rank": [194, 204], "step_7_c_out": [194, 204], "8967": [194, 204], "9479e": [194, 204], "8411": [194, 204], "7470": [194, 204], "7476": [194, 204], "step_8": [195, 196, 197, 205], "a_visualize_residu": [195, 205], "min_it": [195, 205], "max_it": [195, 205], "step_8_a_out": [195, 205], "step_8_residu": [195, 205], "1555e": [195, 205], "b_multistep_sdc": [196, 205], "description_pfasst": [196, 205], "description_mssdc": [196, 205], "controller_params_jac": [196, 205], "controller_params_g": [196, 205], "controller_mssdc_jac": [196, 205], "controller_mssdc_g": [196, 205], "controller_pfasst": [196, 205], "uend_pfasst": [196, 205], "stats_pfasst": [196, 205], "uend_mssdc_jac": [196, 205], "stats_mssdc_jac": [196, 205], "uend_mssdc_g": [196, 205], "stats_mssdc_g": [196, 205], "err_mssdc_jac": [196, 205], "err_mssdc_g": [196, 205], "err_pfasst": [196, 205], "diff_jac": [196, 205], "diff_g": [196, 205], "diff_jac_g": [196, 205], "step_8_b_out": [196, 205], "iter_counts_pfasst": [196, 205], "iter_counts_mssdc_jac": [196, 205], "iter_counts_mssdc_g": [196, 205], "item_pfasst": [196, 205], "item_mssdc_jac": [196, 205], "item_mssdc_g": [196, 205], "parmssdc": [196, 205], "sermssdc": [196, 205], "step_8_residuals_mssdc_jac": [196, 205], "step_8_residuals_mssdc_g": [196, 205], "87344391e": [196, 205], "87650037e": [196, 205], "87540078e": [196, 205], "05646515e": [196, 205], "95687314e": [196, 205], "09959201e": [196, 205], "c_iteration_estim": [197, 205], "mesh_to_mesh_nc": [197, 205], "hookclass_error_output": [197, 205], "error_output": [197, 205], "setup_diffus": [197, 205], "setup_advect": [197, 205], "setup_auzing": [197, 205], "ndim_list": [197, 205], "nsteps_list": [197, 205], "nproc": [197, 205], "step_8_c_out": [197, 205], "mean_number_of_iter": [197, 205], "pde_error": [197, 205], "pde_error_after_step": [197, 205], "coll_error": [197, 205], "coll_error_after_step": [197, 205], "pde_err": [197, 205], "coll_err": [197, 205], "1250": [197, 205], "7804e": [197, 205], "4661e": [197, 205], "2500": [197, 205], "9619e": [197, 205], "8075e": [197, 205], "3750": [197, 205], "2300e": [197, 205], "0376e": [197, 205], "5000": [197, 205], "8684e": [197, 205], "6490e": [197, 205], "6250": [197, 205], "7128e": [197, 205], "8078e": [197, 205], "7500": [197, 205], "6619e": [197, 205], "5365e": [197, 205], "8750": [197, 205], "6530e": [197, 205], "0645e": [197, 205], "0000": [197, 205], "6478e": [197, 205], "2759e": [197, 205], "3308087200002774": [197, 205], "8191e": [197, 205], "3584e": [197, 205], "7174e": [197, 205], "0504e": [197, 205], "2849e": [197, 205], "9697e": [197, 205], "7307e": [197, 205], "6494e": [197, 205], "0813e": [197, 205], "0748e": [197, 205], "3516e": [197, 205], "7096e": [197, 205], "5501e": [197, 205], "9957e": [197, 205], "6813e": [197, 205], "6975e": [197, 205], "7365206729996316": [197, 205], "6459e": [197, 205], "5511e": [197, 205], "2907e": [197, 205], "0930e": [197, 205], "3307e": [197, 205], "4571e": [197, 205], "8225e": [197, 205], "1875e": [197, 205], "5517e": [197, 205], "9147e": [197, 205], "19782948400006717": [197, 205], "7050e": [197, 205], "1841e": [197, 205], "4360e": [197, 205], "1141e": [197, 205], "1852e": [197, 205], "4836e": [197, 205], "1886e": [197, 205], "8580e": [197, 205], "2256e": [197, 205], "1830e": [197, 205], "5987e": [197, 205], "9666e": [197, 205], "1819e": [197, 205], "5727528760003224": [197, 205], "6598e": [197, 205], "0010e": [197, 205], "4700e": [197, 205], "5583e": [197, 205], "1829e": [197, 205], "6153e": [197, 205], "8266e": [197, 205], "8338e": [197, 205], "13691758499999196": [197, 205], "2389e": [197, 205], "4469e": [197, 205], "1763e": [197, 205], "7832e": [197, 205], "3399e": [197, 205], "8017e": [197, 205], "1486e": [197, 205], "3802e": [197, 205], "16720116200031043": [197, 205], "heatequation_1d_fd": 198, "encapsul": 198, "quick": 198, "peak": 198, "reveal": 198, "sometim": 198, "he": 198, "happili": [198, 199], "subroutin": 198, "gaussradau_right": 198, "fun": 198, "beat": 198, "thoroughli": 198, "dig": 199, "deeper": 199, "ran": 199, "normal": [199, 203], "steer": 199, "life": 199, "heatequation_1d_fd_forc": 199, "rhs_imex_mesh": 199, "shed": 199, "light": 199, "deepli": 199, "tediou": [199, 202], "wors": 199, "behold": 199, "proce": 199, "friendliest": 199, "suppress": 199, "controller_paramet": 199, "capabl": [199, 203], "contrast": [199, 200, 202], "focu": 200, "stamp": 200, "admittedli": 200, "complic": [200, 202], "electromagnet": 200, "ineffici": 200, "interestingli": 200, "symmetr": 200, "conserv": 200, "thumb": 200, "altern": [200, 205], "fly": 200, "knowledg": 201, "longest": 201, "pretti": [201, 205], "off": 201, "fact": [201, 204], "finer": 201, "msdc": 201, "sensit": 201, "interplai": 201, "trivial": 201, "_nonmpi": 202, "principl": 202, "quantiti": 202, "parabol": 202, "heavili": 202, "saw": 202, "consider": 202, "At": 202, "sweeper_help": 202, "get_qd": 202, "mpi_parallel": 203, "accident": 203, "exercis": 203, "snippet": 203, "set_paramet": 203, "headach": 203, "nosetest": 203, "methodologi": 204, "valuabl": 204, "latter": 204, "With": 204, "unfavor": 204, "testb": 204, "petsc_dmda_grid": 204, "mere": 205, "pick": 205, "dead": 205, "prevent": 205, "safe": 205, "lipschitz": 205, "procedur": 205, "met": 205, "shall": 205}, "objects": {"": [[40, 0, 0, "-", "core"], [55, 0, 0, "-", "helpers"], [65, 0, 0, "-", "implementations"]], "core": [[41, 0, 0, "-", "BaseTransfer"], [42, 0, 0, "-", "Collocation"], [43, 0, 0, "-", "Common"], [44, 0, 0, "-", "Controller"], [45, 0, 0, "-", "ConvergenceController"], [46, 0, 0, "-", "Errors"], [47, 0, 0, "-", "Hooks"], [48, 0, 0, "-", "Lagrange"], [49, 0, 0, "-", "Level"], [50, 0, 0, "-", "Nodes"], [51, 0, 0, "-", "Problem"], [52, 0, 0, "-", "SpaceTransfer"], [53, 0, 0, "-", "Step"], [54, 0, 0, "-", "Sweeper"]], "core.BaseTransfer": [[41, 1, 1, "", "base_transfer"]], "core.BaseTransfer.base_transfer": [[41, 2, 1, "", "coarse"], [41, 2, 1, "", "fine"], [41, 3, 1, "", "get_transfer_matrix_Q"], [41, 2, 1, "", "logger"], [41, 2, 1, "", "params"], [41, 3, 1, "", "prolong"], [41, 3, 1, "", "prolong_f"], [41, 3, 1, "", "restrict"]], "core.Collocation": [[42, 1, 1, "", "CollBase"]], "core.Collocation.CollBase": [[42, 2, 1, "", "Qmat"], [42, 2, 1, "", "Smat"], [42, 2, 1, "", "delta_m"], [42, 3, 1, "", "evaluate"], [42, 2, 1, "", "left_is_node"], [42, 2, 1, "", "nodes"], [42, 2, 1, "", "num_nodes"], [42, 2, 1, "", "right_is_node"], [42, 2, 1, "", "tleft"], [42, 2, 1, "", "tright"], [42, 2, 1, "", "weights"]], "core.Common": [[43, 1, 1, "", "RegisterParams"]], "core.Common.RegisterParams": [[43, 2, 1, "", "_parNames"], [43, 2, 1, "", "_parNamesReadOnly"], [43, 4, 1, "id0", "params"]], "core.Controller": [[44, 1, 1, "", "controller"]], "core.Controller.controller": [[44, 3, 1, "", "add_convergence_controller"], [44, 3, 1, "", "add_hook"], [44, 3, 1, "", "dump_setup"], [44, 3, 1, "", "get_convergence_controllers_as_table"], [44, 4, 1, "", "hooks"], [44, 3, 1, "", "return_stats"], [44, 3, 1, "", "run"], [44, 3, 1, "", "setup_convergence_controllers"], [44, 3, 1, "", "welcome_message"]], "core.ConvergenceController": [[45, 1, 1, "", "ConvergenceController"], [45, 1, 1, "", "Pars"], [45, 1, 1, "", "Status"]], "core.ConvergenceController.ConvergenceController": [[45, 3, 1, "", "Recv"], [45, 3, 1, "", "Send"], [45, 3, 1, "", "add_variable"], [45, 3, 1, "", "check_iteration_status"], [45, 3, 1, "", "check_parameters"], [45, 3, 1, "", "convergence_control"], [45, 3, 1, "", "debug"], [45, 3, 1, "", "dependencies"], [45, 3, 1, "", "determine_restart"], [45, 3, 1, "", "get_new_step_size"], [45, 3, 1, "", "log"], [45, 3, 1, "", "post_iteration_processing"], [45, 3, 1, "", "post_spread_processing"], [45, 3, 1, "", "post_step_processing"], [45, 3, 1, "", "pre_iteration_processing"], [45, 3, 1, "", "prepare_MPI_datatypes"], [45, 3, 1, "", "prepare_MPI_logical_operations"], [45, 3, 1, "", "prepare_next_block"], [45, 3, 1, "", "recv"], [45, 3, 1, "", "reset_buffers_nonMPI"], [45, 3, 1, "", "reset_status_variables"], [45, 3, 1, "", "reset_variable"], [45, 3, 1, "", "send"], [45, 3, 1, "", "setup"], [45, 3, 1, "", "setup_status_variables"]], "core.Errors": [[46, 5, 1, "", "CollocationError"], [46, 5, 1, "", "CommunicationError"], [46, 5, 1, "", "ControllerError"], [46, 5, 1, "", "ConvergenceError"], [46, 5, 1, "", "DataError"], [46, 5, 1, "", "ParameterError"], [46, 5, 1, "", "ProblemError"], [46, 5, 1, "", "ReadOnlyError"], [46, 5, 1, "", "TransferError"], [46, 5, 1, "", "UnlockError"]], "core.Hooks": [[47, 1, 1, "", "Entry"], [47, 1, 1, "", "hooks"]], "core.Hooks.Entry": [[47, 2, 1, "", "iter"], [47, 2, 1, "", "level"], [47, 2, 1, "", "num_restarts"], [47, 2, 1, "", "process"], [47, 2, 1, "", "process_sweeper"], [47, 2, 1, "", "sweep"], [47, 2, 1, "", "time"], [47, 2, 1, "", "type"]], "core.Hooks.hooks": [[47, 2, 1, "", "__num_restarts"], [47, 2, 1, "", "__stats"], [47, 3, 1, "", "add_to_stats"], [47, 2, 1, "id0", "entry"], [47, 3, 1, "", "increment_stats"], [47, 2, 1, "", "logger"], [47, 2, 1, "", "meta_data"], [47, 3, 1, "", "post_comm"], [47, 3, 1, "", "post_iteration"], [47, 3, 1, "", "post_predict"], [47, 3, 1, "", "post_run"], [47, 3, 1, "", "post_setup"], [47, 3, 1, "", "post_step"], [47, 3, 1, "", "post_sweep"], [47, 3, 1, "", "pre_comm"], [47, 3, 1, "", "pre_iteration"], [47, 3, 1, "", "pre_predict"], [47, 3, 1, "", "pre_run"], [47, 3, 1, "", "pre_setup"], [47, 3, 1, "", "pre_step"], [47, 3, 1, "", "pre_sweep"], [47, 3, 1, "", "reset_stats"], [47, 3, 1, "", "return_stats"]], "core.Lagrange": [[48, 1, 1, "", "LagrangeApproximation"], [48, 6, 1, "", "computeFejerRule"]], "core.Lagrange.LagrangeApproximation": [[48, 3, 1, "", "getIntegrationMatrix"], [48, 3, 1, "", "getInterpolationMatrix"], [48, 4, 1, "", "n"], [48, 2, 1, "", "points"], [48, 2, 1, "", "weights"]], "core.Level": [[49, 1, 1, "", "level"]], "core.Level.level": [[49, 4, 1, "", "dt"], [49, 2, 1, "", "f"], [49, 2, 1, "", "fold"], [49, 2, 1, "", "level_index"], [49, 2, 1, "", "params"], [49, 4, 1, "", "prob"], [49, 3, 1, "", "reset_level"], [49, 2, 1, "", "status"], [49, 4, 1, "", "sweep"], [49, 4, 1, "", "tag"], [49, 2, 1, "", "tau"], [49, 4, 1, "", "time"], [49, 2, 1, "", "u"], [49, 2, 1, "", "uend"], [49, 2, 1, "", "uold"]], "core.Nodes": [[50, 5, 1, "", "NodesError"], [50, 1, 1, "", "NodesGenerator"]], "core.Nodes.NodesGenerator": [[50, 3, 1, "", "evalOrthogPoly"], [50, 3, 1, "", "getNodes"], [50, 3, 1, "", "getOrthogPolyCoefficients"], [50, 3, 1, "", "getTridiagCoefficients"], [50, 2, 1, "", "node_type"], [50, 2, 1, "", "quad_type"]], "core.Problem": [[51, 1, 1, "", "WorkCounter"], [51, 1, 1, "", "ptype"]], "core.Problem.WorkCounter": [[51, 3, 1, "", "decrement"]], "core.Problem.ptype": [[51, 3, 1, "", "apply_mass_matrix"], [51, 2, 1, "", "dtype_f"], [51, 2, 1, "", "dtype_u"], [51, 3, 1, "", "eval_f"], [51, 4, 1, "", "f_init"], [51, 3, 1, "", "generate_scipy_reference_solution"], [51, 3, 1, "", "get_default_sweeper_class"], [51, 3, 1, "", "get_fig"], [51, 2, 1, "id0", "logger"], [51, 3, 1, "", "plot"], [51, 4, 1, "", "u_init"]], "core.SpaceTransfer": [[52, 1, 1, "", "space_transfer"]], "core.SpaceTransfer.space_transfer": [[52, 2, 1, "", "coarse_prob"], [52, 2, 1, "", "fine_prob"], [52, 2, 1, "", "logger"], [52, 2, 1, "", "params"], [52, 3, 1, "", "prolong"], [52, 3, 1, "", "restrict"]], "core.Step": [[53, 1, 1, "", "step"]], "core.Step.step": [[53, 3, 1, "", "connect_levels"], [53, 4, 1, "", "dt"], [53, 3, 1, "", "init_step"], [53, 2, 1, "", "levels"], [53, 2, 1, "", "logger"], [53, 4, 1, "", "next"], [53, 2, 1, "", "params"], [53, 4, 1, "", "prev"], [53, 3, 1, "", "reset_step"], [53, 2, 1, "", "status"], [53, 4, 1, "", "time"], [53, 3, 1, "", "transfer"]], "core.Sweeper": [[54, 1, 1, "", "sweeper"]], "core.Sweeper.sweeper": [[54, 2, 1, "", "coll"], [54, 3, 1, "", "compute_end_point"], [54, 3, 1, "", "compute_residual"], [54, 3, 1, "", "get_Qdelta_explicit"], [54, 3, 1, "", "get_Qdelta_implicit"], [54, 3, 1, "", "integrate"], [54, 4, 1, "", "level"], [54, 2, 1, "", "logger"], [54, 2, 1, "", "params"], [54, 3, 1, "", "predict"], [54, 4, 1, "", "rank"], [54, 3, 1, "", "update_nodes"]], "helpers": [[56, 0, 0, "-", "NCCL_communicator"], [57, 0, 0, "-", "plot_helper"], [58, 0, 0, "-", "problem_helper"], [59, 0, 0, "-", "pysdc_helper"], [60, 0, 0, "-", "setup_helper"], [61, 0, 0, "-", "stats_helper"], [62, 0, 0, "-", "testing"], [63, 0, 0, "-", "transfer_helper"], [64, 0, 0, "-", "visualization_tools"]], "helpers.NCCL_communicator": [[56, 1, 1, "", "NCCLComm"]], "helpers.NCCL_communicator.NCCLComm": [[56, 3, 1, "", "Allreduce"], [56, 3, 1, "", "Reduce"], [56, 3, 1, "", "get_count"], [56, 3, 1, "", "get_dtype"], [56, 3, 1, "", "get_op"]], "helpers.plot_helper": [[57, 6, 1, "", "figsize"], [57, 6, 1, "", "figsize_by_journal"], [57, 6, 1, "", "newfig"], [57, 6, 1, "", "savefig"], [57, 6, 1, "", "setup_mpl"]], "helpers.problem_helper": [[58, 6, 1, "", "get_1d_grid"], [58, 6, 1, "", "get_finite_difference_matrix"], [58, 6, 1, "", "get_finite_difference_stencil"], [58, 6, 1, "", "get_steps"]], "helpers.pysdc_helper": [[59, 1, 1, "", "FrozenClass"]], "helpers.pysdc_helper.FrozenClass": [[59, 2, 1, "", "__isfrozen"], [59, 3, 1, "", "get"]], "helpers.setup_helper": [[60, 6, 1, "", "generate_description"]], "helpers.stats_helper": [[61, 6, 1, "", "filter_stats"], [61, 6, 1, "", "get_list_of_types"], [61, 6, 1, "", "get_sorted"], [61, 6, 1, "", "sort_stats"]], "helpers.testing": [[62, 1, 1, "", "DataChecker"]], "helpers.testing.DataChecker": [[62, 3, 1, "", "storeAndCheck"], [62, 3, 1, "", "writeToJSON"]], "helpers.transfer_helper": [[63, 6, 1, "", "border_padding"], [63, 6, 1, "", "continue_periodic_array"], [63, 6, 1, "", "interpolation_matrix_1d"], [63, 6, 1, "", "next_neighbors"], [63, 6, 1, "", "next_neighbors_periodic"], [63, 6, 1, "", "restriction_matrix_1d"]], "helpers.visualization_tools": [[64, 6, 1, "", "show_residual_across_simulation"]], "implementations": [[66, 0, 0, "-", "controller_classes"], [69, 0, 0, "-", "convergence_controller_classes"], [86, 0, 0, "-", "datatype_classes"], [92, 0, 0, "-", "problem_classes"], [149, 0, 0, "-", "sweeper_classes"], [162, 0, 0, "-", "transfer_classes"]], "implementations.controller_classes": [[67, 0, 0, "-", "controller_MPI"], [68, 0, 0, "-", "controller_nonMPI"]], "implementations.controller_classes.controller_MPI": [[67, 1, 1, "", "controller_MPI"]], "implementations.controller_classes.controller_MPI.controller_MPI": [[67, 3, 1, "", "check_iteration_estimate"], [67, 3, 1, "", "default"], [67, 3, 1, "", "it_check"], [67, 3, 1, "", "it_coarse"], [67, 3, 1, "", "it_down"], [67, 3, 1, "", "it_fine"], [67, 3, 1, "", "it_up"], [67, 3, 1, "", "pfasst"], [67, 3, 1, "", "predict"], [67, 3, 1, "", "recv"], [67, 3, 1, "", "recv_full"], [67, 3, 1, "", "restart_block"], [67, 3, 1, "", "run"], [67, 3, 1, "", "send_full"], [67, 3, 1, "", "spread"], [67, 3, 1, "", "wait_with_interrupt"]], "implementations.controller_classes.controller_nonMPI": [[68, 1, 1, "", "controller_nonMPI"]], "implementations.controller_classes.controller_nonMPI.controller_nonMPI": [[68, 3, 1, "", "default"], [68, 3, 1, "", "it_check"], [68, 3, 1, "", "it_coarse"], [68, 3, 1, "", "it_down"], [68, 3, 1, "", "it_fine"], [68, 3, 1, "", "it_up"], [68, 3, 1, "", "pfasst"], [68, 3, 1, "", "predict"], [68, 3, 1, "", "recv_full"], [68, 3, 1, "", "restart_block"], [68, 3, 1, "", "run"], [68, 3, 1, "", "send_full"], [68, 3, 1, "", "spread"]], "implementations.convergence_controller_classes": [[70, 0, 0, "-", "adaptive_collocation"], [71, 0, 0, "-", "adaptivity"], [72, 0, 0, "-", "basic_restarting"], [73, 0, 0, "-", "check_convergence"], [74, 0, 0, "-", "check_iteration_estimator"], [75, 0, 0, "-", "crash"], [76, 0, 0, "-", "estimate_contraction_factor"], [77, 0, 0, "-", "estimate_embedded_error"], [78, 0, 0, "-", "estimate_extrapolation_error"], [79, 0, 0, "-", "estimate_polynomial_error"], [80, 0, 0, "-", "hotrod"], [81, 0, 0, "-", "inexactness"], [82, 0, 0, "-", "interpolate_between_restarts"], [83, 0, 0, "-", "spread_step_sizes"], [84, 0, 0, "-", "step_size_limiter"], [85, 0, 0, "-", "store_uold"]], "implementations.convergence_controller_classes.adaptive_collocation": [[70, 1, 1, "", "AdaptiveCollocation"]], "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation": [[70, 3, 1, "", "check_parameters"], [70, 3, 1, "", "matmul"], [70, 3, 1, "", "post_iteration_processing"], [70, 3, 1, "", "post_spread_processing"], [70, 3, 1, "", "reset_status_variables"], [70, 3, 1, "", "setup"], [70, 3, 1, "", "setup_status_variables"], [70, 3, 1, "", "switch_sweeper"]], "implementations.convergence_controller_classes.adaptivity": [[71, 1, 1, "", "Adaptivity"], [71, 1, 1, "", "AdaptivityBase"], [71, 1, 1, "", "AdaptivityCollocation"], [71, 1, 1, "", "AdaptivityExtrapolationWithinQ"], [71, 1, 1, "", "AdaptivityForConvergedCollocationProblems"], [71, 1, 1, "", "AdaptivityPolynomialError"], [71, 1, 1, "", "AdaptivityRK"], [71, 1, 1, "", "AdaptivityResidual"]], "implementations.convergence_controller_classes.adaptivity.Adaptivity": [[71, 3, 1, "", "check_parameters"], [71, 3, 1, "", "dependencies"], [71, 3, 1, "", "get_local_error_estimate"], [71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityBase": [[71, 3, 1, "", "compute_optimal_step_size"], [71, 3, 1, "", "dependencies"], [71, 3, 1, "", "determine_restart"], [71, 3, 1, "", "get_local_error_estimate"], [71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation": [[71, 3, 1, "", "check_parameters"], [71, 3, 1, "", "dependencies"], [71, 3, 1, "", "determine_restart"], [71, 3, 1, "", "get_convergence"], [71, 3, 1, "", "get_local_error_estimate"], [71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "post_iteration_processing"], [71, 3, 1, "", "reset_status_variables"], [71, 3, 1, "", "setup"], [71, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ": [[71, 3, 1, "", "dependencies"], [71, 3, 1, "", "get_convergence"], [71, 3, 1, "", "get_local_error_estimate"], [71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems": [[71, 3, 1, "", "dependencies"], [71, 3, 1, "", "determine_restart"], [71, 3, 1, "", "get_convergence"], [71, 3, 1, "", "setup"], [71, 3, 1, "", "trigger_restart_upon_nonconvergence"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError": [[71, 3, 1, "", "dependencies"], [71, 3, 1, "", "get_convergence"], [71, 3, 1, "", "get_local_error_estimate"], [71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityRK": [[71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual": [[71, 3, 1, "", "check_parameters"], [71, 3, 1, "", "get_local_error_estimate"], [71, 3, 1, "", "get_new_step_size"], [71, 3, 1, "", "setup"], [71, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.basic_restarting": [[72, 1, 1, "", "BasicRestarting"], [72, 1, 1, "", "BasicRestartingMPI"], [72, 1, 1, "", "BasicRestartingNonMPI"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestarting": [[72, 3, 1, "", "dependencies"], [72, 3, 1, "", "determine_restart"], [72, 3, 1, "", "get_implementation"], [72, 3, 1, "", "reset_status_variables"], [72, 3, 1, "", "setup"], [72, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI": [[72, 3, 1, "", "determine_restart"], [72, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI": [[72, 3, 1, "", "determine_restart"], [72, 3, 1, "", "prepare_next_block"], [72, 3, 1, "", "reset_buffers_nonMPI"]], "implementations.convergence_controller_classes.check_convergence": [[73, 1, 1, "", "CheckConvergence"]], "implementations.convergence_controller_classes.check_convergence.CheckConvergence": [[73, 3, 1, "", "check_convergence"], [73, 3, 1, "", "check_iteration_status"], [73, 3, 1, "", "communicate_convergence"], [73, 3, 1, "", "dependencies"], [73, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.check_iteration_estimator": [[74, 1, 1, "", "CheckIterationEstimatorNonMPI"]], "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI": [[74, 3, 1, "", "check_iteration_status"], [74, 3, 1, "", "check_parameters"], [74, 3, 1, "", "dependencies"], [74, 3, 1, "", "reset_buffers_nonMPI"], [74, 3, 1, "", "setup"], [74, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.crash": [[75, 1, 1, "", "CrashBase"], [75, 1, 1, "", "StopAtMaxRuntime"], [75, 1, 1, "", "StopAtNan"]], "implementations.convergence_controller_classes.crash.CrashBase": [[75, 3, 1, "", "communicate_crash"]], "implementations.convergence_controller_classes.crash.StopAtMaxRuntime": [[75, 3, 1, "", "prepare_next_block"], [75, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.crash.StopAtNan": [[75, 3, 1, "", "prepare_next_block"], [75, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_contraction_factor": [[76, 1, 1, "", "EstimateContractionFactor"]], "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor": [[76, 3, 1, "", "dependencies"], [76, 3, 1, "", "post_iteration_processing"], [76, 3, 1, "", "pre_iteration_processing"], [76, 3, 1, "", "reset_status_variables"], [76, 3, 1, "", "setup"], [76, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error": [[77, 1, 1, "", "EstimateEmbeddedError"], [77, 1, 1, "", "EstimateEmbeddedErrorCollocation"], [77, 1, 1, "", "EstimateEmbeddedErrorLinearizedMPI"], [77, 1, 1, "", "EstimateEmbeddedErrorLinearizedNonMPI"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError": [[77, 3, 1, "", "dependencies"], [77, 3, 1, "", "estimate_embedded_error_serial"], [77, 3, 1, "", "get_implementation"], [77, 3, 1, "", "post_iteration_processing"], [77, 3, 1, "", "reset_status_variables"], [77, 3, 1, "", "setup"], [77, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation": [[77, 3, 1, "", "dependencies"], [77, 3, 1, "", "post_iteration_processing"], [77, 3, 1, "", "reset_status_variables"], [77, 3, 1, "", "setup"], [77, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI": [[77, 3, 1, "", "post_iteration_processing"]], "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI": [[77, 3, 1, "", "post_iteration_processing"], [77, 3, 1, "", "reset_buffers_nonMPI"], [77, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_extrapolation_error": [[78, 1, 1, "", "EstimateExtrapolationErrorBase"], [78, 1, 1, "", "EstimateExtrapolationErrorNonMPI"], [78, 1, 1, "", "EstimateExtrapolationErrorWithinQ"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase": [[78, 3, 1, "", "check_parameters"], [78, 3, 1, "", "get_extrapolation_coefficients"], [78, 3, 1, "", "reset_status_variables"], [78, 3, 1, "", "setup"], [78, 3, 1, "", "setup_status_variables"], [78, 3, 1, "", "store_values"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI": [[78, 3, 1, "", "get_extrapolated_error"], [78, 3, 1, "", "get_extrapolated_solution"], [78, 3, 1, "", "post_iteration_processing"], [78, 3, 1, "", "prepare_next_block"], [78, 3, 1, "", "setup"], [78, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ": [[78, 3, 1, "", "post_iteration_processing"], [78, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.estimate_polynomial_error": [[79, 1, 1, "", "EstimatePolynomialError"]], "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError": [[79, 3, 1, "", "check_parameters"], [79, 3, 1, "", "matmul"], [79, 3, 1, "", "post_iteration_processing"], [79, 3, 1, "", "reset_status_variables"], [79, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.hotrod": [[80, 1, 1, "", "HotRod"]], "implementations.convergence_controller_classes.hotrod.HotRod": [[80, 3, 1, "", "check_parameters"], [80, 3, 1, "", "dependencies"], [80, 3, 1, "", "determine_restart"], [80, 3, 1, "", "post_iteration_processing"], [80, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.inexactness": [[81, 1, 1, "", "NewtonInexactness"]], "implementations.convergence_controller_classes.inexactness.NewtonInexactness": [[81, 3, 1, "", "dependencies"], [81, 3, 1, "", "post_iteration_processing"], [81, 3, 1, "", "set_maxiter"], [81, 3, 1, "", "set_tolerance"], [81, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.interpolate_between_restarts": [[82, 1, 1, "", "InterpolateBetweenRestarts"]], "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts": [[82, 3, 1, "", "post_iteration_processing"], [82, 3, 1, "", "post_spread_processing"], [82, 3, 1, "", "setup"], [82, 3, 1, "", "setup_status_variables"]], "implementations.convergence_controller_classes.spread_step_sizes": [[83, 1, 1, "", "SpreadStepSizesBlockwise"], [83, 1, 1, "", "SpreadStepSizesBlockwiseMPI"], [83, 1, 1, "", "SpreadStepSizesBlockwiseNonMPI"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise": [[83, 3, 1, "", "get_implementation"], [83, 3, 1, "", "get_step_from_which_to_spread"], [83, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI": [[83, 3, 1, "", "get_step_from_which_to_spread"], [83, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI": [[83, 3, 1, "", "get_step_from_which_to_spread"], [83, 3, 1, "", "prepare_next_block"]], "implementations.convergence_controller_classes.step_size_limiter": [[84, 1, 1, "", "StepSizeLimiter"], [84, 1, 1, "", "StepSizeSlopeLimiter"]], "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter": [[84, 3, 1, "", "dependencies"], [84, 3, 1, "", "get_new_step_size"], [84, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter": [[84, 3, 1, "", "get_new_step_size"], [84, 3, 1, "", "setup"]], "implementations.convergence_controller_classes.store_uold": [[85, 1, 1, "", "StoreUOld"]], "implementations.convergence_controller_classes.store_uold.StoreUOld": [[85, 3, 1, "", "post_iteration_processing"], [85, 3, 1, "", "post_spread_processing"], [85, 3, 1, "", "setup"]], "implementations.datatype_classes": [[87, 0, 0, "-", "cupy_mesh"], [88, 0, 0, "-", "fenics_mesh"], [89, 0, 0, "-", "mesh"], [90, 0, 0, "-", "particles"], [91, 0, 0, "-", "petsc_vec"]], "implementations.datatype_classes.cupy_mesh": [[87, 1, 1, "", "comp2_cupy_mesh"], [87, 1, 1, "", "cupy_mesh"], [87, 1, 1, "", "imex_cupy_mesh"]], "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh": [[87, 2, 1, "", "comp1"], [87, 2, 1, "", "comp2"]], "implementations.datatype_classes.cupy_mesh.cupy_mesh": [[87, 3, 1, "", "bcast"], [87, 4, 1, "", "comm"], [87, 3, 1, "", "irecv"], [87, 3, 1, "", "isend"]], "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh": [[87, 2, 1, "", "expl"], [87, 2, 1, "", "impl"]], "implementations.datatype_classes.fenics_mesh": [[88, 1, 1, "", "fenics_mesh"], [88, 1, 1, "", "rhs_fenics_mesh"]], "implementations.datatype_classes.fenics_mesh.fenics_mesh": [[88, 2, 1, "", "values"]], "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh": [[88, 2, 1, "", "expl"], [88, 2, 1, "", "impl"]], "implementations.datatype_classes.mesh": [[89, 1, 1, "", "MultiComponentMesh"], [89, 1, 1, "", "comp2_mesh"], [89, 1, 1, "", "imex_mesh"], [89, 1, 1, "", "mesh"]], "implementations.datatype_classes.mesh.MultiComponentMesh": [[89, 2, 1, "", "components"]], "implementations.datatype_classes.mesh.comp2_mesh": [[89, 2, 1, "", "components"]], "implementations.datatype_classes.mesh.imex_mesh": [[89, 2, 1, "", "components"]], "implementations.datatype_classes.mesh.mesh": [[89, 2, 1, "", "_comm"], [89, 3, 1, "", "bcast"], [89, 4, 1, "", "comm"], [89, 3, 1, "", "irecv"], [89, 3, 1, "", "isend"]], "implementations.datatype_classes.particles": [[90, 1, 1, "", "acceleration"], [90, 1, 1, "", "fields"], [90, 1, 1, "", "particles"]], "implementations.datatype_classes.particles.fields": [[90, 2, 1, "", "elec"], [90, 1, 1, "", "electric"], [90, 2, 1, "", "magn"], [90, 1, 1, "", "magnetic"]], "implementations.datatype_classes.particles.particles": [[90, 3, 1, "", "isend"], [90, 2, 1, "", "pos"], [90, 1, 1, "", "position"], [90, 3, 1, "", "recv"], [90, 3, 1, "", "send"], [90, 2, 1, "", "vel"], [90, 1, 1, "", "velocity"]], "implementations.datatype_classes.petsc_vec": [[91, 1, 1, "", "petsc_vec"], [91, 1, 1, "", "petsc_vec_comp2"], [91, 1, 1, "", "petsc_vec_imex"]], "implementations.datatype_classes.petsc_vec.petsc_vec": [[91, 3, 1, "", "bcast"], [91, 3, 1, "", "irecv"], [91, 3, 1, "", "isend"]], "implementations.datatype_classes.petsc_vec.petsc_vec_comp2": [[91, 2, 1, "", "expl"], [91, 2, 1, "", "impl"]], "implementations.datatype_classes.petsc_vec.petsc_vec_imex": [[91, 2, 1, "", "expl"], [91, 2, 1, "", "impl"]], "implementations.problem_classes": [[93, 0, 0, "-", "AcousticAdvection_1D_FD_imex"], [94, 0, 0, "-", "AdvectionDiffusionEquation_1D_FFT"], [95, 0, 0, "-", "AdvectionEquation_ND_FD"], [96, 0, 0, "-", "AllenCahn_1D_FD"], [97, 0, 0, "-", "AllenCahn_2D_FD"], [99, 0, 0, "-", "AllenCahn_2D_FFT"], [100, 0, 0, "-", "AllenCahn_2D_FFT_gpu"], [101, 0, 0, "-", "AllenCahn_MPIFFT"], [102, 0, 0, "-", "AllenCahn_Temp_MPIFFT"], [103, 0, 0, "-", "Auzinger_implicit"], [104, 0, 0, "-", "Battery"], [105, 0, 0, "-", "Boussinesq_2D_FD_imex"], [106, 0, 0, "-", "Brusselator"], [107, 0, 0, "-", "BuckConverter"], [108, 0, 0, "-", "DiscontinuousTestODE"], [109, 0, 0, "-", "FastWaveSlowWave_0D"], [110, 0, 0, "-", "FermiPastaUlamTsingou"], [111, 0, 0, "-", "FullSolarSystem"], [112, 0, 0, "-", "GeneralizedFisher_1D_FD_implicit"], [113, 0, 0, "-", "GeneralizedFisher_1D_PETSc"], [114, 0, 0, "-", "GrayScott_1D_FEniCS_implicit"], [115, 0, 0, "-", "GrayScott_2D_PETSc_periodic"], [116, 0, 0, "-", "GrayScott_MPIFFT"], [117, 0, 0, "-", "HarmonicOscillator"], [118, 0, 0, "-", "HeatEquation_1D_FEniCS_matrix_forced"], [119, 0, 0, "-", "HeatEquation_2D_PETSc_forced"], [120, 0, 0, "-", "HeatEquation_ND_FD"], [122, 0, 0, "-", "HenonHeiles"], [123, 0, 0, "-", "LogisticEquation"], [124, 0, 0, "-", "Lorenz"], [125, 0, 0, "-", "NonlinearSchroedinger_MPIFFT"], [126, 0, 0, "-", "OuterSolarSystem"], [127, 0, 0, "-", "PenningTrap_3D"], [128, 0, 0, "-", "Piline"], [129, 0, 0, "-", "Quench"], [130, 0, 0, "-", "TestEquation_0D"], [131, 0, 0, "-", "Van_der_Pol_implicit"], [132, 0, 0, "-", "VorticityVelocity_2D_FEniCS_periodic"], [133, 0, 0, "-", "acoustic_helpers"], [137, 0, 0, "-", "boussinesq_helpers"], [144, 0, 0, "-", "generic_ND_FD"], [145, 0, 0, "-", "nonlinear_ODE_1"], [146, 0, 0, "-", "odeScalar"], [147, 0, 0, "-", "odeSystem"], [148, 0, 0, "-", "polynomial_test_problem"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex": [[93, 1, 1, "", "acoustic_1d_imex"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex": [[93, 2, 1, "", "A"], [93, 2, 1, "", "Dx"], [93, 2, 1, "", "Id"], [93, 2, 1, "", "dtype_f"], [93, 2, 1, "", "dtype_u"], [93, 2, 1, "", "dx"], [93, 3, 1, "", "eval_f"], [93, 2, 1, "", "mesh"], [93, 3, 1, "", "solve_system"], [93, 3, 1, "", "u_exact"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT": [[94, 1, 1, "", "advectiondiffusion1d_imex"], [94, 1, 1, "", "advectiondiffusion1d_implicit"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex": [[94, 2, 1, "", "ddx"], [94, 2, 1, "", "dtype_f"], [94, 2, 1, "", "dtype_u"], [94, 3, 1, "", "eval_f"], [94, 2, 1, "", "lap"], [94, 3, 1, "", "solve_system"], [94, 3, 1, "", "u_exact"], [94, 2, 1, "", "xvalues"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit": [[94, 2, 1, "", "dtype_f"], [94, 2, 1, "", "dtype_u"], [94, 3, 1, "", "eval_f"], [94, 3, 1, "", "solve_system"]], "implementations.problem_classes.AdvectionEquation_ND_FD": [[95, 1, 1, "", "advectionNd"]], "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd": [[95, 2, 1, "", "A"], [95, 2, 1, "", "Id"], [95, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_1D_FD": [[96, 1, 1, "", "allencahn_front_finel"], [96, 1, 1, "", "allencahn_front_fullyimplicit"], [96, 1, 1, "", "allencahn_front_semiimplicit"], [96, 1, 1, "", "allencahn_periodic_fullyimplicit"], [96, 1, 1, "", "allencahn_periodic_multiimplicit"], [96, 1, 1, "", "allencahn_periodic_semiimplicit"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel": [[96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit": [[96, 2, 1, "", "A"], [96, 2, 1, "", "dtype_f"], [96, 2, 1, "", "dtype_u"], [96, 2, 1, "", "dx"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"], [96, 3, 1, "", "u_exact"], [96, 2, 1, "", "uext"], [96, 2, 1, "", "work_counters"], [96, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit": [[96, 2, 1, "", "A"], [96, 2, 1, "", "dtype_f"], [96, 2, 1, "", "dtype_u"], [96, 2, 1, "", "dx"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"], [96, 3, 1, "", "u_exact"], [96, 2, 1, "", "work_counters"], [96, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system_1"], [96, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit": [[96, 2, 1, "", "dtype_f"], [96, 3, 1, "", "eval_f"], [96, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_2D_FD": [[97, 1, 1, "", "allencahn_fullyimplicit"], [97, 1, 1, "", "allencahn_multiimplicit"], [97, 1, 1, "", "allencahn_multiimplicit_v2"], [97, 1, 1, "", "allencahn_semiimplicit"], [97, 1, 1, "", "allencahn_semiimplicit_v2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit": [[97, 2, 1, "", "A"], [97, 2, 1, "", "dtype_f"], [97, 2, 1, "", "dtype_u"], [97, 2, 1, "", "dx"], [97, 3, 1, "", "eval_f"], [97, 2, 1, "", "lin_itercount"], [97, 2, 1, "", "lin_ncalls"], [97, 2, 1, "", "newton_itercount"], [97, 2, 1, "", "newton_ncalls"], [97, 3, 1, "", "solve_system"], [97, 3, 1, "", "u_exact"], [97, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit": [[97, 2, 1, "", "dtype_f"], [97, 3, 1, "", "eval_f"], [97, 3, 1, "", "solve_system_1"], [97, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2": [[97, 2, 1, "", "dtype_f"], [97, 3, 1, "", "eval_f"], [97, 3, 1, "", "solve_system_1"], [97, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit": [[97, 2, 1, "", "dtype_f"], [97, 3, 1, "", "eval_f"], [97, 3, 1, "", "solve_system"], [97, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2": [[97, 2, 1, "", "dtype_f"], [97, 3, 1, "", "eval_f"], [97, 3, 1, "", "solve_system"]], "implementations.problem_classes.AllenCahn_2D_FFT": [[99, 1, 1, "", "allencahn2d_imex"], [99, 1, 1, "", "allencahn2d_imex_stab"]], "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex": [[99, 2, 1, "", "dtype_f"], [99, 2, 1, "", "dtype_u"], [99, 2, 1, "", "dx"], [99, 3, 1, "", "eval_f"], [99, 2, 1, "", "lap"], [99, 3, 1, "", "solve_system"], [99, 3, 1, "", "u_exact"], [99, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab": [[99, 2, 1, "", "dx"], [99, 3, 1, "", "eval_f"], [99, 2, 1, "", "lap"], [99, 3, 1, "", "solve_system"], [99, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu": [[100, 1, 1, "", "allencahn2d_imex"], [100, 1, 1, "", "allencahn2d_imex_stab"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex": [[100, 2, 1, "", "dtype_f"], [100, 2, 1, "", "dtype_u"], [100, 2, 1, "", "dx"], [100, 3, 1, "", "eval_f"], [100, 2, 1, "", "lap"], [100, 3, 1, "", "solve_system"], [100, 3, 1, "", "u_exact"], [100, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab": [[100, 2, 1, "", "dx"], [100, 3, 1, "", "eval_f"], [100, 2, 1, "", "lap"], [100, 3, 1, "", "solve_system"], [100, 2, 1, "", "xvalues"]], "implementations.problem_classes.AllenCahn_MPIFFT": [[101, 1, 1, "", "allencahn_imex"], [101, 1, 1, "", "allencahn_imex_timeforcing"]], "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex": [[101, 2, 1, "", "K2"], [101, 2, 1, "", "X"], [101, 2, 1, "", "dtype_f"], [101, 2, 1, "", "dtype_u"], [101, 2, 1, "", "dx"], [101, 2, 1, "", "dy"], [101, 3, 1, "", "eval_f"], [101, 2, 1, "", "fft"], [101, 3, 1, "", "solve_system"], [101, 3, 1, "", "u_exact"]], "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing": [[101, 3, 1, "", "eval_f"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT": [[102, 1, 1, "", "allencahn_temp_imex"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex": [[102, 2, 1, "", "D"], [102, 2, 1, "", "K2"], [102, 2, 1, "", "L"], [102, 2, 1, "", "TM"], [102, 2, 1, "", "X"], [102, 2, 1, "", "comm"], [102, 2, 1, "", "dtype_f"], [102, 2, 1, "", "dtype_u"], [102, 2, 1, "", "dw"], [102, 2, 1, "", "dx"], [102, 2, 1, "", "dy"], [102, 2, 1, "", "eps"], [102, 3, 1, "", "eval_f"], [102, 2, 1, "", "fft"], [102, 2, 1, "", "init_type"], [102, 2, 1, "", "nvars"], [102, 2, 1, "", "radius"], [102, 3, 1, "", "solve_system"], [102, 2, 1, "", "spectral"], [102, 3, 1, "", "u_exact"]], "implementations.problem_classes.Auzinger_implicit": [[103, 1, 1, "", "auzinger"]], "implementations.problem_classes.Auzinger_implicit.auzinger": [[103, 2, 1, "", "dtype_f"], [103, 2, 1, "", "dtype_u"], [103, 3, 1, "", "eval_f"], [103, 2, 1, "", "newton_maxiter"], [103, 2, 1, "", "newton_tol"], [103, 3, 1, "", "solve_system"], [103, 3, 1, "", "u_exact"]], "implementations.problem_classes.Battery": [[104, 1, 1, "", "battery"], [104, 1, 1, "", "battery_implicit"], [104, 1, 1, "", "battery_n_capacitors"]], "implementations.problem_classes.Battery.battery": [[104, 2, 1, "", "dtype_f"], [104, 3, 1, "", "eval_f"], [104, 3, 1, "", "solve_system"], [104, 3, 1, "", "u_exact"]], "implementations.problem_classes.Battery.battery_implicit": [[104, 2, 1, "", "dtype_f"], [104, 3, 1, "", "eval_f"], [104, 3, 1, "", "solve_system"], [104, 2, 1, "", "work_counters"]], "implementations.problem_classes.Battery.battery_n_capacitors": [[104, 2, 1, "", "A"], [104, 3, 1, "", "count_switches"], [104, 2, 1, "", "dtype_f"], [104, 2, 1, "", "dtype_u"], [104, 3, 1, "", "eval_f"], [104, 3, 1, "", "get_problem_dict"], [104, 3, 1, "", "get_switching_info"], [104, 2, 1, "", "nswitches"], [104, 3, 1, "", "solve_system"], [104, 2, 1, "", "switch_A"], [104, 2, 1, "", "switch_f"], [104, 2, 1, "", "t_switch"], [104, 3, 1, "", "u_exact"]], "implementations.problem_classes.Boussinesq_2D_FD_imex": [[105, 1, 1, "", "boussinesq_2d_imex"]], "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex": [[105, 2, 1, "", "D_upwind"], [105, 2, 1, "", "Id"], [105, 2, 1, "", "M"], [105, 2, 1, "", "N"], [105, 2, 1, "", "bc_hor"], [105, 2, 1, "", "bc_ver"], [105, 2, 1, "", "dtype_f"], [105, 2, 1, "", "dtype_u"], [105, 3, 1, "", "eval_f"], [105, 2, 1, "", "gmres_logger"], [105, 2, 1, "", "h"], [105, 3, 1, "", "solve_system"], [105, 3, 1, "", "u_exact"], [105, 2, 1, "", "xx"], [105, 2, 1, "", "zz"]], "implementations.problem_classes.Brusselator": [[106, 1, 1, "", "Brusselator"]], "implementations.problem_classes.Brusselator.Brusselator": [[106, 2, 1, "", "dtype_f"], [106, 2, 1, "", "dtype_u"], [106, 3, 1, "", "eval_f"], [106, 3, 1, "", "get_fig"], [106, 3, 1, "", "plot"], [106, 3, 1, "", "solve_system"], [106, 3, 1, "", "u_exact"]], "implementations.problem_classes.BuckConverter": [[107, 1, 1, "", "buck_converter"]], "implementations.problem_classes.BuckConverter.buck_converter": [[107, 2, 1, "", "A"], [107, 2, 1, "", "dtype_f"], [107, 2, 1, "", "dtype_u"], [107, 3, 1, "", "eval_f"], [107, 3, 1, "", "solve_system"], [107, 3, 1, "", "u_exact"]], "implementations.problem_classes.DiscontinuousTestODE": [[108, 1, 1, "", "DiscontinuousTestODE"]], "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE": [[108, 3, 1, "", "count_switches"], [108, 2, 1, "", "dtype_f"], [108, 2, 1, "", "dtype_u"], [108, 3, 1, "", "eval_f"], [108, 3, 1, "", "get_switching_info"], [108, 2, 1, "", "nswitches"], [108, 3, 1, "", "solve_system"], [108, 2, 1, "", "t_switch"], [108, 2, 1, "", "t_switch_exact"], [108, 3, 1, "", "u_exact"], [108, 2, 1, "", "work_counters"]], "implementations.problem_classes.FastWaveSlowWave_0D": [[109, 1, 1, "", "swfw_scalar"]], "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar": [[109, 2, 1, "", "dtype_f"], [109, 2, 1, "", "dtype_u"], [109, 3, 1, "", "eval_f"], [109, 3, 1, "", "solve_system"], [109, 3, 1, "", "u_exact"]], "implementations.problem_classes.FermiPastaUlamTsingou": [[110, 1, 1, "", "fermi_pasta_ulam_tsingou"]], "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou": [[110, 2, 1, "", "dtype_f"], [110, 2, 1, "", "dtype_u"], [110, 2, 1, "", "dx"], [110, 3, 1, "", "eval_f"], [110, 3, 1, "", "eval_hamiltonian"], [110, 3, 1, "", "eval_mode_energy"], [110, 2, 1, "", "ones"], [110, 3, 1, "", "u_exact"], [110, 2, 1, "", "xvalues"]], "implementations.problem_classes.FullSolarSystem": [[111, 1, 1, "", "full_solar_system"]], "implementations.problem_classes.FullSolarSystem.full_solar_system": [[111, 2, 1, "", "G"], [111, 2, 1, "", "dtype_f"], [111, 2, 1, "", "dtype_u"], [111, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit": [[112, 1, 1, "", "generalized_fisher"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher": [[112, 2, 1, "", "A"], [112, 2, 1, "", "dtype_f"], [112, 2, 1, "", "dtype_u"], [112, 2, 1, "", "dx"], [112, 3, 1, "", "eval_f"], [112, 3, 1, "", "solve_system"], [112, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc": [[113, 1, 1, "", "Fisher_full"], [113, 1, 1, "", "Fisher_reaction"], [113, 1, 1, "", "petsc_fisher_fullyimplicit"], [113, 1, 1, "", "petsc_fisher_multiimplicit"], [113, 1, 1, "", "petsc_fisher_semiimplicit"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full": [[113, 2, 1, "", "col"], [113, 3, 1, "", "formFunction"], [113, 3, 1, "", "formJacobian"], [113, 2, 1, "", "localX"], [113, 2, 1, "", "mx"], [113, 2, 1, "", "row"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction": [[113, 3, 1, "", "formFunction"], [113, 3, 1, "", "formJacobian"], [113, 2, 1, "", "localX"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit": [[113, 2, 1, "", "dtype_f"], [113, 3, 1, "", "eval_f"], [113, 3, 1, "", "solve_system"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit": [[113, 2, 1, "", "A"], [113, 2, 1, "", "F"], [113, 2, 1, "", "J"], [113, 2, 1, "", "dtype_f"], [113, 2, 1, "", "dtype_u"], [113, 2, 1, "", "dx"], [113, 3, 1, "", "eval_f"], [113, 3, 1, "", "get_sys_mat"], [113, 2, 1, "", "ksp"], [113, 2, 1, "", "localX"], [113, 2, 1, "", "snes"], [113, 3, 1, "", "solve_system_1"], [113, 3, 1, "", "solve_system_2"], [113, 3, 1, "", "u_exact"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit": [[113, 2, 1, "", "dtype_f"], [113, 3, 1, "", "eval_f"], [113, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit": [[114, 1, 1, "", "fenics_grayscott"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott": [[114, 2, 1, "", "F"], [114, 2, 1, "", "F1"], [114, 2, 1, "", "F2"], [114, 2, 1, "", "M"], [114, 2, 1, "", "V"], [114, 2, 1, "", "dtype_f"], [114, 2, 1, "", "dtype_u"], [114, 3, 1, "", "eval_f"], [114, 3, 1, "", "solve_system"], [114, 3, 1, "", "u_exact"], [114, 2, 1, "", "w"], [114, 2, 1, "", "w1"], [114, 2, 1, "", "w2"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic": [[115, 1, 1, "", "GS_full"], [115, 1, 1, "", "GS_reaction"], [115, 1, 1, "", "petsc_grayscott_fullyimplicit"], [115, 1, 1, "", "petsc_grayscott_multiimplicit"], [115, 1, 1, "", "petsc_grayscott_semiimplicit"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full": [[115, 3, 1, "", "formFunction"], [115, 3, 1, "", "formJacobian"], [115, 2, 1, "", "localX"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction": [[115, 3, 1, "", "formFunction"], [115, 3, 1, "", "formJacobian"], [115, 2, 1, "", "localX"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit": [[115, 2, 1, "", "dtype_f"], [115, 3, 1, "", "eval_f"], [115, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit": [[115, 2, 1, "", "AMat"], [115, 2, 1, "", "Id"], [115, 2, 1, "", "dtype_f"], [115, 2, 1, "", "dtype_u"], [115, 2, 1, "", "dx"], [115, 2, 1, "", "dy"], [115, 3, 1, "", "eval_f"], [115, 2, 1, "", "ksp"], [115, 2, 1, "", "localX"], [115, 2, 1, "", "snes"], [115, 2, 1, "", "snes_itercount"], [115, 2, 1, "", "snes_ncalls"], [115, 3, 1, "", "solve_system_1"], [115, 3, 1, "", "solve_system_2"], [115, 3, 1, "", "u_exact"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit": [[115, 2, 1, "", "dtype_f"], [115, 3, 1, "", "eval_f"], [115, 3, 1, "", "solve_system"]], "implementations.problem_classes.GrayScott_MPIFFT": [[116, 1, 1, "", "grayscott_imex_diffusion"], [116, 1, 1, "", "grayscott_imex_linear"], [116, 1, 1, "", "grayscott_mi_diffusion"], [116, 1, 1, "", "grayscott_mi_linear"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion": [[116, 2, 1, "", "Ku"], [116, 2, 1, "", "Kv"], [116, 2, 1, "", "X"], [116, 2, 1, "", "dtype_f"], [116, 2, 1, "", "dtype_u"], [116, 3, 1, "", "eval_f"], [116, 2, 1, "", "fft"], [116, 2, 1, "", "ndim"], [116, 3, 1, "", "solve_system"], [116, 3, 1, "", "u_exact"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear": [[116, 3, 1, "", "eval_f"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion": [[116, 2, 1, "", "Ku"], [116, 2, 1, "", "Kv"], [116, 2, 1, "", "X"], [116, 2, 1, "", "dtype_f"], [116, 3, 1, "", "eval_f"], [116, 2, 1, "", "fft"], [116, 2, 1, "", "ndim"], [116, 3, 1, "", "solve_system_1"], [116, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear": [[116, 2, 1, "", "dtype_f"], [116, 3, 1, "", "eval_f"], [116, 3, 1, "", "solve_system_1"], [116, 3, 1, "", "solve_system_2"]], "implementations.problem_classes.HarmonicOscillator": [[117, 1, 1, "", "harmonic_oscillator"]], "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator": [[117, 2, 1, "", "dtype_f"], [117, 2, 1, "", "dtype_u"], [117, 3, 1, "", "eval_f"], [117, 3, 1, "", "eval_hamiltonian"], [117, 3, 1, "", "u_exact"], [117, 3, 1, "", "u_init"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced": [[118, 1, 1, "", "fenics_heat"], [118, 1, 1, "", "fenics_heat_mass"], [118, 1, 1, "", "fenics_heat_mass_timebc"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat": [[118, 2, 1, "", "K"], [118, 2, 1, "", "M"], [118, 2, 1, "", "V"], [118, 3, 1, "", "apply_mass_matrix"], [118, 2, 1, "", "bc"], [118, 2, 1, "", "dtype_f"], [118, 2, 1, "", "dtype_u"], [118, 3, 1, "", "eval_f"], [118, 2, 1, "", "g"], [118, 3, 1, "", "solve_system"], [118, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass": [[118, 2, 1, "", "K"], [118, 2, 1, "", "M"], [118, 2, 1, "", "V"], [118, 2, 1, "", "bc"], [118, 2, 1, "", "bc_hom"], [118, 3, 1, "", "eval_f"], [118, 2, 1, "", "fix_bc_for_residual"], [118, 3, 1, "", "fix_residual"], [118, 2, 1, "", "g"], [118, 3, 1, "", "solve_system"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc": [[118, 2, 1, "", "K"], [118, 2, 1, "", "M"], [118, 2, 1, "", "V"], [118, 2, 1, "", "bc"], [118, 2, 1, "", "bc_hom"], [118, 2, 1, "", "fix_bc_for_residual"], [118, 2, 1, "", "g"], [118, 3, 1, "", "solve_system"], [118, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced": [[119, 1, 1, "", "heat2d_petsc_forced"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced": [[119, 2, 1, "", "A"], [119, 2, 1, "", "Id"], [119, 2, 1, "", "dtype_f"], [119, 2, 1, "", "dtype_u"], [119, 2, 1, "", "dx"], [119, 2, 1, "", "dy"], [119, 3, 1, "", "eval_f"], [119, 2, 1, "", "ksp"], [119, 2, 1, "", "ksp_itercount"], [119, 2, 1, "", "ksp_ncalls"], [119, 3, 1, "", "solve_system"], [119, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_ND_FD": [[120, 1, 1, "", "heatNd_forced"], [120, 1, 1, "", "heatNd_unforced"]], "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced": [[120, 2, 1, "", "dtype_f"], [120, 3, 1, "", "eval_f"], [120, 3, 1, "", "u_exact"]], "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced": [[120, 2, 1, "", "A"], [120, 2, 1, "", "Id"], [120, 3, 1, "", "u_exact"]], "implementations.problem_classes.HenonHeiles": [[122, 1, 1, "", "henon_heiles"]], "implementations.problem_classes.HenonHeiles.henon_heiles": [[122, 2, 1, "", "dtype_f"], [122, 2, 1, "", "dtype_u"], [122, 3, 1, "", "eval_f"], [122, 3, 1, "", "eval_hamiltonian"], [122, 3, 1, "", "u_exact"]], "implementations.problem_classes.LogisticEquation": [[123, 1, 1, "", "logistics_equation"]], "implementations.problem_classes.LogisticEquation.logistics_equation": [[123, 2, 1, "", "dtype_f"], [123, 2, 1, "", "dtype_u"], [123, 3, 1, "", "eval_f"], [123, 3, 1, "", "solve_system"], [123, 3, 1, "", "u_exact"]], "implementations.problem_classes.Lorenz": [[124, 1, 1, "", "LorenzAttractor"]], "implementations.problem_classes.Lorenz.LorenzAttractor": [[124, 2, 1, "", "dtype_f"], [124, 2, 1, "", "dtype_u"], [124, 3, 1, "", "eval_f"], [124, 3, 1, "", "solve_system"], [124, 3, 1, "", "u_exact"], [124, 2, 1, "", "work_counter"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT": [[125, 1, 1, "", "nonlinearschroedinger_fully_implicit"], [125, 1, 1, "", "nonlinearschroedinger_imex"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit": [[125, 2, 1, "", "dtype_f"], [125, 2, 1, "", "dtype_u"], [125, 3, 1, "", "eval_f"], [125, 3, 1, "", "solve_system"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex": [[125, 2, 1, "", "K2"], [125, 2, 1, "", "X"], [125, 2, 1, "", "dtype_f"], [125, 2, 1, "", "dtype_u"], [125, 3, 1, "", "eval_f"], [125, 2, 1, "", "fft"], [125, 3, 1, "", "solve_system"], [125, 3, 1, "", "u_exact"]], "implementations.problem_classes.OuterSolarSystem": [[126, 1, 1, "", "outer_solar_system"]], "implementations.problem_classes.OuterSolarSystem.outer_solar_system": [[126, 2, 1, "id0", "G"], [126, 2, 1, "", "dtype_f"], [126, 2, 1, "", "dtype_u"], [126, 3, 1, "", "eval_f"], [126, 3, 1, "", "eval_hamiltonian"], [126, 3, 1, "", "u_exact"]], "implementations.problem_classes.PenningTrap_3D": [[127, 1, 1, "", "penningtrap"]], "implementations.problem_classes.PenningTrap_3D.penningtrap": [[127, 3, 1, "", "boris_solver"], [127, 3, 1, "", "build_f"], [127, 2, 1, "", "dtype_f"], [127, 2, 1, "", "dtype_u"], [127, 3, 1, "", "eval_f"], [127, 3, 1, "", "fast_interactions"], [127, 3, 1, "", "get_interactions"], [127, 3, 1, "", "u_exact"], [127, 3, 1, "", "u_init"], [127, 2, 1, "", "work_counter"]], "implementations.problem_classes.Piline": [[128, 1, 1, "", "piline"]], "implementations.problem_classes.Piline.piline": [[128, 2, 1, "", "dtype_f"], [128, 2, 1, "", "dtype_u"], [128, 3, 1, "", "eval_f"], [128, 3, 1, "", "solve_system"], [128, 3, 1, "", "u_exact"]], "implementations.problem_classes.Quench": [[129, 1, 1, "", "Quench"], [129, 1, 1, "", "QuenchIMEX"]], "implementations.problem_classes.Quench.Quench": [[129, 2, 1, "", "A"], [129, 2, 1, "", "Id"], [129, 2, 1, "", "dtype_f"], [129, 2, 1, "", "dtype_u"], [129, 2, 1, "", "dx"], [129, 3, 1, "", "eval_f"], [129, 3, 1, "", "eval_f_non_linear"], [129, 3, 1, "", "get_non_linear_Jacobian"], [129, 2, 1, "", "leak"], [129, 3, 1, "", "solve_system"], [129, 3, 1, "", "u_exact"], [129, 2, 1, "", "xv"]], "implementations.problem_classes.Quench.QuenchIMEX": [[129, 2, 1, "", "dtype_f"], [129, 3, 1, "", "eval_f"], [129, 3, 1, "", "solve_system"], [129, 3, 1, "", "u_exact"]], "implementations.problem_classes.TestEquation_0D": [[130, 1, 1, "", "testequation0d"]], "implementations.problem_classes.TestEquation_0D.testequation0d": [[130, 2, 1, "", "A"], [130, 2, 1, "", "dtype_f"], [130, 2, 1, "", "dtype_u"], [130, 3, 1, "", "eval_f"], [130, 3, 1, "", "setup_GPU"], [130, 3, 1, "", "solve_system"], [130, 3, 1, "", "u_exact"], [130, 2, 1, "", "xp"], [130, 2, 1, "", "xsp"]], "implementations.problem_classes.Van_der_Pol_implicit": [[131, 1, 1, "", "vanderpol"]], "implementations.problem_classes.Van_der_Pol_implicit.vanderpol": [[131, 2, 1, "", "dtype_f"], [131, 2, 1, "", "dtype_u"], [131, 3, 1, "", "eval_f"], [131, 3, 1, "", "solve_system"], [131, 3, 1, "", "u_exact"], [131, 2, 1, "", "work_counters"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic": [[132, 1, 1, "", "fenics_vortex_2d"], [132, 1, 1, "", "fenics_vortex_2d_mass"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d": [[132, 2, 1, "", "K"], [132, 2, 1, "", "M"], [132, 2, 1, "", "V"], [132, 3, 1, "", "apply_mass_matrix"], [132, 2, 1, "", "dtype_f"], [132, 2, 1, "", "dtype_u"], [132, 3, 1, "", "eval_f"], [132, 3, 1, "", "solve_system"], [132, 3, 1, "", "u_exact"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass": [[132, 2, 1, "", "K"], [132, 2, 1, "", "M"], [132, 2, 1, "", "V"], [132, 3, 1, "", "eval_f"], [132, 3, 1, "", "solve_system"]], "implementations.problem_classes.acoustic_helpers": [[134, 0, 0, "-", "buildFDMatrix"], [135, 0, 0, "-", "buildWave1DMatrix"], [136, 0, 0, "-", "standard_integrators"]], "implementations.problem_classes.acoustic_helpers.buildFDMatrix": [[134, 6, 1, "", "getBCLeft"], [134, 6, 1, "", "getBCRight"], [134, 6, 1, "", "getHorizontalDx"], [134, 6, 1, "", "getMatrix"]], "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix": [[135, 6, 1, "", "getWave1DAdvectionMatrix"], [135, 6, 1, "", "getWave1DMatrix"], [135, 6, 1, "", "getWaveBCLeft"], [135, 6, 1, "", "getWaveBCRight"]], "implementations.problem_classes.acoustic_helpers.standard_integrators": [[136, 1, 1, "", "bdf2"], [136, 1, 1, "", "dirk"], [136, 1, 1, "", "rk_imex"], [136, 1, 1, "", "trapezoidal"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2": [[136, 3, 1, "", "firsttimestep"], [136, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk": [[136, 3, 1, "", "f"], [136, 3, 1, "", "f_solve"], [136, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex": [[136, 3, 1, "", "f_fast"], [136, 3, 1, "", "f_fast_solve"], [136, 3, 1, "", "f_slow"], [136, 3, 1, "", "timestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal": [[136, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers": [[138, 0, 0, "-", "build2DFDMatrix"], [139, 0, 0, "-", "buildBoussinesq2DMatrix"], [140, 0, 0, "-", "buildFDMatrix"], [141, 0, 0, "-", "helper_classes"], [142, 0, 0, "-", "standard_integrators"], [143, 0, 0, "-", "unflatten"]], "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix": [[138, 6, 1, "", "get2DMatrix"], [138, 6, 1, "", "get2DMesh"], [138, 6, 1, "", "get2DUpwindMatrix"], [138, 6, 1, "", "getBCHorizontal"], [138, 6, 1, "", "getBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix": [[139, 6, 1, "", "getBoussinesq2DMatrix"], [139, 6, 1, "", "getBoussinesq2DUpwindMatrix"], [139, 6, 1, "", "getBoussinesqBCHorizontal"], [139, 6, 1, "", "getBoussinesqBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildFDMatrix": [[140, 6, 1, "", "getBCLeft"], [140, 6, 1, "", "getBCRight"], [140, 6, 1, "", "getMatrix"], [140, 6, 1, "", "getUpwindMatrix"]], "implementations.problem_classes.boussinesq_helpers.helper_classes": [[141, 1, 1, "", "Callback"], [141, 1, 1, "", "logging"]], "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback": [[141, 3, 1, "", "getcounter"], [141, 3, 1, "", "getresidual"]], "implementations.problem_classes.boussinesq_helpers.helper_classes.logging": [[141, 3, 1, "", "add"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators": [[142, 1, 1, "", "SplitExplicit"], [142, 1, 1, "", "bdf2"], [142, 1, 1, "", "dirk"], [142, 1, 1, "", "rk_imex"], [142, 1, 1, "", "trapezoidal"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit": [[142, 3, 1, "", "NumSmallTimeSteps"], [142, 3, 1, "", "RK3Lin"], [142, 3, 1, "", "VerletLin"], [142, 3, 1, "", "f_fast"], [142, 3, 1, "", "f_fastMom"], [142, 3, 1, "", "f_fastTher"], [142, 3, 1, "", "f_slow"], [142, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2": [[142, 3, 1, "", "f"], [142, 3, 1, "", "f_solve"], [142, 3, 1, "", "firsttimestep"], [142, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk": [[142, 3, 1, "", "f"], [142, 3, 1, "", "f_solve"], [142, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex": [[142, 3, 1, "", "f_fast"], [142, 3, 1, "", "f_fast_solve"], [142, 3, 1, "", "f_slow"], [142, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal": [[142, 3, 1, "", "f"], [142, 3, 1, "", "f_solve"], [142, 3, 1, "", "timestep"]], "implementations.problem_classes.boussinesq_helpers.unflatten": [[143, 6, 1, "", "unflatten"]], "implementations.problem_classes.generic_ND_FD": [[144, 1, 1, "", "GenericNDimFinDiff"]], "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff": [[144, 2, 1, "", "A"], [144, 2, 1, "", "Id"], [144, 2, 1, "", "dtype_f"], [144, 2, 1, "", "dtype_u"], [144, 4, 1, "", "dx"], [144, 3, 1, "", "eval_f"], [144, 3, 1, "", "get_default_sweeper_class"], [144, 4, 1, "", "grids"], [144, 4, 1, "", "ndim"], [144, 3, 1, "", "solve_system"], [144, 2, 1, "", "xvalues"]], "implementations.problem_classes.nonlinear_ODE_1": [[145, 1, 1, "", "nonlinear_ODE_1"]], "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1": [[145, 2, 1, "", "dtype_f"], [145, 2, 1, "", "dtype_u"], [145, 3, 1, "", "eval_f"], [145, 2, 1, "", "newton_itercount"], [145, 2, 1, "", "newton_ncalls"], [145, 3, 1, "", "solve_system"], [145, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeScalar": [[146, 1, 1, "", "ProtheroRobinson"]], "implementations.problem_classes.odeScalar.ProtheroRobinson": [[146, 3, 1, "", "dg"], [146, 2, 1, "", "dtype_f"], [146, 2, 1, "", "dtype_u"], [146, 3, 1, "", "eval_f"], [146, 3, 1, "", "f"], [146, 3, 1, "", "f_LIN"], [146, 3, 1, "", "f_NONLIN"], [146, 3, 1, "", "g"], [146, 3, 1, "", "jac"], [146, 3, 1, "", "jac_LIN"], [146, 3, 1, "", "jac_NONLIN"], [146, 3, 1, "", "solve_system"], [146, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem": [[147, 1, 1, "", "ChemicalReaction3Var"], [147, 1, 1, "", "JacobiElliptic"], [147, 1, 1, "", "Kaps"], [147, 1, 1, "", "ProtheroRobinsonAutonomous"]], "implementations.problem_classes.odeSystem.ChemicalReaction3Var": [[147, 2, 1, "", "dtype_f"], [147, 2, 1, "", "dtype_u"], [147, 3, 1, "", "eval_f"], [147, 3, 1, "", "solve_system"], [147, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem.JacobiElliptic": [[147, 2, 1, "", "dtype_f"], [147, 2, 1, "", "dtype_u"], [147, 3, 1, "", "eval_f"], [147, 3, 1, "", "solve_system"], [147, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem.Kaps": [[147, 2, 1, "", "dtype_f"], [147, 2, 1, "", "dtype_u"], [147, 3, 1, "", "eval_f"], [147, 3, 1, "", "solve_system"], [147, 3, 1, "", "u_exact"]], "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous": [[147, 3, 1, "", "dg"], [147, 3, 1, "", "dg2"], [147, 3, 1, "", "dgInv"], [147, 3, 1, "", "dgInv_LIN"], [147, 3, 1, "", "dgInv_NONLIN"], [147, 2, 1, "", "dtype_f"], [147, 2, 1, "", "dtype_u"], [147, 3, 1, "", "eval_f"], [147, 3, 1, "", "f"], [147, 3, 1, "", "f_LIN"], [147, 3, 1, "", "f_NONLIN"], [147, 3, 1, "", "g"], [147, 3, 1, "", "solve_system"], [147, 3, 1, "", "u_exact"]], "implementations.problem_classes.polynomial_test_problem": [[148, 1, 1, "", "polynomial_testequation"], [148, 1, 1, "", "polynomial_testequation_IMEX"]], "implementations.problem_classes.polynomial_test_problem.polynomial_testequation": [[148, 2, 1, "", "dtype_f"], [148, 2, 1, "", "dtype_u"], [148, 3, 1, "", "eval_f"], [148, 3, 1, "", "solve_system"], [148, 3, 1, "", "u_exact"]], "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX": [[148, 2, 1, "", "dtype_f"], [148, 3, 1, "", "eval_f"]], "implementations.sweeper_classes": [[150, 0, 0, "-", "Multistep"], [151, 0, 0, "-", "Runge_Kutta"], [152, 0, 0, "-", "Runge_Kutta_Nystrom"], [153, 0, 0, "-", "boris_2nd_order"], [154, 0, 0, "-", "explicit"], [155, 0, 0, "-", "generic_implicit"], [156, 0, 0, "-", "generic_implicit_MPI"], [157, 0, 0, "-", "imex_1st_order"], [158, 0, 0, "-", "imex_1st_order_MPI"], [159, 0, 0, "-", "imex_1st_order_mass"], [160, 0, 0, "-", "multi_implicit"], [161, 0, 0, "-", "verlet"]], "implementations.sweeper_classes.Multistep": [[150, 1, 1, "", "AdamsBashforthExplicit1Step"], [150, 1, 1, "", "AdamsMoultonImplicit1Step"], [150, 1, 1, "", "AdamsMoultonImplicit2Step"], [150, 1, 1, "", "BackwardEuler"], [150, 1, 1, "", "Cache"], [150, 1, 1, "", "MultiStep"]], "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step": [[150, 2, 1, "", "alpha"], [150, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step": [[150, 2, 1, "", "alpha"], [150, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step": [[150, 2, 1, "", "alpha"], [150, 2, 1, "", "beta"], [150, 3, 1, "", "generate_starting_values"]], "implementations.sweeper_classes.Multistep.BackwardEuler": [[150, 2, 1, "", "alpha"], [150, 2, 1, "", "beta"]], "implementations.sweeper_classes.Multistep.Cache": [[150, 3, 1, "", "update"]], "implementations.sweeper_classes.Multistep.MultiStep": [[150, 2, 1, "", "alpha"], [150, 2, 1, "", "beta"], [150, 3, 1, "", "compute_end_point"], [150, 3, 1, "", "compute_residual"], [150, 3, 1, "", "generate_starting_values"], [150, 3, 1, "", "predict"], [150, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.Runge_Kutta": [[151, 1, 1, "", "ARK54"], [151, 1, 1, "", "ARK548L2SA"], [151, 1, 1, "", "ARK548L2SAERK"], [151, 1, 1, "", "ARK548L2SAERK2"], [151, 1, 1, "", "ARK548L2SAESDIRK"], [151, 1, 1, "", "ARK548L2SAESDIRK2"], [151, 1, 1, "", "BackwardEuler"], [151, 1, 1, "", "ButcherTableau"], [151, 1, 1, "", "ButcherTableauEmbedded"], [151, 1, 1, "", "Cash_Karp"], [151, 1, 1, "", "CrankNicholson"], [151, 1, 1, "", "DIRK43"], [151, 1, 1, "", "ESDIRK43"], [151, 1, 1, "", "ESDIRK53"], [151, 1, 1, "", "ExplicitMidpointMethod"], [151, 1, 1, "", "ForwardEuler"], [151, 1, 1, "", "Heun_Euler"], [151, 1, 1, "", "ImplicitMidpointMethod"], [151, 1, 1, "", "RK4"], [151, 1, 1, "", "RungeKutta"], [151, 1, 1, "", "RungeKuttaIMEX"]], "implementations.sweeper_classes.Runge_Kutta.ARK54": [[151, 2, 1, "", "ButcherTableauClass"], [151, 2, 1, "", "ButcherTableauClass_explicit"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "matrix_explicit"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA": [[151, 2, 1, "", "ButcherTableauClass"], [151, 2, 1, "", "ButcherTableauClass_explicit"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "matrix_explicit"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2": [[151, 2, 1, "", "matrix"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK": [[151, 2, 1, "", "matrix"]], "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2": [[151, 2, 1, "", "ButcherTableauClass"], [151, 2, 1, "", "gamma"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "i"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.BackwardEuler": [[151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.Cash_Karp": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.CrankNicholson": [[151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.DIRK43": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ESDIRK43": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "s2"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ESDIRK53": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod": [[151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ForwardEuler": [[151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.Heun_Euler": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "get_update_order"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod": [[151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RK4": [[151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RungeKutta": [[151, 2, 1, "", "ButcherTableauClass"], [151, 3, 1, "", "compute_end_point"], [151, 3, 1, "", "get_Butcher_tableau"], [151, 3, 1, "", "get_Q_matrix"], [151, 3, 1, "", "get_full_f"], [151, 3, 1, "", "get_update_order"], [151, 3, 1, "", "integrate"], [151, 4, 1, "", "level"], [151, 2, 1, "", "matrix"], [151, 2, 1, "", "nodes"], [151, 3, 1, "", "predict"], [151, 3, 1, "", "update_nodes"], [151, 2, 1, "", "weights"]], "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX": [[151, 2, 1, "", "ButcherTableauClass_explicit"], [151, 3, 1, "", "get_Butcher_tableau_explicit"], [151, 3, 1, "", "integrate"], [151, 2, 1, "", "matrix_explicit"], [151, 3, 1, "", "predict"], [151, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom": [[152, 1, 1, "", "RKN"], [152, 1, 1, "", "RungeKuttaNystrom"], [152, 1, 1, "", "Velocity_Verlet"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom": [[152, 3, 1, "", "compute_end_point"], [152, 3, 1, "", "get_full_f"], [152, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.boris_2nd_order": [[153, 1, 1, "", "boris_2nd_order"]], "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order": [[153, 2, 1, "", "S"], [153, 2, 1, "", "SQ"], [153, 2, 1, "", "ST"], [153, 2, 1, "", "Sx"], [153, 3, 1, "", "compute_end_point"], [153, 3, 1, "", "get_scalar_problems_manysweep_mats"], [153, 3, 1, "", "get_scalar_problems_picardsweep_mats"], [153, 3, 1, "", "get_scalar_problems_sweeper_mats"], [153, 3, 1, "", "get_sweeper_mats"], [153, 3, 1, "", "integrate"], [153, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.explicit": [[154, 1, 1, "", "explicit"]], "implementations.sweeper_classes.explicit.explicit": [[154, 2, 1, "", "QE"], [154, 3, 1, "", "compute_end_point"], [154, 3, 1, "", "integrate"], [154, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.generic_implicit": [[155, 1, 1, "", "generic_implicit"]], "implementations.sweeper_classes.generic_implicit.generic_implicit": [[155, 2, 1, "", "QI"], [155, 3, 1, "", "compute_end_point"], [155, 3, 1, "", "integrate"], [155, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.generic_implicit_MPI": [[156, 1, 1, "", "SweeperMPI"], [156, 1, 1, "", "generic_implicit_MPI"]], "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI": [[156, 4, 1, "", "comm"], [156, 3, 1, "", "compute_end_point"], [156, 3, 1, "", "compute_residual"], [156, 3, 1, "", "predict"], [156, 4, 1, "", "rank"]], "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI": [[156, 3, 1, "", "compute_end_point"], [156, 3, 1, "", "integrate"], [156, 2, 1, "", "rank"], [156, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order": [[157, 1, 1, "", "imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order.imex_1st_order": [[157, 2, 1, "", "QE"], [157, 2, 1, "", "QI"], [157, 3, 1, "", "compute_end_point"], [157, 3, 1, "", "get_scalar_problems_manysweep_mat"], [157, 3, 1, "", "get_scalar_problems_sweeper_mats"], [157, 3, 1, "", "get_sweeper_mats"], [157, 3, 1, "", "integrate"], [157, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order_MPI": [[158, 1, 1, "", "imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI": [[158, 3, 1, "", "compute_end_point"], [158, 3, 1, "", "integrate"], [158, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.imex_1st_order_mass": [[159, 1, 1, "", "imex_1st_order_mass"]], "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass": [[159, 3, 1, "", "compute_end_point"], [159, 3, 1, "", "compute_residual"], [159, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.multi_implicit": [[160, 1, 1, "", "multi_implicit"]], "implementations.sweeper_classes.multi_implicit.multi_implicit": [[160, 2, 1, "", "Q1"], [160, 2, 1, "", "Q2"], [160, 3, 1, "", "compute_end_point"], [160, 3, 1, "", "integrate"], [160, 3, 1, "", "update_nodes"]], "implementations.sweeper_classes.verlet": [[161, 1, 1, "", "verlet"]], "implementations.sweeper_classes.verlet.verlet": [[161, 2, 1, "", "QQ"], [161, 2, 1, "", "QT"], [161, 2, 1, "", "Qx"], [161, 3, 1, "", "compute_end_point"], [161, 3, 1, "", "integrate"], [161, 2, 1, "", "qQ"], [161, 3, 1, "", "update_nodes"]], "implementations.transfer_classes": [[163, 0, 0, "-", "BaseTransfer_mass"], [164, 0, 0, "-", "TransferFenicsMesh"], [165, 0, 0, "-", "TransferMesh"], [166, 0, 0, "-", "TransferMesh_FFT"], [167, 0, 0, "-", "TransferMesh_FFT2D"], [168, 0, 0, "-", "TransferMesh_MPIFFT"], [169, 0, 0, "-", "TransferMesh_NoCoarse"], [170, 0, 0, "-", "TransferPETScDMDA"], [171, 0, 0, "-", "TransferParticles_NoCoarse"]], "implementations.transfer_classes.BaseTransfer_mass": [[163, 1, 1, "", "base_transfer_mass"]], "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass": [[163, 2, 1, "", "coarse"], [163, 2, 1, "", "fine"], [163, 2, 1, "", "logger"], [163, 2, 1, "", "params"], [163, 3, 1, "", "prolong"], [163, 3, 1, "", "prolong_f"], [163, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferFenicsMesh": [[164, 1, 1, "", "mesh_to_mesh_fenics"]], "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics": [[164, 3, 1, "", "project"], [164, 3, 1, "", "prolong"], [164, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh": [[165, 1, 1, "", "mesh_to_mesh"]], "implementations.transfer_classes.TransferMesh.mesh_to_mesh": [[165, 2, 1, "", "Pspace"], [165, 2, 1, "", "Rspace"], [165, 3, 1, "", "prolong"], [165, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_FFT": [[166, 1, 1, "", "mesh_to_mesh_fft"]], "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft": [[166, 2, 1, "", "irfft_object_fine"], [166, 3, 1, "", "prolong"], [166, 3, 1, "", "restrict"], [166, 2, 1, "", "rfft_object_coarse"]], "implementations.transfer_classes.TransferMesh_FFT2D": [[167, 1, 1, "", "mesh_to_mesh_fft2d"]], "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d": [[167, 2, 1, "", "Pspace"], [167, 2, 1, "", "Rspace"], [167, 3, 1, "", "prolong"], [167, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_MPIFFT": [[168, 1, 1, "", "fft_to_fft"]], "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft": [[168, 3, 1, "", "prolong"], [168, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferMesh_NoCoarse": [[169, 1, 1, "", "mesh_to_mesh"]], "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh": [[169, 2, 1, "", "Pspace"], [169, 2, 1, "", "Rspace"], [169, 3, 1, "", "prolong"], [169, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferPETScDMDA": [[170, 1, 1, "", "mesh_to_mesh_petsc_dmda"]], "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda": [[170, 3, 1, "", "prolong"], [170, 3, 1, "", "restrict"]], "implementations.transfer_classes.TransferParticles_NoCoarse": [[171, 1, 1, "", "particles_to_particles"]], "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles": [[171, 3, 1, "", "prolong"], [171, 3, 1, "", "restrict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:exception", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "exception", "Python exception"], "6": ["py", "function", "Python function"]}, "titleterms": {"changelog": 0, "contributor": 1, "coven": 1, "code": [1, 5, 8, 35, 38], "conduct": 1, "our": 1, "pledg": 1, "standard": 1, "enforc": 1, "respons": 1, "scope": 1, "guidelin": [1, 7], "1": [1, 198], "correct": [1, 14, 39], "2": [1, 199], "warn": 1, "3": [1, 200], "temporari": 1, "ban": 1, "4": [1, 201], "perman": 1, "attribut": [1, 6], "how": [2, 3, 9], "contribut": [2, 3, 4, 9], "pysdc": [2, 3, 5, 6, 9, 18, 38, 199, 204], "welcom": [3, 9], "featur": [3, 4, 9], "get": [3, 9, 200], "start": [3, 9], "cite": [3, 9], "acknowledg": [3, 9], "recommend": 4, "pull": 4, "request": 4, "main": 4, "branch": 4, "releas": 4, "develop": 4, "continu": [5, 205], "integr": 5, "lint": 5, "test": [5, 9, 14, 15, 62, 198], "coverag": 5, "except": 5, "document": [5, 8, 9], "gener": 5, "name": 6, "convent": 6, "first": [6, 198, 199, 202], "definit": 6, "packag": [6, 40, 55, 65, 66, 69, 86, 92, 133, 137, 149, 162], "modul": [6, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "class": [6, 7, 78], "function": 6, "variabl": 6, "privat": 6, "public": [6, 39], "constant": 6, "custom": 7, "implement": [7, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "problem": [7, 10, 12, 36, 39, 51, 198], "user": 9, "guid": 9, "tutori": 9, "playground": 9, "project": [9, 11, 17], "api": 9, "allen": 10, "cahn": 10, "from": [10, 39], "bayreuth": 10, "verif": 10, "benchmark": 10, "applic": 10, "further": 10, "relat": 10, "file": 10, "solv": 11, "differenti": 11, "algebra": 11, "equat": [11, 16, 35], "sdc": [11, 15, 16, 33, 35, 36, 201, 205], "overview": 11, "theoret": [11, 33], "detail": 11, "second": [12, 39], "order": [12, 39], "simpl": 12, "solar": 12, "system": [12, 13], "fermi": 12, "pasta": 12, "ulam": 12, "tsingou": 12, "parallel": [13, 36, 203, 204], "time": [13, 204], "simul": 13, "multi": [13, 14, 205], "modal": 13, "energi": 13, "what": [13, 16], "ar": 13, "switch": 13, "process": 13, "power": 13, "pi": 13, "line": 13, "buck": 13, "convert": 13, "batteri": [13, 104], "drain": 13, "model": 13, "rdc": 14, "ration": 14, "defer": [14, 39], "converg": [14, 17, 35], "level": [14, 49], "pfasst": [14, 17, 34, 202, 203], "resili": 15, "reproduct": 15, "plot": 15, "adapt": [15, 71], "paper": 15, "i": 16, "fastest": 16, "variant": 16, "fisher": 16, "grai": 16, "scott": 16, "asymptot": 17, "organis": 17, "compress": 18, "introduct": 18, "method": [18, 35, 39], "proof": 18, "concept": 18, "fast": 33, "wave": 33, "slow": 33, "result": [33, 38], "acoust": 33, "advect": [33, 202], "exampl": 33, "boussinesq": 33, "matrix": 34, "base": [34, 78], "version": 34, "propag": 34, "exponenti": 35, "monodomain": 35, "cardiac": 35, "electrophysiologi": 35, "The": [35, 203], "esdc": 35, "run": [35, 202], "stabil": 35, "iter": [35, 205], "attempt": 36, "differ": 36, "precondition": 36, "node": [36, 50, 200], "mpi": [36, 203], "simplifi": 36, "newton": 36, "nonlinear": 36, "perform": 38, "analysi": 38, "python": 38, "jobscript": 38, "spectral": 39, "reproduc": 39, "figur": 39, "contact": 39, "core": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "submodul": [40, 55, 66, 69, 86, 92, 133, 137, 149, 162], "content": [40, 55, 65, 66, 69, 86, 92, 133, 137, 149, 162], "basetransf": 41, "colloc": [42, 198, 200], "common": 43, "descript": [43, 51], "control": [44, 203], "convergencecontrol": 45, "error": [46, 78], "hook": 47, "lagrang": 48, "spacetransf": 52, "step": [53, 198, 199, 200, 201, 202, 203, 204, 205], "sweeper": [54, 199, 200], "helper": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "nccl_commun": 56, "plot_help": 57, "problem_help": 58, "pysdc_help": 59, "setup_help": 60, "stats_help": 61, "transfer_help": 63, "visualization_tool": 64, "subpackag": [65, 92], "controller_class": [66, 67, 68], "controller_mpi": 67, "controller_nonmpi": 68, "convergence_controller_class": [69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "adaptive_colloc": 70, "basic_restart": 72, "check_converg": 73, "check_iteration_estim": 74, "crash": 75, "estimate_contraction_factor": 76, "estimate_embedded_error": 77, "estimate_extrapolation_error": 78, "abstract": 78, "extrapol": 78, "estim": [78, 205], "estimate_polynomial_error": 79, "hotrod": 80, "inexact": 81, "interpolate_between_restart": 82, "spread_step_s": 83, "step_size_limit": 84, "store_uold": 85, "datatype_class": [86, 87, 88, 89, 90, 91], "cupy_mesh": 87, "fenics_mesh": 88, "mesh": 89, "particl": [90, 201], "petsc_vec": 91, "problem_class": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148], "acousticadvection_1d_fd_imex": 93, "advectiondiffusionequation_1d_fft": 94, "advectionequation_nd_fd": 95, "allencahn_1d_fd": 96, "allencahn_2d_fd": 97, "allencahn_2d_fd_gpu": 98, "allencahn_2d_fft": 99, "allencahn_2d_fft_gpu": 100, "allencahn_mpifft": 101, "allencahn_temp_mpifft": 102, "auzinger_implicit": 103, "boussinesq_2d_fd_imex": 105, "brussel": 106, "buckconvert": 107, "discontinuoustestod": 108, "fastwaveslowwave_0d": 109, "fermipastaulamtsing": 110, "fullsolarsystem": 111, "generalizedfisher_1d_fd_implicit": 112, "generalizedfisher_1d_petsc": 113, "grayscott_1d_fenics_implicit": 114, "grayscott_2d_petsc_period": 115, "grayscott_mpifft": 116, "harmonicoscil": 117, "heatequation_1d_fenics_matrix_forc": 118, "heatequation_2d_petsc_forc": 119, "heatequation_nd_fd": 120, "heatequation_nd_fd_cupi": 121, "henonheil": 122, "logisticequ": 123, "lorenz": 124, "nonlinearschroedinger_mpifft": 125, "outersolarsystem": 126, "penningtrap_3d": 127, "pilin": 128, "quench": 129, "testequation_0d": 130, "van_der_pol_implicit": 131, "vorticityvelocity_2d_fenics_period": 132, "acoustic_help": [133, 134, 135, 136], "buildfdmatrix": [134, 140], "buildwave1dmatrix": 135, "standard_integr": [136, 142], "boussinesq_help": [137, 138, 139, 140, 141, 142, 143], "build2dfdmatrix": 138, "buildboussinesq2dmatrix": 139, "helper_class": 141, "unflatten": 143, "generic_nd_fd": 144, "nonlinear_ode_1": 145, "odescalar": 146, "odesystem": 147, "polynomial_test_problem": 148, "sweeper_class": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "multistep": [150, 202], "runge_kutta": 151, "runge_kutta_nystrom": 152, "boris_2nd_ord": 153, "explicit": 154, "generic_implicit": 155, "generic_implicit_mpi": 156, "imex_1st_ord": 157, "imex_1st_order_mpi": 158, "imex_1st_order_mass": 159, "multi_implicit": 160, "verlet": 161, "transfer_class": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171], "basetransfer_mass": 163, "transferfenicsmesh": 164, "transfermesh": 165, "transfermesh_fft": 166, "transfermesh_fft2d": 167, "transfermesh_mpifft": 168, "transfermesh_nocoars": 169, "transferpetscdmda": 170, "transferparticles_nocoars": 171, "A": [198, 199, 200, 201, 202, 203, 204, 205], "spatial": [198, 201], "part": [198, 199, 200, 201, 202, 203, 204, 205], "setup": 198, "b": [198, 199, 200, 201, 202, 203, 204, 205], "accuraci": 198, "check": 198, "c": [198, 199, 200, 201, 202, 203, 204, 205], "d": [198, 201], "data": 199, "structur": 199, "my": [199, 202], "us": 199, "": 199, "frontend": 199, "statist": 200, "new": 200, "ad": 200, "studi": 200, "type": 200, "multilevel": [201, 202], "transfer": 201, "oper": 201, "hierarchi": [201, 202], "v": 201, "mlsdc": 201, "5": 202, "6": 203, "advanc": [203, 205], "nonmpi": 203, "odd": 203, "tempor": 203, "distribut": 203, "7": 204, "extern": 204, "librari": 204, "fenic": 204, "mpi4pi": 204, "fft": 204, "fourier": 204, "transform": 204, "space": 204, "petsc": 204, "8": 205, "topic": 205, "visual": 205, "residu": 205, "x": 205, "To": 205}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Changelog": [[0, "changelog"]], "Contributor Covenant Code of Conduct": [[1, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[1, "our-pledge"]], "Our Standards": [[1, "our-standards"]], "Enforcement Responsibilities": [[1, "enforcement-responsibilities"]], "Scope": [[1, "scope"]], "Enforcement": [[1, "enforcement"]], "Enforcement Guidelines": [[1, "enforcement-guidelines"]], "1. Correction": [[1, "correction"]], "2. Warning": [[1, "warning"]], "3. Temporary Ban": [[1, "temporary-ban"]], "4. Permanent Ban": [[1, "permanent-ban"]], "Attribution": [[1, "attribution"]], "How to contribute to pySDC": [[2, "how-to-contribute-to-pysdc"]], "Welcome to pySDC!": [[3, "welcome-to-pysdc"], [9, "welcome-to-pysdc"]], "Features": [[3, "features"], [9, "features"]], "Getting started": [[3, "getting-started"], [9, "getting-started"]], "How to cite": [[3, "how-to-cite"], [9, "how-to-cite"]], "Contributing": [[3, "contributing"], [9, "contributing"]], "Acknowledgements": [[3, "acknowledgements"], [9, "acknowledgements"]], "Recommendations for pull requests": [[4, "recommendations-for-pull-requests"]], "Contributing to the main branch": [[4, "contributing-to-the-main-branch"]], "Release development branches": [[4, "release-development-branches"]], "Feature development branches": [[4, "feature-development-branches"]], "Continuous Integration in pySDC": [[5, "continuous-integration-in-pysdc"]], "Code linting": [[5, "code-linting"]], "Code testing": [[5, "code-testing"]], "Code coverage": [[5, "code-coverage"]], "Coverage exceptions": [[5, "coverage-exceptions"]], "Documentation generation": [[5, "documentation-generation"]], "Naming conventions in pySDC": [[6, "naming-conventions-in-pysdc"]], "First definitions": [[6, "first-definitions"]], "Packages and modules names": [[6, "packages-and-modules-names"]], "Class names": [[6, "class-names"]], "Function and variables names": [[6, "function-and-variables-names"]], "Private and public attributes": [[6, "private-and-public-attributes"]], "Constants": [[6, "constants"]], "Custom implementation guidelines": [[7, "custom-implementation-guidelines"]], "Implementing a custom problem class": [[7, "implementing-a-custom-problem-class"]], "Documenting Code": [[8, "documenting-code"]], "Tests": [[9, "tests"], [15, "tests"]], "User Guide": [[9, "user-guide"]], "Tutorial": [[9, "tutorial"]], "Playgrounds": [[9, "playgrounds"]], "Projects": [[9, "projects"]], "API documentation": [[9, "api-documentation"]], "Allen-Cahn problems from Bayreuth": [[10, "allen-cahn-problems-from-bayreuth"]], "Verification": [[10, "verification"]], "Benchmark": [[10, "benchmark"]], "Application": [[10, "application"]], "Further/related files": [[10, "further-related-files"]], "Solving differential algebraic equations with SDC": [[11, "solving-differential-algebraic-equations-with-sdc"]], "Project overview": [[11, "project-overview"]], "Theoretical details": [[11, "theoretical-details"]], "Second-order Problems": [[12, "second-order-problems"]], "Simple problems": [[12, "simple-problems"]], "Solar system problem": [[12, "solar-system-problem"]], "Fermi-Pasta-Ulam-Tsingou problem": [[12, "fermi-pasta-ulam-tsingou-problem"]], "Parallel-in-time simulation for multi-modal energy systems": [[13, "parallel-in-time-simulation-for-multi-modal-energy-systems"]], "What are switching processes in power systems?": [[13, "what-are-switching-processes-in-power-systems"]], "Pi-line": [[13, "pi-line"]], "Buck converter": [[13, "buck-converter"]], "Battery drain model": [[13, "battery-drain-model"]], "RDC: Rational Deferred Corrections": [[14, "rdc-rational-deferred-corrections"]], "Testing RDC convergence": [[14, "testing-rdc-convergence"]], "Multi-level RDC and PFASST with RDC": [[14, "multi-level-rdc-and-pfasst-with-rdc"]], "Resilience in SDC": [[15, "resilience-in-sdc"]], "Reproduction of the plots in the adaptive SDC paper": [[15, "reproduction-of-the-plots-in-the-adaptive-sdc-paper"]], "What is the fastest SDC variant?": [[16, "what-is-the-fastest-sdc-variant"]], "Fisher and Gray-Scott equations": [[16, "fisher-and-gray-scott-equations"]], "Asymptotic convergence of PFASST": [[17, "asymptotic-convergence-of-pfasst"]], "Organisation of the project": [[17, "organisation-of-the-project"]], "Compression in pySDC": [[18, "compression-in-pysdc"]], "Introduction": [[18, "introduction"]], "Methods": [[18, "methods"]], "Proof of Concept": [[18, "proof-of-concept"]], "Fast-Wave-Slow-Wave SDC": [[33, "fast-wave-slow-wave-sdc"]], "Theoretical results": [[33, "theoretical-results"]], "Acoustic-advection example": [[33, "acoustic-advection-example"]], "Boussinesq example": [[33, "boussinesq-example"]], "Matrix-based versions of PFASST": [[34, "matrix-based-versions-of-pfasst"]], "Matrix-based PFASST": [[34, "matrix-based-pfasst"]], "Propagator-based PFASST": [[34, "propagator-based-pfasst"]], "Exponential SDC for the Monodomain Equation in Cardiac Electrophysiology": [[35, "exponential-sdc-for-the-monodomain-equation-in-cardiac-electrophysiology"]], "Monodomain equation": [[35, "monodomain-equation"]], "The ESDC method for the monodomain equation": [[35, "the-esdc-method-for-the-monodomain-equation"]], "Running the code": [[35, "running-the-code"]], "Stability": [[35, "stability"]], "Convergence": [[35, "convergence"]], "Iterations": [[35, "iterations"]], "Attempts to parallelize SDC": [[36, "attempts-to-parallelize-sdc"]], "Different preconditioners for SDC": [[36, "different-preconditioners-for-sdc"]], "Node-parallel SDC with MPI": [[36, "node-parallel-sdc-with-mpi"], [36, "id1"]], "Simplified Newton for nonlinear problems": [[36, "simplified-newton-for-nonlinear-problems"]], "Performance analysis of pySDC": [[38, "performance-analysis-of-pysdc"]], "Python codes": [[38, "python-codes"]], "Jobscripts": [[38, "jobscripts"]], "Results": [[38, "results"]], "Spectral Deferred Correction Methods for Second-Order Problems": [[39, "spectral-deferred-correction-methods-for-second-order-problems"]], "Reproducing Figures from the Publication": [[39, "reproducing-figures-from-the-publication"]], "Contact": [[39, "contact"]], "core package": [[40, "core-package"]], "Submodules": [[40, "submodules"], [55, "submodules"], [66, "submodules"], [69, "submodules"], [86, "submodules"], [92, "submodules"], [133, "submodules"], [137, "submodules"], [149, "submodules"], [162, "submodules"]], "Module contents": [[40, "module-core"], [55, "module-helpers"], [65, "module-implementations"], [66, "module-implementations.controller_classes"], [69, "module-implementations.convergence_controller_classes"], [86, "module-implementations.datatype_classes"], [92, "module-implementations.problem_classes"], [133, "module-implementations.problem_classes.acoustic_helpers"], [137, "module-implementations.problem_classes.boussinesq_helpers"], [149, "module-implementations.sweeper_classes"], [162, "module-implementations.transfer_classes"]], "core.BaseTransfer module": [[41, "module-core.BaseTransfer"]], "core.Collocation module": [[42, "module-core.Collocation"]], "core.Common module": [[43, "module-core.Common"]], "Description": [[43, "description"], [51, "description"]], "core.Controller module": [[44, "module-core.Controller"]], "core.ConvergenceController module": [[45, "module-core.ConvergenceController"]], "core.Errors module": [[46, "module-core.Errors"]], "core.Hooks module": [[47, "module-core.Hooks"]], "core.Lagrange module": [[48, "module-core.Lagrange"]], "core.Level module": [[49, "module-core.Level"]], "core.Nodes module": [[50, "module-core.Nodes"]], "core.Problem module": [[51, "module-core.Problem"]], "core.SpaceTransfer module": [[52, "module-core.SpaceTransfer"]], "core.Step module": [[53, "module-core.Step"]], "core.Sweeper module": [[54, "module-core.Sweeper"]], "helpers package": [[55, "helpers-package"]], "helpers.NCCL_communicator module": [[56, "module-helpers.NCCL_communicator"]], "helpers.plot_helper module": [[57, "module-helpers.plot_helper"]], "helpers.problem_helper module": [[58, "module-helpers.problem_helper"]], "helpers.pysdc_helper module": [[59, "module-helpers.pysdc_helper"]], "helpers.setup_helper module": [[60, "module-helpers.setup_helper"]], "helpers.stats_helper module": [[61, "module-helpers.stats_helper"]], "helpers.testing module": [[62, "module-helpers.testing"]], "helpers.transfer_helper module": [[63, "module-helpers.transfer_helper"]], "helpers.visualization_tools module": [[64, "module-helpers.visualization_tools"]], "implementations package": [[65, "implementations-package"]], "Subpackages": [[65, "subpackages"], [92, "subpackages"]], "implementations.controller_classes package": [[66, "implementations-controller-classes-package"]], "implementations.controller_classes.controller_MPI module": [[67, "module-implementations.controller_classes.controller_MPI"]], "implementations.controller_classes.controller_nonMPI module": [[68, "module-implementations.controller_classes.controller_nonMPI"]], "implementations.convergence_controller_classes package": [[69, "implementations-convergence-controller-classes-package"]], "implementations.convergence_controller_classes.adaptive_collocation module": [[70, "module-implementations.convergence_controller_classes.adaptive_collocation"]], "}": [[70, "id3"]], "implementations.convergence_controller_classes.adaptivity module": [[71, "module-implementations.convergence_controller_classes.adaptivity"]], "implementations.convergence_controller_classes.basic_restarting module": [[72, "module-implementations.convergence_controller_classes.basic_restarting"]], "implementations.convergence_controller_classes.check_convergence module": [[73, "module-implementations.convergence_controller_classes.check_convergence"]], "implementations.convergence_controller_classes.check_iteration_estimator module": [[74, "module-implementations.convergence_controller_classes.check_iteration_estimator"]], "implementations.convergence_controller_classes.crash module": [[75, "module-implementations.convergence_controller_classes.crash"]], "implementations.convergence_controller_classes.estimate_contraction_factor module": [[76, "module-implementations.convergence_controller_classes.estimate_contraction_factor"]], "implementations.convergence_controller_classes.estimate_embedded_error module": [[77, "module-implementations.convergence_controller_classes.estimate_embedded_error"]], "implementations.convergence_controller_classes.estimate_extrapolation_error module": [[78, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"]], "Abstract base class for extrapolated error estimates": [[78, "abstract-base-class-for-extrapolated-error-estimates"]], "implementations.convergence_controller_classes.estimate_polynomial_error module": [[79, "module-implementations.convergence_controller_classes.estimate_polynomial_error"]], "implementations.convergence_controller_classes.hotrod module": [[80, "module-implementations.convergence_controller_classes.hotrod"]], "implementations.convergence_controller_classes.inexactness module": [[81, "module-implementations.convergence_controller_classes.inexactness"]], "implementations.convergence_controller_classes.interpolate_between_restarts module": [[82, "module-implementations.convergence_controller_classes.interpolate_between_restarts"]], "implementations.convergence_controller_classes.spread_step_sizes module": [[83, "module-implementations.convergence_controller_classes.spread_step_sizes"]], "implementations.convergence_controller_classes.step_size_limiter module": [[84, "module-implementations.convergence_controller_classes.step_size_limiter"]], "implementations.convergence_controller_classes.store_uold module": [[85, "module-implementations.convergence_controller_classes.store_uold"]], "implementations.datatype_classes package": [[86, "implementations-datatype-classes-package"]], "implementations.datatype_classes.cupy_mesh module": [[87, "module-implementations.datatype_classes.cupy_mesh"]], "implementations.datatype_classes.fenics_mesh module": [[88, "module-implementations.datatype_classes.fenics_mesh"]], "implementations.datatype_classes.mesh module": [[89, "module-implementations.datatype_classes.mesh"]], "implementations.datatype_classes.particles module": [[90, "module-implementations.datatype_classes.particles"]], "implementations.datatype_classes.petsc_vec module": [[91, "module-implementations.datatype_classes.petsc_vec"]], "implementations.problem_classes package": [[92, "implementations-problem-classes-package"]], "implementations.problem_classes.AcousticAdvection_1D_FD_imex module": [[93, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"]], "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT module": [[94, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"]], "implementations.problem_classes.AdvectionEquation_ND_FD module": [[95, "module-implementations.problem_classes.AdvectionEquation_ND_FD"]], "implementations.problem_classes.AllenCahn_1D_FD module": [[96, "module-implementations.problem_classes.AllenCahn_1D_FD"]], "implementations.problem_classes.AllenCahn_2D_FD module": [[97, "module-implementations.problem_classes.AllenCahn_2D_FD"]], "implementations.problem_classes.AllenCahn_2D_FD_gpu module": [[98, "implementations-problem-classes-allencahn-2d-fd-gpu-module"]], "implementations.problem_classes.AllenCahn_2D_FFT module": [[99, "module-implementations.problem_classes.AllenCahn_2D_FFT"]], "implementations.problem_classes.AllenCahn_2D_FFT_gpu module": [[100, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"]], "implementations.problem_classes.AllenCahn_MPIFFT module": [[101, "module-implementations.problem_classes.AllenCahn_MPIFFT"]], "implementations.problem_classes.AllenCahn_Temp_MPIFFT module": [[102, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"]], "implementations.problem_classes.Auzinger_implicit module": [[103, "module-implementations.problem_classes.Auzinger_implicit"]], "implementations.problem_classes.Battery module": [[104, "module-implementations.problem_classes.Battery"]], "implementations.problem_classes.Boussinesq_2D_FD_imex module": [[105, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"]], "implementations.problem_classes.Brusselator module": [[106, "module-implementations.problem_classes.Brusselator"]], "implementations.problem_classes.BuckConverter module": [[107, "module-implementations.problem_classes.BuckConverter"]], "implementations.problem_classes.DiscontinuousTestODE module": [[108, "module-implementations.problem_classes.DiscontinuousTestODE"]], "implementations.problem_classes.FastWaveSlowWave_0D module": [[109, "module-implementations.problem_classes.FastWaveSlowWave_0D"]], "implementations.problem_classes.FermiPastaUlamTsingou module": [[110, "module-implementations.problem_classes.FermiPastaUlamTsingou"]], "implementations.problem_classes.FullSolarSystem module": [[111, "module-implementations.problem_classes.FullSolarSystem"]], "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit module": [[112, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"]], "implementations.problem_classes.GeneralizedFisher_1D_PETSc module": [[113, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"]], "implementations.problem_classes.GrayScott_1D_FEniCS_implicit module": [[114, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"]], "implementations.problem_classes.GrayScott_2D_PETSc_periodic module": [[115, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"]], "implementations.problem_classes.GrayScott_MPIFFT module": [[116, "module-implementations.problem_classes.GrayScott_MPIFFT"]], "implementations.problem_classes.HarmonicOscillator module": [[117, "module-implementations.problem_classes.HarmonicOscillator"]], "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced module": [[118, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"]], "implementations.problem_classes.HeatEquation_2D_PETSc_forced module": [[119, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"]], "implementations.problem_classes.HeatEquation_ND_FD module": [[120, "module-implementations.problem_classes.HeatEquation_ND_FD"]], "implementations.problem_classes.HeatEquation_ND_FD_CuPy module": [[121, "implementations-problem-classes-heatequation-nd-fd-cupy-module"]], "implementations.problem_classes.HenonHeiles module": [[122, "module-implementations.problem_classes.HenonHeiles"]], "implementations.problem_classes.LogisticEquation module": [[123, "module-implementations.problem_classes.LogisticEquation"]], "implementations.problem_classes.Lorenz module": [[124, "module-implementations.problem_classes.Lorenz"]], "implementations.problem_classes.NonlinearSchroedinger_MPIFFT module": [[125, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"]], "implementations.problem_classes.OuterSolarSystem module": [[126, "module-implementations.problem_classes.OuterSolarSystem"]], "implementations.problem_classes.PenningTrap_3D module": [[127, "module-implementations.problem_classes.PenningTrap_3D"]], "implementations.problem_classes.Piline module": [[128, "module-implementations.problem_classes.Piline"]], "implementations.problem_classes.Quench module": [[129, "module-implementations.problem_classes.Quench"]], "implementations.problem_classes.TestEquation_0D module": [[130, "module-implementations.problem_classes.TestEquation_0D"]], "implementations.problem_classes.Van_der_Pol_implicit module": [[131, "module-implementations.problem_classes.Van_der_Pol_implicit"]], "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic module": [[132, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"]], "implementations.problem_classes.acoustic_helpers package": [[133, "implementations-problem-classes-acoustic-helpers-package"]], "implementations.problem_classes.acoustic_helpers.buildFDMatrix module": [[134, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"]], "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix module": [[135, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"]], "implementations.problem_classes.acoustic_helpers.standard_integrators module": [[136, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"]], "implementations.problem_classes.boussinesq_helpers package": [[137, "implementations-problem-classes-boussinesq-helpers-package"]], "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix module": [[138, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix module": [[139, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildFDMatrix module": [[140, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"]], "implementations.problem_classes.boussinesq_helpers.helper_classes module": [[141, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators module": [[142, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"]], "implementations.problem_classes.boussinesq_helpers.unflatten module": [[143, "module-implementations.problem_classes.boussinesq_helpers.unflatten"]], "implementations.problem_classes.generic_ND_FD module": [[144, "module-implementations.problem_classes.generic_ND_FD"]], "implementations.problem_classes.nonlinear_ODE_1 module": [[145, "module-implementations.problem_classes.nonlinear_ODE_1"]], "implementations.problem_classes.odeScalar module": [[146, "module-implementations.problem_classes.odeScalar"]], "implementations.problem_classes.odeSystem module": [[147, "module-implementations.problem_classes.odeSystem"]], "implementations.problem_classes.polynomial_test_problem module": [[148, "module-implementations.problem_classes.polynomial_test_problem"]], "implementations.sweeper_classes package": [[149, "implementations-sweeper-classes-package"]], "implementations.sweeper_classes.Multistep module": [[150, "module-implementations.sweeper_classes.Multistep"]], "implementations.sweeper_classes.Runge_Kutta module": [[151, "module-implementations.sweeper_classes.Runge_Kutta"]], "implementations.sweeper_classes.Runge_Kutta_Nystrom module": [[152, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"]], "implementations.sweeper_classes.boris_2nd_order module": [[153, "module-implementations.sweeper_classes.boris_2nd_order"]], "implementations.sweeper_classes.explicit module": [[154, "module-implementations.sweeper_classes.explicit"]], "implementations.sweeper_classes.generic_implicit module": [[155, "module-implementations.sweeper_classes.generic_implicit"]], "implementations.sweeper_classes.generic_implicit_MPI module": [[156, "module-implementations.sweeper_classes.generic_implicit_MPI"]], "implementations.sweeper_classes.imex_1st_order module": [[157, "module-implementations.sweeper_classes.imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order_MPI module": [[158, "module-implementations.sweeper_classes.imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_mass module": [[159, "module-implementations.sweeper_classes.imex_1st_order_mass"]], "implementations.sweeper_classes.multi_implicit module": [[160, "module-implementations.sweeper_classes.multi_implicit"]], "implementations.sweeper_classes.verlet module": [[161, "module-implementations.sweeper_classes.verlet"]], "implementations.transfer_classes package": [[162, "implementations-transfer-classes-package"]], "implementations.transfer_classes.BaseTransfer_mass module": [[163, "module-implementations.transfer_classes.BaseTransfer_mass"]], "implementations.transfer_classes.TransferFenicsMesh module": [[164, "module-implementations.transfer_classes.TransferFenicsMesh"]], "implementations.transfer_classes.TransferMesh module": [[165, "module-implementations.transfer_classes.TransferMesh"]], "implementations.transfer_classes.TransferMesh_FFT module": [[166, "module-implementations.transfer_classes.TransferMesh_FFT"]], "implementations.transfer_classes.TransferMesh_FFT2D module": [[167, "module-implementations.transfer_classes.TransferMesh_FFT2D"]], "implementations.transfer_classes.TransferMesh_MPIFFT module": [[168, "module-implementations.transfer_classes.TransferMesh_MPIFFT"]], "implementations.transfer_classes.TransferMesh_NoCoarse module": [[169, "module-implementations.transfer_classes.TransferMesh_NoCoarse"]], "implementations.transfer_classes.TransferPETScDMDA module": [[170, "module-implementations.transfer_classes.TransferPETScDMDA"]], "implementations.transfer_classes.TransferParticles_NoCoarse module": [[171, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "Step-1: A first spatial problem": [[198, "step-1-a-first-spatial-problem"]], "Part A: Spatial problem setup": [[198, "part-a-spatial-problem-setup"]], "Part B: Spatial accuracy check": [[198, "part-b-spatial-accuracy-check"]], "Part C: Collocation problem setup": [[198, "part-c-collocation-problem-setup"]], "Part D: Collocation accuracy test": [[198, "part-d-collocation-accuracy-test"]], "Step-2: Data structures and my first sweeper": [[199, "step-2-data-structures-and-my-first-sweeper"]], "Part A: Step data structure": [[199, "part-a-step-data-structure"]], "Part B: My first sweeper": [[199, "part-b-my-first-sweeper"]], "Part C: Using pySDC\u2019s frontend": [[199, "part-c-using-pysdc-s-frontend"]], "Step-3: Statistics and a new sweeper": [[200, "step-3-statistics-and-a-new-sweeper"]], "Part A: Getting statistics": [[200, "part-a-getting-statistics"]], "Part B: Adding statistics": [[200, "part-b-adding-statistics"]], "Part C: Studying collocation node types": [[200, "part-c-studying-collocation-node-types"]], "Step-4: Multilevel SDC": [[201, "step-4-multilevel-sdc"]], "Part A: Spatial transfer operators": [[201, "part-a-spatial-transfer-operators"]], "Part B: Multilevel hierarchy": [[201, "part-b-multilevel-hierarchy"]], "Part C: SDC vs. MLSDC": [[201, "part-c-sdc-vs-mlsdc"]], "Part D: MLSDC with particles": [[201, "part-d-mlsdc-with-particles"]], "Step-5: PFASST": [[202, "step-5-pfasst"]], "Part A: Multistep multilevel hierarchy": [[202, "part-a-multistep-multilevel-hierarchy"]], "Part B: My first PFASST run": [[202, "part-b-my-first-pfasst-run"]], "Part C: Advection and PFASST": [[202, "part-c-advection-and-pfasst"]], "Step-6: Advanced PFASST controllers": [[203, "step-6-advanced-pfasst-controllers"]], "Part A: The nonMPI controller": [[203, "part-a-the-nonmpi-controller"]], "Part B: Odd temporal distribution": [[203, "part-b-odd-temporal-distribution"]], "Part C: MPI parallelization": [[203, "part-c-mpi-parallelization"]], "Step-7: pySDC with external libraries": [[204, "step-7-pysdc-with-external-libraries"]], "Part A: pySDC and FEniCS": [[204, "part-a-pysdc-and-fenics"]], "Part B: mpi4py-fft for parallel Fourier transforms": [[204, "part-b-mpi4py-fft-for-parallel-fourier-transforms"]], "Part C: Time-parallel pySDC with space-parallel PETSc": [[204, "part-c-time-parallel-pysdc-with-space-parallel-petsc"]], "Step-8: Advanced topics": [[205, "step-8-advanced-topics"]], "Part A: Visualizing Residuals": [[205, "part-a-visualizing-residuals"]], "Part B: Multi-step SDC": [[205, "part-b-multi-step-sdc"]], "Part C: Iteration estimator": [[205, "part-c-iteration-estimator"]], "Part X: To be continued\u2026": [[205, "part-x-to-be-continued"]]}, "indexentries": {"core": [[40, "module-core"]], "module": [[40, "module-core"], [41, "module-core.BaseTransfer"], [42, "module-core.Collocation"], [43, "module-core.Common"], [44, "module-core.Controller"], [45, "module-core.ConvergenceController"], [46, "module-core.Errors"], [47, "module-core.Hooks"], [48, "module-core.Lagrange"], [49, "module-core.Level"], [50, "module-core.Nodes"], [51, "module-core.Problem"], [52, "module-core.SpaceTransfer"], [53, "module-core.Step"], [54, "module-core.Sweeper"], [55, "module-helpers"], [56, "module-helpers.NCCL_communicator"], [57, "module-helpers.plot_helper"], [58, "module-helpers.problem_helper"], [59, "module-helpers.pysdc_helper"], [60, "module-helpers.setup_helper"], [61, "module-helpers.stats_helper"], [62, "module-helpers.testing"], [63, "module-helpers.transfer_helper"], [64, "module-helpers.visualization_tools"], [65, "module-implementations"], [66, "module-implementations.controller_classes"], [67, "module-implementations.controller_classes.controller_MPI"], [68, "module-implementations.controller_classes.controller_nonMPI"], [69, "module-implementations.convergence_controller_classes"], [70, "module-implementations.convergence_controller_classes.adaptive_collocation"], [71, "module-implementations.convergence_controller_classes.adaptivity"], [72, "module-implementations.convergence_controller_classes.basic_restarting"], [73, "module-implementations.convergence_controller_classes.check_convergence"], [74, "module-implementations.convergence_controller_classes.check_iteration_estimator"], [75, "module-implementations.convergence_controller_classes.crash"], [76, "module-implementations.convergence_controller_classes.estimate_contraction_factor"], [77, "module-implementations.convergence_controller_classes.estimate_embedded_error"], [78, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"], [79, "module-implementations.convergence_controller_classes.estimate_polynomial_error"], [80, "module-implementations.convergence_controller_classes.hotrod"], [81, "module-implementations.convergence_controller_classes.inexactness"], [82, "module-implementations.convergence_controller_classes.interpolate_between_restarts"], [83, "module-implementations.convergence_controller_classes.spread_step_sizes"], [84, "module-implementations.convergence_controller_classes.step_size_limiter"], [85, "module-implementations.convergence_controller_classes.store_uold"], [86, "module-implementations.datatype_classes"], [87, "module-implementations.datatype_classes.cupy_mesh"], [88, "module-implementations.datatype_classes.fenics_mesh"], [89, "module-implementations.datatype_classes.mesh"], [90, "module-implementations.datatype_classes.particles"], [91, "module-implementations.datatype_classes.petsc_vec"], [92, "module-implementations.problem_classes"], [93, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"], [94, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"], [95, "module-implementations.problem_classes.AdvectionEquation_ND_FD"], [96, "module-implementations.problem_classes.AllenCahn_1D_FD"], [97, "module-implementations.problem_classes.AllenCahn_2D_FD"], [99, "module-implementations.problem_classes.AllenCahn_2D_FFT"], [100, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"], [101, "module-implementations.problem_classes.AllenCahn_MPIFFT"], [102, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"], [103, "module-implementations.problem_classes.Auzinger_implicit"], [104, "module-implementations.problem_classes.Battery"], [105, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"], [106, "module-implementations.problem_classes.Brusselator"], [107, "module-implementations.problem_classes.BuckConverter"], [108, "module-implementations.problem_classes.DiscontinuousTestODE"], [109, "module-implementations.problem_classes.FastWaveSlowWave_0D"], [110, "module-implementations.problem_classes.FermiPastaUlamTsingou"], [111, "module-implementations.problem_classes.FullSolarSystem"], [112, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"], [113, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"], [114, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"], [115, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"], [116, "module-implementations.problem_classes.GrayScott_MPIFFT"], [117, "module-implementations.problem_classes.HarmonicOscillator"], [118, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"], [119, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"], [120, "module-implementations.problem_classes.HeatEquation_ND_FD"], [122, "module-implementations.problem_classes.HenonHeiles"], [123, "module-implementations.problem_classes.LogisticEquation"], [124, "module-implementations.problem_classes.Lorenz"], [125, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"], [126, "module-implementations.problem_classes.OuterSolarSystem"], [127, "module-implementations.problem_classes.PenningTrap_3D"], [128, "module-implementations.problem_classes.Piline"], [129, "module-implementations.problem_classes.Quench"], [130, "module-implementations.problem_classes.TestEquation_0D"], [131, "module-implementations.problem_classes.Van_der_Pol_implicit"], [132, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"], [133, "module-implementations.problem_classes.acoustic_helpers"], [134, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"], [135, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"], [136, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"], [137, "module-implementations.problem_classes.boussinesq_helpers"], [138, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"], [139, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"], [140, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"], [141, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"], [142, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"], [143, "module-implementations.problem_classes.boussinesq_helpers.unflatten"], [144, "module-implementations.problem_classes.generic_ND_FD"], [145, "module-implementations.problem_classes.nonlinear_ODE_1"], [146, "module-implementations.problem_classes.odeScalar"], [147, "module-implementations.problem_classes.odeSystem"], [148, "module-implementations.problem_classes.polynomial_test_problem"], [149, "module-implementations.sweeper_classes"], [150, "module-implementations.sweeper_classes.Multistep"], [151, "module-implementations.sweeper_classes.Runge_Kutta"], [152, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"], [153, "module-implementations.sweeper_classes.boris_2nd_order"], [154, "module-implementations.sweeper_classes.explicit"], [155, "module-implementations.sweeper_classes.generic_implicit"], [156, "module-implementations.sweeper_classes.generic_implicit_MPI"], [157, "module-implementations.sweeper_classes.imex_1st_order"], [158, "module-implementations.sweeper_classes.imex_1st_order_MPI"], [159, "module-implementations.sweeper_classes.imex_1st_order_mass"], [160, "module-implementations.sweeper_classes.multi_implicit"], [161, "module-implementations.sweeper_classes.verlet"], [162, "module-implementations.transfer_classes"], [163, "module-implementations.transfer_classes.BaseTransfer_mass"], [164, "module-implementations.transfer_classes.TransferFenicsMesh"], [165, "module-implementations.transfer_classes.TransferMesh"], [166, "module-implementations.transfer_classes.TransferMesh_FFT"], [167, "module-implementations.transfer_classes.TransferMesh_FFT2D"], [168, "module-implementations.transfer_classes.TransferMesh_MPIFFT"], [169, "module-implementations.transfer_classes.TransferMesh_NoCoarse"], [170, "module-implementations.transfer_classes.TransferPETScDMDA"], [171, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "base_transfer (class in core.basetransfer)": [[41, "core.BaseTransfer.base_transfer"]], "coarse (base_transfer attribute)": [[41, "core.BaseTransfer.base_transfer.coarse"]], "core.basetransfer": [[41, "module-core.BaseTransfer"]], "fine (base_transfer attribute)": [[41, "core.BaseTransfer.base_transfer.fine"]], "get_transfer_matrix_q() (base_transfer static method)": [[41, "core.BaseTransfer.base_transfer.get_transfer_matrix_Q"]], "logger (base_transfer attribute)": [[41, "core.BaseTransfer.base_transfer.logger"]], "params (base_transfer attribute)": [[41, "core.BaseTransfer.base_transfer.params"]], "prolong() (base_transfer method)": [[41, "core.BaseTransfer.base_transfer.prolong"]], "prolong_f() (base_transfer method)": [[41, "core.BaseTransfer.base_transfer.prolong_f"]], "restrict() (base_transfer method)": [[41, "core.BaseTransfer.base_transfer.restrict"]], "collbase (class in core.collocation)": [[42, "core.Collocation.CollBase"]], "qmat (collbase attribute)": [[42, "core.Collocation.CollBase.Qmat"]], "smat (collbase attribute)": [[42, "core.Collocation.CollBase.Smat"]], "core.collocation": [[42, "module-core.Collocation"]], "delta_m (collbase attribute)": [[42, "core.Collocation.CollBase.delta_m"]], "evaluate() (collbase static method)": [[42, "core.Collocation.CollBase.evaluate"]], "left_is_node (collbase attribute)": [[42, "core.Collocation.CollBase.left_is_node"]], "nodes (collbase attribute)": [[42, "core.Collocation.CollBase.nodes"]], "num_nodes (collbase attribute)": [[42, "core.Collocation.CollBase.num_nodes"]], "right_is_node (collbase attribute)": [[42, "core.Collocation.CollBase.right_is_node"]], "tleft (collbase attribute)": [[42, "core.Collocation.CollBase.tleft"]], "tright (collbase attribute)": [[42, "core.Collocation.CollBase.tright"]], "weights (collbase attribute)": [[42, "core.Collocation.CollBase.weights"]], "registerparams (class in core.common)": [[43, "core.Common.RegisterParams"]], "_parnames (registerparams attribute)": [[43, "core.Common.RegisterParams._parNames"]], "_parnamesreadonly (registerparams attribute)": [[43, "core.Common.RegisterParams._parNamesReadOnly"]], "core.common": [[43, "module-core.Common"]], "params (registerparams attribute)": [[43, "core.Common.RegisterParams.params"]], "params (registerparams property)": [[43, "id0"]], "add_convergence_controller() (controller method)": [[44, "core.Controller.controller.add_convergence_controller"]], "add_hook() (controller method)": [[44, "core.Controller.controller.add_hook"]], "controller (class in core.controller)": [[44, "core.Controller.controller"]], "core.controller": [[44, "module-core.Controller"]], "dump_setup() (controller method)": [[44, "core.Controller.controller.dump_setup"]], "get_convergence_controllers_as_table() (controller method)": [[44, "core.Controller.controller.get_convergence_controllers_as_table"]], "hooks (controller property)": [[44, "core.Controller.controller.hooks"]], "return_stats() (controller method)": [[44, "core.Controller.controller.return_stats"]], "run() (controller method)": [[44, "core.Controller.controller.run"]], "setup_convergence_controllers() (controller method)": [[44, "core.Controller.controller.setup_convergence_controllers"]], "welcome_message() (controller method)": [[44, "core.Controller.controller.welcome_message"]], "convergencecontroller (class in core.convergencecontroller)": [[45, "core.ConvergenceController.ConvergenceController"]], "pars (class in core.convergencecontroller)": [[45, "core.ConvergenceController.Pars"]], "recv() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.Recv"], [45, "core.ConvergenceController.ConvergenceController.recv"]], "send() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.Send"], [45, "core.ConvergenceController.ConvergenceController.send"]], "status (class in core.convergencecontroller)": [[45, "core.ConvergenceController.Status"]], "add_variable() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.add_variable"]], "check_iteration_status() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.check_iteration_status"]], "check_parameters() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.check_parameters"]], "convergence_control() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.convergence_control"]], "core.convergencecontroller": [[45, "module-core.ConvergenceController"]], "debug() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.debug"]], "dependencies() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.dependencies"]], "determine_restart() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.determine_restart"]], "get_new_step_size() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.get_new_step_size"]], "log() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.log"]], "post_iteration_processing() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.post_iteration_processing"]], "post_spread_processing() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.post_spread_processing"]], "post_step_processing() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.post_step_processing"]], "pre_iteration_processing() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.pre_iteration_processing"]], "prepare_mpi_datatypes() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.prepare_MPI_datatypes"]], "prepare_mpi_logical_operations() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.prepare_MPI_logical_operations"]], "prepare_next_block() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.prepare_next_block"]], "reset_buffers_nonmpi() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.reset_buffers_nonMPI"]], "reset_status_variables() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.reset_status_variables"]], "reset_variable() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.reset_variable"]], "setup() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.setup"]], "setup_status_variables() (convergencecontroller method)": [[45, "core.ConvergenceController.ConvergenceController.setup_status_variables"]], "collocationerror": [[46, "core.Errors.CollocationError"]], "communicationerror": [[46, "core.Errors.CommunicationError"]], "controllererror": [[46, "core.Errors.ControllerError"]], "convergenceerror": [[46, "core.Errors.ConvergenceError"]], "dataerror": [[46, "core.Errors.DataError"]], "parametererror": [[46, "core.Errors.ParameterError"]], "problemerror": [[46, "core.Errors.ProblemError"]], "readonlyerror": [[46, "core.Errors.ReadOnlyError"]], "transfererror": [[46, "core.Errors.TransferError"]], "unlockerror": [[46, "core.Errors.UnlockError"]], "core.errors": [[46, "module-core.Errors"]], "entry (class in core.hooks)": [[47, "core.Hooks.Entry"]], "__num_restarts (hooks attribute)": [[47, "core.Hooks.hooks.__num_restarts"]], "__stats (hooks attribute)": [[47, "core.Hooks.hooks.__stats"]], "add_to_stats() (hooks method)": [[47, "core.Hooks.hooks.add_to_stats"]], "core.hooks": [[47, "module-core.Hooks"]], "entry (hooks attribute)": [[47, "core.Hooks.hooks.entry"], [47, "id0"]], "hooks (class in core.hooks)": [[47, "core.Hooks.hooks"]], "increment_stats() (hooks method)": [[47, "core.Hooks.hooks.increment_stats"]], "iter (entry attribute)": [[47, "core.Hooks.Entry.iter"]], "level (entry attribute)": [[47, "core.Hooks.Entry.level"]], "logger (hooks attribute)": [[47, "core.Hooks.hooks.logger"]], "meta_data (hooks attribute)": [[47, "core.Hooks.hooks.meta_data"]], "num_restarts (entry attribute)": [[47, "core.Hooks.Entry.num_restarts"]], "post_comm() (hooks method)": [[47, "core.Hooks.hooks.post_comm"]], "post_iteration() (hooks method)": [[47, "core.Hooks.hooks.post_iteration"]], "post_predict() (hooks method)": [[47, "core.Hooks.hooks.post_predict"]], "post_run() (hooks method)": [[47, "core.Hooks.hooks.post_run"]], "post_setup() (hooks method)": [[47, "core.Hooks.hooks.post_setup"]], "post_step() (hooks method)": [[47, "core.Hooks.hooks.post_step"]], "post_sweep() (hooks method)": [[47, "core.Hooks.hooks.post_sweep"]], "pre_comm() (hooks method)": [[47, "core.Hooks.hooks.pre_comm"]], "pre_iteration() (hooks method)": [[47, "core.Hooks.hooks.pre_iteration"]], "pre_predict() (hooks method)": [[47, "core.Hooks.hooks.pre_predict"]], "pre_run() (hooks method)": [[47, "core.Hooks.hooks.pre_run"]], "pre_setup() (hooks method)": [[47, "core.Hooks.hooks.pre_setup"]], "pre_step() (hooks method)": [[47, "core.Hooks.hooks.pre_step"]], "pre_sweep() (hooks method)": [[47, "core.Hooks.hooks.pre_sweep"]], "process (entry attribute)": [[47, "core.Hooks.Entry.process"]], "process_sweeper (entry attribute)": [[47, "core.Hooks.Entry.process_sweeper"]], "reset_stats() (hooks method)": [[47, "core.Hooks.hooks.reset_stats"]], "return_stats() (hooks method)": [[47, "core.Hooks.hooks.return_stats"]], "sweep (entry attribute)": [[47, "core.Hooks.Entry.sweep"]], "time (entry attribute)": [[47, "core.Hooks.Entry.time"]], "type (entry attribute)": [[47, "core.Hooks.Entry.type"]], "lagrangeapproximation (class in core.lagrange)": [[48, "core.Lagrange.LagrangeApproximation"]], "computefejerrule() (in module core.lagrange)": [[48, "core.Lagrange.computeFejerRule"]], "core.lagrange": [[48, "module-core.Lagrange"]], "getintegrationmatrix() (lagrangeapproximation method)": [[48, "core.Lagrange.LagrangeApproximation.getIntegrationMatrix"]], "getinterpolationmatrix() (lagrangeapproximation method)": [[48, "core.Lagrange.LagrangeApproximation.getInterpolationMatrix"]], "n (lagrangeapproximation property)": [[48, "core.Lagrange.LagrangeApproximation.n"]], "points (lagrangeapproximation attribute)": [[48, "core.Lagrange.LagrangeApproximation.points"]], "weights (lagrangeapproximation attribute)": [[48, "core.Lagrange.LagrangeApproximation.weights"]], "core.level": [[49, "module-core.Level"]], "dt (level property)": [[49, "core.Level.level.dt"]], "f (level attribute)": [[49, "core.Level.level.f"]], "fold (level attribute)": [[49, "core.Level.level.fold"]], "level (class in core.level)": [[49, "core.Level.level"]], "level_index (level attribute)": [[49, "core.Level.level.level_index"]], "params (level attribute)": [[49, "core.Level.level.params"]], "prob (level property)": [[49, "core.Level.level.prob"]], "reset_level() (level method)": [[49, "core.Level.level.reset_level"]], "status (level attribute)": [[49, "core.Level.level.status"]], "sweep (level property)": [[49, "core.Level.level.sweep"]], "tag (level property)": [[49, "core.Level.level.tag"]], "tau (level attribute)": [[49, "core.Level.level.tau"]], "time (level property)": [[49, "core.Level.level.time"]], "u (level attribute)": [[49, "core.Level.level.u"]], "uend (level attribute)": [[49, "core.Level.level.uend"]], "uold (level attribute)": [[49, "core.Level.level.uold"]], "nodeserror": [[50, "core.Nodes.NodesError"]], "nodesgenerator (class in core.nodes)": [[50, "core.Nodes.NodesGenerator"]], "core.nodes": [[50, "module-core.Nodes"]], "evalorthogpoly() (nodesgenerator method)": [[50, "core.Nodes.NodesGenerator.evalOrthogPoly"]], "getnodes() (nodesgenerator method)": [[50, "core.Nodes.NodesGenerator.getNodes"]], "getorthogpolycoefficients() (nodesgenerator method)": [[50, "core.Nodes.NodesGenerator.getOrthogPolyCoefficients"]], "gettridiagcoefficients() (nodesgenerator method)": [[50, "core.Nodes.NodesGenerator.getTridiagCoefficients"]], "node_type (nodesgenerator attribute)": [[50, "core.Nodes.NodesGenerator.node_type"]], "quad_type (nodesgenerator attribute)": [[50, "core.Nodes.NodesGenerator.quad_type"]], "workcounter (class in core.problem)": [[51, "core.Problem.WorkCounter"]], "apply_mass_matrix() (ptype method)": [[51, "core.Problem.ptype.apply_mass_matrix"]], "core.problem": [[51, "module-core.Problem"]], "decrement() (workcounter method)": [[51, "core.Problem.WorkCounter.decrement"]], "dtype_f (ptype attribute)": [[51, "core.Problem.ptype.dtype_f"]], "dtype_u (ptype attribute)": [[51, "core.Problem.ptype.dtype_u"]], "eval_f() (ptype method)": [[51, "core.Problem.ptype.eval_f"]], "f_init (ptype property)": [[51, "core.Problem.ptype.f_init"]], "generate_scipy_reference_solution() (ptype method)": [[51, "core.Problem.ptype.generate_scipy_reference_solution"]], "get_default_sweeper_class() (ptype class method)": [[51, "core.Problem.ptype.get_default_sweeper_class"]], "get_fig() (ptype method)": [[51, "core.Problem.ptype.get_fig"]], "logger (ptype attribute)": [[51, "core.Problem.ptype.logger"], [51, "id0"]], "plot() (ptype method)": [[51, "core.Problem.ptype.plot"]], "ptype (class in core.problem)": [[51, "core.Problem.ptype"]], "u_init (ptype property)": [[51, "core.Problem.ptype.u_init"]], "coarse_prob (space_transfer attribute)": [[52, "core.SpaceTransfer.space_transfer.coarse_prob"]], "core.spacetransfer": [[52, "module-core.SpaceTransfer"]], "fine_prob (space_transfer attribute)": [[52, "core.SpaceTransfer.space_transfer.fine_prob"]], "logger (space_transfer attribute)": [[52, "core.SpaceTransfer.space_transfer.logger"]], "params (space_transfer attribute)": [[52, "core.SpaceTransfer.space_transfer.params"]], "prolong() (space_transfer method)": [[52, "core.SpaceTransfer.space_transfer.prolong"]], "restrict() (space_transfer method)": [[52, "core.SpaceTransfer.space_transfer.restrict"]], "space_transfer (class in core.spacetransfer)": [[52, "core.SpaceTransfer.space_transfer"]], "connect_levels() (step method)": [[53, "core.Step.step.connect_levels"]], "core.step": [[53, "module-core.Step"]], "dt (step property)": [[53, "core.Step.step.dt"]], "init_step() (step method)": [[53, "core.Step.step.init_step"]], "levels (step attribute)": [[53, "core.Step.step.levels"]], "logger (step attribute)": [[53, "core.Step.step.logger"]], "next (step property)": [[53, "core.Step.step.next"]], "params (step attribute)": [[53, "core.Step.step.params"]], "prev (step property)": [[53, "core.Step.step.prev"]], "reset_step() (step method)": [[53, "core.Step.step.reset_step"]], "status (step attribute)": [[53, "core.Step.step.status"]], "step (class in core.step)": [[53, "core.Step.step"]], "time (step property)": [[53, "core.Step.step.time"]], "transfer() (step method)": [[53, "core.Step.step.transfer"]], "coll (sweeper attribute)": [[54, "core.Sweeper.sweeper.coll"]], "compute_end_point() (sweeper method)": [[54, "core.Sweeper.sweeper.compute_end_point"]], "compute_residual() (sweeper method)": [[54, "core.Sweeper.sweeper.compute_residual"]], "core.sweeper": [[54, "module-core.Sweeper"]], "get_qdelta_explicit() (sweeper method)": [[54, "core.Sweeper.sweeper.get_Qdelta_explicit"]], "get_qdelta_implicit() (sweeper method)": [[54, "core.Sweeper.sweeper.get_Qdelta_implicit"]], "integrate() (sweeper method)": [[54, "core.Sweeper.sweeper.integrate"]], "level (sweeper property)": [[54, "core.Sweeper.sweeper.level"]], "logger (sweeper attribute)": [[54, "core.Sweeper.sweeper.logger"]], "params (sweeper attribute)": [[54, "core.Sweeper.sweeper.params"]], "predict() (sweeper method)": [[54, "core.Sweeper.sweeper.predict"]], "rank (sweeper property)": [[54, "core.Sweeper.sweeper.rank"]], "sweeper (class in core.sweeper)": [[54, "core.Sweeper.sweeper"]], "update_nodes() (sweeper method)": [[54, "core.Sweeper.sweeper.update_nodes"]], "helpers": [[55, "module-helpers"]], "allreduce() (ncclcomm method)": [[56, "helpers.NCCL_communicator.NCCLComm.Allreduce"]], "ncclcomm (class in helpers.nccl_communicator)": [[56, "helpers.NCCL_communicator.NCCLComm"]], "reduce() (ncclcomm method)": [[56, "helpers.NCCL_communicator.NCCLComm.Reduce"]], "get_count() (ncclcomm static method)": [[56, "helpers.NCCL_communicator.NCCLComm.get_count"]], "get_dtype() (ncclcomm static method)": [[56, "helpers.NCCL_communicator.NCCLComm.get_dtype"]], "get_op() (ncclcomm method)": [[56, "helpers.NCCL_communicator.NCCLComm.get_op"]], "helpers.nccl_communicator": [[56, "module-helpers.NCCL_communicator"]], "figsize() (in module helpers.plot_helper)": [[57, "helpers.plot_helper.figsize"]], "figsize_by_journal() (in module helpers.plot_helper)": [[57, "helpers.plot_helper.figsize_by_journal"]], "helpers.plot_helper": [[57, "module-helpers.plot_helper"]], "newfig() (in module helpers.plot_helper)": [[57, "helpers.plot_helper.newfig"]], "savefig() (in module helpers.plot_helper)": [[57, "helpers.plot_helper.savefig"]], "setup_mpl() (in module helpers.plot_helper)": [[57, "helpers.plot_helper.setup_mpl"]], "get_1d_grid() (in module helpers.problem_helper)": [[58, "helpers.problem_helper.get_1d_grid"]], "get_finite_difference_matrix() (in module helpers.problem_helper)": [[58, "helpers.problem_helper.get_finite_difference_matrix"]], "get_finite_difference_stencil() (in module helpers.problem_helper)": [[58, "helpers.problem_helper.get_finite_difference_stencil"]], "get_steps() (in module helpers.problem_helper)": [[58, "helpers.problem_helper.get_steps"]], "helpers.problem_helper": [[58, "module-helpers.problem_helper"]], "frozenclass (class in helpers.pysdc_helper)": [[59, "helpers.pysdc_helper.FrozenClass"]], "__isfrozen (frozenclass attribute)": [[59, "helpers.pysdc_helper.FrozenClass.__isfrozen"]], "get() (frozenclass method)": [[59, "helpers.pysdc_helper.FrozenClass.get"]], "helpers.pysdc_helper": [[59, "module-helpers.pysdc_helper"]], "generate_description() (in module helpers.setup_helper)": [[60, "helpers.setup_helper.generate_description"]], "helpers.setup_helper": [[60, "module-helpers.setup_helper"]], "filter_stats() (in module helpers.stats_helper)": [[61, "helpers.stats_helper.filter_stats"]], "get_list_of_types() (in module helpers.stats_helper)": [[61, "helpers.stats_helper.get_list_of_types"]], "get_sorted() (in module helpers.stats_helper)": [[61, "helpers.stats_helper.get_sorted"]], "helpers.stats_helper": [[61, "module-helpers.stats_helper"]], "sort_stats() (in module helpers.stats_helper)": [[61, "helpers.stats_helper.sort_stats"]], "datachecker (class in helpers.testing)": [[62, "helpers.testing.DataChecker"]], "helpers.testing": [[62, "module-helpers.testing"]], "storeandcheck() (datachecker method)": [[62, "helpers.testing.DataChecker.storeAndCheck"]], "writetojson() (datachecker method)": [[62, "helpers.testing.DataChecker.writeToJSON"]], "border_padding() (in module helpers.transfer_helper)": [[63, "helpers.transfer_helper.border_padding"]], "continue_periodic_array() (in module helpers.transfer_helper)": [[63, "helpers.transfer_helper.continue_periodic_array"]], "helpers.transfer_helper": [[63, "module-helpers.transfer_helper"]], "interpolation_matrix_1d() (in module helpers.transfer_helper)": [[63, "helpers.transfer_helper.interpolation_matrix_1d"]], "next_neighbors() (in module helpers.transfer_helper)": [[63, "helpers.transfer_helper.next_neighbors"]], "next_neighbors_periodic() (in module helpers.transfer_helper)": [[63, "helpers.transfer_helper.next_neighbors_periodic"]], "restriction_matrix_1d() (in module helpers.transfer_helper)": [[63, "helpers.transfer_helper.restriction_matrix_1d"]], "helpers.visualization_tools": [[64, "module-helpers.visualization_tools"]], "show_residual_across_simulation() (in module helpers.visualization_tools)": [[64, "helpers.visualization_tools.show_residual_across_simulation"]], "implementations": [[65, "module-implementations"]], "implementations.controller_classes": [[66, "module-implementations.controller_classes"]], "check_iteration_estimate() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.check_iteration_estimate"]], "controller_mpi (class in implementations.controller_classes.controller_mpi)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI"]], "default() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.default"]], "implementations.controller_classes.controller_mpi": [[67, "module-implementations.controller_classes.controller_MPI"]], "it_check() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.it_check"]], "it_coarse() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.it_coarse"]], "it_down() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.it_down"]], "it_fine() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.it_fine"]], "it_up() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.it_up"]], "pfasst() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.pfasst"]], "predict() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.predict"]], "recv() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.recv"]], "recv_full() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.recv_full"]], "restart_block() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.restart_block"]], "run() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.run"]], "send_full() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.send_full"]], "spread() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.spread"]], "wait_with_interrupt() (controller_mpi method)": [[67, "implementations.controller_classes.controller_MPI.controller_MPI.wait_with_interrupt"]], "controller_nonmpi (class in implementations.controller_classes.controller_nonmpi)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI"]], "default() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.default"]], "implementations.controller_classes.controller_nonmpi": [[68, "module-implementations.controller_classes.controller_nonMPI"]], "it_check() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_check"]], "it_coarse() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_coarse"]], "it_down() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_down"]], "it_fine() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_fine"]], "it_up() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.it_up"]], "pfasst() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.pfasst"]], "predict() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.predict"]], "recv_full() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.recv_full"]], "restart_block() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.restart_block"]], "run() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.run"]], "send_full() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.send_full"]], "spread() (controller_nonmpi method)": [[68, "implementations.controller_classes.controller_nonMPI.controller_nonMPI.spread"]], "implementations.convergence_controller_classes": [[69, "module-implementations.convergence_controller_classes"]], "adaptivecollocation (class in implementations.convergence_controller_classes.adaptive_collocation)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation"]], "check_parameters() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.check_parameters"]], "implementations.convergence_controller_classes.adaptive_collocation": [[70, "module-implementations.convergence_controller_classes.adaptive_collocation"]], "matmul() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.matmul"]], "post_iteration_processing() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.post_iteration_processing"]], "post_spread_processing() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.post_spread_processing"]], "reset_status_variables() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.reset_status_variables"]], "setup() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.setup"]], "setup_status_variables() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.setup_status_variables"]], "switch_sweeper() (adaptivecollocation method)": [[70, "implementations.convergence_controller_classes.adaptive_collocation.AdaptiveCollocation.switch_sweeper"]], "adaptivity (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.Adaptivity"]], "adaptivitybase (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase"]], "adaptivitycollocation (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation"]], "adaptivityextrapolationwithinq (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ"]], "adaptivityforconvergedcollocationproblems (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems"]], "adaptivitypolynomialerror (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError"]], "adaptivityrk (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK"]], "adaptivityresidual (class in implementations.convergence_controller_classes.adaptivity)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual"]], "check_parameters() (adaptivity method)": [[71, "implementations.convergence_controller_classes.adaptivity.Adaptivity.check_parameters"]], "check_parameters() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.check_parameters"]], "check_parameters() (adaptivityresidual method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.check_parameters"]], "compute_optimal_step_size() (adaptivitybase method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.compute_optimal_step_size"]], "dependencies() (adaptivity method)": [[71, "implementations.convergence_controller_classes.adaptivity.Adaptivity.dependencies"]], "dependencies() (adaptivitybase method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.dependencies"]], "dependencies() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.dependencies"]], "dependencies() (adaptivityextrapolationwithinq method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.dependencies"]], "dependencies() (adaptivityforconvergedcollocationproblems method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.dependencies"]], "dependencies() (adaptivitypolynomialerror method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.dependencies"]], "determine_restart() (adaptivitybase method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.determine_restart"]], "determine_restart() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.determine_restart"]], "determine_restart() (adaptivityforconvergedcollocationproblems method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.determine_restart"]], "get_convergence() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_convergence"]], "get_convergence() (adaptivityextrapolationwithinq method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_convergence"]], "get_convergence() (adaptivityforconvergedcollocationproblems method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.get_convergence"]], "get_convergence() (adaptivitypolynomialerror method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_convergence"]], "get_local_error_estimate() (adaptivity method)": [[71, "implementations.convergence_controller_classes.adaptivity.Adaptivity.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitybase method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_local_error_estimate"]], "get_local_error_estimate() (adaptivityextrapolationwithinq method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_local_error_estimate"]], "get_local_error_estimate() (adaptivitypolynomialerror method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_local_error_estimate"]], "get_local_error_estimate() (adaptivityresidual method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.get_local_error_estimate"]], "get_new_step_size() (adaptivity method)": [[71, "implementations.convergence_controller_classes.adaptivity.Adaptivity.get_new_step_size"]], "get_new_step_size() (adaptivitybase method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.get_new_step_size"]], "get_new_step_size() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.get_new_step_size"]], "get_new_step_size() (adaptivityextrapolationwithinq method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.get_new_step_size"]], "get_new_step_size() (adaptivitypolynomialerror method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.get_new_step_size"]], "get_new_step_size() (adaptivityrk method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK.get_new_step_size"]], "get_new_step_size() (adaptivityresidual method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.get_new_step_size"]], "implementations.convergence_controller_classes.adaptivity": [[71, "module-implementations.convergence_controller_classes.adaptivity"]], "post_iteration_processing() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.post_iteration_processing"]], "reset_status_variables() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.reset_status_variables"]], "setup() (adaptivity method)": [[71, "implementations.convergence_controller_classes.adaptivity.Adaptivity.setup"]], "setup() (adaptivitybase method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityBase.setup"]], "setup() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.setup"]], "setup() (adaptivityextrapolationwithinq method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityExtrapolationWithinQ.setup"]], "setup() (adaptivityforconvergedcollocationproblems method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.setup"]], "setup() (adaptivitypolynomialerror method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityPolynomialError.setup"]], "setup() (adaptivityrk method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityRK.setup"]], "setup() (adaptivityresidual method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.setup"]], "setup_status_variables() (adaptivitycollocation method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityCollocation.setup_status_variables"]], "setup_status_variables() (adaptivityresidual method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityResidual.setup_status_variables"]], "trigger_restart_upon_nonconvergence() (adaptivityforconvergedcollocationproblems method)": [[71, "implementations.convergence_controller_classes.adaptivity.AdaptivityForConvergedCollocationProblems.trigger_restart_upon_nonconvergence"]], "basicrestarting (class in implementations.convergence_controller_classes.basic_restarting)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting"]], "basicrestartingmpi (class in implementations.convergence_controller_classes.basic_restarting)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI"]], "basicrestartingnonmpi (class in implementations.convergence_controller_classes.basic_restarting)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI"]], "dependencies() (basicrestarting method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.dependencies"]], "determine_restart() (basicrestarting method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.determine_restart"]], "determine_restart() (basicrestartingmpi method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI.determine_restart"]], "determine_restart() (basicrestartingnonmpi method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.determine_restart"]], "get_implementation() (basicrestarting class method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.get_implementation"]], "implementations.convergence_controller_classes.basic_restarting": [[72, "module-implementations.convergence_controller_classes.basic_restarting"]], "prepare_next_block() (basicrestartingmpi method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingMPI.prepare_next_block"]], "prepare_next_block() (basicrestartingnonmpi method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.prepare_next_block"]], "reset_buffers_nonmpi() (basicrestartingnonmpi method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestartingNonMPI.reset_buffers_nonMPI"]], "reset_status_variables() (basicrestarting method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.reset_status_variables"]], "setup() (basicrestarting method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.setup"]], "setup_status_variables() (basicrestarting method)": [[72, "implementations.convergence_controller_classes.basic_restarting.BasicRestarting.setup_status_variables"]], "checkconvergence (class in implementations.convergence_controller_classes.check_convergence)": [[73, "implementations.convergence_controller_classes.check_convergence.CheckConvergence"]], "check_convergence() (checkconvergence static method)": [[73, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.check_convergence"]], "check_iteration_status() (checkconvergence method)": [[73, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.check_iteration_status"]], "communicate_convergence() (checkconvergence method)": [[73, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.communicate_convergence"]], "dependencies() (checkconvergence method)": [[73, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.dependencies"]], "implementations.convergence_controller_classes.check_convergence": [[73, "module-implementations.convergence_controller_classes.check_convergence"]], "setup() (checkconvergence method)": [[73, "implementations.convergence_controller_classes.check_convergence.CheckConvergence.setup"]], "checkiterationestimatornonmpi (class in implementations.convergence_controller_classes.check_iteration_estimator)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI"]], "check_iteration_status() (checkiterationestimatornonmpi method)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.check_iteration_status"]], "check_parameters() (checkiterationestimatornonmpi method)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.check_parameters"]], "dependencies() (checkiterationestimatornonmpi method)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.dependencies"]], "implementations.convergence_controller_classes.check_iteration_estimator": [[74, "module-implementations.convergence_controller_classes.check_iteration_estimator"]], "reset_buffers_nonmpi() (checkiterationestimatornonmpi method)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.reset_buffers_nonMPI"]], "setup() (checkiterationestimatornonmpi method)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.setup"]], "setup_status_variables() (checkiterationestimatornonmpi method)": [[74, "implementations.convergence_controller_classes.check_iteration_estimator.CheckIterationEstimatorNonMPI.setup_status_variables"]], "crashbase (class in implementations.convergence_controller_classes.crash)": [[75, "implementations.convergence_controller_classes.crash.CrashBase"]], "stopatmaxruntime (class in implementations.convergence_controller_classes.crash)": [[75, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime"]], "stopatnan (class in implementations.convergence_controller_classes.crash)": [[75, "implementations.convergence_controller_classes.crash.StopAtNan"]], "communicate_crash() (crashbase method)": [[75, "implementations.convergence_controller_classes.crash.CrashBase.communicate_crash"]], "implementations.convergence_controller_classes.crash": [[75, "module-implementations.convergence_controller_classes.crash"]], "prepare_next_block() (stopatmaxruntime method)": [[75, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime.prepare_next_block"]], "prepare_next_block() (stopatnan method)": [[75, "implementations.convergence_controller_classes.crash.StopAtNan.prepare_next_block"]], "setup() (stopatmaxruntime method)": [[75, "implementations.convergence_controller_classes.crash.StopAtMaxRuntime.setup"]], "setup() (stopatnan method)": [[75, "implementations.convergence_controller_classes.crash.StopAtNan.setup"]], "estimatecontractionfactor (class in implementations.convergence_controller_classes.estimate_contraction_factor)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor"]], "dependencies() (estimatecontractionfactor method)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.dependencies"]], "implementations.convergence_controller_classes.estimate_contraction_factor": [[76, "module-implementations.convergence_controller_classes.estimate_contraction_factor"]], "post_iteration_processing() (estimatecontractionfactor method)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.post_iteration_processing"]], "pre_iteration_processing() (estimatecontractionfactor method)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.pre_iteration_processing"]], "reset_status_variables() (estimatecontractionfactor method)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.reset_status_variables"]], "setup() (estimatecontractionfactor method)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.setup"]], "setup_status_variables() (estimatecontractionfactor method)": [[76, "implementations.convergence_controller_classes.estimate_contraction_factor.EstimateContractionFactor.setup_status_variables"]], "estimateembeddederror (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError"]], "estimateembeddederrorcollocation (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation"]], "estimateembeddederrorlinearizedmpi (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI"]], "estimateembeddederrorlinearizednonmpi (class in implementations.convergence_controller_classes.estimate_embedded_error)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI"]], "dependencies() (estimateembeddederror method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.dependencies"]], "dependencies() (estimateembeddederrorcollocation method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.dependencies"]], "estimate_embedded_error_serial() (estimateembeddederror method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.estimate_embedded_error_serial"]], "get_implementation() (estimateembeddederror class method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.get_implementation"]], "implementations.convergence_controller_classes.estimate_embedded_error": [[77, "module-implementations.convergence_controller_classes.estimate_embedded_error"]], "post_iteration_processing() (estimateembeddederror method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorcollocation method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorlinearizedmpi method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedMPI.post_iteration_processing"]], "post_iteration_processing() (estimateembeddederrorlinearizednonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.post_iteration_processing"]], "reset_buffers_nonmpi() (estimateembeddederrorlinearizednonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.reset_buffers_nonMPI"]], "reset_status_variables() (estimateembeddederror method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.reset_status_variables"]], "reset_status_variables() (estimateembeddederrorcollocation method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.reset_status_variables"]], "setup() (estimateembeddederror method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.setup"]], "setup() (estimateembeddederrorcollocation method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.setup"]], "setup() (estimateembeddederrorlinearizednonmpi method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorLinearizedNonMPI.setup"]], "setup_status_variables() (estimateembeddederror method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedError.setup_status_variables"]], "setup_status_variables() (estimateembeddederrorcollocation method)": [[77, "implementations.convergence_controller_classes.estimate_embedded_error.EstimateEmbeddedErrorCollocation.setup_status_variables"]], "estimateextrapolationerrorbase (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase"]], "estimateextrapolationerrornonmpi (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI"]], "estimateextrapolationerrorwithinq (class in implementations.convergence_controller_classes.estimate_extrapolation_error)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ"]], "check_parameters() (estimateextrapolationerrorbase method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.check_parameters"]], "get_extrapolated_error() (estimateextrapolationerrornonmpi method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.get_extrapolated_error"]], "get_extrapolated_solution() (estimateextrapolationerrornonmpi method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.get_extrapolated_solution"]], "get_extrapolation_coefficients() (estimateextrapolationerrorbase method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.get_extrapolation_coefficients"]], "implementations.convergence_controller_classes.estimate_extrapolation_error": [[78, "module-implementations.convergence_controller_classes.estimate_extrapolation_error"]], "post_iteration_processing() (estimateextrapolationerrornonmpi method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.post_iteration_processing"]], "post_iteration_processing() (estimateextrapolationerrorwithinq method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ.post_iteration_processing"]], "prepare_next_block() (estimateextrapolationerrornonmpi method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.prepare_next_block"]], "reset_status_variables() (estimateextrapolationerrorbase method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.reset_status_variables"]], "setup() (estimateextrapolationerrorbase method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.setup"]], "setup() (estimateextrapolationerrornonmpi method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.setup"]], "setup() (estimateextrapolationerrorwithinq method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorWithinQ.setup"]], "setup_status_variables() (estimateextrapolationerrorbase method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.setup_status_variables"]], "setup_status_variables() (estimateextrapolationerrornonmpi method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorNonMPI.setup_status_variables"]], "store_values() (estimateextrapolationerrorbase method)": [[78, "implementations.convergence_controller_classes.estimate_extrapolation_error.EstimateExtrapolationErrorBase.store_values"]], "estimatepolynomialerror (class in implementations.convergence_controller_classes.estimate_polynomial_error)": [[79, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError"]], "check_parameters() (estimatepolynomialerror method)": [[79, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.check_parameters"]], "implementations.convergence_controller_classes.estimate_polynomial_error": [[79, "module-implementations.convergence_controller_classes.estimate_polynomial_error"]], "matmul() (estimatepolynomialerror method)": [[79, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.matmul"]], "post_iteration_processing() (estimatepolynomialerror method)": [[79, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.post_iteration_processing"]], "reset_status_variables() (estimatepolynomialerror method)": [[79, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.reset_status_variables"]], "setup() (estimatepolynomialerror method)": [[79, "implementations.convergence_controller_classes.estimate_polynomial_error.EstimatePolynomialError.setup"]], "hotrod (class in implementations.convergence_controller_classes.hotrod)": [[80, "implementations.convergence_controller_classes.hotrod.HotRod"]], "check_parameters() (hotrod method)": [[80, "implementations.convergence_controller_classes.hotrod.HotRod.check_parameters"]], "dependencies() (hotrod method)": [[80, "implementations.convergence_controller_classes.hotrod.HotRod.dependencies"]], "determine_restart() (hotrod method)": [[80, "implementations.convergence_controller_classes.hotrod.HotRod.determine_restart"]], "implementations.convergence_controller_classes.hotrod": [[80, "module-implementations.convergence_controller_classes.hotrod"]], "post_iteration_processing() (hotrod method)": [[80, "implementations.convergence_controller_classes.hotrod.HotRod.post_iteration_processing"]], "setup() (hotrod method)": [[80, "implementations.convergence_controller_classes.hotrod.HotRod.setup"]], "newtoninexactness (class in implementations.convergence_controller_classes.inexactness)": [[81, "implementations.convergence_controller_classes.inexactness.NewtonInexactness"]], "dependencies() (newtoninexactness method)": [[81, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.dependencies"]], "implementations.convergence_controller_classes.inexactness": [[81, "module-implementations.convergence_controller_classes.inexactness"]], "post_iteration_processing() (newtoninexactness method)": [[81, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.post_iteration_processing"]], "set_maxiter() (newtoninexactness method)": [[81, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.set_maxiter"]], "set_tolerance() (newtoninexactness method)": [[81, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.set_tolerance"]], "setup() (newtoninexactness method)": [[81, "implementations.convergence_controller_classes.inexactness.NewtonInexactness.setup"]], "interpolatebetweenrestarts (class in implementations.convergence_controller_classes.interpolate_between_restarts)": [[82, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts"]], "implementations.convergence_controller_classes.interpolate_between_restarts": [[82, "module-implementations.convergence_controller_classes.interpolate_between_restarts"]], "post_iteration_processing() (interpolatebetweenrestarts method)": [[82, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.post_iteration_processing"]], "post_spread_processing() (interpolatebetweenrestarts method)": [[82, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.post_spread_processing"]], "setup() (interpolatebetweenrestarts method)": [[82, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.setup"]], "setup_status_variables() (interpolatebetweenrestarts method)": [[82, "implementations.convergence_controller_classes.interpolate_between_restarts.InterpolateBetweenRestarts.setup_status_variables"]], "spreadstepsizesblockwise (class in implementations.convergence_controller_classes.spread_step_sizes)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise"]], "spreadstepsizesblockwisempi (class in implementations.convergence_controller_classes.spread_step_sizes)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI"]], "spreadstepsizesblockwisenonmpi (class in implementations.convergence_controller_classes.spread_step_sizes)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI"]], "get_implementation() (spreadstepsizesblockwise class method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.get_implementation"]], "get_step_from_which_to_spread() (spreadstepsizesblockwise method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.get_step_from_which_to_spread"]], "get_step_from_which_to_spread() (spreadstepsizesblockwisempi method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI.get_step_from_which_to_spread"]], "get_step_from_which_to_spread() (spreadstepsizesblockwisenonmpi method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI.get_step_from_which_to_spread"]], "implementations.convergence_controller_classes.spread_step_sizes": [[83, "module-implementations.convergence_controller_classes.spread_step_sizes"]], "prepare_next_block() (spreadstepsizesblockwisempi method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseMPI.prepare_next_block"]], "prepare_next_block() (spreadstepsizesblockwisenonmpi method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwiseNonMPI.prepare_next_block"]], "setup() (spreadstepsizesblockwise method)": [[83, "implementations.convergence_controller_classes.spread_step_sizes.SpreadStepSizesBlockwise.setup"]], "stepsizelimiter (class in implementations.convergence_controller_classes.step_size_limiter)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter"]], "stepsizeslopelimiter (class in implementations.convergence_controller_classes.step_size_limiter)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter"]], "dependencies() (stepsizelimiter method)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.dependencies"]], "get_new_step_size() (stepsizelimiter method)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.get_new_step_size"]], "get_new_step_size() (stepsizeslopelimiter method)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter.get_new_step_size"]], "implementations.convergence_controller_classes.step_size_limiter": [[84, "module-implementations.convergence_controller_classes.step_size_limiter"]], "setup() (stepsizelimiter method)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeLimiter.setup"]], "setup() (stepsizeslopelimiter method)": [[84, "implementations.convergence_controller_classes.step_size_limiter.StepSizeSlopeLimiter.setup"]], "storeuold (class in implementations.convergence_controller_classes.store_uold)": [[85, "implementations.convergence_controller_classes.store_uold.StoreUOld"]], "implementations.convergence_controller_classes.store_uold": [[85, "module-implementations.convergence_controller_classes.store_uold"]], "post_iteration_processing() (storeuold method)": [[85, "implementations.convergence_controller_classes.store_uold.StoreUOld.post_iteration_processing"]], "post_spread_processing() (storeuold method)": [[85, "implementations.convergence_controller_classes.store_uold.StoreUOld.post_spread_processing"]], "setup() (storeuold method)": [[85, "implementations.convergence_controller_classes.store_uold.StoreUOld.setup"]], "implementations.datatype_classes": [[86, "module-implementations.datatype_classes"]], "bcast() (cupy_mesh method)": [[87, "implementations.datatype_classes.cupy_mesh.cupy_mesh.bcast"]], "comm (cupy_mesh property)": [[87, "implementations.datatype_classes.cupy_mesh.cupy_mesh.comm"]], "comp1 (comp2_cupy_mesh attribute)": [[87, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh.comp1"]], "comp2 (comp2_cupy_mesh attribute)": [[87, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh.comp2"]], "comp2_cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[87, "implementations.datatype_classes.cupy_mesh.comp2_cupy_mesh"]], "cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[87, "implementations.datatype_classes.cupy_mesh.cupy_mesh"]], "expl (imex_cupy_mesh attribute)": [[87, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh.expl"]], "imex_cupy_mesh (class in implementations.datatype_classes.cupy_mesh)": [[87, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh"]], "impl (imex_cupy_mesh attribute)": [[87, "implementations.datatype_classes.cupy_mesh.imex_cupy_mesh.impl"]], "implementations.datatype_classes.cupy_mesh": [[87, "module-implementations.datatype_classes.cupy_mesh"]], "irecv() (cupy_mesh method)": [[87, "implementations.datatype_classes.cupy_mesh.cupy_mesh.irecv"]], "isend() (cupy_mesh method)": [[87, "implementations.datatype_classes.cupy_mesh.cupy_mesh.isend"]], "expl (rhs_fenics_mesh attribute)": [[88, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh.expl"]], "fenics_mesh (class in implementations.datatype_classes.fenics_mesh)": [[88, "implementations.datatype_classes.fenics_mesh.fenics_mesh"]], "impl (rhs_fenics_mesh attribute)": [[88, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh.impl"]], "implementations.datatype_classes.fenics_mesh": [[88, "module-implementations.datatype_classes.fenics_mesh"]], "rhs_fenics_mesh (class in implementations.datatype_classes.fenics_mesh)": [[88, "implementations.datatype_classes.fenics_mesh.rhs_fenics_mesh"]], "values (fenics_mesh attribute)": [[88, "implementations.datatype_classes.fenics_mesh.fenics_mesh.values"]], "multicomponentmesh (class in implementations.datatype_classes.mesh)": [[89, "implementations.datatype_classes.mesh.MultiComponentMesh"]], "_comm (mesh attribute)": [[89, "implementations.datatype_classes.mesh.mesh._comm"]], "bcast() (mesh method)": [[89, "implementations.datatype_classes.mesh.mesh.bcast"]], "comm (mesh property)": [[89, "implementations.datatype_classes.mesh.mesh.comm"]], "comp2_mesh (class in implementations.datatype_classes.mesh)": [[89, "implementations.datatype_classes.mesh.comp2_mesh"]], "components (multicomponentmesh attribute)": [[89, "implementations.datatype_classes.mesh.MultiComponentMesh.components"]], "components (comp2_mesh attribute)": [[89, "implementations.datatype_classes.mesh.comp2_mesh.components"]], "components (imex_mesh attribute)": [[89, "implementations.datatype_classes.mesh.imex_mesh.components"]], "imex_mesh (class in implementations.datatype_classes.mesh)": [[89, "implementations.datatype_classes.mesh.imex_mesh"]], "implementations.datatype_classes.mesh": [[89, "module-implementations.datatype_classes.mesh"]], "irecv() (mesh method)": [[89, "implementations.datatype_classes.mesh.mesh.irecv"]], "isend() (mesh method)": [[89, "implementations.datatype_classes.mesh.mesh.isend"]], "mesh (class in implementations.datatype_classes.mesh)": [[89, "implementations.datatype_classes.mesh.mesh"]], "acceleration (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.acceleration"]], "elec (fields attribute)": [[90, "implementations.datatype_classes.particles.fields.elec"]], "fields (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.fields"]], "fields.electric (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.fields.electric"]], "fields.magnetic (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.fields.magnetic"]], "implementations.datatype_classes.particles": [[90, "module-implementations.datatype_classes.particles"]], "isend() (particles method)": [[90, "implementations.datatype_classes.particles.particles.isend"]], "magn (fields attribute)": [[90, "implementations.datatype_classes.particles.fields.magn"]], "particles (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.particles"]], "particles.position (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.particles.position"]], "particles.velocity (class in implementations.datatype_classes.particles)": [[90, "implementations.datatype_classes.particles.particles.velocity"]], "pos (particles attribute)": [[90, "implementations.datatype_classes.particles.particles.pos"]], "recv() (particles method)": [[90, "implementations.datatype_classes.particles.particles.recv"]], "send() (particles method)": [[90, "implementations.datatype_classes.particles.particles.send"]], "vel (particles attribute)": [[90, "implementations.datatype_classes.particles.particles.vel"]], "bcast() (petsc_vec method)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec.bcast"]], "expl (petsc_vec_comp2 attribute)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2.expl"]], "expl (petsc_vec_imex attribute)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec_imex.expl"]], "impl (petsc_vec_comp2 attribute)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2.impl"]], "impl (petsc_vec_imex attribute)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec_imex.impl"]], "implementations.datatype_classes.petsc_vec": [[91, "module-implementations.datatype_classes.petsc_vec"]], "irecv() (petsc_vec method)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec.irecv"]], "isend() (petsc_vec method)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec.isend"]], "petsc_vec (class in implementations.datatype_classes.petsc_vec)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec"]], "petsc_vec_comp2 (class in implementations.datatype_classes.petsc_vec)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec_comp2"]], "petsc_vec_imex (class in implementations.datatype_classes.petsc_vec)": [[91, "implementations.datatype_classes.petsc_vec.petsc_vec_imex"]], "implementations.problem_classes": [[92, "module-implementations.problem_classes"]], "a (acoustic_1d_imex attribute)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.A"]], "dx (acoustic_1d_imex attribute)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.Dx"], [93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dx"]], "id (acoustic_1d_imex attribute)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.Id"]], "acoustic_1d_imex (class in implementations.problem_classes.acousticadvection_1d_fd_imex)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex"]], "dtype_f (acoustic_1d_imex attribute)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dtype_f"]], "dtype_u (acoustic_1d_imex attribute)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.dtype_u"]], "eval_f() (acoustic_1d_imex method)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.eval_f"]], "implementations.problem_classes.acousticadvection_1d_fd_imex": [[93, "module-implementations.problem_classes.AcousticAdvection_1D_FD_imex"]], "mesh (acoustic_1d_imex attribute)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.mesh"]], "solve_system() (acoustic_1d_imex method)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.solve_system"]], "u_exact() (acoustic_1d_imex method)": [[93, "implementations.problem_classes.AcousticAdvection_1D_FD_imex.acoustic_1d_imex.u_exact"]], "advectiondiffusion1d_imex (class in implementations.problem_classes.advectiondiffusionequation_1d_fft)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex"]], "advectiondiffusion1d_implicit (class in implementations.problem_classes.advectiondiffusionequation_1d_fft)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit"]], "ddx (advectiondiffusion1d_imex attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.ddx"]], "dtype_f (advectiondiffusion1d_imex attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.dtype_f"]], "dtype_f (advectiondiffusion1d_implicit attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.dtype_f"]], "dtype_u (advectiondiffusion1d_imex attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.dtype_u"]], "dtype_u (advectiondiffusion1d_implicit attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.dtype_u"]], "eval_f() (advectiondiffusion1d_imex method)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.eval_f"]], "eval_f() (advectiondiffusion1d_implicit method)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.eval_f"]], "implementations.problem_classes.advectiondiffusionequation_1d_fft": [[94, "module-implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT"]], "lap (advectiondiffusion1d_imex attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.lap"]], "solve_system() (advectiondiffusion1d_imex method)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.solve_system"]], "solve_system() (advectiondiffusion1d_implicit method)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_implicit.solve_system"]], "u_exact() (advectiondiffusion1d_imex method)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.u_exact"]], "xvalues (advectiondiffusion1d_imex attribute)": [[94, "implementations.problem_classes.AdvectionDiffusionEquation_1D_FFT.advectiondiffusion1d_imex.xvalues"]], "a (advectionnd attribute)": [[95, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.A"]], "id (advectionnd attribute)": [[95, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.Id"]], "advectionnd (class in implementations.problem_classes.advectionequation_nd_fd)": [[95, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd"]], "implementations.problem_classes.advectionequation_nd_fd": [[95, "module-implementations.problem_classes.AdvectionEquation_ND_FD"]], "u_exact() (advectionnd method)": [[95, "implementations.problem_classes.AdvectionEquation_ND_FD.advectionNd.u_exact"]], "a (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.A"]], "a (allencahn_periodic_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.A"]], "allencahn_front_finel (class in implementations.problem_classes.allencahn_1d_fd)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel"]], "allencahn_front_fullyimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit"]], "allencahn_front_semiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit"]], "allencahn_periodic_fullyimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit"]], "allencahn_periodic_multiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit"]], "allencahn_periodic_semiimplicit (class in implementations.problem_classes.allencahn_1d_fd)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit"]], "dtype_f (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dtype_f"]], "dtype_f (allencahn_front_semiimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.dtype_f"]], "dtype_f (allencahn_periodic_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dtype_f"]], "dtype_f (allencahn_periodic_multiimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.dtype_f"]], "dtype_f (allencahn_periodic_semiimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.dtype_f"]], "dtype_u (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dtype_u"]], "dtype_u (allencahn_periodic_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dtype_u"]], "dx (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.dx"]], "dx (allencahn_periodic_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.dx"]], "eval_f() (allencahn_front_finel method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel.eval_f"]], "eval_f() (allencahn_front_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.eval_f"]], "eval_f() (allencahn_front_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.eval_f"]], "eval_f() (allencahn_periodic_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.eval_f"]], "eval_f() (allencahn_periodic_multiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.eval_f"]], "eval_f() (allencahn_periodic_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.eval_f"]], "implementations.problem_classes.allencahn_1d_fd": [[96, "module-implementations.problem_classes.AllenCahn_1D_FD"]], "solve_system() (allencahn_front_finel method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_finel.solve_system"]], "solve_system() (allencahn_front_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.solve_system"]], "solve_system() (allencahn_front_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_semiimplicit.solve_system"]], "solve_system() (allencahn_periodic_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.solve_system"]], "solve_system() (allencahn_periodic_semiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_semiimplicit.solve_system"]], "solve_system_1() (allencahn_periodic_multiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.solve_system_1"]], "solve_system_2() (allencahn_periodic_multiimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_multiimplicit.solve_system_2"]], "u_exact() (allencahn_front_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.u_exact"]], "u_exact() (allencahn_periodic_fullyimplicit method)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.u_exact"]], "uext (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.uext"]], "work_counters (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.work_counters"]], "work_counters (allencahn_periodic_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.work_counters"]], "xvalues (allencahn_front_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_front_fullyimplicit.xvalues"]], "xvalues (allencahn_periodic_fullyimplicit attribute)": [[96, "implementations.problem_classes.AllenCahn_1D_FD.allencahn_periodic_fullyimplicit.xvalues"]], "a (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.A"]], "allencahn_fullyimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit"]], "allencahn_multiimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit"]], "allencahn_multiimplicit_v2 (class in implementations.problem_classes.allencahn_2d_fd)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2"]], "allencahn_semiimplicit (class in implementations.problem_classes.allencahn_2d_fd)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit"]], "allencahn_semiimplicit_v2 (class in implementations.problem_classes.allencahn_2d_fd)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2"]], "dtype_f (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dtype_f"]], "dtype_f (allencahn_multiimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.dtype_f"]], "dtype_f (allencahn_multiimplicit_v2 attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.dtype_f"]], "dtype_f (allencahn_semiimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.dtype_f"]], "dtype_f (allencahn_semiimplicit_v2 attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.dtype_f"]], "dtype_u (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dtype_u"]], "dx (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.dx"]], "eval_f() (allencahn_fullyimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.eval_f"]], "eval_f() (allencahn_multiimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.eval_f"]], "eval_f() (allencahn_multiimplicit_v2 method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.eval_f"]], "eval_f() (allencahn_semiimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.eval_f"]], "eval_f() (allencahn_semiimplicit_v2 method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.eval_f"]], "implementations.problem_classes.allencahn_2d_fd": [[97, "module-implementations.problem_classes.AllenCahn_2D_FD"]], "lin_itercount (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.lin_itercount"]], "lin_ncalls (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.lin_ncalls"]], "newton_itercount (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.newton_itercount"]], "newton_ncalls (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.newton_ncalls"]], "solve_system() (allencahn_fullyimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.solve_system"]], "solve_system() (allencahn_semiimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.solve_system"]], "solve_system() (allencahn_semiimplicit_v2 method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit_v2.solve_system"]], "solve_system_1() (allencahn_multiimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.solve_system_1"]], "solve_system_1() (allencahn_multiimplicit_v2 method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.solve_system_1"]], "solve_system_2() (allencahn_multiimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit.solve_system_2"]], "solve_system_2() (allencahn_multiimplicit_v2 method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_multiimplicit_v2.solve_system_2"]], "u_exact() (allencahn_fullyimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.u_exact"]], "u_exact() (allencahn_semiimplicit method)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_semiimplicit.u_exact"]], "xvalues (allencahn_fullyimplicit attribute)": [[97, "implementations.problem_classes.AllenCahn_2D_FD.allencahn_fullyimplicit.xvalues"]], "allencahn2d_imex (class in implementations.problem_classes.allencahn_2d_fft)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex"]], "allencahn2d_imex_stab (class in implementations.problem_classes.allencahn_2d_fft)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab"]], "dtype_f (allencahn2d_imex attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dtype_f"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dtype_f"]], "dtype_u (allencahn2d_imex attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dtype_u"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dtype_u"]], "dx (allencahn2d_imex attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.dx"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.dx"]], "dx (allencahn2d_imex_stab attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.dx"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.dx"]], "eval_f() (allencahn2d_imex method)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.eval_f"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.eval_f"]], "eval_f() (allencahn2d_imex_stab method)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.eval_f"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.eval_f"]], "implementations.problem_classes.allencahn_2d_fft": [[99, "module-implementations.problem_classes.AllenCahn_2D_FFT"]], "lap (allencahn2d_imex attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.lap"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.lap"]], "lap (allencahn2d_imex_stab attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.lap"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.lap"]], "solve_system() (allencahn2d_imex method)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.solve_system"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.solve_system"]], "solve_system() (allencahn2d_imex_stab method)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.solve_system"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.solve_system"]], "u_exact() (allencahn2d_imex method)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.u_exact"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.u_exact"]], "xvalues (allencahn2d_imex attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex.xvalues"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex.xvalues"]], "xvalues (allencahn2d_imex_stab attribute)": [[99, "implementations.problem_classes.AllenCahn_2D_FFT.allencahn2d_imex_stab.xvalues"], [100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab.xvalues"]], "allencahn2d_imex (class in implementations.problem_classes.allencahn_2d_fft_gpu)": [[100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex"]], "allencahn2d_imex_stab (class in implementations.problem_classes.allencahn_2d_fft_gpu)": [[100, "implementations.problem_classes.AllenCahn_2D_FFT_gpu.allencahn2d_imex_stab"]], "implementations.problem_classes.allencahn_2d_fft_gpu": [[100, "module-implementations.problem_classes.AllenCahn_2D_FFT_gpu"]], "k2 (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.K2"]], "x (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.X"]], "allencahn_imex (class in implementations.problem_classes.allencahn_mpifft)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex"]], "allencahn_imex_timeforcing (class in implementations.problem_classes.allencahn_mpifft)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing"]], "dtype_f (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dtype_f"]], "dtype_u (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dtype_u"]], "dx (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dx"]], "dy (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.dy"]], "eval_f() (allencahn_imex method)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.eval_f"]], "eval_f() (allencahn_imex_timeforcing method)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex_timeforcing.eval_f"]], "fft (allencahn_imex attribute)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.fft"]], "implementations.problem_classes.allencahn_mpifft": [[101, "module-implementations.problem_classes.AllenCahn_MPIFFT"]], "solve_system() (allencahn_imex method)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.solve_system"]], "u_exact() (allencahn_imex method)": [[101, "implementations.problem_classes.AllenCahn_MPIFFT.allencahn_imex.u_exact"]], "d (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.D"]], "k2 (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.K2"]], "l (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.L"]], "tm (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.TM"]], "x (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.X"]], "allencahn_temp_imex (class in implementations.problem_classes.allencahn_temp_mpifft)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex"]], "comm (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.comm"]], "dtype_f (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dtype_f"]], "dtype_u (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dtype_u"]], "dw (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dw"]], "dx (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dx"]], "dy (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.dy"]], "eps (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.eps"]], "eval_f() (allencahn_temp_imex method)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.eval_f"]], "fft (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.fft"]], "implementations.problem_classes.allencahn_temp_mpifft": [[102, "module-implementations.problem_classes.AllenCahn_Temp_MPIFFT"]], "init_type (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.init_type"]], "nvars (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.nvars"]], "radius (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.radius"]], "solve_system() (allencahn_temp_imex method)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.solve_system"]], "spectral (allencahn_temp_imex attribute)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.spectral"]], "u_exact() (allencahn_temp_imex method)": [[102, "implementations.problem_classes.AllenCahn_Temp_MPIFFT.allencahn_temp_imex.u_exact"]], "auzinger (class in implementations.problem_classes.auzinger_implicit)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger"]], "dtype_f (auzinger attribute)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.dtype_f"]], "dtype_u (auzinger attribute)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.dtype_u"]], "eval_f() (auzinger method)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.eval_f"]], "implementations.problem_classes.auzinger_implicit": [[103, "module-implementations.problem_classes.Auzinger_implicit"]], "newton_maxiter (auzinger attribute)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.newton_maxiter"]], "newton_tol (auzinger attribute)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.newton_tol"]], "solve_system() (auzinger method)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.solve_system"]], "u_exact() (auzinger method)": [[103, "implementations.problem_classes.Auzinger_implicit.auzinger.u_exact"]], "a (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.A"]], "battery (class in implementations.problem_classes.battery)": [[104, "implementations.problem_classes.Battery.battery"]], "battery_implicit (class in implementations.problem_classes.battery)": [[104, "implementations.problem_classes.Battery.battery_implicit"]], "battery_n_capacitors (class in implementations.problem_classes.battery)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors"]], "count_switches() (battery_n_capacitors method)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.count_switches"]], "dtype_f (battery attribute)": [[104, "implementations.problem_classes.Battery.battery.dtype_f"]], "dtype_f (battery_implicit attribute)": [[104, "implementations.problem_classes.Battery.battery_implicit.dtype_f"]], "dtype_f (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.dtype_f"]], "dtype_u (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.dtype_u"]], "eval_f() (battery method)": [[104, "implementations.problem_classes.Battery.battery.eval_f"]], "eval_f() (battery_implicit method)": [[104, "implementations.problem_classes.Battery.battery_implicit.eval_f"]], "eval_f() (battery_n_capacitors method)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.eval_f"]], "get_problem_dict() (battery_n_capacitors method)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.get_problem_dict"]], "get_switching_info() (battery_n_capacitors method)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.get_switching_info"]], "implementations.problem_classes.battery": [[104, "module-implementations.problem_classes.Battery"]], "nswitches (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.nswitches"]], "solve_system() (battery method)": [[104, "implementations.problem_classes.Battery.battery.solve_system"]], "solve_system() (battery_implicit method)": [[104, "implementations.problem_classes.Battery.battery_implicit.solve_system"]], "solve_system() (battery_n_capacitors method)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.solve_system"]], "switch_a (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.switch_A"]], "switch_f (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.switch_f"]], "t_switch (battery_n_capacitors attribute)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.t_switch"]], "u_exact() (battery method)": [[104, "implementations.problem_classes.Battery.battery.u_exact"]], "u_exact() (battery_n_capacitors method)": [[104, "implementations.problem_classes.Battery.battery_n_capacitors.u_exact"]], "work_counters (battery_implicit attribute)": [[104, "implementations.problem_classes.Battery.battery_implicit.work_counters"]], "d_upwind (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.D_upwind"]], "id (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.Id"]], "m (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.M"]], "n (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.N"]], "bc_hor (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.bc_hor"]], "bc_ver (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.bc_ver"]], "boussinesq_2d_imex (class in implementations.problem_classes.boussinesq_2d_fd_imex)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex"]], "dtype_f (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.dtype_f"]], "dtype_u (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.dtype_u"]], "eval_f() (boussinesq_2d_imex method)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.eval_f"]], "gmres_logger (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.gmres_logger"]], "h (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.h"]], "implementations.problem_classes.boussinesq_2d_fd_imex": [[105, "module-implementations.problem_classes.Boussinesq_2D_FD_imex"]], "solve_system() (boussinesq_2d_imex method)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.solve_system"]], "u_exact() (boussinesq_2d_imex method)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.u_exact"]], "xx (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.xx"]], "zz (boussinesq_2d_imex attribute)": [[105, "implementations.problem_classes.Boussinesq_2D_FD_imex.boussinesq_2d_imex.zz"]], "brusselator (class in implementations.problem_classes.brusselator)": [[106, "implementations.problem_classes.Brusselator.Brusselator"]], "dtype_f (brusselator attribute)": [[106, "implementations.problem_classes.Brusselator.Brusselator.dtype_f"]], "dtype_u (brusselator attribute)": [[106, "implementations.problem_classes.Brusselator.Brusselator.dtype_u"]], "eval_f() (brusselator method)": [[106, "implementations.problem_classes.Brusselator.Brusselator.eval_f"]], "get_fig() (brusselator method)": [[106, "implementations.problem_classes.Brusselator.Brusselator.get_fig"]], "implementations.problem_classes.brusselator": [[106, "module-implementations.problem_classes.Brusselator"]], "plot() (brusselator method)": [[106, "implementations.problem_classes.Brusselator.Brusselator.plot"]], "solve_system() (brusselator method)": [[106, "implementations.problem_classes.Brusselator.Brusselator.solve_system"]], "u_exact() (brusselator method)": [[106, "implementations.problem_classes.Brusselator.Brusselator.u_exact"]], "a (buck_converter attribute)": [[107, "implementations.problem_classes.BuckConverter.buck_converter.A"]], "buck_converter (class in implementations.problem_classes.buckconverter)": [[107, "implementations.problem_classes.BuckConverter.buck_converter"]], "dtype_f (buck_converter attribute)": [[107, "implementations.problem_classes.BuckConverter.buck_converter.dtype_f"]], "dtype_u (buck_converter attribute)": [[107, "implementations.problem_classes.BuckConverter.buck_converter.dtype_u"]], "eval_f() (buck_converter method)": [[107, "implementations.problem_classes.BuckConverter.buck_converter.eval_f"]], "implementations.problem_classes.buckconverter": [[107, "module-implementations.problem_classes.BuckConverter"]], "solve_system() (buck_converter method)": [[107, "implementations.problem_classes.BuckConverter.buck_converter.solve_system"]], "u_exact() (buck_converter method)": [[107, "implementations.problem_classes.BuckConverter.buck_converter.u_exact"]], "discontinuoustestode (class in implementations.problem_classes.discontinuoustestode)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE"]], "count_switches() (discontinuoustestode method)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.count_switches"]], "dtype_f (discontinuoustestode attribute)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.dtype_f"]], "dtype_u (discontinuoustestode attribute)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.dtype_u"]], "eval_f() (discontinuoustestode method)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.eval_f"]], "get_switching_info() (discontinuoustestode method)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.get_switching_info"]], "implementations.problem_classes.discontinuoustestode": [[108, "module-implementations.problem_classes.DiscontinuousTestODE"]], "nswitches (discontinuoustestode attribute)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.nswitches"]], "solve_system() (discontinuoustestode method)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.solve_system"]], "t_switch (discontinuoustestode attribute)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.t_switch"]], "t_switch_exact (discontinuoustestode attribute)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.t_switch_exact"]], "u_exact() (discontinuoustestode method)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.u_exact"]], "work_counters (discontinuoustestode attribute)": [[108, "implementations.problem_classes.DiscontinuousTestODE.DiscontinuousTestODE.work_counters"]], "dtype_f (swfw_scalar attribute)": [[109, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.dtype_f"]], "dtype_u (swfw_scalar attribute)": [[109, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.dtype_u"]], "eval_f() (swfw_scalar method)": [[109, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.eval_f"]], "implementations.problem_classes.fastwaveslowwave_0d": [[109, "module-implementations.problem_classes.FastWaveSlowWave_0D"]], "solve_system() (swfw_scalar method)": [[109, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.solve_system"]], "swfw_scalar (class in implementations.problem_classes.fastwaveslowwave_0d)": [[109, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar"]], "u_exact() (swfw_scalar method)": [[109, "implementations.problem_classes.FastWaveSlowWave_0D.swfw_scalar.u_exact"]], "dtype_f (fermi_pasta_ulam_tsingou attribute)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dtype_f"]], "dtype_u (fermi_pasta_ulam_tsingou attribute)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dtype_u"]], "dx (fermi_pasta_ulam_tsingou attribute)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.dx"]], "eval_f() (fermi_pasta_ulam_tsingou method)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_f"]], "eval_hamiltonian() (fermi_pasta_ulam_tsingou method)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_hamiltonian"]], "eval_mode_energy() (fermi_pasta_ulam_tsingou method)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.eval_mode_energy"]], "fermi_pasta_ulam_tsingou (class in implementations.problem_classes.fermipastaulamtsingou)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou"]], "implementations.problem_classes.fermipastaulamtsingou": [[110, "module-implementations.problem_classes.FermiPastaUlamTsingou"]], "ones (fermi_pasta_ulam_tsingou attribute)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.ones"]], "u_exact() (fermi_pasta_ulam_tsingou method)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.u_exact"]], "xvalues (fermi_pasta_ulam_tsingou attribute)": [[110, "implementations.problem_classes.FermiPastaUlamTsingou.fermi_pasta_ulam_tsingou.xvalues"]], "g (full_solar_system attribute)": [[111, "implementations.problem_classes.FullSolarSystem.full_solar_system.G"]], "dtype_f (full_solar_system attribute)": [[111, "implementations.problem_classes.FullSolarSystem.full_solar_system.dtype_f"]], "dtype_u (full_solar_system attribute)": [[111, "implementations.problem_classes.FullSolarSystem.full_solar_system.dtype_u"]], "full_solar_system (class in implementations.problem_classes.fullsolarsystem)": [[111, "implementations.problem_classes.FullSolarSystem.full_solar_system"]], "implementations.problem_classes.fullsolarsystem": [[111, "module-implementations.problem_classes.FullSolarSystem"]], "u_exact() (full_solar_system method)": [[111, "implementations.problem_classes.FullSolarSystem.full_solar_system.u_exact"]], "a (generalized_fisher attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.A"]], "dtype_f (generalized_fisher attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dtype_f"]], "dtype_u (generalized_fisher attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dtype_u"]], "dx (generalized_fisher attribute)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.dx"]], "eval_f() (generalized_fisher method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.eval_f"]], "generalized_fisher (class in implementations.problem_classes.generalizedfisher_1d_fd_implicit)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher"]], "implementations.problem_classes.generalizedfisher_1d_fd_implicit": [[112, "module-implementations.problem_classes.GeneralizedFisher_1D_FD_implicit"]], "solve_system() (generalized_fisher method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.solve_system"]], "u_exact() (generalized_fisher method)": [[112, "implementations.problem_classes.GeneralizedFisher_1D_FD_implicit.generalized_fisher.u_exact"]], "a (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.A"]], "f (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.F"]], "fisher_full (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full"]], "fisher_reaction (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction"]], "j (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.J"]], "col (fisher_full attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.col"]], "dtype_f (petsc_fisher_fullyimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.dtype_f"]], "dtype_f (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dtype_f"]], "dtype_f (petsc_fisher_semiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.dtype_f"]], "dtype_u (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dtype_u"]], "dx (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.dx"]], "eval_f() (petsc_fisher_fullyimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.eval_f"]], "eval_f() (petsc_fisher_multiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.eval_f"]], "eval_f() (petsc_fisher_semiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.eval_f"]], "formfunction() (fisher_full method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.formFunction"]], "formfunction() (fisher_reaction method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.formFunction"]], "formjacobian() (fisher_full method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.formJacobian"]], "formjacobian() (fisher_reaction method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.formJacobian"]], "get_sys_mat() (petsc_fisher_multiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.get_sys_mat"]], "implementations.problem_classes.generalizedfisher_1d_petsc": [[113, "module-implementations.problem_classes.GeneralizedFisher_1D_PETSc"]], "ksp (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.ksp"]], "localx (fisher_full attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.localX"]], "localx (fisher_reaction attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_reaction.localX"]], "localx (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.localX"]], "mx (fisher_full attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.mx"]], "petsc_fisher_fullyimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit"]], "petsc_fisher_multiimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit"]], "petsc_fisher_semiimplicit (class in implementations.problem_classes.generalizedfisher_1d_petsc)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit"]], "row (fisher_full attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.Fisher_full.row"]], "snes (petsc_fisher_multiimplicit attribute)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.snes"]], "solve_system() (petsc_fisher_fullyimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_fullyimplicit.solve_system"]], "solve_system() (petsc_fisher_semiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_semiimplicit.solve_system"]], "solve_system_1() (petsc_fisher_multiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.solve_system_1"]], "solve_system_2() (petsc_fisher_multiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.solve_system_2"]], "u_exact() (petsc_fisher_multiimplicit method)": [[113, "implementations.problem_classes.GeneralizedFisher_1D_PETSc.petsc_fisher_multiimplicit.u_exact"]], "f (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F"]], "f1 (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F1"]], "f2 (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.F2"]], "m (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.M"]], "v (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.V"]], "dtype_f (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.dtype_f"]], "dtype_u (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.dtype_u"]], "eval_f() (fenics_grayscott method)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.eval_f"]], "fenics_grayscott (class in implementations.problem_classes.grayscott_1d_fenics_implicit)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott"]], "implementations.problem_classes.grayscott_1d_fenics_implicit": [[114, "module-implementations.problem_classes.GrayScott_1D_FEniCS_implicit"]], "solve_system() (fenics_grayscott method)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.solve_system"]], "u_exact() (fenics_grayscott method)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.u_exact"]], "w (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w"]], "w1 (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w1"]], "w2 (fenics_grayscott attribute)": [[114, "implementations.problem_classes.GrayScott_1D_FEniCS_implicit.fenics_grayscott.w2"]], "amat (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.AMat"]], "gs_full (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full"]], "gs_reaction (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction"]], "id (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.Id"]], "dtype_f (petsc_grayscott_fullyimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.dtype_f"]], "dtype_f (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dtype_f"]], "dtype_f (petsc_grayscott_semiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.dtype_f"]], "dtype_u (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dtype_u"]], "dx (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dx"]], "dy (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.dy"]], "eval_f() (petsc_grayscott_fullyimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.eval_f"]], "eval_f() (petsc_grayscott_multiimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.eval_f"]], "eval_f() (petsc_grayscott_semiimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.eval_f"]], "formfunction() (gs_full method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.formFunction"]], "formfunction() (gs_reaction method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.formFunction"]], "formjacobian() (gs_full method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.formJacobian"]], "formjacobian() (gs_reaction method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.formJacobian"]], "implementations.problem_classes.grayscott_2d_petsc_periodic": [[115, "module-implementations.problem_classes.GrayScott_2D_PETSc_periodic"]], "ksp (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.ksp"]], "localx (gs_full attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_full.localX"]], "localx (gs_reaction attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.GS_reaction.localX"]], "localx (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.localX"]], "petsc_grayscott_fullyimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit"]], "petsc_grayscott_multiimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit"]], "petsc_grayscott_semiimplicit (class in implementations.problem_classes.grayscott_2d_petsc_periodic)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit"]], "snes (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes"]], "snes_itercount (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes_itercount"]], "snes_ncalls (petsc_grayscott_multiimplicit attribute)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.snes_ncalls"]], "solve_system() (petsc_grayscott_fullyimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_fullyimplicit.solve_system"]], "solve_system() (petsc_grayscott_semiimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_semiimplicit.solve_system"]], "solve_system_1() (petsc_grayscott_multiimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.solve_system_1"]], "solve_system_2() (petsc_grayscott_multiimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.solve_system_2"]], "u_exact() (petsc_grayscott_multiimplicit method)": [[115, "implementations.problem_classes.GrayScott_2D_PETSc_periodic.petsc_grayscott_multiimplicit.u_exact"]], "ku (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.Ku"]], "ku (grayscott_mi_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.Ku"]], "kv (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.Kv"]], "kv (grayscott_mi_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.Kv"]], "x (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.X"]], "x (grayscott_mi_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.X"]], "dtype_f (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.dtype_f"]], "dtype_f (grayscott_mi_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.dtype_f"]], "dtype_f (grayscott_mi_linear attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.dtype_f"]], "dtype_u (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.dtype_u"]], "eval_f() (grayscott_imex_diffusion method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.eval_f"]], "eval_f() (grayscott_imex_linear method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear.eval_f"]], "eval_f() (grayscott_mi_diffusion method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.eval_f"]], "eval_f() (grayscott_mi_linear method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.eval_f"]], "fft (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.fft"]], "fft (grayscott_mi_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.fft"]], "grayscott_imex_diffusion (class in implementations.problem_classes.grayscott_mpifft)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion"]], "grayscott_imex_linear (class in implementations.problem_classes.grayscott_mpifft)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_linear"]], "grayscott_mi_diffusion (class in implementations.problem_classes.grayscott_mpifft)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion"]], "grayscott_mi_linear (class in implementations.problem_classes.grayscott_mpifft)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear"]], "implementations.problem_classes.grayscott_mpifft": [[116, "module-implementations.problem_classes.GrayScott_MPIFFT"]], "ndim (grayscott_imex_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.ndim"]], "ndim (grayscott_mi_diffusion attribute)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.ndim"]], "solve_system() (grayscott_imex_diffusion method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.solve_system"]], "solve_system_1() (grayscott_mi_diffusion method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.solve_system_1"]], "solve_system_1() (grayscott_mi_linear method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.solve_system_1"]], "solve_system_2() (grayscott_mi_diffusion method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_diffusion.solve_system_2"]], "solve_system_2() (grayscott_mi_linear method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_mi_linear.solve_system_2"]], "u_exact() (grayscott_imex_diffusion method)": [[116, "implementations.problem_classes.GrayScott_MPIFFT.grayscott_imex_diffusion.u_exact"]], "dtype_f (harmonic_oscillator attribute)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.dtype_f"]], "dtype_u (harmonic_oscillator attribute)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.dtype_u"]], "eval_f() (harmonic_oscillator method)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.eval_f"]], "eval_hamiltonian() (harmonic_oscillator method)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.eval_hamiltonian"]], "harmonic_oscillator (class in implementations.problem_classes.harmonicoscillator)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator"]], "implementations.problem_classes.harmonicoscillator": [[117, "module-implementations.problem_classes.HarmonicOscillator"]], "u_exact() (harmonic_oscillator method)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.u_exact"]], "u_init() (harmonic_oscillator method)": [[117, "implementations.problem_classes.HarmonicOscillator.harmonic_oscillator.u_init"]], "k (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.K"]], "k (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.K"]], "k (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.K"]], "m (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.M"]], "m (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.M"]], "m (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.M"]], "v (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.V"]], "v (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.V"]], "v (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.V"]], "apply_mass_matrix() (fenics_heat method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.apply_mass_matrix"]], "bc (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.bc"]], "bc (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.bc"]], "bc (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.bc"]], "bc_hom (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.bc_hom"]], "bc_hom (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.bc_hom"]], "dtype_f (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.dtype_f"]], "dtype_u (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.dtype_u"]], "eval_f() (fenics_heat method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.eval_f"]], "eval_f() (fenics_heat_mass method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.eval_f"]], "fenics_heat (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat"]], "fenics_heat_mass (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass"]], "fenics_heat_mass_timebc (class in implementations.problem_classes.heatequation_1d_fenics_matrix_forced)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc"]], "fix_bc_for_residual (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.fix_bc_for_residual"]], "fix_bc_for_residual (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.fix_bc_for_residual"]], "fix_residual() (fenics_heat_mass method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.fix_residual"]], "g (fenics_heat attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.g"]], "g (fenics_heat_mass attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.g"]], "g (fenics_heat_mass_timebc attribute)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.g"]], "implementations.problem_classes.heatequation_1d_fenics_matrix_forced": [[118, "module-implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced"]], "solve_system() (fenics_heat method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.solve_system"]], "solve_system() (fenics_heat_mass method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass.solve_system"]], "solve_system() (fenics_heat_mass_timebc method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.solve_system"]], "u_exact() (fenics_heat method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat.u_exact"]], "u_exact() (fenics_heat_mass_timebc method)": [[118, "implementations.problem_classes.HeatEquation_1D_FEniCS_matrix_forced.fenics_heat_mass_timebc.u_exact"]], "a (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.A"]], "id (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.Id"]], "dtype_f (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dtype_f"]], "dtype_u (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dtype_u"]], "dx (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dx"]], "dy (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.dy"]], "eval_f() (heat2d_petsc_forced method)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.eval_f"]], "heat2d_petsc_forced (class in implementations.problem_classes.heatequation_2d_petsc_forced)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced"]], "implementations.problem_classes.heatequation_2d_petsc_forced": [[119, "module-implementations.problem_classes.HeatEquation_2D_PETSc_forced"]], "ksp (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp"]], "ksp_itercount (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp_itercount"]], "ksp_ncalls (heat2d_petsc_forced attribute)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.ksp_ncalls"]], "solve_system() (heat2d_petsc_forced method)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.solve_system"]], "u_exact() (heat2d_petsc_forced method)": [[119, "implementations.problem_classes.HeatEquation_2D_PETSc_forced.heat2d_petsc_forced.u_exact"]], "a (heatnd_unforced attribute)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.A"]], "id (heatnd_unforced attribute)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.Id"]], "dtype_f (heatnd_forced attribute)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.dtype_f"]], "eval_f() (heatnd_forced method)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.eval_f"]], "heatnd_forced (class in implementations.problem_classes.heatequation_nd_fd)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced"]], "heatnd_unforced (class in implementations.problem_classes.heatequation_nd_fd)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced"]], "implementations.problem_classes.heatequation_nd_fd": [[120, "module-implementations.problem_classes.HeatEquation_ND_FD"]], "u_exact() (heatnd_forced method)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_forced.u_exact"]], "u_exact() (heatnd_unforced method)": [[120, "implementations.problem_classes.HeatEquation_ND_FD.heatNd_unforced.u_exact"]], "dtype_f (henon_heiles attribute)": [[122, "implementations.problem_classes.HenonHeiles.henon_heiles.dtype_f"]], "dtype_u (henon_heiles attribute)": [[122, "implementations.problem_classes.HenonHeiles.henon_heiles.dtype_u"]], "eval_f() (henon_heiles method)": [[122, "implementations.problem_classes.HenonHeiles.henon_heiles.eval_f"]], "eval_hamiltonian() (henon_heiles method)": [[122, "implementations.problem_classes.HenonHeiles.henon_heiles.eval_hamiltonian"]], "henon_heiles (class in implementations.problem_classes.henonheiles)": [[122, "implementations.problem_classes.HenonHeiles.henon_heiles"]], "implementations.problem_classes.henonheiles": [[122, "module-implementations.problem_classes.HenonHeiles"]], "u_exact() (henon_heiles method)": [[122, "implementations.problem_classes.HenonHeiles.henon_heiles.u_exact"]], "dtype_f (logistics_equation attribute)": [[123, "implementations.problem_classes.LogisticEquation.logistics_equation.dtype_f"]], "dtype_u (logistics_equation attribute)": [[123, "implementations.problem_classes.LogisticEquation.logistics_equation.dtype_u"]], "eval_f() (logistics_equation method)": [[123, "implementations.problem_classes.LogisticEquation.logistics_equation.eval_f"]], "implementations.problem_classes.logisticequation": [[123, "module-implementations.problem_classes.LogisticEquation"]], "logistics_equation (class in implementations.problem_classes.logisticequation)": [[123, "implementations.problem_classes.LogisticEquation.logistics_equation"]], "solve_system() (logistics_equation method)": [[123, "implementations.problem_classes.LogisticEquation.logistics_equation.solve_system"]], "u_exact() (logistics_equation method)": [[123, "implementations.problem_classes.LogisticEquation.logistics_equation.u_exact"]], "lorenzattractor (class in implementations.problem_classes.lorenz)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor"]], "dtype_f (lorenzattractor attribute)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor.dtype_f"]], "dtype_u (lorenzattractor attribute)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor.dtype_u"]], "eval_f() (lorenzattractor method)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor.eval_f"]], "implementations.problem_classes.lorenz": [[124, "module-implementations.problem_classes.Lorenz"]], "solve_system() (lorenzattractor method)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor.solve_system"]], "u_exact() (lorenzattractor method)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor.u_exact"]], "work_counter (lorenzattractor attribute)": [[124, "implementations.problem_classes.Lorenz.LorenzAttractor.work_counter"]], "k2 (nonlinearschroedinger_imex attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.K2"]], "x (nonlinearschroedinger_imex attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.X"]], "dtype_f (nonlinearschroedinger_fully_implicit attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.dtype_f"]], "dtype_f (nonlinearschroedinger_imex attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.dtype_f"]], "dtype_u (nonlinearschroedinger_fully_implicit attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.dtype_u"]], "dtype_u (nonlinearschroedinger_imex attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.dtype_u"]], "eval_f() (nonlinearschroedinger_fully_implicit method)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.eval_f"]], "eval_f() (nonlinearschroedinger_imex method)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.eval_f"]], "fft (nonlinearschroedinger_imex attribute)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.fft"]], "implementations.problem_classes.nonlinearschroedinger_mpifft": [[125, "module-implementations.problem_classes.NonlinearSchroedinger_MPIFFT"]], "nonlinearschroedinger_fully_implicit (class in implementations.problem_classes.nonlinearschroedinger_mpifft)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit"]], "nonlinearschroedinger_imex (class in implementations.problem_classes.nonlinearschroedinger_mpifft)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex"]], "solve_system() (nonlinearschroedinger_fully_implicit method)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_fully_implicit.solve_system"]], "solve_system() (nonlinearschroedinger_imex method)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.solve_system"]], "u_exact() (nonlinearschroedinger_imex method)": [[125, "implementations.problem_classes.NonlinearSchroedinger_MPIFFT.nonlinearschroedinger_imex.u_exact"]], "g (outer_solar_system attribute)": [[126, "id0"], [126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.G"]], "dtype_f (outer_solar_system attribute)": [[126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.dtype_f"]], "dtype_u (outer_solar_system attribute)": [[126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.dtype_u"]], "eval_f() (outer_solar_system method)": [[126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.eval_f"]], "eval_hamiltonian() (outer_solar_system method)": [[126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.eval_hamiltonian"]], "implementations.problem_classes.outersolarsystem": [[126, "module-implementations.problem_classes.OuterSolarSystem"]], "outer_solar_system (class in implementations.problem_classes.outersolarsystem)": [[126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system"]], "u_exact() (outer_solar_system method)": [[126, "implementations.problem_classes.OuterSolarSystem.outer_solar_system.u_exact"]], "boris_solver() (penningtrap method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.boris_solver"]], "build_f() (penningtrap method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.build_f"]], "dtype_f (penningtrap attribute)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.dtype_f"]], "dtype_u (penningtrap attribute)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.dtype_u"]], "eval_f() (penningtrap method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.eval_f"]], "fast_interactions() (penningtrap static method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.fast_interactions"]], "get_interactions() (penningtrap method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.get_interactions"]], "implementations.problem_classes.penningtrap_3d": [[127, "module-implementations.problem_classes.PenningTrap_3D"]], "penningtrap (class in implementations.problem_classes.penningtrap_3d)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap"]], "u_exact() (penningtrap method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.u_exact"]], "u_init() (penningtrap method)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.u_init"]], "work_counter (penningtrap attribute)": [[127, "implementations.problem_classes.PenningTrap_3D.penningtrap.work_counter"]], "dtype_f (piline attribute)": [[128, "implementations.problem_classes.Piline.piline.dtype_f"]], "dtype_u (piline attribute)": [[128, "implementations.problem_classes.Piline.piline.dtype_u"]], "eval_f() (piline method)": [[128, "implementations.problem_classes.Piline.piline.eval_f"]], "implementations.problem_classes.piline": [[128, "module-implementations.problem_classes.Piline"]], "piline (class in implementations.problem_classes.piline)": [[128, "implementations.problem_classes.Piline.piline"]], "solve_system() (piline method)": [[128, "implementations.problem_classes.Piline.piline.solve_system"]], "u_exact() (piline method)": [[128, "implementations.problem_classes.Piline.piline.u_exact"]], "a (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.A"]], "id (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.Id"]], "quench (class in implementations.problem_classes.quench)": [[129, "implementations.problem_classes.Quench.Quench"]], "quenchimex (class in implementations.problem_classes.quench)": [[129, "implementations.problem_classes.Quench.QuenchIMEX"]], "dtype_f (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.dtype_f"]], "dtype_f (quenchimex attribute)": [[129, "implementations.problem_classes.Quench.QuenchIMEX.dtype_f"]], "dtype_u (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.dtype_u"]], "dx (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.dx"]], "eval_f() (quench method)": [[129, "implementations.problem_classes.Quench.Quench.eval_f"]], "eval_f() (quenchimex method)": [[129, "implementations.problem_classes.Quench.QuenchIMEX.eval_f"]], "eval_f_non_linear() (quench method)": [[129, "implementations.problem_classes.Quench.Quench.eval_f_non_linear"]], "get_non_linear_jacobian() (quench method)": [[129, "implementations.problem_classes.Quench.Quench.get_non_linear_Jacobian"]], "implementations.problem_classes.quench": [[129, "module-implementations.problem_classes.Quench"]], "leak (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.leak"]], "solve_system() (quench method)": [[129, "implementations.problem_classes.Quench.Quench.solve_system"]], "solve_system() (quenchimex method)": [[129, "implementations.problem_classes.Quench.QuenchIMEX.solve_system"]], "u_exact() (quench method)": [[129, "implementations.problem_classes.Quench.Quench.u_exact"]], "u_exact() (quenchimex method)": [[129, "implementations.problem_classes.Quench.QuenchIMEX.u_exact"]], "xv (quench attribute)": [[129, "implementations.problem_classes.Quench.Quench.xv"]], "a (testequation0d attribute)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.A"]], "dtype_f (testequation0d attribute)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.dtype_f"]], "dtype_u (testequation0d attribute)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.dtype_u"]], "eval_f() (testequation0d method)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.eval_f"]], "implementations.problem_classes.testequation_0d": [[130, "module-implementations.problem_classes.TestEquation_0D"]], "setup_gpu() (testequation0d class method)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.setup_GPU"]], "solve_system() (testequation0d method)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.solve_system"]], "testequation0d (class in implementations.problem_classes.testequation_0d)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d"]], "u_exact() (testequation0d method)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.u_exact"]], "xp (testequation0d attribute)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.xp"]], "xsp (testequation0d attribute)": [[130, "implementations.problem_classes.TestEquation_0D.testequation0d.xsp"]], "dtype_f (vanderpol attribute)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.dtype_f"]], "dtype_u (vanderpol attribute)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.dtype_u"]], "eval_f() (vanderpol method)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.eval_f"]], "implementations.problem_classes.van_der_pol_implicit": [[131, "module-implementations.problem_classes.Van_der_Pol_implicit"]], "solve_system() (vanderpol method)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.solve_system"]], "u_exact() (vanderpol method)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.u_exact"]], "vanderpol (class in implementations.problem_classes.van_der_pol_implicit)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol"]], "work_counters (vanderpol attribute)": [[131, "implementations.problem_classes.Van_der_Pol_implicit.vanderpol.work_counters"]], "k (fenics_vortex_2d attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.K"]], "k (fenics_vortex_2d_mass attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.K"]], "m (fenics_vortex_2d attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.M"]], "m (fenics_vortex_2d_mass attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.M"]], "v (fenics_vortex_2d attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.V"]], "v (fenics_vortex_2d_mass attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.V"]], "apply_mass_matrix() (fenics_vortex_2d method)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.apply_mass_matrix"]], "dtype_f (fenics_vortex_2d attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.dtype_f"]], "dtype_u (fenics_vortex_2d attribute)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.dtype_u"]], "eval_f() (fenics_vortex_2d method)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.eval_f"]], "eval_f() (fenics_vortex_2d_mass method)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.eval_f"]], "fenics_vortex_2d (class in implementations.problem_classes.vorticityvelocity_2d_fenics_periodic)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d"]], "fenics_vortex_2d_mass (class in implementations.problem_classes.vorticityvelocity_2d_fenics_periodic)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass"]], "implementations.problem_classes.vorticityvelocity_2d_fenics_periodic": [[132, "module-implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic"]], "solve_system() (fenics_vortex_2d method)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.solve_system"]], "solve_system() (fenics_vortex_2d_mass method)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d_mass.solve_system"]], "u_exact() (fenics_vortex_2d method)": [[132, "implementations.problem_classes.VorticityVelocity_2D_FEniCS_periodic.fenics_vortex_2d.u_exact"]], "implementations.problem_classes.acoustic_helpers": [[133, "module-implementations.problem_classes.acoustic_helpers"]], "getbcleft() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getBCLeft"]], "getbcright() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getBCRight"]], "gethorizontaldx() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getHorizontalDx"]], "getmatrix() (in module implementations.problem_classes.acoustic_helpers.buildfdmatrix)": [[134, "implementations.problem_classes.acoustic_helpers.buildFDMatrix.getMatrix"]], "implementations.problem_classes.acoustic_helpers.buildfdmatrix": [[134, "module-implementations.problem_classes.acoustic_helpers.buildFDMatrix"]], "getwave1dadvectionmatrix() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[135, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWave1DAdvectionMatrix"]], "getwave1dmatrix() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[135, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWave1DMatrix"]], "getwavebcleft() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[135, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWaveBCLeft"]], "getwavebcright() (in module implementations.problem_classes.acoustic_helpers.buildwave1dmatrix)": [[135, "implementations.problem_classes.acoustic_helpers.buildWave1DMatrix.getWaveBCRight"]], "implementations.problem_classes.acoustic_helpers.buildwave1dmatrix": [[135, "module-implementations.problem_classes.acoustic_helpers.buildWave1DMatrix"]], "bdf2 (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2"]], "dirk (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk"]], "f() (dirk method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.f"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.f"]], "f_fast() (rk_imex method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_fast"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_fast"]], "f_fast_solve() (rk_imex method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_fast_solve"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_fast_solve"]], "f_slow() (rk_imex method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.f_slow"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.f_slow"]], "f_solve() (dirk method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.f_solve"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.f_solve"]], "firsttimestep() (bdf2 method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2.firsttimestep"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.firsttimestep"]], "implementations.problem_classes.acoustic_helpers.standard_integrators": [[136, "module-implementations.problem_classes.acoustic_helpers.standard_integrators"]], "rk_imex (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex"]], "timestep() (bdf2 method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.bdf2.timestep"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.timestep"]], "timestep() (dirk method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.dirk.timestep"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk.timestep"]], "timestep() (rk_imex method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.rk_imex.timestep"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex.timestep"]], "timestep() (trapezoidal method)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal.timestep"], [142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.timestep"]], "trapezoidal (class in implementations.problem_classes.acoustic_helpers.standard_integrators)": [[136, "implementations.problem_classes.acoustic_helpers.standard_integrators.trapezoidal"]], "implementations.problem_classes.boussinesq_helpers": [[137, "module-implementations.problem_classes.boussinesq_helpers"]], "get2dmatrix() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DMatrix"]], "get2dmesh() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DMesh"]], "get2dupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.get2DUpwindMatrix"]], "getbchorizontal() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.getBCHorizontal"]], "getbcvertical() (in module implementations.problem_classes.boussinesq_helpers.build2dfdmatrix)": [[138, "implementations.problem_classes.boussinesq_helpers.build2DFDMatrix.getBCVertical"]], "implementations.problem_classes.boussinesq_helpers.build2dfdmatrix": [[138, "module-implementations.problem_classes.boussinesq_helpers.build2DFDMatrix"]], "getboussinesq2dmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesq2DMatrix"]], "getboussinesq2dupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesq2DUpwindMatrix"]], "getboussinesqbchorizontal() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesqBCHorizontal"]], "getboussinesqbcvertical() (in module implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix)": [[139, "implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix.getBoussinesqBCVertical"]], "implementations.problem_classes.boussinesq_helpers.buildboussinesq2dmatrix": [[139, "module-implementations.problem_classes.boussinesq_helpers.buildBoussinesq2DMatrix"]], "getbcleft() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[140, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getBCLeft"]], "getbcright() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[140, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getBCRight"]], "getmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[140, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getMatrix"]], "getupwindmatrix() (in module implementations.problem_classes.boussinesq_helpers.buildfdmatrix)": [[140, "implementations.problem_classes.boussinesq_helpers.buildFDMatrix.getUpwindMatrix"]], "implementations.problem_classes.boussinesq_helpers.buildfdmatrix": [[140, "module-implementations.problem_classes.boussinesq_helpers.buildFDMatrix"]], "callback (class in implementations.problem_classes.boussinesq_helpers.helper_classes)": [[141, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback"]], "add() (logging method)": [[141, "implementations.problem_classes.boussinesq_helpers.helper_classes.logging.add"]], "getcounter() (callback method)": [[141, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback.getcounter"]], "getresidual() (callback method)": [[141, "implementations.problem_classes.boussinesq_helpers.helper_classes.Callback.getresidual"]], "implementations.problem_classes.boussinesq_helpers.helper_classes": [[141, "module-implementations.problem_classes.boussinesq_helpers.helper_classes"]], "logging (class in implementations.problem_classes.boussinesq_helpers.helper_classes)": [[141, "implementations.problem_classes.boussinesq_helpers.helper_classes.logging"]], "numsmalltimesteps() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.NumSmallTimeSteps"]], "rk3lin() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.RK3Lin"]], "splitexplicit (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit"]], "verletlin() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.VerletLin"]], "bdf2 (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2"]], "dirk (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.dirk"]], "f() (bdf2 method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.f"]], "f() (trapezoidal method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.f"]], "f_fast() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fast"]], "f_fastmom() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fastMom"]], "f_fastther() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_fastTher"]], "f_slow() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.f_slow"]], "f_solve() (bdf2 method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.bdf2.f_solve"]], "f_solve() (trapezoidal method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal.f_solve"]], "implementations.problem_classes.boussinesq_helpers.standard_integrators": [[142, "module-implementations.problem_classes.boussinesq_helpers.standard_integrators"]], "rk_imex (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.rk_imex"]], "timestep() (splitexplicit method)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.SplitExplicit.timestep"]], "trapezoidal (class in implementations.problem_classes.boussinesq_helpers.standard_integrators)": [[142, "implementations.problem_classes.boussinesq_helpers.standard_integrators.trapezoidal"]], "implementations.problem_classes.boussinesq_helpers.unflatten": [[143, "module-implementations.problem_classes.boussinesq_helpers.unflatten"]], "unflatten() (in module implementations.problem_classes.boussinesq_helpers.unflatten)": [[143, "implementations.problem_classes.boussinesq_helpers.unflatten.unflatten"]], "a (genericndimfindiff attribute)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.A"]], "genericndimfindiff (class in implementations.problem_classes.generic_nd_fd)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff"]], "id (genericndimfindiff attribute)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.Id"]], "dtype_f (genericndimfindiff attribute)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dtype_f"]], "dtype_u (genericndimfindiff attribute)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dtype_u"]], "dx (genericndimfindiff property)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.dx"]], "eval_f() (genericndimfindiff method)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.eval_f"]], "get_default_sweeper_class() (genericndimfindiff class method)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.get_default_sweeper_class"]], "grids (genericndimfindiff property)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.grids"]], "implementations.problem_classes.generic_nd_fd": [[144, "module-implementations.problem_classes.generic_ND_FD"]], "ndim (genericndimfindiff property)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.ndim"]], "solve_system() (genericndimfindiff method)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.solve_system"]], "xvalues (genericndimfindiff attribute)": [[144, "implementations.problem_classes.generic_ND_FD.GenericNDimFinDiff.xvalues"]], "dtype_f (nonlinear_ode_1 attribute)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.dtype_f"]], "dtype_u (nonlinear_ode_1 attribute)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.dtype_u"]], "eval_f() (nonlinear_ode_1 method)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.eval_f"]], "implementations.problem_classes.nonlinear_ode_1": [[145, "module-implementations.problem_classes.nonlinear_ODE_1"]], "newton_itercount (nonlinear_ode_1 attribute)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.newton_itercount"]], "newton_ncalls (nonlinear_ode_1 attribute)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.newton_ncalls"]], "nonlinear_ode_1 (class in implementations.problem_classes.nonlinear_ode_1)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1"]], "solve_system() (nonlinear_ode_1 method)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.solve_system"]], "u_exact() (nonlinear_ode_1 method)": [[145, "implementations.problem_classes.nonlinear_ODE_1.nonlinear_ODE_1.u_exact"]], "protherorobinson (class in implementations.problem_classes.odescalar)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson"]], "dg() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.dg"]], "dtype_f (protherorobinson attribute)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.dtype_f"]], "dtype_u (protherorobinson attribute)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.dtype_u"]], "eval_f() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.eval_f"]], "f() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.f"]], "f_lin() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.f_LIN"]], "f_nonlin() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.f_NONLIN"]], "g() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.g"]], "implementations.problem_classes.odescalar": [[146, "module-implementations.problem_classes.odeScalar"]], "jac() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.jac"]], "jac_lin() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.jac_LIN"]], "jac_nonlin() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.jac_NONLIN"]], "solve_system() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.solve_system"]], "u_exact() (protherorobinson method)": [[146, "implementations.problem_classes.odeScalar.ProtheroRobinson.u_exact"]], "chemicalreaction3var (class in implementations.problem_classes.odesystem)": [[147, "implementations.problem_classes.odeSystem.ChemicalReaction3Var"]], "jacobielliptic (class in implementations.problem_classes.odesystem)": [[147, "implementations.problem_classes.odeSystem.JacobiElliptic"]], "kaps (class in implementations.problem_classes.odesystem)": [[147, "implementations.problem_classes.odeSystem.Kaps"]], "protherorobinsonautonomous (class in implementations.problem_classes.odesystem)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous"]], "dg() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dg"]], "dg2() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dg2"]], "dginv() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dgInv"]], "dginv_lin() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dgInv_LIN"]], "dginv_nonlin() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dgInv_NONLIN"]], "dtype_f (chemicalreaction3var attribute)": [[147, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.dtype_f"]], "dtype_f (jacobielliptic attribute)": [[147, "implementations.problem_classes.odeSystem.JacobiElliptic.dtype_f"]], "dtype_f (kaps attribute)": [[147, "implementations.problem_classes.odeSystem.Kaps.dtype_f"]], "dtype_f (protherorobinsonautonomous attribute)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dtype_f"]], "dtype_u (chemicalreaction3var attribute)": [[147, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.dtype_u"]], "dtype_u (jacobielliptic attribute)": [[147, "implementations.problem_classes.odeSystem.JacobiElliptic.dtype_u"]], "dtype_u (kaps attribute)": [[147, "implementations.problem_classes.odeSystem.Kaps.dtype_u"]], "dtype_u (protherorobinsonautonomous attribute)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.dtype_u"]], "eval_f() (chemicalreaction3var method)": [[147, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.eval_f"]], "eval_f() (jacobielliptic method)": [[147, "implementations.problem_classes.odeSystem.JacobiElliptic.eval_f"]], "eval_f() (kaps method)": [[147, "implementations.problem_classes.odeSystem.Kaps.eval_f"]], "eval_f() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.eval_f"]], "f() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.f"]], "f_lin() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.f_LIN"]], "f_nonlin() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.f_NONLIN"]], "g() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.g"]], "implementations.problem_classes.odesystem": [[147, "module-implementations.problem_classes.odeSystem"]], "solve_system() (chemicalreaction3var method)": [[147, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.solve_system"]], "solve_system() (jacobielliptic method)": [[147, "implementations.problem_classes.odeSystem.JacobiElliptic.solve_system"]], "solve_system() (kaps method)": [[147, "implementations.problem_classes.odeSystem.Kaps.solve_system"]], "solve_system() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.solve_system"]], "u_exact() (chemicalreaction3var method)": [[147, "implementations.problem_classes.odeSystem.ChemicalReaction3Var.u_exact"]], "u_exact() (jacobielliptic method)": [[147, "implementations.problem_classes.odeSystem.JacobiElliptic.u_exact"]], "u_exact() (kaps method)": [[147, "implementations.problem_classes.odeSystem.Kaps.u_exact"]], "u_exact() (protherorobinsonautonomous method)": [[147, "implementations.problem_classes.odeSystem.ProtheroRobinsonAutonomous.u_exact"]], "dtype_f (polynomial_testequation attribute)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.dtype_f"]], "dtype_f (polynomial_testequation_imex attribute)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX.dtype_f"]], "dtype_u (polynomial_testequation attribute)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.dtype_u"]], "eval_f() (polynomial_testequation method)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.eval_f"]], "eval_f() (polynomial_testequation_imex method)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX.eval_f"]], "implementations.problem_classes.polynomial_test_problem": [[148, "module-implementations.problem_classes.polynomial_test_problem"]], "polynomial_testequation (class in implementations.problem_classes.polynomial_test_problem)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation"]], "polynomial_testequation_imex (class in implementations.problem_classes.polynomial_test_problem)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation_IMEX"]], "solve_system() (polynomial_testequation method)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.solve_system"]], "u_exact() (polynomial_testequation method)": [[148, "implementations.problem_classes.polynomial_test_problem.polynomial_testequation.u_exact"]], "implementations.sweeper_classes": [[149, "module-implementations.sweeper_classes"]], "adamsbashforthexplicit1step (class in implementations.sweeper_classes.multistep)": [[150, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step"]], "adamsmoultonimplicit1step (class in implementations.sweeper_classes.multistep)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step"]], "adamsmoultonimplicit2step (class in implementations.sweeper_classes.multistep)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step"]], "backwardeuler (class in implementations.sweeper_classes.multistep)": [[150, "implementations.sweeper_classes.Multistep.BackwardEuler"]], "cache (class in implementations.sweeper_classes.multistep)": [[150, "implementations.sweeper_classes.Multistep.Cache"]], "multistep (class in implementations.sweeper_classes.multistep)": [[150, "implementations.sweeper_classes.Multistep.MultiStep"]], "alpha (adamsbashforthexplicit1step attribute)": [[150, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step.alpha"]], "alpha (adamsmoultonimplicit1step attribute)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step.alpha"]], "alpha (adamsmoultonimplicit2step attribute)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.alpha"]], "alpha (backwardeuler attribute)": [[150, "implementations.sweeper_classes.Multistep.BackwardEuler.alpha"]], "alpha (multistep attribute)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.alpha"]], "beta (adamsbashforthexplicit1step attribute)": [[150, "implementations.sweeper_classes.Multistep.AdamsBashforthExplicit1Step.beta"]], "beta (adamsmoultonimplicit1step attribute)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit1Step.beta"]], "beta (adamsmoultonimplicit2step attribute)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.beta"]], "beta (backwardeuler attribute)": [[150, "implementations.sweeper_classes.Multistep.BackwardEuler.beta"]], "beta (multistep attribute)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.beta"]], "compute_end_point() (multistep method)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.compute_end_point"]], "compute_residual() (multistep method)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.compute_residual"]], "generate_starting_values() (adamsmoultonimplicit2step method)": [[150, "implementations.sweeper_classes.Multistep.AdamsMoultonImplicit2Step.generate_starting_values"]], "generate_starting_values() (multistep method)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.generate_starting_values"]], "implementations.sweeper_classes.multistep": [[150, "module-implementations.sweeper_classes.Multistep"]], "predict() (multistep method)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.predict"]], "update() (cache method)": [[150, "implementations.sweeper_classes.Multistep.Cache.update"]], "update_nodes() (multistep method)": [[150, "implementations.sweeper_classes.Multistep.MultiStep.update_nodes"]], "ark54 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54"]], "ark548l2sa (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA"]], "ark548l2saerk (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK"]], "ark548l2saerk2 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2"]], "ark548l2saesdirk (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK"]], "ark548l2saesdirk2 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2"]], "backwardeuler (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler"]], "butchertableau (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ButcherTableau"]], "butchertableauclass (ark54 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.ButcherTableauClass"]], "butchertableauclass (ark548l2sa attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.ButcherTableauClass"]], "butchertableauclass (ark548l2saerk attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.ButcherTableauClass"]], "butchertableauclass (ark548l2saesdirk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.ButcherTableauClass"]], "butchertableauclass (cash_karp attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.ButcherTableauClass"]], "butchertableauclass (dirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.DIRK43.ButcherTableauClass"]], "butchertableauclass (esdirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.ButcherTableauClass"]], "butchertableauclass (esdirk53 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.ButcherTableauClass"]], "butchertableauclass (heun_euler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.ButcherTableauClass"]], "butchertableauclass (rungekutta attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.ButcherTableauClass"]], "butchertableauclass_explicit (ark54 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.ButcherTableauClass_explicit"]], "butchertableauclass_explicit (ark548l2sa attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.ButcherTableauClass_explicit"]], "butchertableauclass_explicit (rungekuttaimex attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.ButcherTableauClass_explicit"]], "butchertableauembedded (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ButcherTableauEmbedded"]], "cash_karp (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp"]], "cranknicholson (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson"]], "dirk43 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.DIRK43"]], "esdirk43 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43"]], "esdirk53 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53"]], "explicitmidpointmethod (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod"]], "forwardeuler (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler"]], "heun_euler (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler"]], "implicitmidpointmethod (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod"]], "rk4 (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.RK4"]], "rungekutta (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta"]], "rungekuttaimex (class in implementations.sweeper_classes.runge_kutta)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX"]], "compute_end_point() (rungekutta method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.compute_end_point"]], "gamma (ark548l2saesdirk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.gamma"]], "get_butcher_tableau() (rungekutta class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_Butcher_tableau"]], "get_butcher_tableau_explicit() (rungekuttaimex class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.get_Butcher_tableau_explicit"]], "get_q_matrix() (rungekutta class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_Q_matrix"]], "get_full_f() (rungekutta method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_full_f"]], "get_update_order() (ark54 class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.get_update_order"]], "get_update_order() (ark548l2sa class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.get_update_order"]], "get_update_order() (ark548l2saerk class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.get_update_order"]], "get_update_order() (ark548l2saesdirk2 class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.get_update_order"]], "get_update_order() (cash_karp class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.get_update_order"]], "get_update_order() (dirk43 class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.DIRK43.get_update_order"]], "get_update_order() (esdirk43 class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.get_update_order"]], "get_update_order() (esdirk53 class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.get_update_order"]], "get_update_order() (heun_euler class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.get_update_order"]], "get_update_order() (rungekutta class method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.get_update_order"]], "i (ark548l2saesdirk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.i"]], "implementations.sweeper_classes.runge_kutta": [[151, "module-implementations.sweeper_classes.Runge_Kutta"]], "integrate() (rungekutta method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.integrate"]], "integrate() (rungekuttaimex method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.integrate"]], "level (rungekutta property)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.level"]], "matrix (ark54 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.matrix"]], "matrix (ark548l2sa attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.matrix"]], "matrix (ark548l2saerk attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.matrix"]], "matrix (ark548l2saerk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK2.matrix"]], "matrix (ark548l2saesdirk attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK.matrix"]], "matrix (ark548l2saesdirk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.matrix"]], "matrix (backwardeuler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.matrix"]], "matrix (cash_karp attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.matrix"]], "matrix (cranknicholson attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.matrix"]], "matrix (dirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.DIRK43.matrix"]], "matrix (esdirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.matrix"]], "matrix (esdirk53 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.matrix"]], "matrix (explicitmidpointmethod attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.matrix"]], "matrix (forwardeuler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.matrix"]], "matrix (heun_euler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.matrix"]], "matrix (implicitmidpointmethod attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.matrix"]], "matrix (rk4 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RK4.matrix"]], "matrix (rungekutta attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.matrix"]], "matrix_explicit (ark54 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.matrix_explicit"]], "matrix_explicit (ark548l2sa attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.matrix_explicit"]], "matrix_explicit (rungekuttaimex attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.matrix_explicit"]], "nodes (ark54 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.nodes"]], "nodes (ark548l2sa attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.nodes"]], "nodes (ark548l2saerk attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.nodes"]], "nodes (ark548l2saesdirk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.nodes"]], "nodes (backwardeuler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.nodes"]], "nodes (cash_karp attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.nodes"]], "nodes (cranknicholson attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.nodes"]], "nodes (dirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.DIRK43.nodes"]], "nodes (esdirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.nodes"]], "nodes (esdirk53 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.nodes"]], "nodes (explicitmidpointmethod attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.nodes"]], "nodes (forwardeuler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.nodes"]], "nodes (heun_euler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.nodes"]], "nodes (implicitmidpointmethod attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.nodes"]], "nodes (rk4 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RK4.nodes"]], "nodes (rungekutta attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.nodes"]], "predict() (rungekutta method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.predict"]], "predict() (rungekuttaimex method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.predict"]], "s2 (esdirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.s2"]], "update_nodes() (rungekutta method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.update_nodes"]], "update_nodes() (rungekuttaimex method)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKuttaIMEX.update_nodes"]], "weights (ark54 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK54.weights"]], "weights (ark548l2sa attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SA.weights"]], "weights (ark548l2saerk attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAERK.weights"]], "weights (ark548l2saesdirk2 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ARK548L2SAESDIRK2.weights"]], "weights (backwardeuler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.BackwardEuler.weights"]], "weights (cash_karp attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Cash_Karp.weights"]], "weights (cranknicholson attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.CrankNicholson.weights"]], "weights (dirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.DIRK43.weights"]], "weights (esdirk43 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK43.weights"]], "weights (esdirk53 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ESDIRK53.weights"]], "weights (explicitmidpointmethod attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ExplicitMidpointMethod.weights"]], "weights (forwardeuler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ForwardEuler.weights"]], "weights (heun_euler attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.Heun_Euler.weights"]], "weights (implicitmidpointmethod attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.ImplicitMidpointMethod.weights"]], "weights (rk4 attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RK4.weights"]], "weights (rungekutta attribute)": [[151, "implementations.sweeper_classes.Runge_Kutta.RungeKutta.weights"]], "rkn (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[152, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RKN"]], "rungekuttanystrom (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[152, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom"]], "velocity_verlet (class in implementations.sweeper_classes.runge_kutta_nystrom)": [[152, "implementations.sweeper_classes.Runge_Kutta_Nystrom.Velocity_Verlet"]], "compute_end_point() (rungekuttanystrom method)": [[152, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.compute_end_point"]], "get_full_f() (rungekuttanystrom method)": [[152, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.get_full_f"]], "implementations.sweeper_classes.runge_kutta_nystrom": [[152, "module-implementations.sweeper_classes.Runge_Kutta_Nystrom"]], "update_nodes() (rungekuttanystrom method)": [[152, "implementations.sweeper_classes.Runge_Kutta_Nystrom.RungeKuttaNystrom.update_nodes"]], "s (boris_2nd_order attribute)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.S"]], "sq (boris_2nd_order attribute)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.SQ"]], "st (boris_2nd_order attribute)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.ST"]], "sx (boris_2nd_order attribute)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.Sx"]], "boris_2nd_order (class in implementations.sweeper_classes.boris_2nd_order)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order"]], "compute_end_point() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.compute_end_point"]], "get_scalar_problems_manysweep_mats() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_manysweep_mats"]], "get_scalar_problems_picardsweep_mats() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_picardsweep_mats"]], "get_scalar_problems_sweeper_mats() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_scalar_problems_sweeper_mats"]], "get_sweeper_mats() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.get_sweeper_mats"]], "implementations.sweeper_classes.boris_2nd_order": [[153, "module-implementations.sweeper_classes.boris_2nd_order"]], "integrate() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.integrate"]], "update_nodes() (boris_2nd_order method)": [[153, "implementations.sweeper_classes.boris_2nd_order.boris_2nd_order.update_nodes"]], "qe (explicit attribute)": [[154, "implementations.sweeper_classes.explicit.explicit.QE"]], "compute_end_point() (explicit method)": [[154, "implementations.sweeper_classes.explicit.explicit.compute_end_point"]], "explicit (class in implementations.sweeper_classes.explicit)": [[154, "implementations.sweeper_classes.explicit.explicit"]], "implementations.sweeper_classes.explicit": [[154, "module-implementations.sweeper_classes.explicit"]], "integrate() (explicit method)": [[154, "implementations.sweeper_classes.explicit.explicit.integrate"]], "update_nodes() (explicit method)": [[154, "implementations.sweeper_classes.explicit.explicit.update_nodes"]], "qi (generic_implicit attribute)": [[155, "implementations.sweeper_classes.generic_implicit.generic_implicit.QI"]], "compute_end_point() (generic_implicit method)": [[155, "implementations.sweeper_classes.generic_implicit.generic_implicit.compute_end_point"]], "generic_implicit (class in implementations.sweeper_classes.generic_implicit)": [[155, "implementations.sweeper_classes.generic_implicit.generic_implicit"]], "implementations.sweeper_classes.generic_implicit": [[155, "module-implementations.sweeper_classes.generic_implicit"]], "integrate() (generic_implicit method)": [[155, "implementations.sweeper_classes.generic_implicit.generic_implicit.integrate"]], "update_nodes() (generic_implicit method)": [[155, "implementations.sweeper_classes.generic_implicit.generic_implicit.update_nodes"]], "sweepermpi (class in implementations.sweeper_classes.generic_implicit_mpi)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI"]], "comm (sweepermpi property)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.comm"]], "compute_end_point() (sweepermpi method)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.compute_end_point"]], "compute_end_point() (generic_implicit_mpi method)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.compute_end_point"]], "compute_residual() (sweepermpi method)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.compute_residual"]], "generic_implicit_mpi (class in implementations.sweeper_classes.generic_implicit_mpi)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI"]], "implementations.sweeper_classes.generic_implicit_mpi": [[156, "module-implementations.sweeper_classes.generic_implicit_MPI"]], "integrate() (generic_implicit_mpi method)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.integrate"]], "predict() (sweepermpi method)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.predict"]], "rank (sweepermpi property)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.SweeperMPI.rank"]], "rank (generic_implicit_mpi attribute)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.rank"]], "update_nodes() (generic_implicit_mpi method)": [[156, "implementations.sweeper_classes.generic_implicit_MPI.generic_implicit_MPI.update_nodes"]], "qe (imex_1st_order attribute)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.QE"]], "qi (imex_1st_order attribute)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.QI"]], "compute_end_point() (imex_1st_order method)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.compute_end_point"]], "get_scalar_problems_manysweep_mat() (imex_1st_order method)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_scalar_problems_manysweep_mat"]], "get_scalar_problems_sweeper_mats() (imex_1st_order method)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_scalar_problems_sweeper_mats"]], "get_sweeper_mats() (imex_1st_order method)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.get_sweeper_mats"]], "imex_1st_order (class in implementations.sweeper_classes.imex_1st_order)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order"]], "implementations.sweeper_classes.imex_1st_order": [[157, "module-implementations.sweeper_classes.imex_1st_order"]], "integrate() (imex_1st_order method)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.integrate"]], "update_nodes() (imex_1st_order method)": [[157, "implementations.sweeper_classes.imex_1st_order.imex_1st_order.update_nodes"]], "compute_end_point() (imex_1st_order_mpi method)": [[158, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.compute_end_point"]], "imex_1st_order_mpi (class in implementations.sweeper_classes.imex_1st_order_mpi)": [[158, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI"]], "implementations.sweeper_classes.imex_1st_order_mpi": [[158, "module-implementations.sweeper_classes.imex_1st_order_MPI"]], "integrate() (imex_1st_order_mpi method)": [[158, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.integrate"]], "update_nodes() (imex_1st_order_mpi method)": [[158, "implementations.sweeper_classes.imex_1st_order_MPI.imex_1st_order_MPI.update_nodes"]], "compute_end_point() (imex_1st_order_mass method)": [[159, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.compute_end_point"]], "compute_residual() (imex_1st_order_mass method)": [[159, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.compute_residual"]], "imex_1st_order_mass (class in implementations.sweeper_classes.imex_1st_order_mass)": [[159, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass"]], "implementations.sweeper_classes.imex_1st_order_mass": [[159, "module-implementations.sweeper_classes.imex_1st_order_mass"]], "update_nodes() (imex_1st_order_mass method)": [[159, "implementations.sweeper_classes.imex_1st_order_mass.imex_1st_order_mass.update_nodes"]], "q1 (multi_implicit attribute)": [[160, "implementations.sweeper_classes.multi_implicit.multi_implicit.Q1"]], "q2 (multi_implicit attribute)": [[160, "implementations.sweeper_classes.multi_implicit.multi_implicit.Q2"]], "compute_end_point() (multi_implicit method)": [[160, "implementations.sweeper_classes.multi_implicit.multi_implicit.compute_end_point"]], "implementations.sweeper_classes.multi_implicit": [[160, "module-implementations.sweeper_classes.multi_implicit"]], "integrate() (multi_implicit method)": [[160, "implementations.sweeper_classes.multi_implicit.multi_implicit.integrate"]], "multi_implicit (class in implementations.sweeper_classes.multi_implicit)": [[160, "implementations.sweeper_classes.multi_implicit.multi_implicit"]], "update_nodes() (multi_implicit method)": [[160, "implementations.sweeper_classes.multi_implicit.multi_implicit.update_nodes"]], "qq (verlet attribute)": [[161, "implementations.sweeper_classes.verlet.verlet.QQ"], [161, "implementations.sweeper_classes.verlet.verlet.qQ"]], "qt (verlet attribute)": [[161, "implementations.sweeper_classes.verlet.verlet.QT"]], "qx (verlet attribute)": [[161, "implementations.sweeper_classes.verlet.verlet.Qx"]], "compute_end_point() (verlet method)": [[161, "implementations.sweeper_classes.verlet.verlet.compute_end_point"]], "implementations.sweeper_classes.verlet": [[161, "module-implementations.sweeper_classes.verlet"]], "integrate() (verlet method)": [[161, "implementations.sweeper_classes.verlet.verlet.integrate"]], "update_nodes() (verlet method)": [[161, "implementations.sweeper_classes.verlet.verlet.update_nodes"]], "verlet (class in implementations.sweeper_classes.verlet)": [[161, "implementations.sweeper_classes.verlet.verlet"]], "implementations.transfer_classes": [[162, "module-implementations.transfer_classes"]], "base_transfer_mass (class in implementations.transfer_classes.basetransfer_mass)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass"]], "coarse (base_transfer_mass attribute)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.coarse"]], "fine (base_transfer_mass attribute)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.fine"]], "implementations.transfer_classes.basetransfer_mass": [[163, "module-implementations.transfer_classes.BaseTransfer_mass"]], "logger (base_transfer_mass attribute)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.logger"]], "params (base_transfer_mass attribute)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.params"]], "prolong() (base_transfer_mass method)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.prolong"]], "prolong_f() (base_transfer_mass method)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.prolong_f"]], "restrict() (base_transfer_mass method)": [[163, "implementations.transfer_classes.BaseTransfer_mass.base_transfer_mass.restrict"]], "implementations.transfer_classes.transferfenicsmesh": [[164, "module-implementations.transfer_classes.TransferFenicsMesh"]], "mesh_to_mesh_fenics (class in implementations.transfer_classes.transferfenicsmesh)": [[164, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics"]], "project() (mesh_to_mesh_fenics method)": [[164, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.project"]], "prolong() (mesh_to_mesh_fenics method)": [[164, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.prolong"]], "restrict() (mesh_to_mesh_fenics method)": [[164, "implementations.transfer_classes.TransferFenicsMesh.mesh_to_mesh_fenics.restrict"]], "pspace (mesh_to_mesh attribute)": [[165, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.Pspace"], [169, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.Pspace"]], "rspace (mesh_to_mesh attribute)": [[165, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.Rspace"], [169, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.Rspace"]], "implementations.transfer_classes.transfermesh": [[165, "module-implementations.transfer_classes.TransferMesh"]], "mesh_to_mesh (class in implementations.transfer_classes.transfermesh)": [[165, "implementations.transfer_classes.TransferMesh.mesh_to_mesh"]], "prolong() (mesh_to_mesh method)": [[165, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.prolong"], [169, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.prolong"]], "restrict() (mesh_to_mesh method)": [[165, "implementations.transfer_classes.TransferMesh.mesh_to_mesh.restrict"], [169, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh.restrict"]], "implementations.transfer_classes.transfermesh_fft": [[166, "module-implementations.transfer_classes.TransferMesh_FFT"]], "irfft_object_fine (mesh_to_mesh_fft attribute)": [[166, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.irfft_object_fine"]], "mesh_to_mesh_fft (class in implementations.transfer_classes.transfermesh_fft)": [[166, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft"]], "prolong() (mesh_to_mesh_fft method)": [[166, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.prolong"]], "restrict() (mesh_to_mesh_fft method)": [[166, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.restrict"]], "rfft_object_coarse (mesh_to_mesh_fft attribute)": [[166, "implementations.transfer_classes.TransferMesh_FFT.mesh_to_mesh_fft.rfft_object_coarse"]], "pspace (mesh_to_mesh_fft2d attribute)": [[167, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.Pspace"]], "rspace (mesh_to_mesh_fft2d attribute)": [[167, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.Rspace"]], "implementations.transfer_classes.transfermesh_fft2d": [[167, "module-implementations.transfer_classes.TransferMesh_FFT2D"]], "mesh_to_mesh_fft2d (class in implementations.transfer_classes.transfermesh_fft2d)": [[167, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d"]], "prolong() (mesh_to_mesh_fft2d method)": [[167, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.prolong"]], "restrict() (mesh_to_mesh_fft2d method)": [[167, "implementations.transfer_classes.TransferMesh_FFT2D.mesh_to_mesh_fft2d.restrict"]], "fft_to_fft (class in implementations.transfer_classes.transfermesh_mpifft)": [[168, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft"]], "implementations.transfer_classes.transfermesh_mpifft": [[168, "module-implementations.transfer_classes.TransferMesh_MPIFFT"]], "prolong() (fft_to_fft method)": [[168, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft.prolong"]], "restrict() (fft_to_fft method)": [[168, "implementations.transfer_classes.TransferMesh_MPIFFT.fft_to_fft.restrict"]], "implementations.transfer_classes.transfermesh_nocoarse": [[169, "module-implementations.transfer_classes.TransferMesh_NoCoarse"]], "mesh_to_mesh (class in implementations.transfer_classes.transfermesh_nocoarse)": [[169, "implementations.transfer_classes.TransferMesh_NoCoarse.mesh_to_mesh"]], "implementations.transfer_classes.transferpetscdmda": [[170, "module-implementations.transfer_classes.TransferPETScDMDA"]], "mesh_to_mesh_petsc_dmda (class in implementations.transfer_classes.transferpetscdmda)": [[170, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda"]], "prolong() (mesh_to_mesh_petsc_dmda method)": [[170, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda.prolong"]], "restrict() (mesh_to_mesh_petsc_dmda method)": [[170, "implementations.transfer_classes.TransferPETScDMDA.mesh_to_mesh_petsc_dmda.restrict"]], "implementations.transfer_classes.transferparticles_nocoarse": [[171, "module-implementations.transfer_classes.TransferParticles_NoCoarse"]], "particles_to_particles (class in implementations.transfer_classes.transferparticles_nocoarse)": [[171, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles"]], "prolong() (particles_to_particles method)": [[171, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles.prolong"]], "restrict() (particles_to_particles method)": [[171, "implementations.transfer_classes.TransferParticles_NoCoarse.particles_to_particles.restrict"]]}})